--nn_model: NeuMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "1"
--epochs: "120"
--layers: "[1024, 1024]"
--reg_layers: "[0, 0]"
--mf_pretrain: "Pretrain/_GMF_8_[64,32,16,8]_1560175356.h5"
--mlp_pretrain: "Pretrain/_MLP_8_[1024, 1024]_1560176796.h5"

# Launched by terminal.
# NeuMF arguments: Namespace(batch_size=256, big_tag=1, dataset='', epochs=120, eval_recall=1, is_tag=1, layers='[1024, 1024]', learner='adam', lr=0.001, mf_pretrain='Pretrain/_GMF_8_[64,32,16,8]_1560175356.h5', mlp_pretrain='Pretrain/_MLP_8_[1024, 1024]_1560176796.h5', nn_model='NeuMF', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0, 0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_8_[1024, 1024]_1560195704.h5
# Load data done [19.8 s]. #user=90728, #item=985, #train=676679, #test=90728
# Load pretrained GMF (Pretrain/_GMF_8_[64,32,16,8]_1560175356.h5) and MLP (Pretrain/_MLP_8_[1024, 1024]_1560176796.h5) models done. 
# Init: Recall = 0.4017, Jaccard score = 0.2751
# Iteration 0 fit: [524.6 s]: Recall = 0.3611, Jaccard score = 0.2407, loss = 0.1187, val_loss = 0.0000, eval: [9.6 s]
# Iteration 1 fit: [523.1 s]: Recall = 0.3559, Jaccard score = 0.2364, loss = 0.0961, val_loss = 0.0000, eval: [9.4 s]
# Iteration 2 fit: [523.0 s]: Recall = 0.3448, Jaccard score = 0.2273, loss = 0.0787, val_loss = 0.0000, eval: [9.4 s]
# Iteration 3 fit: [523.1 s]: Recall = 0.3320, Jaccard score = 0.2170, loss = 0.0645, val_loss = 0.0000, eval: [9.4 s]
# Iteration 4 fit: [522.9 s]: Recall = 0.3220, Jaccard score = 0.2092, loss = 0.0528, val_loss = 0.0000, eval: [9.4 s]
# Iteration 5 fit: [523.0 s]: Recall = 0.3144, Jaccard score = 0.2032, loss = 0.0441, val_loss = 0.0000, eval: [9.4 s]
# Iteration 6 fit: [523.0 s]: Recall = 0.3042, Jaccard score = 0.1954, loss = 0.0368, val_loss = 0.0000, eval: [9.4 s]
# Iteration 7 fit: [523.1 s]: Recall = 0.2994, Jaccard score = 0.1917, loss = 0.0313, val_loss = 0.0000, eval: [9.5 s]
# Iteration 8 fit: [523.0 s]: Recall = 0.2977, Jaccard score = 0.1904, loss = 0.0269, val_loss = 0.0000, eval: [9.4 s]
# Iteration 9 fit: [523.0 s]: Recall = 0.2916, Jaccard score = 0.1857, loss = 0.0236, val_loss = 0.0000, eval: [9.5 s]
# Iteration 10 fit: [523.1 s]: Recall = 0.2826, Jaccard score = 0.1790, loss = 0.0209, val_loss = 0.0000, eval: [9.5 s]
# Iteration 11 fit: [523.0 s]: Recall = 0.2761, Jaccard score = 0.1741, loss = 0.0188, val_loss = 0.0000, eval: [9.4 s]
# Iteration 12 fit: [523.0 s]: Recall = 0.2713, Jaccard score = 0.1706, loss = 0.0173, val_loss = 0.0000, eval: [9.4 s]
# Iteration 13 fit: [523.1 s]: Recall = 0.2642, Jaccard score = 0.1654, loss = 0.0161, val_loss = 0.0000, eval: [9.4 s]
# Iteration 14 fit: [523.1 s]: Recall = 0.2592, Jaccard score = 0.1618, loss = 0.0151, val_loss = 0.0000, eval: [9.4 s]
# Iteration 15 fit: [523.0 s]: Recall = 0.2633, Jaccard score = 0.1647, loss = 0.0140, val_loss = 0.0000, eval: [9.9 s]
# Iteration 16 fit: [523.1 s]: Recall = 0.2612, Jaccard score = 0.1632, loss = 0.0135, val_loss = 0.0000, eval: [9.5 s]
# Iteration 17 fit: [523.1 s]: Recall = 0.2481, Jaccard score = 0.1538, loss = 0.0127, val_loss = 0.0000, eval: [9.5 s]
# Iteration 18 fit: [523.0 s]: Recall = 0.2533, Jaccard score = 0.1575, loss = 0.0120, val_loss = 0.0000, eval: [9.4 s]
# Iteration 19 fit: [523.1 s]: Recall = 0.2430, Jaccard score = 0.1501, loss = 0.0114, val_loss = 0.0000, eval: [9.5 s]
# Iteration 20 fit: [523.0 s]: Recall = 0.2418, Jaccard score = 0.1493, loss = 0.0109, val_loss = 0.0000, eval: [9.5 s]
# Iteration 21 fit: [523.0 s]: Recall = 0.2422, Jaccard score = 0.1496, loss = 0.0108, val_loss = 0.0000, eval: [9.4 s]
# Iteration 22 fit: [523.1 s]: Recall = 0.2410, Jaccard score = 0.1487, loss = 0.0105, val_loss = 0.0000, eval: [9.6 s]
# Iteration 23 fit: [523.0 s]: Recall = 0.2311, Jaccard score = 0.1417, loss = 0.0101, val_loss = 0.0000, eval: [9.6 s]
# Iteration 24 fit: [522.9 s]: Recall = 0.2365, Jaccard score = 0.1455, loss = 0.0096, val_loss = 0.0000, eval: [9.6 s]
# Iteration 25 fit: [523.0 s]: Recall = 0.2307, Jaccard score = 0.1415, loss = 0.0097, val_loss = 0.0000, eval: [9.6 s]
# Iteration 26 fit: [523.0 s]: Recall = 0.2282, Jaccard score = 0.1397, loss = 0.0095, val_loss = 0.0000, eval: [9.5 s]
# Iteration 27 fit: [523.1 s]: Recall = 0.2276, Jaccard score = 0.1393, loss = 0.0090, val_loss = 0.0000, eval: [9.6 s]
# Iteration 28 fit: [522.9 s]: Recall = 0.2250, Jaccard score = 0.1375, loss = 0.0087, val_loss = 0.0000, eval: [9.6 s]
# Iteration 29 fit: [523.0 s]: Recall = 0.2202, Jaccard score = 0.1341, loss = 0.0085, val_loss = 0.0000, eval: [9.5 s]
# Iteration 30 fit: [523.0 s]: Recall = 0.2234, Jaccard score = 0.1364, loss = 0.0083, val_loss = 0.0000, eval: [9.6 s]
# Iteration 31 fit: [523.2 s]: Recall = 0.2188, Jaccard score = 0.1332, loss = 0.0083, val_loss = 0.0000, eval: [9.6 s]
# Iteration 32 fit: [523.0 s]: Recall = 0.2183, Jaccard score = 0.1328, loss = 0.0079, val_loss = 0.0000, eval: [9.5 s]
# Iteration 33 fit: [523.0 s]: Recall = 0.2265, Jaccard score = 0.1385, loss = 0.0078, val_loss = 0.0000, eval: [9.6 s]
# Iteration 34 fit: [523.0 s]: Recall = 0.2165, Jaccard score = 0.1316, loss = 0.0077, val_loss = 0.0000, eval: [9.6 s]
# Iteration 35 fit: [522.9 s]: Recall = 0.2142, Jaccard score = 0.1301, loss = 0.0073, val_loss = 0.0000, eval: [9.6 s]
# Iteration 36 fit: [522.9 s]: Recall = 0.2179, Jaccard score = 0.1326, loss = 0.0073, val_loss = 0.0000, eval: [9.6 s]
# Iteration 37 fit: [523.0 s]: Recall = 0.2167, Jaccard score = 0.1318, loss = 0.0070, val_loss = 0.0000, eval: [9.6 s]
# Iteration 38 fit: [523.0 s]: Recall = 0.2137, Jaccard score = 0.1297, loss = 0.0070, val_loss = 0.0000, eval: [9.6 s]
# Iteration 39 fit: [523.0 s]: Recall = 0.2112, Jaccard score = 0.1280, loss = 0.0067, val_loss = 0.0000, eval: [9.6 s]
# Iteration 40 fit: [522.9 s]: Recall = 0.2139, Jaccard score = 0.1298, loss = 0.0068, val_loss = 0.0000, eval: [9.6 s]
# Iteration 41 fit: [523.0 s]: Recall = 0.2102, Jaccard score = 0.1273, loss = 0.0068, val_loss = 0.0000, eval: [9.8 s]
# Iteration 42 fit: [523.0 s]: Recall = 0.2060, Jaccard score = 0.1244, loss = 0.0068, val_loss = 0.0000, eval: [9.6 s]
# Iteration 43 fit: [523.0 s]: Recall = 0.2066, Jaccard score = 0.1248, loss = 0.0065, val_loss = 0.0000, eval: [9.6 s]
# Iteration 44 fit: [522.9 s]: Recall = 0.2083, Jaccard score = 0.1260, loss = 0.0063, val_loss = 0.0000, eval: [9.7 s]
# Iteration 45 fit: [523.0 s]: Recall = 0.2060, Jaccard score = 0.1244, loss = 0.0065, val_loss = 0.0000, eval: [9.6 s]
# Iteration 46 fit: [523.0 s]: Recall = 0.2079, Jaccard score = 0.1257, loss = 0.0064, val_loss = 0.0000, eval: [9.6 s]
# Iteration 47 fit: [523.0 s]: Recall = 0.2020, Jaccard score = 0.1217, loss = 0.0061, val_loss = 0.0000, eval: [9.6 s]
# Iteration 48 fit: [522.9 s]: Recall = 0.2077, Jaccard score = 0.1256, loss = 0.0059, val_loss = 0.0000, eval: [9.6 s]
