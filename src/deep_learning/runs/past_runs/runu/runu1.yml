--nn_model: NeuMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--num_factors: "94"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--num_k_folds: "5"
--early_stopping: "35"

# Launched by terminal.
# NeuMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='NeuMF', num_factors=94, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_94_[512,96]_1564510893.h5
--weights_path: Pretrain/_NeuMF_94_[512,96]_1564510893.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0272, Jaccard score = 0.0163
# Iteration 0 fit: [38.9 s]: Recall = 0.2113, Jaccard score = 0.1429, loss = 0.4328, eval: [21.5 s]
# Iteration 1 fit: [31.2 s]: Recall = 0.2465, Jaccard score = 0.1707, loss = 0.3911, eval: [21.4 s]
# Iteration 2 fit: [31.1 s]: Recall = 0.2627, Jaccard score = 0.1840, loss = 0.3609, eval: [21.4 s]
# Iteration 3 fit: [31.2 s]: Recall = 0.2678, Jaccard score = 0.1882, loss = 0.3304, eval: [21.4 s]
# Iteration 4 fit: [31.7 s]: Recall = 0.2659, Jaccard score = 0.1866, loss = 0.2975, eval: [21.4 s]
# Iteration 5 fit: [31.7 s]: Recall = 0.2632, Jaccard score = 0.1844, loss = 0.2649, eval: [21.4 s]
# Iteration 6 fit: [32.1 s]: Recall = 0.2599, Jaccard score = 0.1817, loss = 0.2318, eval: [21.4 s]
# Iteration 7 fit: [31.6 s]: Recall = 0.2522, Jaccard score = 0.1754, loss = 0.2005, eval: [21.4 s]
# Iteration 8 fit: [30.8 s]: Recall = 0.2533, Jaccard score = 0.1763, loss = 0.1713, eval: [21.5 s]
# Iteration 9 fit: [31.0 s]: Recall = 0.2514, Jaccard score = 0.1747, loss = 0.1450, eval: [21.4 s]
# Iteration 10 fit: [31.6 s]: Recall = 0.2457, Jaccard score = 0.1700, loss = 0.1222, eval: [21.4 s]
# Iteration 11 fit: [31.2 s]: Recall = 0.2490, Jaccard score = 0.1728, loss = 0.1014, eval: [21.5 s]
# Iteration 12 fit: [31.3 s]: Recall = 0.2478, Jaccard score = 0.1717, loss = 0.0857, eval: [21.4 s]
# Iteration 13 fit: [31.1 s]: Recall = 0.2492, Jaccard score = 0.1729, loss = 0.0726, eval: [21.4 s]
# Iteration 14 fit: [31.2 s]: Recall = 0.2519, Jaccard score = 0.1751, loss = 0.0638, eval: [21.5 s]
# Iteration 15 fit: [30.9 s]: Recall = 0.2506, Jaccard score = 0.1741, loss = 0.0540, eval: [21.4 s]
# Iteration 16 fit: [31.4 s]: Recall = 0.2562, Jaccard score = 0.1786, loss = 0.0473, eval: [21.5 s]
# Iteration 17 fit: [31.0 s]: Recall = 0.2556, Jaccard score = 0.1781, loss = 0.0422, eval: [21.4 s]
# Iteration 18 fit: [32.0 s]: Recall = 0.2487, Jaccard score = 0.1725, loss = 0.0381, eval: [21.5 s]
# Iteration 19 fit: [31.2 s]: Recall = 0.2556, Jaccard score = 0.1781, loss = 0.0341, eval: [21.3 s]
# Iteration 20 fit: [31.6 s]: Recall = 0.2542, Jaccard score = 0.1769, loss = 0.0310, eval: [21.4 s]
# Iteration 21 fit: [31.4 s]: Recall = 0.2543, Jaccard score = 0.1771, loss = 0.0284, eval: [21.4 s]
# Iteration 22 fit: [31.1 s]: Recall = 0.2573, Jaccard score = 0.1795, loss = 0.0260, eval: [21.4 s]
# Iteration 23 fit: [31.9 s]: Recall = 0.2583, Jaccard score = 0.1804, loss = 0.0232, eval: [21.4 s]
# Iteration 24 fit: [31.6 s]: Recall = 0.2577, Jaccard score = 0.1798, loss = 0.0216, eval: [21.4 s]
# Iteration 25 fit: [31.2 s]: Recall = 0.2598, Jaccard score = 0.1816, loss = 0.0198, eval: [21.5 s]
# Iteration 26 fit: [31.6 s]: Recall = 0.2591, Jaccard score = 0.1810, loss = 0.0182, eval: [21.4 s]
# Iteration 27 fit: [31.2 s]: Recall = 0.2629, Jaccard score = 0.1842, loss = 0.0169, eval: [21.5 s]
# Iteration 28 fit: [31.7 s]: Recall = 0.2627, Jaccard score = 0.1840, loss = 0.0161, eval: [21.4 s]
# Iteration 29 fit: [31.0 s]: Recall = 0.2618, Jaccard score = 0.1832, loss = 0.0151, eval: [21.4 s]
# Iteration 30 fit: [31.6 s]: Recall = 0.2643, Jaccard score = 0.1853, loss = 0.0142, eval: [21.4 s]
# Iteration 31 fit: [31.0 s]: Recall = 0.2606, Jaccard score = 0.1823, loss = 0.0138, eval: [21.3 s]
# Iteration 32 fit: [31.5 s]: Recall = 0.2622, Jaccard score = 0.1836, loss = 0.0123, eval: [21.4 s]
# Iteration 33 fit: [31.6 s]: Recall = 0.2639, Jaccard score = 0.1850, loss = 0.0116, eval: [21.5 s]
# Iteration 34 fit: [31.4 s]: Recall = 0.2642, Jaccard score = 0.1852, loss = 0.0107, eval: [21.4 s]
# Iteration 35 fit: [31.4 s]: Recall = 0.2643, Jaccard score = 0.1853, loss = 0.0100, eval: [21.4 s]
# Iteration 36 fit: [31.7 s]: Recall = 0.2655, Jaccard score = 0.1863, loss = 0.0100, eval: [21.4 s]
# Iteration 37 fit: [31.2 s]: Recall = 0.2707, Jaccard score = 0.1906, loss = 0.0095, eval: [21.5 s]
# Iteration 38 fit: [31.2 s]: Recall = 0.2681, Jaccard score = 0.1885, loss = 0.0086, eval: [21.4 s]
# Iteration 39 fit: [31.3 s]: Recall = 0.2665, Jaccard score = 0.1871, loss = 0.0082, eval: [21.4 s]
# Iteration 40 fit: [32.1 s]: Recall = 0.2693, Jaccard score = 0.1895, loss = 0.0078, eval: [21.4 s]
# Iteration 41 fit: [31.4 s]: Recall = 0.2650, Jaccard score = 0.1859, loss = 0.0075, eval: [21.4 s]
# Iteration 42 fit: [31.1 s]: Recall = 0.2698, Jaccard score = 0.1899, loss = 0.0071, eval: [21.5 s]
# Iteration 43 fit: [31.8 s]: Recall = 0.2699, Jaccard score = 0.1900, loss = 0.0069, eval: [21.5 s]
# Iteration 44 fit: [32.2 s]: Recall = 0.2649, Jaccard score = 0.1858, loss = 0.0066, eval: [21.5 s]
# Iteration 45 fit: [30.9 s]: Recall = 0.2739, Jaccard score = 0.1934, loss = 0.0063, eval: [21.4 s]
# Iteration 46 fit: [31.6 s]: Recall = 0.2710, Jaccard score = 0.1909, loss = 0.0063, eval: [21.4 s]
# Iteration 47 fit: [31.8 s]: Recall = 0.2700, Jaccard score = 0.1901, loss = 0.0057, eval: [21.4 s]
# Iteration 48 fit: [31.0 s]: Recall = 0.2737, Jaccard score = 0.1932, loss = 0.0057, eval: [21.5 s]
# Iteration 49 fit: [32.1 s]: Recall = 0.2705, Jaccard score = 0.1905, loss = 0.0054, eval: [21.4 s]
# Iteration 50 fit: [31.4 s]: Recall = 0.2712, Jaccard score = 0.1911, loss = 0.0053, eval: [21.5 s]
# Iteration 51 fit: [31.4 s]: Recall = 0.2726, Jaccard score = 0.1922, loss = 0.0048, eval: [21.4 s]
# Iteration 52 fit: [31.6 s]: Recall = 0.2686, Jaccard score = 0.1889, loss = 0.0046, eval: [21.5 s]
# Iteration 53 fit: [31.7 s]: Recall = 0.2726, Jaccard score = 0.1923, loss = 0.0046, eval: [21.4 s]
# Iteration 54 fit: [31.0 s]: Recall = 0.2726, Jaccard score = 0.1922, loss = 0.0046, eval: [21.4 s]
# Iteration 55 fit: [30.9 s]: Recall = 0.2730, Jaccard score = 0.1925, loss = 0.0044, eval: [21.4 s]
# Iteration 56 fit: [31.7 s]: Recall = 0.2731, Jaccard score = 0.1927, loss = 0.0041, eval: [21.3 s]
# Iteration 57 fit: [32.1 s]: Recall = 0.2756, Jaccard score = 0.1948, loss = 0.0039, eval: [21.4 s]
# Iteration 58 fit: [31.5 s]: Recall = 0.2765, Jaccard score = 0.1956, loss = 0.0041, eval: [21.5 s]
# Iteration 59 fit: [31.3 s]: Recall = 0.2710, Jaccard score = 0.1909, loss = 0.0038, eval: [21.5 s]
# Iteration 60 fit: [31.8 s]: Recall = 0.2745, Jaccard score = 0.1938, loss = 0.0038, eval: [21.5 s]
# Iteration 61 fit: [31.5 s]: Recall = 0.2735, Jaccard score = 0.1930, loss = 0.0037, eval: [21.4 s]
# Iteration 62 fit: [31.3 s]: Recall = 0.2721, Jaccard score = 0.1918, loss = 0.0034, eval: [21.8 s]
# Iteration 63 fit: [31.8 s]: Recall = 0.2754, Jaccard score = 0.1947, loss = 0.0035, eval: [21.4 s]
# Iteration 64 fit: [31.6 s]: Recall = 0.2751, Jaccard score = 0.1944, loss = 0.0032, eval: [21.5 s]
# Iteration 65 fit: [31.9 s]: Recall = 0.2744, Jaccard score = 0.1937, loss = 0.0033, eval: [21.4 s]
# Iteration 66 fit: [30.7 s]: Recall = 0.2730, Jaccard score = 0.1925, loss = 0.0032, eval: [21.4 s]
# Iteration 67 fit: [31.2 s]: Recall = 0.2778, Jaccard score = 0.1967, loss = 0.0030, eval: [21.5 s]
# Iteration 68 fit: [31.3 s]: Recall = 0.2717, Jaccard score = 0.1915, loss = 0.0029, eval: [21.4 s]
# Iteration 69 fit: [31.4 s]: Recall = 0.2726, Jaccard score = 0.1923, loss = 0.0026, eval: [21.5 s]
# Iteration 70 fit: [31.4 s]: Recall = 0.2704, Jaccard score = 0.1904, loss = 0.0031, eval: [21.5 s]
# Iteration 71 fit: [31.5 s]: Recall = 0.2719, Jaccard score = 0.1917, loss = 0.0026, eval: [21.4 s]
# Iteration 72 fit: [32.3 s]: Recall = 0.2731, Jaccard score = 0.1927, loss = 0.0028, eval: [21.5 s]
# Iteration 73 fit: [31.3 s]: Recall = 0.2753, Jaccard score = 0.1945, loss = 0.0027, eval: [21.5 s]
# Iteration 74 fit: [31.5 s]: Recall = 0.2745, Jaccard score = 0.1938, loss = 0.0027, eval: [21.4 s]
# Iteration 75 fit: [31.3 s]: Recall = 0.2742, Jaccard score = 0.1936, loss = 0.0028, eval: [21.5 s]
# Iteration 76 fit: [31.6 s]: Recall = 0.2736, Jaccard score = 0.1931, loss = 0.0025, eval: [21.5 s]
# Iteration 77 fit: [31.6 s]: Recall = 0.2790, Jaccard score = 0.1977, loss = 0.0025, eval: [21.3 s]
# Iteration 78 fit: [30.9 s]: Recall = 0.2755, Jaccard score = 0.1947, loss = 0.0023, eval: [21.4 s]
# Iteration 79 fit: [31.0 s]: Recall = 0.2776, Jaccard score = 0.1965, loss = 0.0025, eval: [21.3 s]
# Iteration 80 fit: [31.7 s]: Recall = 0.2767, Jaccard score = 0.1957, loss = 0.0021, eval: [21.4 s]
# Iteration 81 fit: [31.4 s]: Recall = 0.2792, Jaccard score = 0.1978, loss = 0.0021, eval: [21.2 s]
# Iteration 82 fit: [30.8 s]: Recall = 0.2772, Jaccard score = 0.1961, loss = 0.0021, eval: [21.5 s]
# Iteration 83 fit: [31.6 s]: Recall = 0.2792, Jaccard score = 0.1978, loss = 0.0022, eval: [21.2 s]
# Iteration 84 fit: [31.3 s]: Recall = 0.2792, Jaccard score = 0.1978, loss = 0.0021, eval: [21.5 s]
# Iteration 85 fit: [31.5 s]: Recall = 0.2783, Jaccard score = 0.1970, loss = 0.0022, eval: [21.5 s]
# Iteration 86 fit: [31.1 s]: Recall = 0.2815, Jaccard score = 0.1998, loss = 0.0020, eval: [21.5 s]
# Iteration 87 fit: [31.5 s]: Recall = 0.2798, Jaccard score = 0.1983, loss = 0.0019, eval: [21.5 s]
# Iteration 88 fit: [31.2 s]: Recall = 0.2823, Jaccard score = 0.2005, loss = 0.0019, eval: [21.4 s]
# Iteration 89 fit: [32.1 s]: Recall = 0.2793, Jaccard score = 0.1979, loss = 0.0018, eval: [21.4 s]
# Iteration 90 fit: [31.6 s]: Recall = 0.2804, Jaccard score = 0.1988, loss = 0.0020, eval: [21.5 s]
# Iteration 91 fit: [31.9 s]: Recall = 0.2781, Jaccard score = 0.1969, loss = 0.0019, eval: [21.5 s]
# Iteration 92 fit: [31.5 s]: Recall = 0.2775, Jaccard score = 0.1964, loss = 0.0017, eval: [21.4 s]
# Iteration 93 fit: [31.3 s]: Recall = 0.2740, Jaccard score = 0.1934, loss = 0.0019, eval: [21.2 s]
# Iteration 94 fit: [31.3 s]: Recall = 0.2790, Jaccard score = 0.1977, loss = 0.0019, eval: [21.5 s]
# Iteration 95 fit: [31.7 s]: Recall = 0.2752, Jaccard score = 0.1944, loss = 0.0017, eval: [21.5 s]
# Iteration 96 fit: [31.2 s]: Recall = 0.2815, Jaccard score = 0.1998, loss = 0.0016, eval: [21.4 s]
# Iteration 97 fit: [31.1 s]: Recall = 0.2777, Jaccard score = 0.1965, loss = 0.0017, eval: [21.5 s]
# Iteration 98 fit: [32.3 s]: Recall = 0.2836, Jaccard score = 0.2016, loss = 0.0017, eval: [21.5 s]
# Iteration 99 fit: [32.0 s]: Recall = 0.2825, Jaccard score = 0.2006, loss = 0.0014, eval: [21.4 s]
# Iteration 100 fit: [31.5 s]: Recall = 0.2827, Jaccard score = 0.2008, loss = 0.0016, eval: [21.4 s]
# Iteration 101 fit: [31.6 s]: Recall = 0.2793, Jaccard score = 0.1979, loss = 0.0015, eval: [21.5 s]
# Iteration 102 fit: [31.1 s]: Recall = 0.2774, Jaccard score = 0.1963, loss = 0.0015, eval: [21.5 s]
# Iteration 103 fit: [30.9 s]: Recall = 0.2825, Jaccard score = 0.2007, loss = 0.0014, eval: [21.5 s]
# Iteration 104 fit: [32.1 s]: Recall = 0.2824, Jaccard score = 0.2006, loss = 0.0013, eval: [21.4 s]
# Iteration 105 fit: [31.0 s]: Recall = 0.2811, Jaccard score = 0.1995, loss = 0.0015, eval: [21.4 s]
# Iteration 106 fit: [31.2 s]: Recall = 0.2783, Jaccard score = 0.1971, loss = 0.0014, eval: [21.4 s]
# Iteration 107 fit: [31.8 s]: Recall = 0.2808, Jaccard score = 0.1991, loss = 0.0015, eval: [21.2 s]
# Iteration 108 fit: [31.5 s]: Recall = 0.2790, Jaccard score = 0.1977, loss = 0.0013, eval: [21.4 s]
# Iteration 109 fit: [31.6 s]: Recall = 0.2802, Jaccard score = 0.1987, loss = 0.0013, eval: [21.5 s]
# Iteration 110 fit: [31.1 s]: Recall = 0.2822, Jaccard score = 0.2003, loss = 0.0014, eval: [21.5 s]
# Iteration 111 fit: [31.6 s]: Recall = 0.2810, Jaccard score = 0.1994, loss = 0.0013, eval: [21.4 s]
# Iteration 112 fit: [32.4 s]: Recall = 0.2801, Jaccard score = 0.1986, loss = 0.0013, eval: [21.4 s]
# Iteration 113 fit: [31.0 s]: Recall = 0.2809, Jaccard score = 0.1993, loss = 0.0013, eval: [21.0 s]
# Iteration 114 fit: [31.3 s]: Recall = 0.2776, Jaccard score = 0.1964, loss = 0.0014, eval: [21.4 s]
# Iteration 115 fit: [31.5 s]: Recall = 0.2797, Jaccard score = 0.1983, loss = 0.0013, eval: [21.4 s]
# Iteration 116 fit: [30.7 s]: Recall = 0.2756, Jaccard score = 0.1948, loss = 0.0013, eval: [21.4 s]
# Iteration 117 fit: [31.3 s]: Recall = 0.2811, Jaccard score = 0.1995, loss = 0.0013, eval: [21.5 s]
# Iteration 118 fit: [31.3 s]: Recall = 0.2757, Jaccard score = 0.1949, loss = 0.0013, eval: [21.6 s]
# Iteration 119 fit: [32.1 s]: Recall = 0.2800, Jaccard score = 0.1985, loss = 0.0012, eval: [21.5 s]
# Iteration 120 fit: [32.4 s]: Recall = 0.2786, Jaccard score = 0.1974, loss = 0.0012, eval: [21.5 s]
# Iteration 121 fit: [31.7 s]: Recall = 0.2819, Jaccard score = 0.2001, loss = 0.0011, eval: [21.5 s]
# Iteration 122 fit: [31.1 s]: Recall = 0.2792, Jaccard score = 0.1978, loss = 0.0012, eval: [21.4 s]
# Iteration 123 fit: [31.5 s]: Recall = 0.2804, Jaccard score = 0.1989, loss = 0.0012, eval: [21.5 s]
# Iteration 124 fit: [31.6 s]: Recall = 0.2782, Jaccard score = 0.1970, loss = 0.0012, eval: [21.4 s]
# Iteration 125 fit: [31.2 s]: Recall = 0.2824, Jaccard score = 0.2006, loss = 0.0011, eval: [21.4 s]
# Iteration 126 fit: [30.8 s]: Recall = 0.2793, Jaccard score = 0.1979, loss = 0.0010, eval: [21.5 s]
# Iteration 127 fit: [31.1 s]: Recall = 0.2818, Jaccard score = 0.2001, loss = 0.0011, eval: [21.5 s]
# Iteration 128 fit: [30.8 s]: Recall = 0.2772, Jaccard score = 0.1961, loss = 0.0012, eval: [21.5 s]
# Iteration 129 fit: [31.9 s]: Recall = 0.2806, Jaccard score = 0.1990, loss = 0.0011, eval: [21.4 s]
# Iteration 130 fit: [31.2 s]: Recall = 0.2782, Jaccard score = 0.1970, loss = 0.0010, eval: [21.4 s]
# Iteration 131 fit: [31.7 s]: Recall = 0.2789, Jaccard score = 0.1976, loss = 0.0010, eval: [21.4 s]
# Iteration 132 fit: [31.6 s]: Recall = 0.2803, Jaccard score = 0.1988, loss = 0.0010, eval: [21.4 s]
# Iteration 133 fit: [31.4 s]: Recall = 0.2772, Jaccard score = 0.1961, loss = 0.0011, eval: [21.4 s]
# End. Best Iteration 98:  Recall = 0.2836, Jaccard score = 0.2016. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,96]_1564510893.h5
# The average best performance after k-fold 1 is: Recall = 0.28363171355498723, Jaccard score = 0.20159970914379205
# 
# Performing k-fold 2
# Init: Recall = 0.0274, Jaccard score = 0.0166
# Iteration 0 fit: [38.1 s]: Recall = 0.2044, Jaccard score = 0.1389, loss = 0.4320, eval: [21.5 s]
# Iteration 1 fit: [31.0 s]: Recall = 0.2400, Jaccard score = 0.1671, loss = 0.3903, eval: [21.5 s]
# Iteration 2 fit: [31.4 s]: Recall = 0.2550, Jaccard score = 0.1795, loss = 0.3598, eval: [21.6 s]
# Iteration 3 fit: [31.0 s]: Recall = 0.2600, Jaccard score = 0.1836, loss = 0.3301, eval: [21.5 s]
# Iteration 4 fit: [31.7 s]: Recall = 0.2572, Jaccard score = 0.1813, loss = 0.2975, eval: [21.5 s]
# Iteration 5 fit: [31.6 s]: Recall = 0.2535, Jaccard score = 0.1782, loss = 0.2642, eval: [21.5 s]
# Iteration 6 fit: [31.3 s]: Recall = 0.2541, Jaccard score = 0.1787, loss = 0.2307, eval: [21.6 s]
# Iteration 7 fit: [31.0 s]: Recall = 0.2481, Jaccard score = 0.1737, loss = 0.1989, eval: [21.4 s]
# Iteration 8 fit: [31.7 s]: Recall = 0.2533, Jaccard score = 0.1780, loss = 0.1695, eval: [21.4 s]
# Iteration 9 fit: [32.4 s]: Recall = 0.2484, Jaccard score = 0.1740, loss = 0.1428, eval: [21.2 s]
# Iteration 10 fit: [32.4 s]: Recall = 0.2469, Jaccard score = 0.1728, loss = 0.1205, eval: [21.6 s]
# Iteration 11 fit: [32.0 s]: Recall = 0.2515, Jaccard score = 0.1766, loss = 0.1009, eval: [21.5 s]
# Iteration 12 fit: [31.3 s]: Recall = 0.2504, Jaccard score = 0.1757, loss = 0.0844, eval: [21.5 s]
# Iteration 13 fit: [31.1 s]: Recall = 0.2506, Jaccard score = 0.1758, loss = 0.0720, eval: [21.5 s]
# Iteration 14 fit: [31.0 s]: Recall = 0.2515, Jaccard score = 0.1766, loss = 0.0624, eval: [21.6 s]
# Iteration 15 fit: [31.5 s]: Recall = 0.2536, Jaccard score = 0.1783, loss = 0.0537, eval: [21.5 s]
# Iteration 16 fit: [31.6 s]: Recall = 0.2536, Jaccard score = 0.1783, loss = 0.0477, eval: [21.5 s]
# Iteration 17 fit: [31.9 s]: Recall = 0.2540, Jaccard score = 0.1786, loss = 0.0425, eval: [21.6 s]
# Iteration 18 fit: [31.6 s]: Recall = 0.2556, Jaccard score = 0.1800, loss = 0.0378, eval: [21.3 s]
# Iteration 19 fit: [32.0 s]: Recall = 0.2575, Jaccard score = 0.1815, loss = 0.0341, eval: [21.6 s]
# Iteration 20 fit: [31.3 s]: Recall = 0.2575, Jaccard score = 0.1816, loss = 0.0311, eval: [21.5 s]
# Iteration 21 fit: [31.2 s]: Recall = 0.2568, Jaccard score = 0.1810, loss = 0.0285, eval: [21.3 s]
# Iteration 22 fit: [31.2 s]: Recall = 0.2607, Jaccard score = 0.1842, loss = 0.0257, eval: [21.5 s]
# Iteration 23 fit: [31.4 s]: Recall = 0.2621, Jaccard score = 0.1854, loss = 0.0236, eval: [21.6 s]
# Iteration 24 fit: [31.7 s]: Recall = 0.2611, Jaccard score = 0.1845, loss = 0.0212, eval: [21.5 s]
# Iteration 25 fit: [32.1 s]: Recall = 0.2638, Jaccard score = 0.1868, loss = 0.0201, eval: [21.3 s]
# Iteration 26 fit: [30.8 s]: Recall = 0.2627, Jaccard score = 0.1859, loss = 0.0184, eval: [21.5 s]
# Iteration 27 fit: [31.5 s]: Recall = 0.2627, Jaccard score = 0.1859, loss = 0.0173, eval: [21.6 s]
# Iteration 28 fit: [31.5 s]: Recall = 0.2660, Jaccard score = 0.1887, loss = 0.0157, eval: [21.5 s]
# Iteration 29 fit: [32.1 s]: Recall = 0.2657, Jaccard score = 0.1884, loss = 0.0150, eval: [21.5 s]
# Iteration 30 fit: [31.2 s]: Recall = 0.2631, Jaccard score = 0.1862, loss = 0.0140, eval: [21.3 s]
# Iteration 31 fit: [31.2 s]: Recall = 0.2668, Jaccard score = 0.1893, loss = 0.0131, eval: [21.6 s]
# Iteration 32 fit: [31.5 s]: Recall = 0.2677, Jaccard score = 0.1901, loss = 0.0122, eval: [21.5 s]
# Iteration 33 fit: [31.7 s]: Recall = 0.2657, Jaccard score = 0.1884, loss = 0.0118, eval: [21.6 s]
# Iteration 34 fit: [31.2 s]: Recall = 0.2653, Jaccard score = 0.1881, loss = 0.0107, eval: [21.6 s]
# Iteration 35 fit: [31.3 s]: Recall = 0.2665, Jaccard score = 0.1891, loss = 0.0105, eval: [21.6 s]
# Iteration 36 fit: [31.5 s]: Recall = 0.2655, Jaccard score = 0.1883, loss = 0.0097, eval: [21.5 s]
# Iteration 37 fit: [31.6 s]: Recall = 0.2682, Jaccard score = 0.1905, loss = 0.0090, eval: [21.5 s]
# Iteration 38 fit: [31.7 s]: Recall = 0.2683, Jaccard score = 0.1906, loss = 0.0085, eval: [21.3 s]
# Iteration 39 fit: [32.3 s]: Recall = 0.2670, Jaccard score = 0.1895, loss = 0.0082, eval: [21.5 s]
# Iteration 40 fit: [31.6 s]: Recall = 0.2700, Jaccard score = 0.1921, loss = 0.0077, eval: [21.6 s]
# Iteration 41 fit: [31.6 s]: Recall = 0.2672, Jaccard score = 0.1897, loss = 0.0073, eval: [21.6 s]
# Iteration 42 fit: [31.2 s]: Recall = 0.2660, Jaccard score = 0.1887, loss = 0.0074, eval: [21.6 s]
# Iteration 43 fit: [31.6 s]: Recall = 0.2692, Jaccard score = 0.1914, loss = 0.0068, eval: [21.6 s]
# Iteration 44 fit: [31.2 s]: Recall = 0.2650, Jaccard score = 0.1878, loss = 0.0065, eval: [21.6 s]
# Iteration 45 fit: [31.6 s]: Recall = 0.2697, Jaccard score = 0.1918, loss = 0.0064, eval: [21.6 s]
# Iteration 46 fit: [31.5 s]: Recall = 0.2688, Jaccard score = 0.1910, loss = 0.0058, eval: [21.5 s]
# Iteration 47 fit: [32.1 s]: Recall = 0.2704, Jaccard score = 0.1924, loss = 0.0058, eval: [21.3 s]
# Iteration 48 fit: [31.0 s]: Recall = 0.2697, Jaccard score = 0.1918, loss = 0.0058, eval: [21.5 s]
# Iteration 49 fit: [31.4 s]: Recall = 0.2710, Jaccard score = 0.1929, loss = 0.0054, eval: [21.6 s]
# Iteration 50 fit: [31.5 s]: Recall = 0.2744, Jaccard score = 0.1958, loss = 0.0048, eval: [21.3 s]
# Iteration 51 fit: [31.9 s]: Recall = 0.2722, Jaccard score = 0.1939, loss = 0.0050, eval: [21.5 s]
# Iteration 52 fit: [31.5 s]: Recall = 0.2735, Jaccard score = 0.1950, loss = 0.0049, eval: [21.4 s]
# Iteration 53 fit: [31.8 s]: Recall = 0.2748, Jaccard score = 0.1961, loss = 0.0046, eval: [21.8 s]
# Iteration 54 fit: [31.5 s]: Recall = 0.2714, Jaccard score = 0.1933, loss = 0.0044, eval: [21.5 s]
# Iteration 55 fit: [31.2 s]: Recall = 0.2737, Jaccard score = 0.1952, loss = 0.0045, eval: [21.3 s]
# Iteration 56 fit: [31.3 s]: Recall = 0.2727, Jaccard score = 0.1944, loss = 0.0040, eval: [21.3 s]
# Iteration 57 fit: [31.4 s]: Recall = 0.2733, Jaccard score = 0.1949, loss = 0.0041, eval: [21.5 s]
# Iteration 58 fit: [32.7 s]: Recall = 0.2712, Jaccard score = 0.1930, loss = 0.0038, eval: [21.4 s]
# Iteration 59 fit: [32.0 s]: Recall = 0.2764, Jaccard score = 0.1975, loss = 0.0040, eval: [21.7 s]
# Iteration 60 fit: [31.5 s]: Recall = 0.2681, Jaccard score = 0.1904, loss = 0.0035, eval: [21.6 s]
# Iteration 61 fit: [31.4 s]: Recall = 0.2703, Jaccard score = 0.1923, loss = 0.0038, eval: [21.4 s]
# Iteration 62 fit: [31.5 s]: Recall = 0.2735, Jaccard score = 0.1951, loss = 0.0035, eval: [21.4 s]
# Iteration 63 fit: [31.4 s]: Recall = 0.2723, Jaccard score = 0.1940, loss = 0.0033, eval: [21.6 s]
# Iteration 64 fit: [31.0 s]: Recall = 0.2774, Jaccard score = 0.1983, loss = 0.0033, eval: [21.6 s]
# Iteration 65 fit: [31.5 s]: Recall = 0.2734, Jaccard score = 0.1949, loss = 0.0032, eval: [21.4 s]
# Iteration 66 fit: [31.7 s]: Recall = 0.2734, Jaccard score = 0.1950, loss = 0.0033, eval: [21.6 s]
# Iteration 67 fit: [31.5 s]: Recall = 0.2761, Jaccard score = 0.1973, loss = 0.0028, eval: [21.6 s]
# Iteration 68 fit: [31.4 s]: Recall = 0.2729, Jaccard score = 0.1945, loss = 0.0029, eval: [21.6 s]
# Iteration 69 fit: [31.3 s]: Recall = 0.2791, Jaccard score = 0.1998, loss = 0.0028, eval: [21.5 s]
# Iteration 70 fit: [31.2 s]: Recall = 0.2769, Jaccard score = 0.1979, loss = 0.0028, eval: [21.6 s]
# Iteration 71 fit: [31.3 s]: Recall = 0.2745, Jaccard score = 0.1959, loss = 0.0028, eval: [21.6 s]
# Iteration 72 fit: [31.2 s]: Recall = 0.2767, Jaccard score = 0.1977, loss = 0.0028, eval: [21.5 s]
# Iteration 73 fit: [31.9 s]: Recall = 0.2766, Jaccard score = 0.1976, loss = 0.0026, eval: [21.5 s]
# Iteration 74 fit: [31.6 s]: Recall = 0.2775, Jaccard score = 0.1984, loss = 0.0026, eval: [21.4 s]
# Iteration 75 fit: [31.9 s]: Recall = 0.2757, Jaccard score = 0.1969, loss = 0.0024, eval: [21.7 s]
# Iteration 76 fit: [31.6 s]: Recall = 0.2726, Jaccard score = 0.1943, loss = 0.0026, eval: [21.4 s]
# Iteration 77 fit: [31.9 s]: Recall = 0.2784, Jaccard score = 0.1992, loss = 0.0026, eval: [21.6 s]
# Iteration 78 fit: [31.6 s]: Recall = 0.2763, Jaccard score = 0.1974, loss = 0.0023, eval: [21.6 s]
# Iteration 79 fit: [31.9 s]: Recall = 0.2716, Jaccard score = 0.1934, loss = 0.0023, eval: [21.3 s]
# Iteration 80 fit: [31.1 s]: Recall = 0.2782, Jaccard score = 0.1990, loss = 0.0021, eval: [21.5 s]
# Iteration 81 fit: [31.3 s]: Recall = 0.2780, Jaccard score = 0.1989, loss = 0.0023, eval: [21.6 s]
# Iteration 82 fit: [31.4 s]: Recall = 0.2758, Jaccard score = 0.1970, loss = 0.0021, eval: [21.6 s]
# Iteration 83 fit: [31.3 s]: Recall = 0.2755, Jaccard score = 0.1968, loss = 0.0022, eval: [21.7 s]
# Iteration 84 fit: [31.9 s]: Recall = 0.2760, Jaccard score = 0.1972, loss = 0.0024, eval: [21.6 s]
# Iteration 85 fit: [31.5 s]: Recall = 0.2724, Jaccard score = 0.1941, loss = 0.0020, eval: [21.6 s]
# Iteration 86 fit: [31.3 s]: Recall = 0.2791, Jaccard score = 0.1998, loss = 0.0022, eval: [21.6 s]
# Iteration 87 fit: [30.9 s]: Recall = 0.2772, Jaccard score = 0.1982, loss = 0.0019, eval: [21.5 s]
# Iteration 88 fit: [31.3 s]: Recall = 0.2796, Jaccard score = 0.2002, loss = 0.0016, eval: [21.6 s]
# Iteration 89 fit: [31.4 s]: Recall = 0.2797, Jaccard score = 0.2003, loss = 0.0019, eval: [21.6 s]
# Iteration 90 fit: [32.3 s]: Recall = 0.2787, Jaccard score = 0.1995, loss = 0.0018, eval: [21.5 s]
# Iteration 91 fit: [32.0 s]: Recall = 0.2766, Jaccard score = 0.1976, loss = 0.0019, eval: [21.6 s]
# Iteration 92 fit: [31.6 s]: Recall = 0.2760, Jaccard score = 0.1971, loss = 0.0019, eval: [21.3 s]
# Iteration 93 fit: [31.3 s]: Recall = 0.2797, Jaccard score = 0.2004, loss = 0.0016, eval: [21.6 s]
# Iteration 94 fit: [31.3 s]: Recall = 0.2801, Jaccard score = 0.2007, loss = 0.0017, eval: [21.6 s]
# Iteration 95 fit: [31.4 s]: Recall = 0.2763, Jaccard score = 0.1974, loss = 0.0018, eval: [21.6 s]
# Iteration 96 fit: [31.3 s]: Recall = 0.2777, Jaccard score = 0.1986, loss = 0.0016, eval: [21.4 s]
# Iteration 97 fit: [31.4 s]: Recall = 0.2762, Jaccard score = 0.1973, loss = 0.0017, eval: [21.5 s]
# Iteration 98 fit: [30.8 s]: Recall = 0.2772, Jaccard score = 0.1982, loss = 0.0016, eval: [21.5 s]
# Iteration 99 fit: [31.4 s]: Recall = 0.2788, Jaccard score = 0.1996, loss = 0.0016, eval: [21.5 s]
# Iteration 100 fit: [31.4 s]: Recall = 0.2786, Jaccard score = 0.1993, loss = 0.0016, eval: [21.5 s]
# Iteration 101 fit: [32.0 s]: Recall = 0.2792, Jaccard score = 0.1999, loss = 0.0016, eval: [21.4 s]
# Iteration 102 fit: [32.2 s]: Recall = 0.2844, Jaccard score = 0.2044, loss = 0.0016, eval: [21.4 s]
# Iteration 103 fit: [31.4 s]: Recall = 0.2804, Jaccard score = 0.2009, loss = 0.0015, eval: [21.4 s]
# Iteration 104 fit: [31.3 s]: Recall = 0.2814, Jaccard score = 0.2018, loss = 0.0015, eval: [21.5 s]
# Iteration 105 fit: [31.2 s]: Recall = 0.2793, Jaccard score = 0.2000, loss = 0.0013, eval: [21.5 s]
# Iteration 106 fit: [31.4 s]: Recall = 0.2773, Jaccard score = 0.1983, loss = 0.0014, eval: [21.5 s]
# Iteration 107 fit: [31.5 s]: Recall = 0.2809, Jaccard score = 0.2013, loss = 0.0016, eval: [21.5 s]
# Iteration 108 fit: [31.4 s]: Recall = 0.2785, Jaccard score = 0.1993, loss = 0.0014, eval: [21.4 s]
# Iteration 109 fit: [31.5 s]: Recall = 0.2775, Jaccard score = 0.1984, loss = 0.0015, eval: [21.6 s]
# Iteration 110 fit: [31.3 s]: Recall = 0.2757, Jaccard score = 0.1969, loss = 0.0015, eval: [21.6 s]
# Iteration 111 fit: [31.5 s]: Recall = 0.2802, Jaccard score = 0.2008, loss = 0.0012, eval: [21.4 s]
# Iteration 112 fit: [31.3 s]: Recall = 0.2796, Jaccard score = 0.2003, loss = 0.0013, eval: [21.5 s]
# Iteration 113 fit: [31.5 s]: Recall = 0.2787, Jaccard score = 0.1995, loss = 0.0015, eval: [21.5 s]
# Iteration 114 fit: [32.3 s]: Recall = 0.2783, Jaccard score = 0.1991, loss = 0.0013, eval: [21.5 s]
# Iteration 115 fit: [31.6 s]: Recall = 0.2802, Jaccard score = 0.2007, loss = 0.0013, eval: [21.5 s]
# Iteration 116 fit: [31.8 s]: Recall = 0.2798, Jaccard score = 0.2004, loss = 0.0012, eval: [21.5 s]
# Iteration 117 fit: [31.5 s]: Recall = 0.2774, Jaccard score = 0.1983, loss = 0.0014, eval: [21.5 s]
# Iteration 118 fit: [32.1 s]: Recall = 0.2788, Jaccard score = 0.1996, loss = 0.0012, eval: [21.6 s]
# Iteration 119 fit: [32.2 s]: Recall = 0.2775, Jaccard score = 0.1984, loss = 0.0012, eval: [21.7 s]
# Iteration 120 fit: [31.4 s]: Recall = 0.2795, Jaccard score = 0.2002, loss = 0.0014, eval: [21.6 s]
# Iteration 121 fit: [32.1 s]: Recall = 0.2774, Jaccard score = 0.1983, loss = 0.0011, eval: [21.5 s]
# Iteration 122 fit: [31.0 s]: Recall = 0.2774, Jaccard score = 0.1983, loss = 0.0012, eval: [21.5 s]
# Iteration 123 fit: [30.9 s]: Recall = 0.2730, Jaccard score = 0.1946, loss = 0.0012, eval: [21.4 s]
# Iteration 124 fit: [31.8 s]: Recall = 0.2802, Jaccard score = 0.2008, loss = 0.0011, eval: [21.6 s]
# Iteration 125 fit: [31.0 s]: Recall = 0.2799, Jaccard score = 0.2005, loss = 0.0012, eval: [21.2 s]
# Iteration 126 fit: [32.2 s]: Recall = 0.2817, Jaccard score = 0.2021, loss = 0.0012, eval: [21.6 s]
# Iteration 127 fit: [31.9 s]: Recall = 0.2817, Jaccard score = 0.2021, loss = 0.0011, eval: [21.3 s]
# Iteration 128 fit: [31.5 s]: Recall = 0.2799, Jaccard score = 0.2005, loss = 0.0012, eval: [21.5 s]
# Iteration 129 fit: [31.3 s]: Recall = 0.2819, Jaccard score = 0.2022, loss = 0.0010, eval: [21.5 s]
# Iteration 130 fit: [31.7 s]: Recall = 0.2803, Jaccard score = 0.2009, loss = 0.0011, eval: [21.6 s]
# Iteration 131 fit: [31.6 s]: Recall = 0.2782, Jaccard score = 0.1990, loss = 0.0010, eval: [21.6 s]
# Iteration 132 fit: [31.5 s]: Recall = 0.2786, Jaccard score = 0.1993, loss = 0.0012, eval: [21.6 s]
# Iteration 133 fit: [31.7 s]: Recall = 0.2817, Jaccard score = 0.2020, loss = 0.0010, eval: [21.5 s]
# Iteration 134 fit: [32.1 s]: Recall = 0.2799, Jaccard score = 0.2005, loss = 0.0011, eval: [21.6 s]
# Iteration 135 fit: [31.4 s]: Recall = 0.2777, Jaccard score = 0.1986, loss = 0.0011, eval: [21.3 s]
# Iteration 136 fit: [31.0 s]: Recall = 0.2818, Jaccard score = 0.2021, loss = 0.0010, eval: [21.6 s]
# Iteration 137 fit: [31.9 s]: Recall = 0.2809, Jaccard score = 0.2013, loss = 0.0011, eval: [21.6 s]
# End. Best Iteration 102:  Recall = 0.2844, Jaccard score = 0.2044. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,96]_1564510893.h5
# The average best performance after k-fold 2 is: Recall = 0.2840337677856919, Jaccard score = 0.2030081841572158
# 
# Performing k-fold 3
# Init: Recall = 0.0280, Jaccard score = 0.0169
# Iteration 0 fit: [38.5 s]: Recall = 0.2097, Jaccard score = 0.1426, loss = 0.4327, eval: [21.6 s]
# Iteration 1 fit: [30.9 s]: Recall = 0.2424, Jaccard score = 0.1686, loss = 0.3907, eval: [21.5 s]
# Iteration 2 fit: [32.1 s]: Recall = 0.2552, Jaccard score = 0.1791, loss = 0.3604, eval: [21.7 s]
# Iteration 3 fit: [30.3 s]: Recall = 0.2638, Jaccard score = 0.1863, loss = 0.3306, eval: [21.5 s]
# Iteration 4 fit: [31.7 s]: Recall = 0.2658, Jaccard score = 0.1879, loss = 0.2977, eval: [21.7 s]
# Iteration 5 fit: [31.2 s]: Recall = 0.2604, Jaccard score = 0.1834, loss = 0.2645, eval: [21.5 s]
# Iteration 6 fit: [31.3 s]: Recall = 0.2552, Jaccard score = 0.1791, loss = 0.2310, eval: [21.5 s]
# Iteration 7 fit: [31.6 s]: Recall = 0.2520, Jaccard score = 0.1764, loss = 0.2001, eval: [21.6 s]
# Iteration 8 fit: [31.4 s]: Recall = 0.2489, Jaccard score = 0.1739, loss = 0.1700, eval: [21.5 s]
# Iteration 9 fit: [31.0 s]: Recall = 0.2462, Jaccard score = 0.1717, loss = 0.1439, eval: [21.6 s]
# Iteration 10 fit: [31.4 s]: Recall = 0.2491, Jaccard score = 0.1740, loss = 0.1206, eval: [21.5 s]
# Iteration 11 fit: [31.5 s]: Recall = 0.2465, Jaccard score = 0.1719, loss = 0.1006, eval: [21.7 s]
# Iteration 12 fit: [32.3 s]: Recall = 0.2469, Jaccard score = 0.1722, loss = 0.0853, eval: [21.6 s]
# Iteration 13 fit: [31.2 s]: Recall = 0.2503, Jaccard score = 0.1751, loss = 0.0731, eval: [21.5 s]
# Iteration 14 fit: [31.4 s]: Recall = 0.2513, Jaccard score = 0.1759, loss = 0.0623, eval: [21.6 s]
# Iteration 15 fit: [30.5 s]: Recall = 0.2514, Jaccard score = 0.1760, loss = 0.0543, eval: [21.6 s]
# Iteration 16 fit: [31.7 s]: Recall = 0.2522, Jaccard score = 0.1766, loss = 0.0474, eval: [21.5 s]
# Iteration 17 fit: [30.4 s]: Recall = 0.2545, Jaccard score = 0.1785, loss = 0.0423, eval: [21.6 s]
# Iteration 18 fit: [31.4 s]: Recall = 0.2561, Jaccard score = 0.1798, loss = 0.0384, eval: [21.6 s]
# Iteration 19 fit: [30.7 s]: Recall = 0.2554, Jaccard score = 0.1793, loss = 0.0342, eval: [21.6 s]
# Iteration 20 fit: [31.4 s]: Recall = 0.2538, Jaccard score = 0.1779, loss = 0.0308, eval: [21.6 s]
# Iteration 21 fit: [30.8 s]: Recall = 0.2556, Jaccard score = 0.1794, loss = 0.0279, eval: [21.7 s]
# Iteration 22 fit: [32.5 s]: Recall = 0.2547, Jaccard score = 0.1787, loss = 0.0255, eval: [21.6 s]
# Iteration 23 fit: [31.1 s]: Recall = 0.2573, Jaccard score = 0.1809, loss = 0.0233, eval: [21.5 s]
# Iteration 24 fit: [31.5 s]: Recall = 0.2551, Jaccard score = 0.1790, loss = 0.0218, eval: [21.6 s]
# Iteration 25 fit: [30.8 s]: Recall = 0.2572, Jaccard score = 0.1807, loss = 0.0202, eval: [21.6 s]
# Iteration 26 fit: [31.7 s]: Recall = 0.2592, Jaccard score = 0.1824, loss = 0.0189, eval: [21.4 s]
# Iteration 27 fit: [30.7 s]: Recall = 0.2634, Jaccard score = 0.1859, loss = 0.0166, eval: [21.5 s]
# Iteration 28 fit: [31.9 s]: Recall = 0.2624, Jaccard score = 0.1851, loss = 0.0161, eval: [21.6 s]
# Iteration 29 fit: [31.0 s]: Recall = 0.2611, Jaccard score = 0.1840, loss = 0.0150, eval: [21.7 s]
# Iteration 30 fit: [31.9 s]: Recall = 0.2627, Jaccard score = 0.1853, loss = 0.0139, eval: [21.5 s]
# Iteration 31 fit: [31.4 s]: Recall = 0.2639, Jaccard score = 0.1864, loss = 0.0132, eval: [21.6 s]
# Iteration 32 fit: [31.3 s]: Recall = 0.2642, Jaccard score = 0.1866, loss = 0.0124, eval: [21.4 s]
# Iteration 33 fit: [31.4 s]: Recall = 0.2647, Jaccard score = 0.1870, loss = 0.0116, eval: [21.5 s]
# Iteration 34 fit: [31.8 s]: Recall = 0.2682, Jaccard score = 0.1900, loss = 0.0109, eval: [21.6 s]
# Iteration 35 fit: [30.6 s]: Recall = 0.2652, Jaccard score = 0.1874, loss = 0.0106, eval: [21.6 s]
# Iteration 36 fit: [31.6 s]: Recall = 0.2675, Jaccard score = 0.1893, loss = 0.0094, eval: [21.6 s]
# Iteration 37 fit: [31.1 s]: Recall = 0.2678, Jaccard score = 0.1896, loss = 0.0088, eval: [21.6 s]
# Iteration 38 fit: [32.1 s]: Recall = 0.2636, Jaccard score = 0.1861, loss = 0.0085, eval: [21.6 s]
# Iteration 39 fit: [30.7 s]: Recall = 0.2642, Jaccard score = 0.1866, loss = 0.0081, eval: [21.6 s]
# Iteration 40 fit: [31.3 s]: Recall = 0.2722, Jaccard score = 0.1933, loss = 0.0074, eval: [21.6 s]
# Iteration 41 fit: [32.0 s]: Recall = 0.2702, Jaccard score = 0.1917, loss = 0.0076, eval: [21.6 s]
# Iteration 42 fit: [31.3 s]: Recall = 0.2670, Jaccard score = 0.1889, loss = 0.0075, eval: [21.7 s]
# Iteration 43 fit: [31.0 s]: Recall = 0.2662, Jaccard score = 0.1883, loss = 0.0068, eval: [21.6 s]
# Iteration 44 fit: [31.6 s]: Recall = 0.2644, Jaccard score = 0.1867, loss = 0.0067, eval: [21.8 s]
# Iteration 45 fit: [30.3 s]: Recall = 0.2668, Jaccard score = 0.1887, loss = 0.0065, eval: [21.6 s]
# Iteration 46 fit: [31.6 s]: Recall = 0.2700, Jaccard score = 0.1915, loss = 0.0060, eval: [21.7 s]
# Iteration 47 fit: [30.6 s]: Recall = 0.2691, Jaccard score = 0.1907, loss = 0.0060, eval: [21.6 s]
# Iteration 48 fit: [31.7 s]: Recall = 0.2712, Jaccard score = 0.1925, loss = 0.0055, eval: [21.6 s]
# Iteration 49 fit: [30.8 s]: Recall = 0.2719, Jaccard score = 0.1931, loss = 0.0051, eval: [21.6 s]
# Iteration 50 fit: [31.8 s]: Recall = 0.2739, Jaccard score = 0.1948, loss = 0.0052, eval: [21.6 s]
# Iteration 51 fit: [31.4 s]: Recall = 0.2708, Jaccard score = 0.1921, loss = 0.0048, eval: [21.6 s]
# Iteration 52 fit: [31.7 s]: Recall = 0.2705, Jaccard score = 0.1919, loss = 0.0050, eval: [21.6 s]
# Iteration 53 fit: [30.6 s]: Recall = 0.2695, Jaccard score = 0.1911, loss = 0.0048, eval: [21.7 s]
# Iteration 54 fit: [31.6 s]: Recall = 0.2780, Jaccard score = 0.1983, loss = 0.0044, eval: [21.7 s]
# Iteration 55 fit: [31.0 s]: Recall = 0.2714, Jaccard score = 0.1927, loss = 0.0046, eval: [21.7 s]
# Iteration 56 fit: [31.3 s]: Recall = 0.2707, Jaccard score = 0.1920, loss = 0.0040, eval: [21.6 s]
# Iteration 57 fit: [31.8 s]: Recall = 0.2729, Jaccard score = 0.1940, loss = 0.0039, eval: [21.5 s]
# Iteration 58 fit: [31.5 s]: Recall = 0.2717, Jaccard score = 0.1929, loss = 0.0040, eval: [21.6 s]
# Iteration 59 fit: [31.4 s]: Recall = 0.2731, Jaccard score = 0.1941, loss = 0.0037, eval: [21.6 s]
# Iteration 60 fit: [31.7 s]: Recall = 0.2742, Jaccard score = 0.1950, loss = 0.0037, eval: [21.5 s]
# Iteration 61 fit: [31.0 s]: Recall = 0.2733, Jaccard score = 0.1943, loss = 0.0037, eval: [21.6 s]
# Iteration 62 fit: [32.3 s]: Recall = 0.2732, Jaccard score = 0.1942, loss = 0.0037, eval: [21.6 s]
# Iteration 63 fit: [31.5 s]: Recall = 0.2719, Jaccard score = 0.1931, loss = 0.0035, eval: [21.6 s]
# Iteration 64 fit: [32.2 s]: Recall = 0.2699, Jaccard score = 0.1914, loss = 0.0035, eval: [21.6 s]
# Iteration 65 fit: [30.3 s]: Recall = 0.2738, Jaccard score = 0.1947, loss = 0.0032, eval: [21.6 s]
# Iteration 66 fit: [31.5 s]: Recall = 0.2716, Jaccard score = 0.1928, loss = 0.0031, eval: [21.5 s]
# Iteration 67 fit: [30.8 s]: Recall = 0.2722, Jaccard score = 0.1933, loss = 0.0028, eval: [21.6 s]
# Iteration 68 fit: [32.4 s]: Recall = 0.2733, Jaccard score = 0.1942, loss = 0.0032, eval: [21.7 s]
# Iteration 69 fit: [30.6 s]: Recall = 0.2683, Jaccard score = 0.1901, loss = 0.0029, eval: [21.5 s]
# Iteration 70 fit: [31.4 s]: Recall = 0.2750, Jaccard score = 0.1957, loss = 0.0029, eval: [21.7 s]
# Iteration 71 fit: [30.9 s]: Recall = 0.2731, Jaccard score = 0.1941, loss = 0.0027, eval: [21.7 s]
# Iteration 72 fit: [31.4 s]: Recall = 0.2756, Jaccard score = 0.1963, loss = 0.0028, eval: [21.6 s]
# Iteration 73 fit: [31.0 s]: Recall = 0.2722, Jaccard score = 0.1933, loss = 0.0030, eval: [21.6 s]
# Iteration 74 fit: [32.0 s]: Recall = 0.2745, Jaccard score = 0.1952, loss = 0.0026, eval: [21.6 s]
# Iteration 75 fit: [31.5 s]: Recall = 0.2721, Jaccard score = 0.1932, loss = 0.0026, eval: [21.6 s]
# Iteration 76 fit: [31.4 s]: Recall = 0.2773, Jaccard score = 0.1977, loss = 0.0025, eval: [21.6 s]
# Iteration 77 fit: [31.6 s]: Recall = 0.2735, Jaccard score = 0.1944, loss = 0.0024, eval: [21.6 s]
# Iteration 78 fit: [31.5 s]: Recall = 0.2790, Jaccard score = 0.1992, loss = 0.0025, eval: [21.5 s]
# Iteration 79 fit: [31.0 s]: Recall = 0.2772, Jaccard score = 0.1975, loss = 0.0022, eval: [21.6 s]
# Iteration 80 fit: [31.6 s]: Recall = 0.2773, Jaccard score = 0.1977, loss = 0.0025, eval: [21.7 s]
# Iteration 81 fit: [31.0 s]: Recall = 0.2775, Jaccard score = 0.1978, loss = 0.0024, eval: [21.6 s]
# Iteration 82 fit: [31.7 s]: Recall = 0.2738, Jaccard score = 0.1947, loss = 0.0024, eval: [21.5 s]
# Iteration 83 fit: [30.2 s]: Recall = 0.2772, Jaccard score = 0.1976, loss = 0.0020, eval: [21.6 s]
# Iteration 84 fit: [31.5 s]: Recall = 0.2781, Jaccard score = 0.1984, loss = 0.0020, eval: [21.6 s]
# Iteration 85 fit: [31.0 s]: Recall = 0.2749, Jaccard score = 0.1956, loss = 0.0020, eval: [21.6 s]
# Iteration 86 fit: [31.5 s]: Recall = 0.2743, Jaccard score = 0.1951, loss = 0.0020, eval: [21.6 s]
# Iteration 87 fit: [31.1 s]: Recall = 0.2762, Jaccard score = 0.1967, loss = 0.0019, eval: [21.6 s]
# Iteration 88 fit: [31.7 s]: Recall = 0.2753, Jaccard score = 0.1959, loss = 0.0018, eval: [21.7 s]
# Iteration 89 fit: [31.0 s]: Recall = 0.2723, Jaccard score = 0.1934, loss = 0.0020, eval: [21.6 s]
# Iteration 90 fit: [31.9 s]: Recall = 0.2790, Jaccard score = 0.1991, loss = 0.0019, eval: [21.6 s]
# Iteration 91 fit: [31.2 s]: Recall = 0.2763, Jaccard score = 0.1969, loss = 0.0018, eval: [21.6 s]
# Iteration 92 fit: [31.4 s]: Recall = 0.2736, Jaccard score = 0.1945, loss = 0.0018, eval: [21.6 s]
# Iteration 93 fit: [31.0 s]: Recall = 0.2755, Jaccard score = 0.1962, loss = 0.0016, eval: [21.6 s]
# Iteration 94 fit: [32.0 s]: Recall = 0.2764, Jaccard score = 0.1969, loss = 0.0018, eval: [21.6 s]
# Iteration 95 fit: [30.7 s]: Recall = 0.2712, Jaccard score = 0.1925, loss = 0.0019, eval: [21.6 s]
# Iteration 96 fit: [31.5 s]: Recall = 0.2756, Jaccard score = 0.1962, loss = 0.0017, eval: [21.6 s]
# Iteration 97 fit: [31.0 s]: Recall = 0.2774, Jaccard score = 0.1978, loss = 0.0018, eval: [21.7 s]
# Iteration 98 fit: [31.4 s]: Recall = 0.2793, Jaccard score = 0.1994, loss = 0.0017, eval: [21.6 s]
# Iteration 99 fit: [30.7 s]: Recall = 0.2751, Jaccard score = 0.1958, loss = 0.0015, eval: [21.5 s]
# Iteration 100 fit: [31.4 s]: Recall = 0.2750, Jaccard score = 0.1957, loss = 0.0015, eval: [21.6 s]
# Iteration 101 fit: [31.7 s]: Recall = 0.2779, Jaccard score = 0.1981, loss = 0.0016, eval: [21.7 s]
# Iteration 102 fit: [31.9 s]: Recall = 0.2763, Jaccard score = 0.1969, loss = 0.0016, eval: [21.6 s]
# Iteration 103 fit: [30.7 s]: Recall = 0.2766, Jaccard score = 0.1971, loss = 0.0013, eval: [21.4 s]
# Iteration 104 fit: [31.6 s]: Recall = 0.2801, Jaccard score = 0.2000, loss = 0.0016, eval: [21.8 s]
# Iteration 105 fit: [32.0 s]: Recall = 0.2816, Jaccard score = 0.2014, loss = 0.0013, eval: [21.7 s]
# Iteration 106 fit: [31.5 s]: Recall = 0.2767, Jaccard score = 0.1972, loss = 0.0015, eval: [21.6 s]
# Iteration 107 fit: [30.7 s]: Recall = 0.2805, Jaccard score = 0.2004, loss = 0.0014, eval: [21.6 s]
# Iteration 108 fit: [31.9 s]: Recall = 0.2772, Jaccard score = 0.1975, loss = 0.0014, eval: [21.5 s]
# Iteration 109 fit: [30.3 s]: Recall = 0.2768, Jaccard score = 0.1973, loss = 0.0016, eval: [21.5 s]
# Iteration 110 fit: [31.8 s]: Recall = 0.2787, Jaccard score = 0.1989, loss = 0.0014, eval: [21.6 s]
# Iteration 111 fit: [31.1 s]: Recall = 0.2806, Jaccard score = 0.2005, loss = 0.0014, eval: [21.6 s]
# Iteration 112 fit: [31.4 s]: Recall = 0.2779, Jaccard score = 0.1982, loss = 0.0014, eval: [21.6 s]
# Iteration 113 fit: [30.8 s]: Recall = 0.2803, Jaccard score = 0.2002, loss = 0.0014, eval: [21.6 s]
# Iteration 114 fit: [32.1 s]: Recall = 0.2794, Jaccard score = 0.1995, loss = 0.0013, eval: [21.7 s]
# Iteration 115 fit: [30.4 s]: Recall = 0.2770, Jaccard score = 0.1974, loss = 0.0014, eval: [21.6 s]
# Iteration 116 fit: [31.6 s]: Recall = 0.2769, Jaccard score = 0.1973, loss = 0.0012, eval: [21.5 s]
# Iteration 117 fit: [30.7 s]: Recall = 0.2745, Jaccard score = 0.1953, loss = 0.0012, eval: [21.5 s]
# Iteration 118 fit: [32.1 s]: Recall = 0.2771, Jaccard score = 0.1975, loss = 0.0012, eval: [21.6 s]
# Iteration 119 fit: [31.0 s]: Recall = 0.2788, Jaccard score = 0.1989, loss = 0.0012, eval: [21.7 s]
# Iteration 120 fit: [31.2 s]: Recall = 0.2762, Jaccard score = 0.1967, loss = 0.0011, eval: [21.5 s]
# Iteration 121 fit: [31.4 s]: Recall = 0.2779, Jaccard score = 0.1982, loss = 0.0012, eval: [21.6 s]
# Iteration 122 fit: [31.1 s]: Recall = 0.2750, Jaccard score = 0.1957, loss = 0.0013, eval: [21.6 s]
# Iteration 123 fit: [31.1 s]: Recall = 0.2759, Jaccard score = 0.1965, loss = 0.0011, eval: [21.6 s]
# Iteration 124 fit: [31.7 s]: Recall = 0.2779, Jaccard score = 0.1981, loss = 0.0011, eval: [21.5 s]
# Iteration 125 fit: [31.0 s]: Recall = 0.2786, Jaccard score = 0.1988, loss = 0.0011, eval: [21.4 s]
# Iteration 126 fit: [31.1 s]: Recall = 0.2782, Jaccard score = 0.1985, loss = 0.0012, eval: [21.6 s]
# Iteration 127 fit: [30.5 s]: Recall = 0.2772, Jaccard score = 0.1976, loss = 0.0012, eval: [21.6 s]
# Iteration 128 fit: [32.2 s]: Recall = 0.2836, Jaccard score = 0.2031, loss = 0.0012, eval: [21.7 s]
# Iteration 129 fit: [30.9 s]: Recall = 0.2797, Jaccard score = 0.1998, loss = 0.0011, eval: [21.6 s]
# Iteration 130 fit: [31.7 s]: Recall = 0.2810, Jaccard score = 0.2008, loss = 0.0011, eval: [21.7 s]
# Iteration 131 fit: [31.1 s]: Recall = 0.2785, Jaccard score = 0.1987, loss = 0.0010, eval: [21.7 s]
# Iteration 132 fit: [31.5 s]: Recall = 0.2807, Jaccard score = 0.2006, loss = 0.0010, eval: [21.7 s]
# Iteration 133 fit: [30.5 s]: Recall = 0.2807, Jaccard score = 0.2006, loss = 0.0009, eval: [21.7 s]
# Iteration 134 fit: [31.7 s]: Recall = 0.2784, Jaccard score = 0.1986, loss = 0.0009, eval: [21.6 s]
# Iteration 135 fit: [30.7 s]: Recall = 0.2770, Jaccard score = 0.1974, loss = 0.0010, eval: [21.3 s]
# Iteration 136 fit: [31.5 s]: Recall = 0.2795, Jaccard score = 0.1995, loss = 0.0008, eval: [21.4 s]
# Iteration 137 fit: [30.8 s]: Recall = 0.2814, Jaccard score = 0.2012, loss = 0.0012, eval: [21.3 s]
# Iteration 138 fit: [32.0 s]: Recall = 0.2803, Jaccard score = 0.2002, loss = 0.0009, eval: [21.4 s]
# Iteration 139 fit: [30.4 s]: Recall = 0.2775, Jaccard score = 0.1978, loss = 0.0010, eval: [21.4 s]
# Iteration 140 fit: [31.5 s]: Recall = 0.2783, Jaccard score = 0.1985, loss = 0.0010, eval: [21.6 s]
# Iteration 141 fit: [30.1 s]: Recall = 0.2790, Jaccard score = 0.1992, loss = 0.0010, eval: [21.3 s]
# Iteration 142 fit: [31.9 s]: Recall = 0.2766, Jaccard score = 0.1971, loss = 0.0010, eval: [21.3 s]
# Iteration 143 fit: [30.7 s]: Recall = 0.2765, Jaccard score = 0.1970, loss = 0.0009, eval: [21.4 s]
# Iteration 144 fit: [31.4 s]: Recall = 0.2760, Jaccard score = 0.1966, loss = 0.0009, eval: [21.3 s]
# Iteration 145 fit: [30.8 s]: Recall = 0.2801, Jaccard score = 0.2001, loss = 0.0009, eval: [21.3 s]
# Iteration 146 fit: [31.5 s]: Recall = 0.2780, Jaccard score = 0.1983, loss = 0.0009, eval: [21.5 s]
# Iteration 147 fit: [31.1 s]: Recall = 0.2757, Jaccard score = 0.1963, loss = 0.0010, eval: [21.4 s]
# Iteration 148 fit: [30.9 s]: Recall = 0.2774, Jaccard score = 0.1978, loss = 0.0008, eval: [21.4 s]
# Iteration 149 fit: [30.5 s]: Recall = 0.2770, Jaccard score = 0.1974, loss = 0.0008, eval: [21.6 s]
# Iteration 150 fit: [31.1 s]: Recall = 0.2818, Jaccard score = 0.2015, loss = 0.0009, eval: [21.6 s]
# Iteration 151 fit: [30.7 s]: Recall = 0.2802, Jaccard score = 0.2001, loss = 0.0008, eval: [21.3 s]
# Iteration 152 fit: [31.6 s]: Recall = 0.2771, Jaccard score = 0.1975, loss = 0.0009, eval: [21.3 s]
# Iteration 153 fit: [30.8 s]: Recall = 0.2791, Jaccard score = 0.1992, loss = 0.0008, eval: [21.4 s]
# Iteration 154 fit: [31.9 s]: Recall = 0.2832, Jaccard score = 0.2027, loss = 0.0008, eval: [21.4 s]
# Iteration 155 fit: [30.7 s]: Recall = 0.2806, Jaccard score = 0.2005, loss = 0.0008, eval: [21.4 s]
# Iteration 156 fit: [31.3 s]: Recall = 0.2781, Jaccard score = 0.1984, loss = 0.0008, eval: [21.4 s]
# Iteration 157 fit: [30.7 s]: Recall = 0.2782, Jaccard score = 0.1984, loss = 0.0008, eval: [21.3 s]
# Iteration 158 fit: [31.5 s]: Recall = 0.2799, Jaccard score = 0.1999, loss = 0.0008, eval: [21.5 s]
# Iteration 159 fit: [30.4 s]: Recall = 0.2798, Jaccard score = 0.1998, loss = 0.0008, eval: [21.3 s]
# Iteration 160 fit: [31.3 s]: Recall = 0.2757, Jaccard score = 0.1963, loss = 0.0009, eval: [21.4 s]
# Iteration 161 fit: [30.9 s]: Recall = 0.2765, Jaccard score = 0.1970, loss = 0.0008, eval: [21.4 s]
# Iteration 162 fit: [32.3 s]: Recall = 0.2795, Jaccard score = 0.1995, loss = 0.0008, eval: [21.4 s]
# Iteration 163 fit: [30.5 s]: Recall = 0.2761, Jaccard score = 0.1966, loss = 0.0008, eval: [21.4 s]
# End. Best Iteration 128:  Recall = 0.2836, Jaccard score = 0.2031. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,96]_1564510893.h5
# The average best performance after k-fold 3 is: Recall = 0.28388320837454084, Jaccard score = 0.2030245758739303
# 
# Performing k-fold 4
# Init: Recall = 0.0278, Jaccard score = 0.0169
# Iteration 0 fit: [37.7 s]: Recall = 0.2146, Jaccard score = 0.1468, loss = 0.4326, eval: [21.4 s]
# Iteration 1 fit: [30.7 s]: Recall = 0.2519, Jaccard score = 0.1769, loss = 0.3910, eval: [21.4 s]
# Iteration 2 fit: [31.4 s]: Recall = 0.2622, Jaccard score = 0.1855, loss = 0.3601, eval: [21.4 s]
# Iteration 3 fit: [31.2 s]: Recall = 0.2690, Jaccard score = 0.1912, loss = 0.3300, eval: [21.4 s]
# Iteration 4 fit: [30.7 s]: Recall = 0.2688, Jaccard score = 0.1911, loss = 0.2976, eval: [21.4 s]
# Iteration 5 fit: [30.7 s]: Recall = 0.2640, Jaccard score = 0.1870, loss = 0.2633, eval: [21.4 s]
# Iteration 6 fit: [30.8 s]: Recall = 0.2616, Jaccard score = 0.1850, loss = 0.2302, eval: [21.4 s]
# Iteration 7 fit: [31.2 s]: Recall = 0.2525, Jaccard score = 0.1774, loss = 0.1986, eval: [21.7 s]
# Iteration 8 fit: [31.2 s]: Recall = 0.2507, Jaccard score = 0.1759, loss = 0.1686, eval: [21.5 s]
# Iteration 9 fit: [30.8 s]: Recall = 0.2520, Jaccard score = 0.1770, loss = 0.1434, eval: [21.4 s]
# Iteration 10 fit: [30.3 s]: Recall = 0.2507, Jaccard score = 0.1759, loss = 0.1194, eval: [21.4 s]
# Iteration 11 fit: [31.4 s]: Recall = 0.2519, Jaccard score = 0.1769, loss = 0.1005, eval: [21.5 s]
# Iteration 12 fit: [31.1 s]: Recall = 0.2491, Jaccard score = 0.1746, loss = 0.0843, eval: [21.5 s]
# Iteration 13 fit: [31.0 s]: Recall = 0.2535, Jaccard score = 0.1782, loss = 0.0722, eval: [21.4 s]
# Iteration 14 fit: [30.6 s]: Recall = 0.2434, Jaccard score = 0.1699, loss = 0.0623, eval: [21.4 s]
# Iteration 15 fit: [31.1 s]: Recall = 0.2509, Jaccard score = 0.1761, loss = 0.0536, eval: [21.5 s]
# Iteration 16 fit: [31.1 s]: Recall = 0.2510, Jaccard score = 0.1762, loss = 0.0483, eval: [21.4 s]
# Iteration 17 fit: [30.5 s]: Recall = 0.2522, Jaccard score = 0.1771, loss = 0.0422, eval: [21.4 s]
# Iteration 18 fit: [30.7 s]: Recall = 0.2586, Jaccard score = 0.1824, loss = 0.0372, eval: [21.4 s]
# Iteration 19 fit: [31.0 s]: Recall = 0.2590, Jaccard score = 0.1828, loss = 0.0339, eval: [21.5 s]
# Iteration 20 fit: [31.2 s]: Recall = 0.2581, Jaccard score = 0.1820, loss = 0.0308, eval: [21.5 s]
# Iteration 21 fit: [31.3 s]: Recall = 0.2585, Jaccard score = 0.1824, loss = 0.0280, eval: [21.5 s]
# Iteration 22 fit: [30.5 s]: Recall = 0.2591, Jaccard score = 0.1829, loss = 0.0255, eval: [21.4 s]
# Iteration 23 fit: [30.4 s]: Recall = 0.2589, Jaccard score = 0.1827, loss = 0.0236, eval: [21.4 s]
# Iteration 24 fit: [31.6 s]: Recall = 0.2633, Jaccard score = 0.1864, loss = 0.0221, eval: [21.4 s]
# Iteration 25 fit: [30.6 s]: Recall = 0.2603, Jaccard score = 0.1839, loss = 0.0206, eval: [21.4 s]
# Iteration 26 fit: [30.7 s]: Recall = 0.2583, Jaccard score = 0.1822, loss = 0.0184, eval: [21.4 s]
# Iteration 27 fit: [31.0 s]: Recall = 0.2640, Jaccard score = 0.1870, loss = 0.0170, eval: [21.4 s]
# Iteration 28 fit: [31.1 s]: Recall = 0.2604, Jaccard score = 0.1840, loss = 0.0163, eval: [21.4 s]
# Iteration 29 fit: [31.7 s]: Recall = 0.2653, Jaccard score = 0.1881, loss = 0.0153, eval: [21.4 s]
# Iteration 30 fit: [31.2 s]: Recall = 0.2655, Jaccard score = 0.1883, loss = 0.0138, eval: [21.4 s]
# Iteration 31 fit: [31.1 s]: Recall = 0.2615, Jaccard score = 0.1849, loss = 0.0129, eval: [21.5 s]
# Iteration 32 fit: [30.8 s]: Recall = 0.2656, Jaccard score = 0.1883, loss = 0.0119, eval: [21.4 s]
# Iteration 33 fit: [30.8 s]: Recall = 0.2665, Jaccard score = 0.1891, loss = 0.0111, eval: [21.4 s]
# Iteration 34 fit: [30.9 s]: Recall = 0.2684, Jaccard score = 0.1907, loss = 0.0105, eval: [21.4 s]
# Iteration 35 fit: [31.2 s]: Recall = 0.2606, Jaccard score = 0.1841, loss = 0.0100, eval: [21.5 s]
# Iteration 36 fit: [31.1 s]: Recall = 0.2651, Jaccard score = 0.1880, loss = 0.0096, eval: [21.4 s]
# Iteration 37 fit: [30.6 s]: Recall = 0.2662, Jaccard score = 0.1888, loss = 0.0091, eval: [21.5 s]
# Iteration 38 fit: [30.5 s]: Recall = 0.2666, Jaccard score = 0.1892, loss = 0.0089, eval: [21.4 s]
# End. Best Iteration 3:  Recall = 0.2690, Jaccard score = 0.1912. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,96]_1564510893.h5
# The average best performance after k-fold 4 is: Recall = 0.28016835121206957, Jaccard score = 0.20007546895895958
# 
# Performing k-fold 5
# Init: Recall = 0.0293, Jaccard score = 0.0178
# Iteration 0 fit: [38.7 s]: Recall = 0.2140, Jaccard score = 0.1462, loss = 0.4321, eval: [21.9 s]
# Iteration 1 fit: [31.1 s]: Recall = 0.2477, Jaccard score = 0.1731, loss = 0.3896, eval: [21.9 s]
# Iteration 2 fit: [31.0 s]: Recall = 0.2627, Jaccard score = 0.1856, loss = 0.3597, eval: [21.7 s]
# Iteration 3 fit: [31.4 s]: Recall = 0.2677, Jaccard score = 0.1898, loss = 0.3300, eval: [21.8 s]
# Iteration 4 fit: [31.4 s]: Recall = 0.2703, Jaccard score = 0.1920, loss = 0.2974, eval: [21.8 s]
# Iteration 5 fit: [31.3 s]: Recall = 0.2661, Jaccard score = 0.1885, loss = 0.2634, eval: [21.6 s]
# Iteration 6 fit: [31.4 s]: Recall = 0.2624, Jaccard score = 0.1854, loss = 0.2313, eval: [21.6 s]
# Iteration 7 fit: [31.5 s]: Recall = 0.2610, Jaccard score = 0.1842, loss = 0.1994, eval: [21.7 s]
# Iteration 8 fit: [31.0 s]: Recall = 0.2538, Jaccard score = 0.1782, loss = 0.1699, eval: [21.5 s]
# Iteration 9 fit: [31.4 s]: Recall = 0.2543, Jaccard score = 0.1786, loss = 0.1438, eval: [21.7 s]
# Iteration 10 fit: [31.3 s]: Recall = 0.2596, Jaccard score = 0.1830, loss = 0.1204, eval: [21.8 s]
# Iteration 11 fit: [31.1 s]: Recall = 0.2516, Jaccard score = 0.1763, loss = 0.1003, eval: [21.8 s]
# Iteration 12 fit: [31.5 s]: Recall = 0.2551, Jaccard score = 0.1792, loss = 0.0851, eval: [21.8 s]
# Iteration 13 fit: [31.9 s]: Recall = 0.2543, Jaccard score = 0.1786, loss = 0.0725, eval: [21.8 s]
# Iteration 14 fit: [31.2 s]: Recall = 0.2595, Jaccard score = 0.1829, loss = 0.0622, eval: [21.8 s]
# Iteration 15 fit: [31.8 s]: Recall = 0.2595, Jaccard score = 0.1829, loss = 0.0542, eval: [21.8 s]
# Iteration 16 fit: [31.1 s]: Recall = 0.2565, Jaccard score = 0.1804, loss = 0.0478, eval: [21.8 s]
# Iteration 17 fit: [31.5 s]: Recall = 0.2604, Jaccard score = 0.1837, loss = 0.0425, eval: [21.7 s]
# Iteration 18 fit: [31.2 s]: Recall = 0.2614, Jaccard score = 0.1845, loss = 0.0378, eval: [21.9 s]
# Iteration 19 fit: [31.4 s]: Recall = 0.2662, Jaccard score = 0.1886, loss = 0.0341, eval: [21.8 s]
# Iteration 20 fit: [32.0 s]: Recall = 0.2608, Jaccard score = 0.1840, loss = 0.0307, eval: [21.8 s]
# Iteration 21 fit: [31.9 s]: Recall = 0.2665, Jaccard score = 0.1888, loss = 0.0278, eval: [21.8 s]
# Iteration 22 fit: [32.2 s]: Recall = 0.2678, Jaccard score = 0.1898, loss = 0.0259, eval: [21.8 s]
# Iteration 23 fit: [30.8 s]: Recall = 0.2614, Jaccard score = 0.1845, loss = 0.0229, eval: [21.5 s]
# Iteration 24 fit: [30.8 s]: Recall = 0.2649, Jaccard score = 0.1874, loss = 0.0210, eval: [21.8 s]
# Iteration 25 fit: [31.3 s]: Recall = 0.2673, Jaccard score = 0.1894, loss = 0.0194, eval: [21.8 s]
# Iteration 26 fit: [31.2 s]: Recall = 0.2644, Jaccard score = 0.1870, loss = 0.0185, eval: [21.8 s]
# Iteration 27 fit: [31.5 s]: Recall = 0.2668, Jaccard score = 0.1890, loss = 0.0172, eval: [21.8 s]
# Iteration 28 fit: [31.3 s]: Recall = 0.2696, Jaccard score = 0.1914, loss = 0.0159, eval: [21.8 s]
# Iteration 29 fit: [31.5 s]: Recall = 0.2670, Jaccard score = 0.1892, loss = 0.0148, eval: [21.8 s]
# Iteration 30 fit: [31.0 s]: Recall = 0.2651, Jaccard score = 0.1876, loss = 0.0139, eval: [21.7 s]
# Iteration 31 fit: [31.4 s]: Recall = 0.2704, Jaccard score = 0.1921, loss = 0.0128, eval: [21.8 s]
# Iteration 32 fit: [30.7 s]: Recall = 0.2697, Jaccard score = 0.1915, loss = 0.0125, eval: [21.8 s]
# Iteration 33 fit: [31.5 s]: Recall = 0.2691, Jaccard score = 0.1910, loss = 0.0112, eval: [21.8 s]
# Iteration 34 fit: [31.4 s]: Recall = 0.2720, Jaccard score = 0.1935, loss = 0.0106, eval: [21.8 s]
# Iteration 35 fit: [31.8 s]: Recall = 0.2691, Jaccard score = 0.1910, loss = 0.0100, eval: [21.6 s]
# Iteration 36 fit: [31.8 s]: Recall = 0.2716, Jaccard score = 0.1931, loss = 0.0099, eval: [21.9 s]
# Iteration 37 fit: [31.2 s]: Recall = 0.2698, Jaccard score = 0.1915, loss = 0.0094, eval: [21.8 s]
# Iteration 38 fit: [30.9 s]: Recall = 0.2708, Jaccard score = 0.1924, loss = 0.0088, eval: [21.9 s]
# Iteration 39 fit: [31.5 s]: Recall = 0.2694, Jaccard score = 0.1912, loss = 0.0082, eval: [21.8 s]
# Iteration 40 fit: [31.4 s]: Recall = 0.2722, Jaccard score = 0.1936, loss = 0.0081, eval: [21.8 s]
# Iteration 41 fit: [31.1 s]: Recall = 0.2711, Jaccard score = 0.1927, loss = 0.0075, eval: [21.8 s]
# Iteration 42 fit: [31.0 s]: Recall = 0.2711, Jaccard score = 0.1927, loss = 0.0072, eval: [21.9 s]
# Iteration 43 fit: [32.2 s]: Recall = 0.2743, Jaccard score = 0.1954, loss = 0.0067, eval: [21.8 s]
# Iteration 44 fit: [31.2 s]: Recall = 0.2733, Jaccard score = 0.1945, loss = 0.0068, eval: [21.8 s]
# Iteration 45 fit: [31.6 s]: Recall = 0.2740, Jaccard score = 0.1952, loss = 0.0059, eval: [21.9 s]
# Iteration 46 fit: [31.2 s]: Recall = 0.2759, Jaccard score = 0.1967, loss = 0.0058, eval: [21.9 s]
# Iteration 47 fit: [31.0 s]: Recall = 0.2774, Jaccard score = 0.1980, loss = 0.0059, eval: [21.7 s]
# Iteration 48 fit: [31.1 s]: Recall = 0.2759, Jaccard score = 0.1967, loss = 0.0055, eval: [21.6 s]
# Iteration 49 fit: [31.1 s]: Recall = 0.2751, Jaccard score = 0.1961, loss = 0.0053, eval: [21.8 s]
# Iteration 50 fit: [31.6 s]: Recall = 0.2759, Jaccard score = 0.1968, loss = 0.0051, eval: [21.6 s]
# Iteration 51 fit: [32.0 s]: Recall = 0.2760, Jaccard score = 0.1969, loss = 0.0048, eval: [21.8 s]
# Iteration 52 fit: [31.1 s]: Recall = 0.2787, Jaccard score = 0.1992, loss = 0.0047, eval: [21.6 s]
# Iteration 53 fit: [31.5 s]: Recall = 0.2766, Jaccard score = 0.1974, loss = 0.0047, eval: [21.9 s]
# Iteration 54 fit: [31.4 s]: Recall = 0.2750, Jaccard score = 0.1960, loss = 0.0045, eval: [21.8 s]
# Iteration 55 fit: [30.9 s]: Recall = 0.2764, Jaccard score = 0.1972, loss = 0.0044, eval: [22.0 s]
# Iteration 56 fit: [31.2 s]: Recall = 0.2759, Jaccard score = 0.1968, loss = 0.0043, eval: [21.6 s]
# Iteration 57 fit: [31.5 s]: Recall = 0.2777, Jaccard score = 0.1983, loss = 0.0041, eval: [21.8 s]
# Iteration 58 fit: [31.5 s]: Recall = 0.2791, Jaccard score = 0.1995, loss = 0.0039, eval: [21.6 s]
# Iteration 59 fit: [31.4 s]: Recall = 0.2802, Jaccard score = 0.2004, loss = 0.0038, eval: [21.8 s]
# Iteration 60 fit: [32.0 s]: Recall = 0.2759, Jaccard score = 0.1968, loss = 0.0038, eval: [21.7 s]
# Iteration 61 fit: [31.2 s]: Recall = 0.2774, Jaccard score = 0.1980, loss = 0.0035, eval: [21.7 s]
# Iteration 62 fit: [31.4 s]: Recall = 0.2782, Jaccard score = 0.1987, loss = 0.0035, eval: [21.8 s]
# Iteration 63 fit: [31.2 s]: Recall = 0.2799, Jaccard score = 0.2002, loss = 0.0031, eval: [21.9 s]
# Iteration 64 fit: [32.1 s]: Recall = 0.2803, Jaccard score = 0.2005, loss = 0.0033, eval: [21.7 s]
# Iteration 65 fit: [31.1 s]: Recall = 0.2848, Jaccard score = 0.2044, loss = 0.0032, eval: [21.8 s]
# Iteration 66 fit: [32.0 s]: Recall = 0.2815, Jaccard score = 0.2016, loss = 0.0032, eval: [21.8 s]
# Iteration 67 fit: [30.9 s]: Recall = 0.2829, Jaccard score = 0.2027, loss = 0.0031, eval: [21.6 s]
# Iteration 68 fit: [31.7 s]: Recall = 0.2810, Jaccard score = 0.2011, loss = 0.0029, eval: [21.7 s]
# Iteration 69 fit: [30.6 s]: Recall = 0.2803, Jaccard score = 0.2005, loss = 0.0028, eval: [21.9 s]
# Iteration 70 fit: [31.6 s]: Recall = 0.2788, Jaccard score = 0.1992, loss = 0.0027, eval: [21.7 s]
# Iteration 71 fit: [31.5 s]: Recall = 0.2794, Jaccard score = 0.1998, loss = 0.0025, eval: [21.7 s]
# Iteration 72 fit: [31.8 s]: Recall = 0.2840, Jaccard score = 0.2037, loss = 0.0027, eval: [21.9 s]
# Iteration 73 fit: [32.0 s]: Recall = 0.2814, Jaccard score = 0.2014, loss = 0.0027, eval: [21.8 s]
# Iteration 74 fit: [32.6 s]: Recall = 0.2792, Jaccard score = 0.1996, loss = 0.0025, eval: [21.8 s]
# Iteration 75 fit: [31.8 s]: Recall = 0.2835, Jaccard score = 0.2033, loss = 0.0025, eval: [21.5 s]
# Iteration 76 fit: [31.5 s]: Recall = 0.2786, Jaccard score = 0.1991, loss = 0.0026, eval: [21.8 s]
# Iteration 77 fit: [31.3 s]: Recall = 0.2837, Jaccard score = 0.2034, loss = 0.0025, eval: [21.8 s]
# Iteration 78 fit: [31.5 s]: Recall = 0.2805, Jaccard score = 0.2007, loss = 0.0025, eval: [21.8 s]
# Iteration 79 fit: [31.5 s]: Recall = 0.2803, Jaccard score = 0.2005, loss = 0.0023, eval: [21.8 s]
# Iteration 80 fit: [31.8 s]: Recall = 0.2812, Jaccard score = 0.2013, loss = 0.0023, eval: [21.7 s]
# Iteration 81 fit: [31.9 s]: Recall = 0.2782, Jaccard score = 0.1988, loss = 0.0024, eval: [21.6 s]
# Iteration 82 fit: [31.1 s]: Recall = 0.2838, Jaccard score = 0.2035, loss = 0.0023, eval: [21.7 s]
# Iteration 83 fit: [31.3 s]: Recall = 0.2781, Jaccard score = 0.1986, loss = 0.0022, eval: [21.8 s]
# Iteration 84 fit: [31.7 s]: Recall = 0.2837, Jaccard score = 0.2034, loss = 0.0020, eval: [21.8 s]
# Iteration 85 fit: [31.6 s]: Recall = 0.2823, Jaccard score = 0.2022, loss = 0.0022, eval: [21.7 s]
# Iteration 86 fit: [32.0 s]: Recall = 0.2821, Jaccard score = 0.2021, loss = 0.0020, eval: [21.8 s]
# Iteration 87 fit: [31.0 s]: Recall = 0.2820, Jaccard score = 0.2020, loss = 0.0021, eval: [21.7 s]
# Iteration 88 fit: [31.9 s]: Recall = 0.2798, Jaccard score = 0.2001, loss = 0.0020, eval: [21.6 s]
# Iteration 89 fit: [31.2 s]: Recall = 0.2808, Jaccard score = 0.2010, loss = 0.0020, eval: [21.8 s]
# Iteration 90 fit: [31.6 s]: Recall = 0.2814, Jaccard score = 0.2014, loss = 0.0020, eval: [21.6 s]
# Iteration 91 fit: [31.0 s]: Recall = 0.2804, Jaccard score = 0.2006, loss = 0.0019, eval: [21.7 s]
# Iteration 92 fit: [31.3 s]: Recall = 0.2814, Jaccard score = 0.2015, loss = 0.0020, eval: [21.7 s]
# Iteration 93 fit: [31.4 s]: Recall = 0.2823, Jaccard score = 0.2022, loss = 0.0018, eval: [21.8 s]
# Iteration 94 fit: [31.2 s]: Recall = 0.2804, Jaccard score = 0.2006, loss = 0.0016, eval: [21.8 s]
# Iteration 95 fit: [31.0 s]: Recall = 0.2804, Jaccard score = 0.2006, loss = 0.0018, eval: [21.7 s]
# Iteration 96 fit: [31.8 s]: Recall = 0.2809, Jaccard score = 0.2010, loss = 0.0018, eval: [21.8 s]
# Iteration 97 fit: [31.1 s]: Recall = 0.2818, Jaccard score = 0.2018, loss = 0.0021, eval: [21.8 s]
# Iteration 98 fit: [32.0 s]: Recall = 0.2778, Jaccard score = 0.1984, loss = 0.0017, eval: [22.1 s]
# Iteration 99 fit: [31.4 s]: Recall = 0.2770, Jaccard score = 0.1977, loss = 0.0017, eval: [21.9 s]
# Iteration 100 fit: [31.7 s]: Recall = 0.2777, Jaccard score = 0.1983, loss = 0.0016, eval: [21.8 s]
# End. Best Iteration 65:  Recall = 0.2848, Jaccard score = 0.2044. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,96]_1564510893.h5
# The average best performance after k-fold 5 is: Recall = 0.2810891550669869, Jaccard score = 0.20093464285531548
