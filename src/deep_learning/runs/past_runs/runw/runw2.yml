--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--num_factors: "94"
--early_stopping: "145"
--test_dataset: "1"
--percentage: "0.0"
--dataset_name_prepend: "cold_0.0_"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.0_', early_stopping=145, epochs=300, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.0, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1566571167.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1566571167.h5
# Load data done [1.6 s]. #user=20000, #item=2000, #train=143502, #test=eval_recall
# <class 'tensorflow.python.framework.errors_impl.InternalError'>: GPU sync failed


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.0_', early_stopping=145, epochs=300, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.0, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1566579499.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1566579499.h5
# Load data done [1.8 s]. #user=20000, #item=2000, #train=143502, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0291, Jaccard score = 0.0222
# Iteration 0 fit: [29.8 s]: Recall = 0.1725, Jaccard score = 0.1481, loss = 0.4950, gradient norm = 0.2927, eval: [7.4 s]
# Iteration 1 fit: [17.1 s]: Recall = 0.1871, Jaccard score = 0.1627, loss = 0.3875, gradient norm = 0.2525, eval: [7.5 s]
# Iteration 2 fit: [17.1 s]: Recall = 0.1890, Jaccard score = 0.1646, loss = 0.3586, gradient norm = 0.2578, eval: [7.4 s]
# Iteration 3 fit: [16.7 s]: Recall = 0.1905, Jaccard score = 0.1661, loss = 0.3348, gradient norm = 0.2691, eval: [7.4 s]
# Iteration 4 fit: [17.1 s]: Recall = 0.1849, Jaccard score = 0.1605, loss = 0.3120, gradient norm = 0.2810, eval: [7.5 s]
# Iteration 5 fit: [17.2 s]: Recall = 0.1796, Jaccard score = 0.1551, loss = 0.2900, gradient norm = 0.2914, eval: [8.0 s]
# Iteration 6 fit: [17.1 s]: Recall = 0.1744, Jaccard score = 0.1500, loss = 0.2684, gradient norm = 0.2990, eval: [7.4 s]
# Iteration 7 fit: [17.2 s]: Recall = 0.1680, Jaccard score = 0.1437, loss = 0.2474, gradient norm = 0.3032, eval: [7.4 s]
# Iteration 8 fit: [17.2 s]: Recall = 0.1655, Jaccard score = 0.1413, loss = 0.2275, gradient norm = 0.3051, eval: [7.4 s]
# Iteration 9 fit: [17.2 s]: Recall = 0.1611, Jaccard score = 0.1370, loss = 0.2084, gradient norm = 0.3047, eval: [7.4 s]
# Iteration 10 fit: [17.1 s]: Recall = 0.1526, Jaccard score = 0.1288, loss = 0.1910, gradient norm = 0.3026, eval: [7.4 s]
# Iteration 11 fit: [17.2 s]: Recall = 0.1532, Jaccard score = 0.1294, loss = 0.1761, gradient norm = 0.2989, eval: [7.4 s]
# Iteration 12 fit: [17.1 s]: Recall = 0.1507, Jaccard score = 0.1270, loss = 0.1618, gradient norm = 0.2938, eval: [7.4 s]
# Iteration 13 fit: [17.2 s]: Recall = 0.1470, Jaccard score = 0.1235, loss = 0.1489, gradient norm = 0.2880, eval: [7.4 s]
# Iteration 14 fit: [17.2 s]: Recall = 0.1451, Jaccard score = 0.1217, loss = 0.1374, gradient norm = 0.2828, eval: [7.4 s]
# Iteration 15 fit: [17.2 s]: Recall = 0.1426, Jaccard score = 0.1194, loss = 0.1274, gradient norm = 0.2771, eval: [7.4 s]
# Iteration 16 fit: [17.2 s]: Recall = 0.1424, Jaccard score = 0.1192, loss = 0.1170, gradient norm = 0.2695, eval: [7.4 s]
# Iteration 17 fit: [17.2 s]: Recall = 0.1391, Jaccard score = 0.1161, loss = 0.1080, gradient norm = 0.2626, eval: [7.4 s]
# Iteration 18 fit: [17.2 s]: Recall = 0.1389, Jaccard score = 0.1159, loss = 0.1015, gradient norm = 0.2561, eval: [7.4 s]
# Iteration 19 fit: [17.2 s]: Recall = 0.1389, Jaccard score = 0.1159, loss = 0.0943, gradient norm = 0.2495, eval: [7.4 s]
# Iteration 20 fit: [17.3 s]: Recall = 0.1361, Jaccard score = 0.1133, loss = 0.0887, gradient norm = 0.2441, eval: [7.5 s]
# Iteration 21 fit: [17.2 s]: Recall = 0.1336, Jaccard score = 0.1110, loss = 0.0824, gradient norm = 0.2375, eval: [7.4 s]
# Iteration 22 fit: [17.2 s]: Recall = 0.1358, Jaccard score = 0.1130, loss = 0.0777, gradient norm = 0.2312, eval: [7.4 s]
# Iteration 23 fit: [17.2 s]: Recall = 0.1355, Jaccard score = 0.1128, loss = 0.0731, gradient norm = 0.2252, eval: [7.4 s]
# Iteration 24 fit: [17.2 s]: Recall = 0.1352, Jaccard score = 0.1125, loss = 0.0697, gradient norm = 0.2198, eval: [7.4 s]
# Iteration 25 fit: [17.2 s]: Recall = 0.1331, Jaccard score = 0.1105, loss = 0.0664, gradient norm = 0.2134, eval: [7.4 s]
# Iteration 26 fit: [17.2 s]: Recall = 0.1321, Jaccard score = 0.1097, loss = 0.0625, gradient norm = 0.2076, eval: [7.4 s]
# Iteration 27 fit: [17.2 s]: Recall = 0.1312, Jaccard score = 0.1088, loss = 0.0595, gradient norm = 0.2028, eval: [7.4 s]
# Iteration 28 fit: [16.8 s]: Recall = 0.1309, Jaccard score = 0.1085, loss = 0.0566, gradient norm = 0.1970, eval: [7.4 s]
# Iteration 29 fit: [17.2 s]: Recall = 0.1308, Jaccard score = 0.1084, loss = 0.0538, gradient norm = 0.1916, eval: [7.4 s]
# Iteration 30 fit: [16.8 s]: Recall = 0.1306, Jaccard score = 0.1083, loss = 0.0513, gradient norm = 0.1862, eval: [7.4 s]
# Iteration 31 fit: [17.2 s]: Recall = 0.1317, Jaccard score = 0.1093, loss = 0.0504, gradient norm = 0.1841, eval: [7.4 s]
# Iteration 32 fit: [17.2 s]: Recall = 0.1297, Jaccard score = 0.1074, loss = 0.0471, gradient norm = 0.1777, eval: [7.4 s]
# Iteration 33 fit: [17.2 s]: Recall = 0.1295, Jaccard score = 0.1072, loss = 0.0458, gradient norm = 0.1740, eval: [7.4 s]
# Iteration 34 fit: [17.2 s]: Recall = 0.1287, Jaccard score = 0.1065, loss = 0.0434, gradient norm = 0.1685, eval: [7.4 s]
# Iteration 35 fit: [17.2 s]: Recall = 0.1304, Jaccard score = 0.1081, loss = 0.0422, gradient norm = 0.1651, eval: [7.4 s]
# Iteration 36 fit: [17.2 s]: Recall = 0.1279, Jaccard score = 0.1057, loss = 0.0398, gradient norm = 0.1603, eval: [7.4 s]
# Iteration 37 fit: [17.2 s]: Recall = 0.1297, Jaccard score = 0.1074, loss = 0.0390, gradient norm = 0.1572, eval: [7.4 s]
# Iteration 38 fit: [17.3 s]: Recall = 0.1284, Jaccard score = 0.1063, loss = 0.0378, gradient norm = 0.1541, eval: [7.4 s]
# Iteration 39 fit: [17.2 s]: Recall = 0.1319, Jaccard score = 0.1095, loss = 0.0358, gradient norm = 0.1482, eval: [7.4 s]
# Iteration 40 fit: [17.2 s]: Recall = 0.1323, Jaccard score = 0.1098, loss = 0.0349, gradient norm = 0.1464, eval: [7.4 s]
# Iteration 41 fit: [17.2 s]: Recall = 0.1294, Jaccard score = 0.1071, loss = 0.0337, gradient norm = 0.1430, eval: [7.4 s]
# Iteration 42 fit: [17.2 s]: Recall = 0.1278, Jaccard score = 0.1057, loss = 0.0326, gradient norm = 0.1397, eval: [7.4 s]
# Iteration 43 fit: [17.2 s]: Recall = 0.1240, Jaccard score = 0.1022, loss = 0.0318, gradient norm = 0.1371, eval: [7.4 s]
# Iteration 44 fit: [17.2 s]: Recall = 0.1244, Jaccard score = 0.1026, loss = 0.0301, gradient norm = 0.1324, eval: [7.4 s]
# Iteration 45 fit: [17.2 s]: Recall = 0.1258, Jaccard score = 0.1038, loss = 0.0291, gradient norm = 0.1295, eval: [7.4 s]
# Iteration 46 fit: [17.2 s]: Recall = 0.1247, Jaccard score = 0.1029, loss = 0.0280, gradient norm = 0.1261, eval: [7.5 s]
# Iteration 47 fit: [17.2 s]: Recall = 0.1252, Jaccard score = 0.1033, loss = 0.0282, gradient norm = 0.1251, eval: [7.4 s]
# Iteration 48 fit: [17.2 s]: Recall = 0.1248, Jaccard score = 0.1030, loss = 0.0269, gradient norm = 0.1209, eval: [7.4 s]
# Iteration 49 fit: [17.3 s]: Recall = 0.1254, Jaccard score = 0.1035, loss = 0.0259, gradient norm = 0.1188, eval: [7.4 s]
# Iteration 50 fit: [17.3 s]: Recall = 0.1245, Jaccard score = 0.1027, loss = 0.0256, gradient norm = 0.1165, eval: [7.4 s]
# Iteration 51 fit: [17.3 s]: Recall = 0.1238, Jaccard score = 0.1020, loss = 0.0244, gradient norm = 0.1132, eval: [7.4 s]
# Iteration 52 fit: [17.3 s]: Recall = 0.1253, Jaccard score = 0.1034, loss = 0.0234, gradient norm = 0.1100, eval: [7.4 s]
# Iteration 53 fit: [17.3 s]: Recall = 0.1230, Jaccard score = 0.1013, loss = 0.0230, gradient norm = 0.1085, eval: [7.4 s]
# Iteration 54 fit: [17.3 s]: Recall = 0.1212, Jaccard score = 0.0997, loss = 0.0228, gradient norm = 0.1074, eval: [7.4 s]
# Iteration 55 fit: [17.4 s]: Recall = 0.1225, Jaccard score = 0.1009, loss = 0.0217, gradient norm = 0.1039, eval: [7.4 s]
# Iteration 56 fit: [17.3 s]: Recall = 0.1218, Jaccard score = 0.1002, loss = 0.0212, gradient norm = 0.1018, eval: [7.4 s]
# Iteration 57 fit: [17.3 s]: Recall = 0.1198, Jaccard score = 0.0984, loss = 0.0214, gradient norm = 0.1017, eval: [7.4 s]
# Iteration 58 fit: [17.3 s]: Recall = 0.1205, Jaccard score = 0.0990, loss = 0.0205, gradient norm = 0.0989, eval: [7.4 s]
# Iteration 59 fit: [17.2 s]: Recall = 0.1208, Jaccard score = 0.0993, loss = 0.0202, gradient norm = 0.0974, eval: [7.4 s]
# Iteration 60 fit: [17.4 s]: Recall = 0.1192, Jaccard score = 0.0979, loss = 0.0197, gradient norm = 0.0958, eval: [7.4 s]
# Iteration 61 fit: [17.3 s]: Recall = 0.1193, Jaccard score = 0.0980, loss = 0.0193, gradient norm = 0.0937, eval: [7.4 s]
# Iteration 62 fit: [17.3 s]: Recall = 0.1182, Jaccard score = 0.0969, loss = 0.0188, gradient norm = 0.0918, eval: [7.4 s]
# Iteration 63 fit: [17.3 s]: Recall = 0.1173, Jaccard score = 0.0962, loss = 0.0187, gradient norm = 0.0911, eval: [7.4 s]
# Iteration 64 fit: [17.3 s]: Recall = 0.1178, Jaccard score = 0.0966, loss = 0.0180, gradient norm = 0.0889, eval: [7.4 s]
# Iteration 65 fit: [17.3 s]: Recall = 0.1161, Jaccard score = 0.0951, loss = 0.0174, gradient norm = 0.0866, eval: [7.4 s]
# Iteration 66 fit: [17.3 s]: Recall = 0.1160, Jaccard score = 0.0950, loss = 0.0179, gradient norm = 0.0872, eval: [7.3 s]
# Iteration 67 fit: [17.3 s]: Recall = 0.1156, Jaccard score = 0.0947, loss = 0.0171, gradient norm = 0.0855, eval: [7.4 s]
# Iteration 68 fit: [17.3 s]: Recall = 0.1170, Jaccard score = 0.0959, loss = 0.0169, gradient norm = 0.0842, eval: [7.3 s]
# Iteration 69 fit: [17.3 s]: Recall = 0.1126, Jaccard score = 0.0920, loss = 0.0167, gradient norm = 0.0833, eval: [7.4 s]
# Iteration 70 fit: [17.3 s]: Recall = 0.1136, Jaccard score = 0.0929, loss = 0.0164, gradient norm = 0.0826, eval: [7.4 s]
# Iteration 71 fit: [17.3 s]: Recall = 0.1141, Jaccard score = 0.0933, loss = 0.0158, gradient norm = 0.0809, eval: [7.4 s]
# Iteration 72 fit: [17.3 s]: Recall = 0.1143, Jaccard score = 0.0935, loss = 0.0156, gradient norm = 0.0796, eval: [7.4 s]
# Iteration 73 fit: [17.4 s]: Recall = 0.1145, Jaccard score = 0.0937, loss = 0.0158, gradient norm = 0.0803, eval: [7.4 s]
# Iteration 74 fit: [17.3 s]: Recall = 0.1139, Jaccard score = 0.0931, loss = 0.0153, gradient norm = 0.0788, eval: [7.4 s]
# Iteration 75 fit: [17.3 s]: Recall = 0.1115, Jaccard score = 0.0909, loss = 0.0149, gradient norm = 0.0772, eval: [7.4 s]
# Iteration 76 fit: [18.0 s]: Recall = 0.1106, Jaccard score = 0.0902, loss = 0.0149, gradient norm = 0.0775, eval: [7.4 s]
# Iteration 77 fit: [17.3 s]: Recall = 0.1134, Jaccard score = 0.0927, loss = 0.0150, gradient norm = 0.0775, eval: [7.4 s]
# Iteration 78 fit: [17.3 s]: Recall = 0.1130, Jaccard score = 0.0923, loss = 0.0143, gradient norm = 0.0753, eval: [7.4 s]
# Iteration 79 fit: [17.3 s]: Recall = 0.1112, Jaccard score = 0.0907, loss = 0.0142, gradient norm = 0.0748, eval: [7.3 s]
# Iteration 80 fit: [16.9 s]: Recall = 0.1096, Jaccard score = 0.0892, loss = 0.0141, gradient norm = 0.0747, eval: [7.4 s]
# Iteration 81 fit: [17.3 s]: Recall = 0.1086, Jaccard score = 0.0884, loss = 0.0141, gradient norm = 0.0744, eval: [7.4 s]
# Iteration 82 fit: [17.0 s]: Recall = 0.1093, Jaccard score = 0.0890, loss = 0.0139, gradient norm = 0.0740, eval: [7.4 s]
# Iteration 83 fit: [17.3 s]: Recall = 0.1087, Jaccard score = 0.0885, loss = 0.0133, gradient norm = 0.0719, eval: [7.4 s]
# Iteration 84 fit: [16.9 s]: Recall = 0.1066, Jaccard score = 0.0866, loss = 0.0135, gradient norm = 0.0727, eval: [7.4 s]
# Iteration 85 fit: [17.3 s]: Recall = 0.1056, Jaccard score = 0.0857, loss = 0.0135, gradient norm = 0.0734, eval: [7.3 s]
# Iteration 86 fit: [16.9 s]: Recall = 0.1084, Jaccard score = 0.0882, loss = 0.0132, gradient norm = 0.0721, eval: [7.4 s]
# Iteration 87 fit: [17.3 s]: Recall = 0.1057, Jaccard score = 0.0858, loss = 0.0127, gradient norm = 0.0710, eval: [7.4 s]
# Iteration 88 fit: [16.9 s]: Recall = 0.1051, Jaccard score = 0.0853, loss = 0.0127, gradient norm = 0.0707, eval: [7.4 s]
# Iteration 89 fit: [17.3 s]: Recall = 0.1057, Jaccard score = 0.0858, loss = 0.0128, gradient norm = 0.0713, eval: [7.3 s]
# Iteration 90 fit: [16.9 s]: Recall = 0.1043, Jaccard score = 0.0846, loss = 0.0125, gradient norm = 0.0700, eval: [7.4 s]
# Iteration 91 fit: [17.3 s]: Recall = 0.1005, Jaccard score = 0.0812, loss = 0.0124, gradient norm = 0.0707, eval: [7.4 s]
# Iteration 92 fit: [16.9 s]: Recall = 0.1008, Jaccard score = 0.0816, loss = 0.0122, gradient norm = 0.0694, eval: [7.4 s]
# Iteration 93 fit: [17.3 s]: Recall = 0.1007, Jaccard score = 0.0814, loss = 0.0121, gradient norm = 0.0686, eval: [7.3 s]
# Iteration 94 fit: [16.9 s]: Recall = 0.0992, Jaccard score = 0.0802, loss = 0.0122, gradient norm = 0.0691, eval: [7.4 s]
# Iteration 95 fit: [17.5 s]: Recall = 0.1015, Jaccard score = 0.0821, loss = 0.0119, gradient norm = 0.0685, eval: [7.3 s]
# Iteration 96 fit: [16.9 s]: Recall = 0.1004, Jaccard score = 0.0812, loss = 0.0119, gradient norm = 0.0693, eval: [7.4 s]
# Iteration 97 fit: [17.4 s]: Recall = 0.1000, Jaccard score = 0.0808, loss = 0.0116, gradient norm = 0.0683, eval: [7.4 s]
# Iteration 98 fit: [16.9 s]: Recall = 0.0997, Jaccard score = 0.0805, loss = 0.0116, gradient norm = 0.0691, eval: [7.4 s]
# Iteration 99 fit: [17.3 s]: Recall = 0.0969, Jaccard score = 0.0781, loss = 0.0115, gradient norm = 0.0688, eval: [7.3 s]
# Iteration 100 fit: [16.9 s]: Recall = 0.0987, Jaccard score = 0.0797, loss = 0.0114, gradient norm = 0.0683, eval: [7.4 s]
# Iteration 101 fit: [17.4 s]: Recall = 0.0985, Jaccard score = 0.0796, loss = 0.0113, gradient norm = 0.0685, eval: [7.3 s]
# Iteration 102 fit: [16.9 s]: Recall = 0.0964, Jaccard score = 0.0777, loss = 0.0113, gradient norm = 0.0682, eval: [7.4 s]
# Iteration 103 fit: [17.4 s]: Recall = 0.0955, Jaccard score = 0.0769, loss = 0.0112, gradient norm = 0.0682, eval: [7.4 s]
# Iteration 104 fit: [16.9 s]: Recall = 0.0942, Jaccard score = 0.0758, loss = 0.0111, gradient norm = 0.0686, eval: [7.4 s]
# Iteration 105 fit: [17.3 s]: Recall = 0.0952, Jaccard score = 0.0767, loss = 0.0110, gradient norm = 0.0683, eval: [7.4 s]
# Iteration 106 fit: [16.9 s]: Recall = 0.0952, Jaccard score = 0.0766, loss = 0.0109, gradient norm = 0.0679, eval: [7.4 s]
# Iteration 107 fit: [17.4 s]: Recall = 0.0944, Jaccard score = 0.0760, loss = 0.0111, gradient norm = 0.0684, eval: [7.3 s]
# Iteration 108 fit: [16.9 s]: Recall = 0.0925, Jaccard score = 0.0743, loss = 0.0111, gradient norm = 0.0693, eval: [7.4 s]
# Iteration 109 fit: [17.4 s]: Recall = 0.0944, Jaccard score = 0.0760, loss = 0.0105, gradient norm = 0.0672, eval: [7.4 s]
# Iteration 110 fit: [16.9 s]: Recall = 0.0945, Jaccard score = 0.0761, loss = 0.0105, gradient norm = 0.0671, eval: [7.4 s]
# Iteration 111 fit: [17.4 s]: Recall = 0.0905, Jaccard score = 0.0726, loss = 0.0104, gradient norm = 0.0675, eval: [7.4 s]
# Iteration 112 fit: [16.9 s]: Recall = 0.0884, Jaccard score = 0.0708, loss = 0.0106, gradient norm = 0.0689, eval: [7.4 s]
# Iteration 113 fit: [17.4 s]: Recall = 0.0893, Jaccard score = 0.0716, loss = 0.0104, gradient norm = 0.0677, eval: [7.4 s]
# Iteration 114 fit: [16.9 s]: Recall = 0.0859, Jaccard score = 0.0687, loss = 0.0101, gradient norm = 0.0674, eval: [7.3 s]
# Iteration 115 fit: [17.4 s]: Recall = 0.0867, Jaccard score = 0.0693, loss = 0.0103, gradient norm = 0.0681, eval: [7.4 s]
# Iteration 116 fit: [16.9 s]: Recall = 0.0857, Jaccard score = 0.0685, loss = 0.0102, gradient norm = 0.0678, eval: [7.3 s]
# Iteration 117 fit: [17.4 s]: Recall = 0.0850, Jaccard score = 0.0679, loss = 0.0103, gradient norm = 0.0689, eval: [7.3 s]
# Iteration 118 fit: [16.9 s]: Recall = 0.0847, Jaccard score = 0.0676, loss = 0.0100, gradient norm = 0.0680, eval: [7.4 s]
# Iteration 119 fit: [17.4 s]: Recall = 0.0834, Jaccard score = 0.0666, loss = 0.0104, gradient norm = 0.0697, eval: [7.4 s]
# Iteration 120 fit: [17.0 s]: Recall = 0.0842, Jaccard score = 0.0672, loss = 0.0099, gradient norm = 0.0679, eval: [7.4 s]
# Iteration 121 fit: [17.4 s]: Recall = 0.0834, Jaccard score = 0.0665, loss = 0.0097, gradient norm = 0.0679, eval: [7.4 s]
# Iteration 122 fit: [16.9 s]: Recall = 0.0825, Jaccard score = 0.0658, loss = 0.0098, gradient norm = 0.0691, eval: [7.4 s]
# Iteration 123 fit: [17.4 s]: Recall = 0.0829, Jaccard score = 0.0661, loss = 0.0098, gradient norm = 0.0694, eval: [7.4 s]
# Iteration 124 fit: [16.9 s]: Recall = 0.0823, Jaccard score = 0.0655, loss = 0.0098, gradient norm = 0.0691, eval: [7.4 s]
# Iteration 125 fit: [17.4 s]: Recall = 0.0790, Jaccard score = 0.0628, loss = 0.0097, gradient norm = 0.0695, eval: [7.4 s]
# Iteration 126 fit: [17.0 s]: Recall = 0.0793, Jaccard score = 0.0630, loss = 0.0096, gradient norm = 0.0686, eval: [7.4 s]
# Iteration 127 fit: [17.4 s]: Recall = 0.0792, Jaccard score = 0.0629, loss = 0.0093, gradient norm = 0.0682, eval: [7.4 s]
# Iteration 128 fit: [17.0 s]: Recall = 0.0824, Jaccard score = 0.0656, loss = 0.0093, gradient norm = 0.0684, eval: [7.4 s]
# Iteration 129 fit: [17.4 s]: Recall = 0.0777, Jaccard score = 0.0617, loss = 0.0094, gradient norm = 0.0688, eval: [7.3 s]
# Iteration 130 fit: [17.0 s]: Recall = 0.0795, Jaccard score = 0.0632, loss = 0.0095, gradient norm = 0.0699, eval: [7.4 s]
# Iteration 131 fit: [17.4 s]: Recall = 0.0787, Jaccard score = 0.0626, loss = 0.0093, gradient norm = 0.0692, eval: [7.3 s]
# Iteration 132 fit: [17.0 s]: Recall = 0.0758, Jaccard score = 0.0601, loss = 0.0093, gradient norm = 0.0701, eval: [7.4 s]
# Iteration 133 fit: [17.4 s]: Recall = 0.0742, Jaccard score = 0.0588, loss = 0.0095, gradient norm = 0.0710, eval: [7.4 s]
# Iteration 134 fit: [17.0 s]: Recall = 0.0750, Jaccard score = 0.0594, loss = 0.0090, gradient norm = 0.0688, eval: [7.4 s]
# Iteration 135 fit: [17.4 s]: Recall = 0.0746, Jaccard score = 0.0591, loss = 0.0092, gradient norm = 0.0696, eval: [7.3 s]
# Iteration 136 fit: [17.0 s]: Recall = 0.0734, Jaccard score = 0.0581, loss = 0.0091, gradient norm = 0.0699, eval: [7.4 s]
# Iteration 137 fit: [17.4 s]: Recall = 0.0716, Jaccard score = 0.0566, loss = 0.0091, gradient norm = 0.0697, eval: [7.4 s]
# Iteration 138 fit: [17.0 s]: Recall = 0.0718, Jaccard score = 0.0567, loss = 0.0089, gradient norm = 0.0696, eval: [7.3 s]
# Iteration 139 fit: [17.4 s]: Recall = 0.0724, Jaccard score = 0.0573, loss = 0.0089, gradient norm = 0.0707, eval: [7.4 s]
# Iteration 140 fit: [17.0 s]: Recall = 0.0733, Jaccard score = 0.0580, loss = 0.0090, gradient norm = 0.0710, eval: [7.4 s]
# Iteration 141 fit: [17.5 s]: Recall = 0.0695, Jaccard score = 0.0548, loss = 0.0086, gradient norm = 0.0696, eval: [7.4 s]
# Iteration 142 fit: [17.0 s]: Recall = 0.0689, Jaccard score = 0.0544, loss = 0.0091, gradient norm = 0.0719, eval: [7.4 s]
# Iteration 143 fit: [17.5 s]: Recall = 0.0690, Jaccard score = 0.0544, loss = 0.0086, gradient norm = 0.0698, eval: [7.3 s]
# Iteration 144 fit: [17.0 s]: Recall = 0.0684, Jaccard score = 0.0539, loss = 0.0087, gradient norm = 0.0718, eval: [7.4 s]
# Iteration 145 fit: [17.5 s]: Recall = 0.0656, Jaccard score = 0.0516, loss = 0.0087, gradient norm = 0.0713, eval: [7.4 s]
# Iteration 146 fit: [17.0 s]: Recall = 0.0667, Jaccard score = 0.0525, loss = 0.0088, gradient norm = 0.0730, eval: [7.4 s]
# Iteration 147 fit: [17.5 s]: Recall = 0.0661, Jaccard score = 0.0520, loss = 0.0088, gradient norm = 0.0728, eval: [7.4 s]
# Iteration 148 fit: [17.0 s]: Recall = 0.0655, Jaccard score = 0.0515, loss = 0.0087, gradient norm = 0.0719, eval: [7.4 s]
# End. Best Iteration 3:  Recall = 0.1905, Jaccard score = 0.1661. 
# The best NeuMF model has been saved to Pretrain/_GMF_94_[64,32,16,8]_1566579499.h5
