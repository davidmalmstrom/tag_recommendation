--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[400,96]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"



# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[400,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[400,96]_1566815709.h5
--weights_path: Pretrain/_MLP_8_[400,96]_1566815709.h5
# Load data done [1.9 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0302, Jaccard score = 0.0182
# Iteration 0 fit: [28.8 s]: Recall = 0.2311, Jaccard score = 0.1589, loss = 0.4248, gradient norm = 0.2348, eval: [8.6 s]
# Iteration 1 fit: [28.2 s]: Recall = 0.2578, Jaccard score = 0.1806, loss = 0.3825, gradient norm = 0.1824, eval: [8.5 s]
# Iteration 2 fit: [28.0 s]: Recall = 0.2758, Jaccard score = 0.1956, loss = 0.3611, gradient norm = 0.1743, eval: [8.6 s]
# Iteration 3 fit: [28.2 s]: Recall = 0.2855, Jaccard score = 0.2039, loss = 0.3413, gradient norm = 0.1750, eval: [8.5 s]
# Iteration 4 fit: [28.0 s]: Recall = 0.2984, Jaccard score = 0.2151, loss = 0.3223, gradient norm = 0.1788, eval: [8.5 s]
# Iteration 5 fit: [28.1 s]: Recall = 0.2999, Jaccard score = 0.2164, loss = 0.3044, gradient norm = 0.1835, eval: [8.6 s]
# Iteration 6 fit: [28.0 s]: Recall = 0.2981, Jaccard score = 0.2149, loss = 0.2875, gradient norm = 0.1895, eval: [8.6 s]
# Iteration 7 fit: [28.1 s]: Recall = 0.3089, Jaccard score = 0.2244, loss = 0.2722, gradient norm = 0.1956, eval: [8.8 s]
# Iteration 8 fit: [28.4 s]: Recall = 0.3048, Jaccard score = 0.2208, loss = 0.2565, gradient norm = 0.2021, eval: [8.4 s]
# Iteration 9 fit: [28.0 s]: Recall = 0.3074, Jaccard score = 0.2231, loss = 0.2432, gradient norm = 0.2083, eval: [8.4 s]
# Iteration 10 fit: [28.3 s]: Recall = 0.3122, Jaccard score = 0.2274, loss = 0.2300, gradient norm = 0.2148, eval: [8.6 s]
# Iteration 11 fit: [28.2 s]: Recall = 0.3071, Jaccard score = 0.2228, loss = 0.2171, gradient norm = 0.2211, eval: [8.6 s]
# Iteration 12 fit: [28.2 s]: Recall = 0.3092, Jaccard score = 0.2247, loss = 0.2049, gradient norm = 0.2259, eval: [8.6 s]
# Iteration 13 fit: [28.1 s]: Recall = 0.3098, Jaccard score = 0.2252, loss = 0.1931, gradient norm = 0.2316, eval: [8.5 s]
# Iteration 14 fit: [28.3 s]: Recall = 0.3085, Jaccard score = 0.2241, loss = 0.1823, gradient norm = 0.2356, eval: [8.4 s]
# Iteration 15 fit: [28.2 s]: Recall = 0.3172, Jaccard score = 0.2319, loss = 0.1721, gradient norm = 0.2383, eval: [8.6 s]
# Iteration 16 fit: [28.1 s]: Recall = 0.3140, Jaccard score = 0.2290, loss = 0.1622, gradient norm = 0.2424, eval: [8.6 s]
# Iteration 17 fit: [28.4 s]: Recall = 0.3121, Jaccard score = 0.2273, loss = 0.1524, gradient norm = 0.2450, eval: [8.5 s]
# Iteration 18 fit: [28.0 s]: Recall = 0.3100, Jaccard score = 0.2254, loss = 0.1436, gradient norm = 0.2466, eval: [8.5 s]
# Iteration 19 fit: [28.0 s]: Recall = 0.3132, Jaccard score = 0.2283, loss = 0.1356, gradient norm = 0.2481, eval: [8.5 s]
# Iteration 20 fit: [28.2 s]: Recall = 0.3178, Jaccard score = 0.2324, loss = 0.1272, gradient norm = 0.2485, eval: [8.5 s]
# Iteration 21 fit: [28.2 s]: Recall = 0.3153, Jaccard score = 0.2301, loss = 0.1197, gradient norm = 0.2482, eval: [8.5 s]
# Iteration 22 fit: [28.3 s]: Recall = 0.3179, Jaccard score = 0.2325, loss = 0.1128, gradient norm = 0.2476, eval: [8.6 s]
# Iteration 23 fit: [28.4 s]: Recall = 0.3255, Jaccard score = 0.2393, loss = 0.1069, gradient norm = 0.2479, eval: [8.7 s]
# Iteration 24 fit: [28.1 s]: Recall = 0.3178, Jaccard score = 0.2324, loss = 0.1008, gradient norm = 0.2458, eval: [8.6 s]
# Iteration 25 fit: [28.2 s]: Recall = 0.3211, Jaccard score = 0.2354, loss = 0.0954, gradient norm = 0.2455, eval: [8.6 s]
# Iteration 26 fit: [28.3 s]: Recall = 0.3199, Jaccard score = 0.2342, loss = 0.0911, gradient norm = 0.2444, eval: [8.6 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.3186, Jaccard score = 0.2331, loss = 0.0861, gradient norm = 0.2409, eval: [8.6 s]
# Iteration 28 fit: [28.1 s]: Recall = 0.3218, Jaccard score = 0.2360, loss = 0.0825, gradient norm = 0.2395, eval: [8.7 s]
# Iteration 29 fit: [28.1 s]: Recall = 0.3213, Jaccard score = 0.2356, loss = 0.0787, gradient norm = 0.2380, eval: [8.6 s]
# Iteration 30 fit: [28.1 s]: Recall = 0.3240, Jaccard score = 0.2380, loss = 0.0748, gradient norm = 0.2354, eval: [8.6 s]
# Iteration 31 fit: [28.2 s]: Recall = 0.3237, Jaccard score = 0.2378, loss = 0.0719, gradient norm = 0.2327, eval: [8.7 s]
# Iteration 32 fit: [28.2 s]: Recall = 0.3232, Jaccard score = 0.2372, loss = 0.0690, gradient norm = 0.2301, eval: [8.6 s]
# Iteration 33 fit: [28.0 s]: Recall = 0.3231, Jaccard score = 0.2371, loss = 0.0653, gradient norm = 0.2265, eval: [8.6 s]
# Iteration 34 fit: [28.2 s]: Recall = 0.3225, Jaccard score = 0.2366, loss = 0.0632, gradient norm = 0.2256, eval: [8.6 s]
# Iteration 35 fit: [28.1 s]: Recall = 0.3249, Jaccard score = 0.2388, loss = 0.0608, gradient norm = 0.2229, eval: [8.6 s]
# Iteration 36 fit: [28.2 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0590, gradient norm = 0.2208, eval: [8.6 s]
# Iteration 37 fit: [28.3 s]: Recall = 0.3227, Jaccard score = 0.2368, loss = 0.0561, gradient norm = 0.2165, eval: [8.6 s]
# Iteration 38 fit: [28.1 s]: Recall = 0.3290, Jaccard score = 0.2425, loss = 0.0543, gradient norm = 0.2150, eval: [8.7 s]
# Iteration 39 fit: [28.2 s]: Recall = 0.3279, Jaccard score = 0.2415, loss = 0.0528, gradient norm = 0.2136, eval: [8.7 s]
# Iteration 40 fit: [28.5 s]: Recall = 0.3291, Jaccard score = 0.2427, loss = 0.0513, gradient norm = 0.2114, eval: [8.6 s]
# Iteration 41 fit: [28.5 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0497, gradient norm = 0.2096, eval: [8.7 s]
# Iteration 42 fit: [27.9 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0473, gradient norm = 0.2048, eval: [8.7 s]
# Iteration 43 fit: [28.3 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0466, gradient norm = 0.2045, eval: [8.7 s]
# Iteration 44 fit: [28.1 s]: Recall = 0.3299, Jaccard score = 0.2434, loss = 0.0447, gradient norm = 0.2013, eval: [8.7 s]
# Iteration 45 fit: [27.9 s]: Recall = 0.3256, Jaccard score = 0.2394, loss = 0.0438, gradient norm = 0.1999, eval: [8.5 s]
# Iteration 46 fit: [28.2 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0432, gradient norm = 0.1992, eval: [8.7 s]
# Iteration 47 fit: [28.4 s]: Recall = 0.3329, Jaccard score = 0.2461, loss = 0.0414, gradient norm = 0.1963, eval: [8.5 s]
# Iteration 48 fit: [28.3 s]: Recall = 0.3345, Jaccard score = 0.2476, loss = 0.0402, gradient norm = 0.1942, eval: [8.7 s]
# Iteration 49 fit: [28.5 s]: Recall = 0.3299, Jaccard score = 0.2434, loss = 0.0385, gradient norm = 0.1908, eval: [8.7 s]
# Iteration 50 fit: [28.3 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0383, gradient norm = 0.1924, eval: [8.5 s]
# Iteration 51 fit: [28.3 s]: Recall = 0.3258, Jaccard score = 0.2396, loss = 0.0373, gradient norm = 0.1891, eval: [8.7 s]
# Iteration 52 fit: [27.9 s]: Recall = 0.3336, Jaccard score = 0.2467, loss = 0.0365, gradient norm = 0.1886, eval: [8.5 s]
# Iteration 53 fit: [28.3 s]: Recall = 0.3297, Jaccard score = 0.2432, loss = 0.0349, gradient norm = 0.1839, eval: [8.5 s]
# Iteration 54 fit: [28.2 s]: Recall = 0.3285, Jaccard score = 0.2421, loss = 0.0347, gradient norm = 0.1847, eval: [8.5 s]
# Iteration 55 fit: [28.4 s]: Recall = 0.3299, Jaccard score = 0.2434, loss = 0.0339, gradient norm = 0.1824, eval: [8.5 s]
# Iteration 56 fit: [28.4 s]: Recall = 0.3271, Jaccard score = 0.2408, loss = 0.0327, gradient norm = 0.1794, eval: [8.5 s]
# Iteration 57 fit: [27.9 s]: Recall = 0.3308, Jaccard score = 0.2442, loss = 0.0326, gradient norm = 0.1804, eval: [8.5 s]
# Iteration 58 fit: [27.9 s]: Recall = 0.3255, Jaccard score = 0.2393, loss = 0.0321, gradient norm = 0.1782, eval: [8.5 s]
# Iteration 59 fit: [28.4 s]: Recall = 0.3358, Jaccard score = 0.2489, loss = 0.0315, gradient norm = 0.1780, eval: [8.5 s]
# Iteration 60 fit: [28.5 s]: Recall = 0.3330, Jaccard score = 0.2462, loss = 0.0304, gradient norm = 0.1740, eval: [8.5 s]
# Iteration 61 fit: [28.4 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0304, gradient norm = 0.1750, eval: [8.6 s]
# Iteration 62 fit: [28.3 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0292, gradient norm = 0.1719, eval: [8.5 s]
# Iteration 63 fit: [28.3 s]: Recall = 0.3329, Jaccard score = 0.2461, loss = 0.0296, gradient norm = 0.1751, eval: [8.5 s]
# Iteration 64 fit: [28.4 s]: Recall = 0.3308, Jaccard score = 0.2442, loss = 0.0289, gradient norm = 0.1706, eval: [8.6 s]
# Iteration 65 fit: [28.3 s]: Recall = 0.3308, Jaccard score = 0.2442, loss = 0.0275, gradient norm = 0.1669, eval: [8.7 s]
# Iteration 66 fit: [28.4 s]: Recall = 0.3357, Jaccard score = 0.2488, loss = 0.0272, gradient norm = 0.1675, eval: [8.5 s]
# Iteration 67 fit: [28.3 s]: Recall = 0.3349, Jaccard score = 0.2480, loss = 0.0272, gradient norm = 0.1679, eval: [8.7 s]
# Iteration 68 fit: [28.4 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0270, gradient norm = 0.1666, eval: [8.6 s]
# Iteration 69 fit: [28.3 s]: Recall = 0.3251, Jaccard score = 0.2390, loss = 0.0265, gradient norm = 0.1660, eval: [8.5 s]
# Iteration 70 fit: [28.4 s]: Recall = 0.3321, Jaccard score = 0.2454, loss = 0.0255, gradient norm = 0.1638, eval: [8.7 s]
# Iteration 71 fit: [28.4 s]: Recall = 0.3354, Jaccard score = 0.2484, loss = 0.0256, gradient norm = 0.1646, eval: [8.6 s]
# Iteration 72 fit: [28.4 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0249, gradient norm = 0.1622, eval: [8.5 s]
# Iteration 73 fit: [28.4 s]: Recall = 0.3366, Jaccard score = 0.2496, loss = 0.0248, gradient norm = 0.1614, eval: [8.6 s]
# Iteration 74 fit: [28.0 s]: Recall = 0.3352, Jaccard score = 0.2482, loss = 0.0246, gradient norm = 0.1622, eval: [8.6 s]
# Iteration 75 fit: [28.0 s]: Recall = 0.3313, Jaccard score = 0.2446, loss = 0.0239, gradient norm = 0.1590, eval: [8.7 s]
# Iteration 76 fit: [28.0 s]: Recall = 0.3346, Jaccard score = 0.2477, loss = 0.0235, gradient norm = 0.1579, eval: [8.6 s]
# Iteration 77 fit: [28.0 s]: Recall = 0.3337, Jaccard score = 0.2469, loss = 0.0236, gradient norm = 0.1588, eval: [8.6 s]
# Iteration 78 fit: [27.9 s]: Recall = 0.3312, Jaccard score = 0.2445, loss = 0.0227, gradient norm = 0.1554, eval: [8.6 s]
# Iteration 79 fit: [28.0 s]: Recall = 0.3392, Jaccard score = 0.2519, loss = 0.0226, gradient norm = 0.1556, eval: [8.6 s]
# Iteration 80 fit: [28.1 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0223, gradient norm = 0.1559, eval: [8.7 s]
# Iteration 81 fit: [28.1 s]: Recall = 0.3368, Jaccard score = 0.2497, loss = 0.0220, gradient norm = 0.1552, eval: [8.7 s]
# Iteration 82 fit: [28.1 s]: Recall = 0.3378, Jaccard score = 0.2507, loss = 0.0226, gradient norm = 0.1562, eval: [8.9 s]
# Iteration 83 fit: [28.1 s]: Recall = 0.3284, Jaccard score = 0.2420, loss = 0.0219, gradient norm = 0.1544, eval: [8.7 s]
# Iteration 84 fit: [28.1 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0219, gradient norm = 0.1534, eval: [8.7 s]
# Iteration 85 fit: [28.0 s]: Recall = 0.3331, Jaccard score = 0.2463, loss = 0.0212, gradient norm = 0.1516, eval: [8.6 s]
# Iteration 86 fit: [28.1 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0215, gradient norm = 0.1534, eval: [8.6 s]
# Iteration 87 fit: [28.1 s]: Recall = 0.3339, Jaccard score = 0.2471, loss = 0.0205, gradient norm = 0.1497, eval: [8.6 s]
# Iteration 88 fit: [28.1 s]: Recall = 0.3362, Jaccard score = 0.2492, loss = 0.0203, gradient norm = 0.1491, eval: [8.7 s]
# Iteration 89 fit: [28.1 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0206, gradient norm = 0.1500, eval: [8.6 s]
# Iteration 90 fit: [28.3 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0200, gradient norm = 0.1485, eval: [8.6 s]
# Iteration 91 fit: [28.1 s]: Recall = 0.3312, Jaccard score = 0.2445, loss = 0.0201, gradient norm = 0.1472, eval: [8.6 s]
# Iteration 92 fit: [28.1 s]: Recall = 0.3310, Jaccard score = 0.2444, loss = 0.0195, gradient norm = 0.1454, eval: [8.6 s]
# Iteration 93 fit: [28.1 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0198, gradient norm = 0.1486, eval: [8.6 s]
# Iteration 94 fit: [28.1 s]: Recall = 0.3321, Jaccard score = 0.2454, loss = 0.0194, gradient norm = 0.1469, eval: [8.6 s]
# Iteration 95 fit: [28.1 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0194, gradient norm = 0.1469, eval: [8.6 s]
# Iteration 96 fit: [28.1 s]: Recall = 0.3350, Jaccard score = 0.2481, loss = 0.0191, gradient norm = 0.1459, eval: [8.6 s]
# Iteration 97 fit: [28.1 s]: Recall = 0.3296, Jaccard score = 0.2431, loss = 0.0187, gradient norm = 0.1445, eval: [8.6 s]
# Iteration 98 fit: [28.1 s]: Recall = 0.3381, Jaccard score = 0.2510, loss = 0.0185, gradient norm = 0.1440, eval: [8.6 s]
# Iteration 99 fit: [28.1 s]: Recall = 0.3341, Jaccard score = 0.2473, loss = 0.0186, gradient norm = 0.1445, eval: [8.6 s]
# Iteration 100 fit: [28.1 s]: Recall = 0.3338, Jaccard score = 0.2470, loss = 0.0180, gradient norm = 0.1408, eval: [8.6 s]
# Iteration 101 fit: [28.1 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0184, gradient norm = 0.1440, eval: [8.6 s]
# Iteration 102 fit: [28.1 s]: Recall = 0.3288, Jaccard score = 0.2423, loss = 0.0182, gradient norm = 0.1437, eval: [8.6 s]
# Iteration 103 fit: [28.4 s]: Recall = 0.3282, Jaccard score = 0.2418, loss = 0.0178, gradient norm = 0.1416, eval: [8.6 s]
# Iteration 104 fit: [28.1 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0181, gradient norm = 0.1420, eval: [8.6 s]
# Iteration 105 fit: [28.1 s]: Recall = 0.3344, Jaccard score = 0.2475, loss = 0.0178, gradient norm = 0.1420, eval: [8.6 s]
# Iteration 106 fit: [28.1 s]: Recall = 0.3372, Jaccard score = 0.2501, loss = 0.0177, gradient norm = 0.1421, eval: [8.7 s]
# Iteration 107 fit: [28.1 s]: Recall = 0.3340, Jaccard score = 0.2472, loss = 0.0174, gradient norm = 0.1412, eval: [8.6 s]
# Iteration 108 fit: [28.1 s]: Recall = 0.3338, Jaccard score = 0.2470, loss = 0.0169, gradient norm = 0.1392, eval: [8.6 s]
# Iteration 109 fit: [28.1 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0175, gradient norm = 0.1412, eval: [8.6 s]
# Iteration 110 fit: [28.1 s]: Recall = 0.3331, Jaccard score = 0.2463, loss = 0.0171, gradient norm = 0.1401, eval: [8.6 s]
# Iteration 111 fit: [28.1 s]: Recall = 0.3312, Jaccard score = 0.2445, loss = 0.0175, gradient norm = 0.1414, eval: [8.6 s]
# Iteration 112 fit: [28.1 s]: Recall = 0.3308, Jaccard score = 0.2442, loss = 0.0174, gradient norm = 0.1410, eval: [8.6 s]
# Iteration 113 fit: [28.1 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0170, gradient norm = 0.1385, eval: [8.6 s]
# Iteration 114 fit: [28.1 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0166, gradient norm = 0.1382, eval: [8.6 s]
# Iteration 115 fit: [28.2 s]: Recall = 0.3364, Jaccard score = 0.2494, loss = 0.0163, gradient norm = 0.1365, eval: [8.6 s]
# Iteration 116 fit: [28.2 s]: Recall = 0.3354, Jaccard score = 0.2484, loss = 0.0163, gradient norm = 0.1375, eval: [8.7 s]
# Iteration 117 fit: [28.2 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0164, gradient norm = 0.1377, eval: [8.6 s]
# Iteration 118 fit: [28.2 s]: Recall = 0.3255, Jaccard score = 0.2393, loss = 0.0163, gradient norm = 0.1387, eval: [8.6 s]
# Iteration 119 fit: [28.2 s]: Recall = 0.3371, Jaccard score = 0.2500, loss = 0.0162, gradient norm = 0.1370, eval: [8.7 s]
# Iteration 120 fit: [28.2 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0160, gradient norm = 0.1361, eval: [8.6 s]
# Iteration 121 fit: [28.2 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0162, gradient norm = 0.1373, eval: [8.6 s]
# Iteration 122 fit: [28.2 s]: Recall = 0.3329, Jaccard score = 0.2461, loss = 0.0161, gradient norm = 0.1353, eval: [8.6 s]
# Iteration 123 fit: [28.2 s]: Recall = 0.3323, Jaccard score = 0.2456, loss = 0.0156, gradient norm = 0.1333, eval: [8.6 s]
# Iteration 124 fit: [28.2 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0158, gradient norm = 0.1351, eval: [8.6 s]
# End. Best Iteration 79:  Recall = 0.3392, Jaccard score = 0.2519. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[400,96]_1566815709.h5
