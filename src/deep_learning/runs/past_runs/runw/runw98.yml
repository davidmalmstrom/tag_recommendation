--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,65]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,65]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,65]_1566828889.h5
--weights_path: Pretrain/_MLP_8_[512,65]_1566828889.h5
# Load data done [2.0 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0230, Jaccard score = 0.0138
# Iteration 0 fit: [59.5 s]: Recall = 0.2382, Jaccard score = 0.1646, loss = 0.4221, gradient norm = 0.2166, eval: [8.9 s]
# Iteration 1 fit: [34.3 s]: Recall = 0.2618, Jaccard score = 0.1839, loss = 0.3806, gradient norm = 0.1709, eval: [10.2 s]
# Iteration 2 fit: [33.9 s]: Recall = 0.2747, Jaccard score = 0.1948, loss = 0.3590, gradient norm = 0.1661, eval: [9.1 s]
# Iteration 3 fit: [32.9 s]: Recall = 0.2858, Jaccard score = 0.2042, loss = 0.3398, gradient norm = 0.1681, eval: [9.0 s]
# Iteration 4 fit: [33.1 s]: Recall = 0.2913, Jaccard score = 0.2089, loss = 0.3202, gradient norm = 0.1730, eval: [9.1 s]
# Iteration 5 fit: [33.1 s]: Recall = 0.2994, Jaccard score = 0.2160, loss = 0.3023, gradient norm = 0.1780, eval: [9.1 s]
# Iteration 6 fit: [33.1 s]: Recall = 0.3042, Jaccard score = 0.2202, loss = 0.2866, gradient norm = 0.1831, eval: [9.0 s]
# Iteration 7 fit: [32.9 s]: Recall = 0.3055, Jaccard score = 0.2214, loss = 0.2725, gradient norm = 0.1877, eval: [9.1 s]
# Iteration 8 fit: [33.1 s]: Recall = 0.3103, Jaccard score = 0.2256, loss = 0.2594, gradient norm = 0.1918, eval: [9.0 s]
# Iteration 9 fit: [33.1 s]: Recall = 0.3106, Jaccard score = 0.2259, loss = 0.2467, gradient norm = 0.1972, eval: [9.0 s]
# Iteration 10 fit: [32.9 s]: Recall = 0.3156, Jaccard score = 0.2304, loss = 0.2347, gradient norm = 0.2017, eval: [8.9 s]
# Iteration 11 fit: [32.8 s]: Recall = 0.3143, Jaccard score = 0.2292, loss = 0.2231, gradient norm = 0.2070, eval: [9.1 s]
# Iteration 12 fit: [32.9 s]: Recall = 0.3193, Jaccard score = 0.2337, loss = 0.2121, gradient norm = 0.2125, eval: [8.9 s]
# Iteration 13 fit: [32.4 s]: Recall = 0.3208, Jaccard score = 0.2351, loss = 0.2022, gradient norm = 0.2176, eval: [8.9 s]
# Iteration 14 fit: [33.1 s]: Recall = 0.3137, Jaccard score = 0.2287, loss = 0.1911, gradient norm = 0.2217, eval: [9.0 s]
# Iteration 15 fit: [33.2 s]: Recall = 0.3219, Jaccard score = 0.2361, loss = 0.1810, gradient norm = 0.2261, eval: [9.0 s]
# Iteration 16 fit: [32.6 s]: Recall = 0.3189, Jaccard score = 0.2334, loss = 0.1717, gradient norm = 0.2299, eval: [9.0 s]
# Iteration 17 fit: [33.1 s]: Recall = 0.3178, Jaccard score = 0.2324, loss = 0.1619, gradient norm = 0.2323, eval: [8.9 s]
# Iteration 18 fit: [33.1 s]: Recall = 0.3179, Jaccard score = 0.2325, loss = 0.1535, gradient norm = 0.2361, eval: [9.1 s]
# Iteration 19 fit: [35.3 s]: Recall = 0.3170, Jaccard score = 0.2317, loss = 0.1444, gradient norm = 0.2370, eval: [9.1 s]
# Iteration 20 fit: [33.0 s]: Recall = 0.3181, Jaccard score = 0.2327, loss = 0.1368, gradient norm = 0.2383, eval: [9.1 s]
# Iteration 21 fit: [33.0 s]: Recall = 0.3180, Jaccard score = 0.2326, loss = 0.1306, gradient norm = 0.2406, eval: [9.0 s]
# Iteration 22 fit: [33.0 s]: Recall = 0.3172, Jaccard score = 0.2319, loss = 0.1230, gradient norm = 0.2401, eval: [9.1 s]
# Iteration 23 fit: [32.9 s]: Recall = 0.3237, Jaccard score = 0.2378, loss = 0.1169, gradient norm = 0.2399, eval: [9.0 s]
# Iteration 24 fit: [33.1 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.1107, gradient norm = 0.2388, eval: [8.9 s]
# Iteration 25 fit: [32.6 s]: Recall = 0.3275, Jaccard score = 0.2412, loss = 0.1053, gradient norm = 0.2387, eval: [9.2 s]
# Iteration 26 fit: [33.0 s]: Recall = 0.3240, Jaccard score = 0.2380, loss = 0.0996, gradient norm = 0.2371, eval: [9.1 s]
# Iteration 27 fit: [32.6 s]: Recall = 0.3251, Jaccard score = 0.2390, loss = 0.0956, gradient norm = 0.2360, eval: [9.1 s]
# Iteration 28 fit: [33.0 s]: Recall = 0.3232, Jaccard score = 0.2372, loss = 0.0915, gradient norm = 0.2348, eval: [9.1 s]
# Iteration 29 fit: [32.6 s]: Recall = 0.3284, Jaccard score = 0.2420, loss = 0.0875, gradient norm = 0.2324, eval: [9.0 s]
# Iteration 30 fit: [33.2 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0838, gradient norm = 0.2313, eval: [9.1 s]
# Iteration 31 fit: [32.5 s]: Recall = 0.3250, Jaccard score = 0.2389, loss = 0.0799, gradient norm = 0.2286, eval: [9.1 s]
# Iteration 32 fit: [33.0 s]: Recall = 0.3284, Jaccard score = 0.2420, loss = 0.0767, gradient norm = 0.2264, eval: [9.1 s]
# Iteration 33 fit: [32.6 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0744, gradient norm = 0.2255, eval: [9.1 s]
# Iteration 34 fit: [33.0 s]: Recall = 0.3271, Jaccard score = 0.2408, loss = 0.0716, gradient norm = 0.2223, eval: [9.1 s]
# Iteration 35 fit: [32.6 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0688, gradient norm = 0.2198, eval: [9.0 s]
# Iteration 36 fit: [33.2 s]: Recall = 0.3268, Jaccard score = 0.2406, loss = 0.0660, gradient norm = 0.2171, eval: [9.0 s]
# Iteration 37 fit: [32.9 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0643, gradient norm = 0.2163, eval: [9.1 s]
# Iteration 38 fit: [32.9 s]: Recall = 0.3293, Jaccard score = 0.2429, loss = 0.0617, gradient norm = 0.2133, eval: [9.0 s]
# Iteration 39 fit: [32.8 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0596, gradient norm = 0.2114, eval: [9.0 s]
# Iteration 40 fit: [33.0 s]: Recall = 0.3337, Jaccard score = 0.2469, loss = 0.0589, gradient norm = 0.2116, eval: [9.1 s]
# Iteration 41 fit: [33.1 s]: Recall = 0.3355, Jaccard score = 0.2485, loss = 0.0563, gradient norm = 0.2080, eval: [9.1 s]
# Iteration 42 fit: [33.0 s]: Recall = 0.3345, Jaccard score = 0.2476, loss = 0.0552, gradient norm = 0.2070, eval: [9.0 s]
# Iteration 43 fit: [32.9 s]: Recall = 0.3409, Jaccard score = 0.2535, loss = 0.0535, gradient norm = 0.2038, eval: [9.0 s]
# Iteration 44 fit: [33.1 s]: Recall = 0.3372, Jaccard score = 0.2501, loss = 0.0519, gradient norm = 0.2018, eval: [9.1 s]
# Iteration 45 fit: [33.2 s]: Recall = 0.3312, Jaccard score = 0.2445, loss = 0.0510, gradient norm = 0.2012, eval: [9.1 s]
# Iteration 46 fit: [33.0 s]: Recall = 0.3332, Jaccard score = 0.2464, loss = 0.0491, gradient norm = 0.1972, eval: [9.1 s]
# Iteration 47 fit: [33.0 s]: Recall = 0.3381, Jaccard score = 0.2510, loss = 0.0483, gradient norm = 0.1966, eval: [9.1 s]
# Iteration 48 fit: [32.8 s]: Recall = 0.3334, Jaccard score = 0.2466, loss = 0.0471, gradient norm = 0.1947, eval: [9.0 s]
# Iteration 49 fit: [33.1 s]: Recall = 0.3379, Jaccard score = 0.2508, loss = 0.0467, gradient norm = 0.1948, eval: [9.1 s]
# Iteration 50 fit: [33.1 s]: Recall = 0.3386, Jaccard score = 0.2514, loss = 0.0442, gradient norm = 0.1893, eval: [9.2 s]
# Iteration 51 fit: [33.1 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0441, gradient norm = 0.1900, eval: [9.1 s]
# Iteration 52 fit: [33.0 s]: Recall = 0.3369, Jaccard score = 0.2498, loss = 0.0429, gradient norm = 0.1890, eval: [8.9 s]
# Iteration 53 fit: [33.1 s]: Recall = 0.3366, Jaccard score = 0.2496, loss = 0.0432, gradient norm = 0.1889, eval: [9.1 s]
# Iteration 54 fit: [33.1 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0408, gradient norm = 0.1837, eval: [8.9 s]
# Iteration 55 fit: [33.1 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0414, gradient norm = 0.1866, eval: [9.1 s]
# Iteration 56 fit: [33.1 s]: Recall = 0.3357, Jaccard score = 0.2488, loss = 0.0403, gradient norm = 0.1834, eval: [9.0 s]
# Iteration 57 fit: [52.4 s]: Recall = 0.3388, Jaccard score = 0.2516, loss = 0.0396, gradient norm = 0.1819, eval: [11.7 s]
# Iteration 58 fit: [38.1 s]: Recall = 0.3385, Jaccard score = 0.2513, loss = 0.0387, gradient norm = 0.1810, eval: [14.1 s]
# Iteration 59 fit: [35.7 s]: Recall = 0.3346, Jaccard score = 0.2477, loss = 0.0383, gradient norm = 0.1801, eval: [11.7 s]
# Iteration 60 fit: [35.0 s]: Recall = 0.3380, Jaccard score = 0.2509, loss = 0.0374, gradient norm = 0.1781, eval: [10.6 s]
# Iteration 61 fit: [34.6 s]: Recall = 0.3373, Jaccard score = 0.2502, loss = 0.0372, gradient norm = 0.1776, eval: [11.2 s]
# Iteration 62 fit: [34.5 s]: Recall = 0.3404, Jaccard score = 0.2531, loss = 0.0360, gradient norm = 0.1747, eval: [10.0 s]
# Iteration 63 fit: [34.1 s]: Recall = 0.3393, Jaccard score = 0.2520, loss = 0.0356, gradient norm = 0.1745, eval: [10.0 s]
# Iteration 64 fit: [34.0 s]: Recall = 0.3369, Jaccard score = 0.2498, loss = 0.0349, gradient norm = 0.1731, eval: [9.8 s]
# Iteration 65 fit: [33.5 s]: Recall = 0.3338, Jaccard score = 0.2470, loss = 0.0346, gradient norm = 0.1735, eval: [9.7 s]
# Iteration 66 fit: [33.4 s]: Recall = 0.3421, Jaccard score = 0.2547, loss = 0.0332, gradient norm = 0.1700, eval: [9.1 s]
# Iteration 67 fit: [34.2 s]: Recall = 0.3349, Jaccard score = 0.2480, loss = 0.0334, gradient norm = 0.1712, eval: [10.3 s]
# Iteration 68 fit: [35.2 s]: Recall = 0.3409, Jaccard score = 0.2535, loss = 0.0334, gradient norm = 0.1706, eval: [10.0 s]
# Iteration 69 fit: [33.4 s]: Recall = 0.3386, Jaccard score = 0.2514, loss = 0.0323, gradient norm = 0.1683, eval: [9.4 s]
# Iteration 70 fit: [33.0 s]: Recall = 0.3394, Jaccard score = 0.2521, loss = 0.0320, gradient norm = 0.1673, eval: [9.7 s]
# Iteration 71 fit: [32.9 s]: Recall = 0.3374, Jaccard score = 0.2503, loss = 0.0323, gradient norm = 0.1684, eval: [9.5 s]
# Iteration 72 fit: [32.9 s]: Recall = 0.3372, Jaccard score = 0.2501, loss = 0.0307, gradient norm = 0.1649, eval: [9.5 s]
# Iteration 73 fit: [33.0 s]: Recall = 0.3410, Jaccard score = 0.2536, loss = 0.0311, gradient norm = 0.1661, eval: [9.4 s]
# Iteration 74 fit: [33.1 s]: Recall = 0.3386, Jaccard score = 0.2514, loss = 0.0309, gradient norm = 0.1658, eval: [9.2 s]
# Iteration 75 fit: [33.2 s]: Recall = 0.3380, Jaccard score = 0.2509, loss = 0.0308, gradient norm = 0.1653, eval: [9.5 s]
# Iteration 76 fit: [33.7 s]: Recall = 0.3387, Jaccard score = 0.2515, loss = 0.0303, gradient norm = 0.1642, eval: [9.4 s]
# Iteration 77 fit: [33.3 s]: Recall = 0.3379, Jaccard score = 0.2508, loss = 0.0296, gradient norm = 0.1618, eval: [9.5 s]
# Iteration 78 fit: [33.0 s]: Recall = 0.3386, Jaccard score = 0.2514, loss = 0.0292, gradient norm = 0.1604, eval: [9.3 s]
# Iteration 79 fit: [33.2 s]: Recall = 0.3387, Jaccard score = 0.2515, loss = 0.0296, gradient norm = 0.1625, eval: [9.5 s]
# Iteration 80 fit: [33.5 s]: Recall = 0.3363, Jaccard score = 0.2493, loss = 0.0288, gradient norm = 0.1605, eval: [9.4 s]
# Iteration 81 fit: [33.9 s]: Recall = 0.3412, Jaccard score = 0.2538, loss = 0.0292, gradient norm = 0.1615, eval: [9.4 s]
# Iteration 82 fit: [34.7 s]: Recall = 0.3397, Jaccard score = 0.2525, loss = 0.0279, gradient norm = 0.1591, eval: [9.3 s]
# Iteration 83 fit: [33.0 s]: Recall = 0.3397, Jaccard score = 0.2525, loss = 0.0281, gradient norm = 0.1592, eval: [9.5 s]
# Iteration 84 fit: [34.1 s]: Recall = 0.3358, Jaccard score = 0.2489, loss = 0.0278, gradient norm = 0.1582, eval: [9.3 s]
# Iteration 85 fit: [33.4 s]: Recall = 0.3352, Jaccard score = 0.2482, loss = 0.0273, gradient norm = 0.1575, eval: [9.3 s]
# Iteration 86 fit: [33.2 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0276, gradient norm = 0.1578, eval: [9.1 s]
# Iteration 87 fit: [33.1 s]: Recall = 0.3390, Jaccard score = 0.2518, loss = 0.0272, gradient norm = 0.1570, eval: [9.1 s]
# Iteration 88 fit: [33.0 s]: Recall = 0.3332, Jaccard score = 0.2464, loss = 0.0270, gradient norm = 0.1568, eval: [9.2 s]
# Iteration 89 fit: [33.2 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0265, gradient norm = 0.1555, eval: [9.1 s]
# Iteration 90 fit: [33.1 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0262, gradient norm = 0.1547, eval: [9.1 s]
# Iteration 91 fit: [33.1 s]: Recall = 0.3347, Jaccard score = 0.2478, loss = 0.0268, gradient norm = 0.1565, eval: [9.1 s]
# Iteration 92 fit: [33.1 s]: Recall = 0.3340, Jaccard score = 0.2472, loss = 0.0261, gradient norm = 0.1537, eval: [9.1 s]
# Iteration 93 fit: [32.5 s]: Recall = 0.3411, Jaccard score = 0.2537, loss = 0.0262, gradient norm = 0.1535, eval: [9.1 s]
# Iteration 94 fit: [33.3 s]: Recall = 0.3360, Jaccard score = 0.2490, loss = 0.0257, gradient norm = 0.1526, eval: [9.2 s]
# Iteration 95 fit: [33.6 s]: Recall = 0.3398, Jaccard score = 0.2526, loss = 0.0261, gradient norm = 0.1540, eval: [9.4 s]
# Iteration 96 fit: [33.3 s]: Recall = 0.3382, Jaccard score = 0.2511, loss = 0.0254, gradient norm = 0.1530, eval: [9.1 s]
# Iteration 97 fit: [32.7 s]: Recall = 0.3338, Jaccard score = 0.2470, loss = 0.0254, gradient norm = 0.1525, eval: [9.2 s]
# Iteration 98 fit: [32.8 s]: Recall = 0.3371, Jaccard score = 0.2500, loss = 0.0251, gradient norm = 0.1517, eval: [9.2 s]
# Iteration 99 fit: [33.3 s]: Recall = 0.3317, Jaccard score = 0.2451, loss = 0.0246, gradient norm = 0.1500, eval: [9.2 s]
# Iteration 100 fit: [33.4 s]: Recall = 0.3321, Jaccard score = 0.2454, loss = 0.0249, gradient norm = 0.1506, eval: [9.2 s]
# Iteration 101 fit: [33.4 s]: Recall = 0.3337, Jaccard score = 0.2469, loss = 0.0246, gradient norm = 0.1520, eval: [9.2 s]
# Iteration 102 fit: [33.4 s]: Recall = 0.3293, Jaccard score = 0.2429, loss = 0.0248, gradient norm = 0.1523, eval: [9.1 s]
# Iteration 103 fit: [33.3 s]: Recall = 0.3325, Jaccard score = 0.2458, loss = 0.0246, gradient norm = 0.1510, eval: [9.2 s]
# Iteration 104 fit: [33.2 s]: Recall = 0.3339, Jaccard score = 0.2471, loss = 0.0242, gradient norm = 0.1494, eval: [9.2 s]
# Iteration 105 fit: [33.1 s]: Recall = 0.3382, Jaccard score = 0.2511, loss = 0.0238, gradient norm = 0.1486, eval: [9.1 s]
# Iteration 106 fit: [32.6 s]: Recall = 0.3347, Jaccard score = 0.2478, loss = 0.0239, gradient norm = 0.1488, eval: [9.1 s]
# Iteration 107 fit: [32.5 s]: Recall = 0.3374, Jaccard score = 0.2503, loss = 0.0235, gradient norm = 0.1481, eval: [9.1 s]
# Iteration 108 fit: [32.6 s]: Recall = 0.3371, Jaccard score = 0.2500, loss = 0.0241, gradient norm = 0.1499, eval: [9.5 s]
# Iteration 109 fit: [33.2 s]: Recall = 0.3357, Jaccard score = 0.2488, loss = 0.0234, gradient norm = 0.1482, eval: [9.1 s]
# Iteration 110 fit: [32.6 s]: Recall = 0.3322, Jaccard score = 0.2455, loss = 0.0236, gradient norm = 0.1477, eval: [9.2 s]
# Iteration 111 fit: [33.0 s]: Recall = 0.3345, Jaccard score = 0.2476, loss = 0.0235, gradient norm = 0.1474, eval: [9.4 s]
# End. Best Iteration 66:  Recall = 0.3421, Jaccard score = 0.2547. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,65]_1566828889.h5
