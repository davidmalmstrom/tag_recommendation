--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[128,96,64]"
--reg_layers: "[0,0,0]"
--num_k_folds: "5"
--early_stopping: "35"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[128,96,64]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,96,64]_1564265610.h5
--weights_path: Pretrain/_MLP_8_[128,96,64]_1564265610.h5
# Load data done [1.6 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0262, Jaccard score = 0.0158
# Iteration 0 fit: [19.2 s]: Recall = 0.2329, Jaccard score = 0.1598, loss = 0.4303, eval: [17.4 s]
# Iteration 1 fit: [15.7 s]: Recall = 0.2595, Jaccard score = 0.1814, loss = 0.3882, eval: [17.5 s]
# Iteration 2 fit: [15.7 s]: Recall = 0.2675, Jaccard score = 0.1879, loss = 0.3695, eval: [17.3 s]
# Iteration 3 fit: [15.7 s]: Recall = 0.2710, Jaccard score = 0.1909, loss = 0.3542, eval: [17.4 s]
# Iteration 4 fit: [15.7 s]: Recall = 0.2707, Jaccard score = 0.1906, loss = 0.3397, eval: [17.4 s]
# Iteration 5 fit: [15.7 s]: Recall = 0.2670, Jaccard score = 0.1876, loss = 0.3263, eval: [17.4 s]
# Iteration 6 fit: [15.7 s]: Recall = 0.2670, Jaccard score = 0.1876, loss = 0.3123, eval: [17.4 s]
# Iteration 7 fit: [15.8 s]: Recall = 0.2673, Jaccard score = 0.1878, loss = 0.2985, eval: [17.4 s]
# Iteration 8 fit: [15.7 s]: Recall = 0.2656, Jaccard score = 0.1864, loss = 0.2852, eval: [17.4 s]
# Iteration 9 fit: [15.9 s]: Recall = 0.2662, Jaccard score = 0.1869, loss = 0.2719, eval: [17.3 s]
# Iteration 10 fit: [15.7 s]: Recall = 0.2630, Jaccard score = 0.1843, loss = 0.2590, eval: [17.4 s]
# Iteration 11 fit: [15.7 s]: Recall = 0.2565, Jaccard score = 0.1788, loss = 0.2459, eval: [17.4 s]
# Iteration 12 fit: [15.5 s]: Recall = 0.2622, Jaccard score = 0.1836, loss = 0.2351, eval: [17.4 s]
# Iteration 13 fit: [15.7 s]: Recall = 0.2543, Jaccard score = 0.1770, loss = 0.2221, eval: [17.4 s]
# Iteration 14 fit: [15.7 s]: Recall = 0.2545, Jaccard score = 0.1772, loss = 0.2129, eval: [17.4 s]
# Iteration 15 fit: [15.7 s]: Recall = 0.2522, Jaccard score = 0.1753, loss = 0.2022, eval: [17.4 s]
# Iteration 16 fit: [15.7 s]: Recall = 0.2538, Jaccard score = 0.1767, loss = 0.1920, eval: [17.4 s]
# Iteration 17 fit: [15.7 s]: Recall = 0.2523, Jaccard score = 0.1754, loss = 0.1834, eval: [17.4 s]
# Iteration 18 fit: [15.8 s]: Recall = 0.2447, Jaccard score = 0.1692, loss = 0.1743, eval: [17.4 s]
# Iteration 19 fit: [15.7 s]: Recall = 0.2442, Jaccard score = 0.1688, loss = 0.1662, eval: [17.4 s]
# Iteration 20 fit: [15.8 s]: Recall = 0.2471, Jaccard score = 0.1712, loss = 0.1584, eval: [17.5 s]
# Iteration 21 fit: [15.7 s]: Recall = 0.2420, Jaccard score = 0.1671, loss = 0.1515, eval: [17.4 s]
# Iteration 22 fit: [15.6 s]: Recall = 0.2473, Jaccard score = 0.1714, loss = 0.1442, eval: [17.4 s]
# Iteration 23 fit: [15.7 s]: Recall = 0.2432, Jaccard score = 0.1680, loss = 0.1367, eval: [17.4 s]
# Iteration 24 fit: [15.6 s]: Recall = 0.2417, Jaccard score = 0.1668, loss = 0.1319, eval: [17.4 s]
# Iteration 25 fit: [15.7 s]: Recall = 0.2393, Jaccard score = 0.1649, loss = 0.1263, eval: [17.3 s]
# Iteration 26 fit: [15.7 s]: Recall = 0.2387, Jaccard score = 0.1644, loss = 0.1205, eval: [17.3 s]
# Iteration 27 fit: [15.8 s]: Recall = 0.2425, Jaccard score = 0.1674, loss = 0.1158, eval: [17.4 s]
# Iteration 28 fit: [15.7 s]: Recall = 0.2439, Jaccard score = 0.1686, loss = 0.1115, eval: [17.4 s]
# Iteration 29 fit: [16.0 s]: Recall = 0.2376, Jaccard score = 0.1635, loss = 0.1074, eval: [17.4 s]
# Iteration 30 fit: [15.7 s]: Recall = 0.2343, Jaccard score = 0.1609, loss = 0.1031, eval: [17.4 s]
# Iteration 31 fit: [15.7 s]: Recall = 0.2392, Jaccard score = 0.1648, loss = 0.0997, eval: [17.4 s]
# Iteration 32 fit: [15.7 s]: Recall = 0.2396, Jaccard score = 0.1651, loss = 0.0961, eval: [17.4 s]
# Iteration 33 fit: [15.7 s]: Recall = 0.2387, Jaccard score = 0.1644, loss = 0.0929, eval: [17.4 s]
# Iteration 34 fit: [15.7 s]: Recall = 0.2390, Jaccard score = 0.1647, loss = 0.0898, eval: [17.4 s]
# Iteration 35 fit: [15.7 s]: Recall = 0.2375, Jaccard score = 0.1634, loss = 0.0868, eval: [17.4 s]
# Iteration 36 fit: [15.7 s]: Recall = 0.2375, Jaccard score = 0.1635, loss = 0.0829, eval: [17.4 s]
# Iteration 37 fit: [15.7 s]: Recall = 0.2389, Jaccard score = 0.1646, loss = 0.0819, eval: [17.4 s]
# Iteration 38 fit: [15.8 s]: Recall = 0.2411, Jaccard score = 0.1664, loss = 0.0793, eval: [17.4 s]
# End. Best Iteration 3:  Recall = 0.2710, Jaccard score = 0.1909. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,96,64]_1564265610.h5
# The average best performance after k-fold 1 is: Recall = 0.2709718670076726, Jaccard score = 0.19088370417079542
# 
# Performing k-fold 2
# Init: Recall = 0.0291, Jaccard score = 0.0177
# Iteration 0 fit: [19.5 s]: Recall = 0.2278, Jaccard score = 0.1573, loss = 0.4296, eval: [17.7 s]
# Iteration 1 fit: [15.7 s]: Recall = 0.2513, Jaccard score = 0.1764, loss = 0.3873, eval: [17.7 s]
# Iteration 2 fit: [15.6 s]: Recall = 0.2597, Jaccard score = 0.1834, loss = 0.3682, eval: [17.6 s]
# Iteration 3 fit: [15.6 s]: Recall = 0.2615, Jaccard score = 0.1849, loss = 0.3533, eval: [17.7 s]
# Iteration 4 fit: [15.6 s]: Recall = 0.2615, Jaccard score = 0.1849, loss = 0.3393, eval: [17.6 s]
# Iteration 5 fit: [15.6 s]: Recall = 0.2617, Jaccard score = 0.1851, loss = 0.3251, eval: [17.7 s]
# Iteration 6 fit: [15.6 s]: Recall = 0.2597, Jaccard score = 0.1833, loss = 0.3110, eval: [17.6 s]
# Iteration 7 fit: [15.7 s]: Recall = 0.2570, Jaccard score = 0.1811, loss = 0.2969, eval: [17.7 s]
# Iteration 8 fit: [15.6 s]: Recall = 0.2550, Jaccard score = 0.1795, loss = 0.2834, eval: [17.6 s]
# Iteration 9 fit: [15.8 s]: Recall = 0.2550, Jaccard score = 0.1794, loss = 0.2704, eval: [17.7 s]
# Iteration 10 fit: [15.6 s]: Recall = 0.2540, Jaccard score = 0.1787, loss = 0.2577, eval: [17.6 s]
# Iteration 11 fit: [15.6 s]: Recall = 0.2504, Jaccard score = 0.1757, loss = 0.2451, eval: [17.6 s]
# Iteration 12 fit: [15.6 s]: Recall = 0.2495, Jaccard score = 0.1749, loss = 0.2330, eval: [17.7 s]
# Iteration 13 fit: [15.6 s]: Recall = 0.2507, Jaccard score = 0.1759, loss = 0.2215, eval: [17.7 s]
# Iteration 14 fit: [15.6 s]: Recall = 0.2413, Jaccard score = 0.1682, loss = 0.2116, eval: [17.6 s]
# Iteration 15 fit: [15.6 s]: Recall = 0.2469, Jaccard score = 0.1728, loss = 0.2005, eval: [17.7 s]
# Iteration 16 fit: [15.7 s]: Recall = 0.2411, Jaccard score = 0.1681, loss = 0.1897, eval: [17.7 s]
# Iteration 17 fit: [15.6 s]: Recall = 0.2396, Jaccard score = 0.1668, loss = 0.1815, eval: [17.7 s]
# Iteration 18 fit: [15.8 s]: Recall = 0.2384, Jaccard score = 0.1659, loss = 0.1717, eval: [17.6 s]
# Iteration 19 fit: [15.6 s]: Recall = 0.2381, Jaccard score = 0.1656, loss = 0.1639, eval: [17.6 s]
# Iteration 20 fit: [15.6 s]: Recall = 0.2354, Jaccard score = 0.1634, loss = 0.1564, eval: [17.6 s]
# Iteration 21 fit: [15.7 s]: Recall = 0.2317, Jaccard score = 0.1604, loss = 0.1484, eval: [17.7 s]
# Iteration 22 fit: [15.6 s]: Recall = 0.2352, Jaccard score = 0.1633, loss = 0.1426, eval: [17.6 s]
# Iteration 23 fit: [15.7 s]: Recall = 0.2338, Jaccard score = 0.1621, loss = 0.1358, eval: [17.6 s]
# Iteration 24 fit: [15.6 s]: Recall = 0.2344, Jaccard score = 0.1626, loss = 0.1292, eval: [17.6 s]
# Iteration 25 fit: [15.7 s]: Recall = 0.2388, Jaccard score = 0.1661, loss = 0.1246, eval: [17.7 s]
# Iteration 26 fit: [15.6 s]: Recall = 0.2332, Jaccard score = 0.1616, loss = 0.1192, eval: [17.6 s]
# Iteration 27 fit: [15.8 s]: Recall = 0.2371, Jaccard score = 0.1648, loss = 0.1136, eval: [17.7 s]
# Iteration 28 fit: [15.6 s]: Recall = 0.2353, Jaccard score = 0.1633, loss = 0.1092, eval: [17.6 s]
# Iteration 29 fit: [16.0 s]: Recall = 0.2345, Jaccard score = 0.1627, loss = 0.1048, eval: [17.7 s]
# Iteration 30 fit: [15.6 s]: Recall = 0.2324, Jaccard score = 0.1610, loss = 0.1009, eval: [17.7 s]
# Iteration 31 fit: [15.6 s]: Recall = 0.2339, Jaccard score = 0.1622, loss = 0.0973, eval: [17.6 s]
# Iteration 32 fit: [15.6 s]: Recall = 0.2245, Jaccard score = 0.1547, loss = 0.0939, eval: [17.6 s]
# Iteration 33 fit: [15.6 s]: Recall = 0.2321, Jaccard score = 0.1608, loss = 0.0907, eval: [17.6 s]
# Iteration 34 fit: [15.7 s]: Recall = 0.2312, Jaccard score = 0.1601, loss = 0.0867, eval: [17.6 s]
# Iteration 35 fit: [15.7 s]: Recall = 0.2311, Jaccard score = 0.1600, loss = 0.0853, eval: [17.7 s]
# Iteration 36 fit: [15.8 s]: Recall = 0.2276, Jaccard score = 0.1572, loss = 0.0823, eval: [17.6 s]
# Iteration 37 fit: [15.7 s]: Recall = 0.2304, Jaccard score = 0.1594, loss = 0.0798, eval: [17.6 s]
# Iteration 38 fit: [15.8 s]: Recall = 0.2280, Jaccard score = 0.1575, loss = 0.0771, eval: [17.6 s]
# Iteration 39 fit: [15.6 s]: Recall = 0.2327, Jaccard score = 0.1612, loss = 0.0745, eval: [17.6 s]
# Iteration 40 fit: [15.6 s]: Recall = 0.2330, Jaccard score = 0.1615, loss = 0.0724, eval: [17.6 s]
# End. Best Iteration 5:  Recall = 0.2617, Jaccard score = 0.1851. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,96,64]_1564265610.h5
# The average best performance after k-fold 2 is: Recall = 0.266345186273096, Jaccard score = 0.18797625930759534
# 
# Performing k-fold 3
# Init: Recall = 0.0300, Jaccard score = 0.0182
# Iteration 0 fit: [20.2 s]: Recall = 0.2318, Jaccard score = 0.1601, loss = 0.4306, eval: [17.8 s]
# Iteration 1 fit: [16.0 s]: Recall = 0.2510, Jaccard score = 0.1756, loss = 0.3884, eval: [17.5 s]
# Iteration 2 fit: [15.1 s]: Recall = 0.2614, Jaccard score = 0.1843, loss = 0.3694, eval: [17.5 s]
# Iteration 3 fit: [16.0 s]: Recall = 0.2675, Jaccard score = 0.1894, loss = 0.3541, eval: [17.6 s]
# Iteration 4 fit: [15.8 s]: Recall = 0.2659, Jaccard score = 0.1880, loss = 0.3401, eval: [17.7 s]
# Iteration 5 fit: [16.0 s]: Recall = 0.2662, Jaccard score = 0.1883, loss = 0.3260, eval: [17.5 s]
# Iteration 6 fit: [15.8 s]: Recall = 0.2638, Jaccard score = 0.1863, loss = 0.3117, eval: [17.6 s]
# Iteration 7 fit: [15.9 s]: Recall = 0.2597, Jaccard score = 0.1828, loss = 0.2985, eval: [17.6 s]
# Iteration 8 fit: [15.8 s]: Recall = 0.2637, Jaccard score = 0.1862, loss = 0.2847, eval: [17.6 s]
# Iteration 9 fit: [16.0 s]: Recall = 0.2558, Jaccard score = 0.1796, loss = 0.2712, eval: [17.6 s]
# Iteration 10 fit: [15.8 s]: Recall = 0.2561, Jaccard score = 0.1799, loss = 0.2591, eval: [17.5 s]
# Iteration 11 fit: [16.0 s]: Recall = 0.2498, Jaccard score = 0.1746, loss = 0.2463, eval: [17.6 s]
# Iteration 12 fit: [15.8 s]: Recall = 0.2523, Jaccard score = 0.1767, loss = 0.2343, eval: [17.5 s]
# Iteration 13 fit: [16.0 s]: Recall = 0.2523, Jaccard score = 0.1767, loss = 0.2227, eval: [17.6 s]
# Iteration 14 fit: [16.0 s]: Recall = 0.2471, Jaccard score = 0.1724, loss = 0.2123, eval: [17.5 s]
# Iteration 15 fit: [15.9 s]: Recall = 0.2418, Jaccard score = 0.1681, loss = 0.2019, eval: [17.6 s]
# Iteration 16 fit: [15.8 s]: Recall = 0.2469, Jaccard score = 0.1722, loss = 0.1921, eval: [17.5 s]
# Iteration 17 fit: [15.9 s]: Recall = 0.2414, Jaccard score = 0.1678, loss = 0.1818, eval: [17.6 s]
# Iteration 18 fit: [15.8 s]: Recall = 0.2391, Jaccard score = 0.1659, loss = 0.1737, eval: [17.5 s]
# Iteration 19 fit: [15.9 s]: Recall = 0.2350, Jaccard score = 0.1626, loss = 0.1649, eval: [17.6 s]
# Iteration 20 fit: [15.8 s]: Recall = 0.2374, Jaccard score = 0.1646, loss = 0.1576, eval: [17.7 s]
# Iteration 21 fit: [16.1 s]: Recall = 0.2350, Jaccard score = 0.1626, loss = 0.1500, eval: [17.5 s]
# Iteration 22 fit: [15.8 s]: Recall = 0.2370, Jaccard score = 0.1643, loss = 0.1432, eval: [17.5 s]
# Iteration 23 fit: [16.1 s]: Recall = 0.2360, Jaccard score = 0.1634, loss = 0.1360, eval: [17.6 s]
# Iteration 24 fit: [15.8 s]: Recall = 0.2319, Jaccard score = 0.1602, loss = 0.1303, eval: [17.5 s]
# Iteration 25 fit: [16.0 s]: Recall = 0.2297, Jaccard score = 0.1584, loss = 0.1254, eval: [17.6 s]
# Iteration 26 fit: [15.8 s]: Recall = 0.2326, Jaccard score = 0.1607, loss = 0.1203, eval: [17.5 s]
# Iteration 27 fit: [16.0 s]: Recall = 0.2355, Jaccard score = 0.1630, loss = 0.1145, eval: [17.6 s]
# Iteration 28 fit: [15.8 s]: Recall = 0.2318, Jaccard score = 0.1600, loss = 0.1099, eval: [17.5 s]
# Iteration 29 fit: [15.9 s]: Recall = 0.2308, Jaccard score = 0.1593, loss = 0.1054, eval: [17.6 s]
# Iteration 30 fit: [15.9 s]: Recall = 0.2314, Jaccard score = 0.1597, loss = 0.1020, eval: [17.5 s]
# Iteration 31 fit: [15.9 s]: Recall = 0.2308, Jaccard score = 0.1593, loss = 0.0978, eval: [17.6 s]
# Iteration 32 fit: [16.1 s]: Recall = 0.2309, Jaccard score = 0.1594, loss = 0.0945, eval: [17.5 s]
# Iteration 33 fit: [15.9 s]: Recall = 0.2273, Jaccard score = 0.1564, loss = 0.0918, eval: [17.6 s]
# Iteration 34 fit: [15.8 s]: Recall = 0.2290, Jaccard score = 0.1578, loss = 0.0890, eval: [17.5 s]
# Iteration 35 fit: [16.0 s]: Recall = 0.2284, Jaccard score = 0.1573, loss = 0.0861, eval: [17.6 s]
# Iteration 36 fit: [15.8 s]: Recall = 0.2294, Jaccard score = 0.1581, loss = 0.0830, eval: [17.5 s]
# Iteration 37 fit: [16.0 s]: Recall = 0.2273, Jaccard score = 0.1565, loss = 0.0808, eval: [17.5 s]
# Iteration 38 fit: [15.8 s]: Recall = 0.2294, Jaccard score = 0.1581, loss = 0.0776, eval: [17.5 s]
# End. Best Iteration 3:  Recall = 0.2675, Jaccard score = 0.1894. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,96,64]_1564265610.h5
# The average best performance after k-fold 3 is: Recall = 0.26673783877366297, Jaccard score = 0.18844442876758863
# 
# Performing k-fold 4
# Init: Recall = 0.0257, Jaccard score = 0.0155
# Iteration 0 fit: [19.9 s]: Recall = 0.2366, Jaccard score = 0.1644, loss = 0.4306, eval: [17.9 s]
# Iteration 1 fit: [15.7 s]: Recall = 0.2567, Jaccard score = 0.1809, loss = 0.3892, eval: [17.8 s]
# Iteration 2 fit: [15.5 s]: Recall = 0.2628, Jaccard score = 0.1860, loss = 0.3698, eval: [17.9 s]
# Iteration 3 fit: [15.9 s]: Recall = 0.2656, Jaccard score = 0.1883, loss = 0.3548, eval: [17.8 s]
# Iteration 4 fit: [15.5 s]: Recall = 0.2669, Jaccard score = 0.1894, loss = 0.3410, eval: [17.9 s]
# Iteration 5 fit: [15.5 s]: Recall = 0.2651, Jaccard score = 0.1880, loss = 0.3265, eval: [17.9 s]
# Iteration 6 fit: [15.6 s]: Recall = 0.2661, Jaccard score = 0.1887, loss = 0.3123, eval: [17.9 s]
# Iteration 7 fit: [15.5 s]: Recall = 0.2640, Jaccard score = 0.1870, loss = 0.2986, eval: [17.8 s]
# Iteration 8 fit: [15.6 s]: Recall = 0.2615, Jaccard score = 0.1849, loss = 0.2849, eval: [17.9 s]
# Iteration 9 fit: [15.5 s]: Recall = 0.2605, Jaccard score = 0.1840, loss = 0.2713, eval: [17.9 s]
# Iteration 10 fit: [15.7 s]: Recall = 0.2583, Jaccard score = 0.1822, loss = 0.2582, eval: [17.9 s]
# Iteration 11 fit: [15.5 s]: Recall = 0.2538, Jaccard score = 0.1785, loss = 0.2459, eval: [17.9 s]
# Iteration 12 fit: [15.5 s]: Recall = 0.2568, Jaccard score = 0.1809, loss = 0.2343, eval: [18.0 s]
# Iteration 13 fit: [15.5 s]: Recall = 0.2552, Jaccard score = 0.1796, loss = 0.2224, eval: [18.0 s]
# Iteration 14 fit: [15.5 s]: Recall = 0.2494, Jaccard score = 0.1748, loss = 0.2122, eval: [17.9 s]
# Iteration 15 fit: [15.5 s]: Recall = 0.2449, Jaccard score = 0.1711, loss = 0.2011, eval: [17.9 s]
# Iteration 16 fit: [15.5 s]: Recall = 0.2459, Jaccard score = 0.1720, loss = 0.1910, eval: [18.0 s]
# Iteration 17 fit: [15.5 s]: Recall = 0.2441, Jaccard score = 0.1705, loss = 0.1825, eval: [17.9 s]
# Iteration 18 fit: [15.5 s]: Recall = 0.2407, Jaccard score = 0.1677, loss = 0.1728, eval: [17.9 s]
# Iteration 19 fit: [15.7 s]: Recall = 0.2413, Jaccard score = 0.1682, loss = 0.1649, eval: [17.9 s]
# Iteration 20 fit: [15.6 s]: Recall = 0.2382, Jaccard score = 0.1657, loss = 0.1570, eval: [17.9 s]
# Iteration 21 fit: [15.5 s]: Recall = 0.2389, Jaccard score = 0.1662, loss = 0.1504, eval: [17.9 s]
# Iteration 22 fit: [15.5 s]: Recall = 0.2419, Jaccard score = 0.1687, loss = 0.1426, eval: [18.0 s]
# Iteration 23 fit: [15.5 s]: Recall = 0.2436, Jaccard score = 0.1700, loss = 0.1355, eval: [17.9 s]
# Iteration 24 fit: [15.6 s]: Recall = 0.2328, Jaccard score = 0.1613, loss = 0.1298, eval: [17.9 s]
# Iteration 25 fit: [15.5 s]: Recall = 0.2361, Jaccard score = 0.1640, loss = 0.1241, eval: [17.9 s]
# Iteration 26 fit: [15.6 s]: Recall = 0.2377, Jaccard score = 0.1653, loss = 0.1197, eval: [17.9 s]
# Iteration 27 fit: [15.5 s]: Recall = 0.2376, Jaccard score = 0.1652, loss = 0.1136, eval: [17.9 s]
# Iteration 28 fit: [15.8 s]: Recall = 0.2331, Jaccard score = 0.1616, loss = 0.1099, eval: [17.9 s]
# Iteration 29 fit: [15.5 s]: Recall = 0.2316, Jaccard score = 0.1604, loss = 0.1058, eval: [17.9 s]
# Iteration 30 fit: [15.6 s]: Recall = 0.2350, Jaccard score = 0.1631, loss = 0.1014, eval: [17.9 s]
# Iteration 31 fit: [15.5 s]: Recall = 0.2375, Jaccard score = 0.1651, loss = 0.0983, eval: [17.9 s]
# Iteration 32 fit: [15.5 s]: Recall = 0.2339, Jaccard score = 0.1622, loss = 0.0934, eval: [17.9 s]
# Iteration 33 fit: [15.6 s]: Recall = 0.2319, Jaccard score = 0.1606, loss = 0.0911, eval: [17.9 s]
# Iteration 34 fit: [15.5 s]: Recall = 0.2284, Jaccard score = 0.1578, loss = 0.0882, eval: [17.9 s]
# Iteration 35 fit: [15.6 s]: Recall = 0.2306, Jaccard score = 0.1596, loss = 0.0852, eval: [17.8 s]
# Iteration 36 fit: [15.5 s]: Recall = 0.2331, Jaccard score = 0.1616, loss = 0.0822, eval: [17.9 s]
# Iteration 37 fit: [15.7 s]: Recall = 0.2334, Jaccard score = 0.1618, loss = 0.0800, eval: [17.9 s]
# Iteration 38 fit: [15.5 s]: Recall = 0.2363, Jaccard score = 0.1641, loss = 0.0770, eval: [17.9 s]
# Iteration 39 fit: [15.5 s]: Recall = 0.2339, Jaccard score = 0.1622, loss = 0.0753, eval: [17.9 s]
# End. Best Iteration 4:  Recall = 0.2669, Jaccard score = 0.1894. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,96,64]_1564265610.h5
# The average best performance after k-fold 4 is: Recall = 0.26677740911779413, Jaccard score = 0.18869063891968435
# 
# Performing k-fold 5
# Init: Recall = 0.0281, Jaccard score = 0.0170
# Iteration 0 fit: [20.1 s]: Recall = 0.2285, Jaccard score = 0.1576, loss = 0.4306, eval: [18.0 s]
# Iteration 1 fit: [15.6 s]: Recall = 0.2527, Jaccard score = 0.1773, loss = 0.3892, eval: [18.0 s]
# Iteration 2 fit: [15.6 s]: Recall = 0.2634, Jaccard score = 0.1862, loss = 0.3700, eval: [18.0 s]
# Iteration 3 fit: [15.6 s]: Recall = 0.2651, Jaccard score = 0.1876, loss = 0.3551, eval: [18.0 s]
# Iteration 4 fit: [15.6 s]: Recall = 0.2681, Jaccard score = 0.1901, loss = 0.3410, eval: [18.0 s]
# Iteration 5 fit: [15.8 s]: Recall = 0.2663, Jaccard score = 0.1886, loss = 0.3268, eval: [18.3 s]
# Iteration 6 fit: [15.6 s]: Recall = 0.2660, Jaccard score = 0.1884, loss = 0.3129, eval: [18.1 s]
# Iteration 7 fit: [15.6 s]: Recall = 0.2700, Jaccard score = 0.1917, loss = 0.2993, eval: [18.1 s]
# Iteration 8 fit: [15.6 s]: Recall = 0.2615, Jaccard score = 0.1846, loss = 0.2847, eval: [18.1 s]
# Iteration 9 fit: [15.6 s]: Recall = 0.2576, Jaccard score = 0.1814, loss = 0.2715, eval: [18.0 s]
# Iteration 10 fit: [15.7 s]: Recall = 0.2580, Jaccard score = 0.1816, loss = 0.2590, eval: [18.1 s]
# Iteration 11 fit: [15.6 s]: Recall = 0.2521, Jaccard score = 0.1767, loss = 0.2467, eval: [18.0 s]
# Iteration 12 fit: [15.7 s]: Recall = 0.2519, Jaccard score = 0.1766, loss = 0.2345, eval: [18.1 s]
# Iteration 13 fit: [15.6 s]: Recall = 0.2529, Jaccard score = 0.1774, loss = 0.2226, eval: [18.1 s]
# Iteration 14 fit: [15.9 s]: Recall = 0.2512, Jaccard score = 0.1761, loss = 0.2127, eval: [18.0 s]
# Iteration 15 fit: [15.6 s]: Recall = 0.2473, Jaccard score = 0.1729, loss = 0.2015, eval: [18.1 s]
# Iteration 16 fit: [15.7 s]: Recall = 0.2488, Jaccard score = 0.1741, loss = 0.1916, eval: [18.0 s]
# Iteration 17 fit: [15.6 s]: Recall = 0.2457, Jaccard score = 0.1715, loss = 0.1822, eval: [18.1 s]
# Iteration 18 fit: [15.6 s]: Recall = 0.2473, Jaccard score = 0.1728, loss = 0.1731, eval: [18.0 s]
# Iteration 19 fit: [15.7 s]: Recall = 0.2449, Jaccard score = 0.1709, loss = 0.1642, eval: [18.1 s]
# Iteration 20 fit: [15.6 s]: Recall = 0.2484, Jaccard score = 0.1737, loss = 0.1565, eval: [18.0 s]
# Iteration 21 fit: [15.7 s]: Recall = 0.2382, Jaccard score = 0.1655, loss = 0.1482, eval: [18.1 s]
# Iteration 22 fit: [15.6 s]: Recall = 0.2469, Jaccard score = 0.1725, loss = 0.1420, eval: [18.1 s]
# Iteration 23 fit: [15.6 s]: Recall = 0.2401, Jaccard score = 0.1670, loss = 0.1350, eval: [18.0 s]
# Iteration 24 fit: [15.6 s]: Recall = 0.2423, Jaccard score = 0.1688, loss = 0.1292, eval: [18.1 s]
# Iteration 25 fit: [15.6 s]: Recall = 0.2416, Jaccard score = 0.1682, loss = 0.1232, eval: [18.0 s]
# Iteration 26 fit: [15.7 s]: Recall = 0.2411, Jaccard score = 0.1678, loss = 0.1177, eval: [18.0 s]
# Iteration 27 fit: [15.6 s]: Recall = 0.2370, Jaccard score = 0.1644, loss = 0.1136, eval: [18.0 s]
# Iteration 28 fit: [15.7 s]: Recall = 0.2392, Jaccard score = 0.1662, loss = 0.1088, eval: [18.0 s]
# Iteration 29 fit: [15.6 s]: Recall = 0.2353, Jaccard score = 0.1631, loss = 0.1046, eval: [18.1 s]
# Iteration 30 fit: [15.9 s]: Recall = 0.2394, Jaccard score = 0.1664, loss = 0.1013, eval: [18.1 s]
# Iteration 31 fit: [15.6 s]: Recall = 0.2369, Jaccard score = 0.1643, loss = 0.0973, eval: [18.1 s]
# Iteration 32 fit: [15.6 s]: Recall = 0.2402, Jaccard score = 0.1670, loss = 0.0942, eval: [18.0 s]
# Iteration 33 fit: [15.6 s]: Recall = 0.2360, Jaccard score = 0.1636, loss = 0.0909, eval: [18.0 s]
# Iteration 34 fit: [15.6 s]: Recall = 0.2353, Jaccard score = 0.1631, loss = 0.0871, eval: [18.1 s]
# Iteration 35 fit: [15.6 s]: Recall = 0.2340, Jaccard score = 0.1620, loss = 0.0840, eval: [18.1 s]
# Iteration 36 fit: [15.6 s]: Recall = 0.2365, Jaccard score = 0.1641, loss = 0.0820, eval: [18.1 s]
# Iteration 37 fit: [15.7 s]: Recall = 0.2364, Jaccard score = 0.1639, loss = 0.0787, eval: [18.0 s]
# Iteration 38 fit: [15.6 s]: Recall = 0.2354, Jaccard score = 0.1631, loss = 0.0770, eval: [18.1 s]
# Iteration 39 fit: [15.6 s]: Recall = 0.2378, Jaccard score = 0.1651, loss = 0.0744, eval: [18.0 s]
# Iteration 40 fit: [15.6 s]: Recall = 0.2362, Jaccard score = 0.1638, loss = 0.0721, eval: [18.1 s]
# Iteration 41 fit: [15.6 s]: Recall = 0.2364, Jaccard score = 0.1640, loss = 0.0706, eval: [18.1 s]
# Iteration 42 fit: [15.7 s]: Recall = 0.2314, Jaccard score = 0.1599, loss = 0.0680, eval: [18.1 s]
# End. Best Iteration 7:  Recall = 0.2700, Jaccard score = 0.1917. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,96,64]_1564265610.h5
# The average best performance after k-fold 5 is: Recall = 0.267412508141959, Jaccard score = 0.1892919385860284
