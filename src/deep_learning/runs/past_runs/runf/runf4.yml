--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "50"
--layers: "[1024,512,256]"
--reg_layers: "[0,0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=50, eval_recall=1, is_tag=1, layers='[1024,512,256]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[1024,512,256]_1560262848.h5
# Load data done [2.6 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0021, Jaccard score = 0.0011
# Iteration 0 fit: [25.7 s]: Recall = 0.0235, Jaccard score = 0.0129, loss = 0.4508, val_loss = 0.0000, eval: [8.5 s]
# Iteration 1 fit: [25.0 s]: Recall = 0.0175, Jaccard score = 0.0095, loss = 0.4401, val_loss = 0.0000, eval: [8.6 s]
# Iteration 2 fit: [25.3 s]: Recall = 0.0306, Jaccard score = 0.0168, loss = 0.4267, val_loss = 0.0000, eval: [8.2 s]
# Iteration 3 fit: [25.1 s]: Recall = 0.0454, Jaccard score = 0.0251, loss = 0.3938, val_loss = 0.0000, eval: [8.3 s]
# Iteration 4 fit: [25.1 s]: Recall = 0.0552, Jaccard score = 0.0307, loss = 0.3514, val_loss = 0.0000, eval: [8.1 s]
# Iteration 5 fit: [25.3 s]: Recall = 0.0647, Jaccard score = 0.0362, loss = 0.3061, val_loss = 0.0000, eval: [8.3 s]
# Iteration 6 fit: [25.2 s]: Recall = 0.0657, Jaccard score = 0.0367, loss = 0.2629, val_loss = 0.0000, eval: [8.3 s]
# Iteration 7 fit: [25.3 s]: Recall = 0.0733, Jaccard score = 0.0411, loss = 0.2241, val_loss = 0.0000, eval: [8.9 s]
# Iteration 8 fit: [25.1 s]: Recall = 0.0712, Jaccard score = 0.0399, loss = 0.1913, val_loss = 0.0000, eval: [8.6 s]
# Iteration 9 fit: [25.2 s]: Recall = 0.0731, Jaccard score = 0.0410, loss = 0.1643, val_loss = 0.0000, eval: [8.2 s]
# Iteration 10 fit: [25.0 s]: Recall = 0.0774, Jaccard score = 0.0436, loss = 0.1414, val_loss = 0.0000, eval: [8.7 s]
# Iteration 11 fit: [25.2 s]: Recall = 0.0759, Jaccard score = 0.0427, loss = 0.1231, val_loss = 0.0000, eval: [8.1 s]
# Iteration 12 fit: [25.2 s]: Recall = 0.0761, Jaccard score = 0.0428, loss = 0.1101, val_loss = 0.0000, eval: [8.1 s]
# Iteration 13 fit: [25.0 s]: Recall = 0.0816, Jaccard score = 0.0460, loss = 0.0986, val_loss = 0.0000, eval: [8.6 s]
# Iteration 14 fit: [25.1 s]: Recall = 0.0833, Jaccard score = 0.0471, loss = 0.0890, val_loss = 0.0000, eval: [8.3 s]
# Iteration 15 fit: [25.2 s]: Recall = 0.0820, Jaccard score = 0.0463, loss = 0.0809, val_loss = 0.0000, eval: [8.1 s]
# Iteration 16 fit: [25.3 s]: Recall = 0.0833, Jaccard score = 0.0471, loss = 0.0727, val_loss = 0.0000, eval: [8.7 s]
# Iteration 17 fit: [25.1 s]: Recall = 0.0801, Jaccard score = 0.0451, loss = 0.0690, val_loss = 0.0000, eval: [8.5 s]
# Iteration 18 fit: [25.2 s]: Recall = 0.0814, Jaccard score = 0.0459, loss = 0.0645, val_loss = 0.0000, eval: [8.3 s]
# Iteration 19 fit: [25.4 s]: Recall = 0.0896, Jaccard score = 0.0508, loss = 0.0588, val_loss = 0.0000, eval: [8.7 s]
# Iteration 20 fit: [25.3 s]: Recall = 0.0818, Jaccard score = 0.0462, loss = 0.0548, val_loss = 0.0000, eval: [8.2 s]
# Iteration 21 fit: [25.2 s]: Recall = 0.0790, Jaccard score = 0.0445, loss = 0.0514, val_loss = 0.0000, eval: [8.1 s]
# Iteration 22 fit: [25.1 s]: Recall = 0.0807, Jaccard score = 0.0455, loss = 0.0486, val_loss = 0.0000, eval: [8.5 s]
# Iteration 23 fit: [25.2 s]: Recall = 0.0865, Jaccard score = 0.0490, loss = 0.0454, val_loss = 0.0000, eval: [8.7 s]
# Iteration 24 fit: [25.3 s]: Recall = 0.0865, Jaccard score = 0.0490, loss = 0.0430, val_loss = 0.0000, eval: [8.1 s]
# Iteration 25 fit: [25.2 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0404, val_loss = 0.0000, eval: [8.1 s]
# Iteration 26 fit: [25.2 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0383, val_loss = 0.0000, eval: [8.3 s]
# Iteration 27 fit: [25.1 s]: Recall = 0.0879, Jaccard score = 0.0498, loss = 0.0369, val_loss = 0.0000, eval: [8.7 s]
# Iteration 28 fit: [25.2 s]: Recall = 0.0864, Jaccard score = 0.0489, loss = 0.0358, val_loss = 0.0000, eval: [8.2 s]
# Iteration 29 fit: [25.3 s]: Recall = 0.0829, Jaccard score = 0.0468, loss = 0.0330, val_loss = 0.0000, eval: [8.2 s]
# Iteration 30 fit: [25.1 s]: Recall = 0.0865, Jaccard score = 0.0490, loss = 0.0320, val_loss = 0.0000, eval: [8.4 s]
# Iteration 31 fit: [25.2 s]: Recall = 0.0862, Jaccard score = 0.0487, loss = 0.0301, val_loss = 0.0000, eval: [8.4 s]
# Iteration 32 fit: [25.2 s]: Recall = 0.0922, Jaccard score = 0.0524, loss = 0.0288, val_loss = 0.0000, eval: [8.3 s]
# Iteration 33 fit: [25.2 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0277, val_loss = 0.0000, eval: [8.7 s]
# Iteration 34 fit: [25.2 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0266, val_loss = 0.0000, eval: [8.1 s]
# Iteration 35 fit: [25.1 s]: Recall = 0.0879, Jaccard score = 0.0498, loss = 0.0260, val_loss = 0.0000, eval: [8.5 s]
# Iteration 36 fit: [25.0 s]: Recall = 0.0890, Jaccard score = 0.0504, loss = 0.0243, val_loss = 0.0000, eval: [8.1 s]
# Iteration 37 fit: [25.1 s]: Recall = 0.0877, Jaccard score = 0.0496, loss = 0.0234, val_loss = 0.0000, eval: [8.2 s]
# Iteration 38 fit: [25.1 s]: Recall = 0.0911, Jaccard score = 0.0517, loss = 0.0233, val_loss = 0.0000, eval: [8.8 s]
# Iteration 39 fit: [25.0 s]: Recall = 0.0922, Jaccard score = 0.0524, loss = 0.0220, val_loss = 0.0000, eval: [8.9 s]
# Iteration 40 fit: [25.2 s]: Recall = 0.0901, Jaccard score = 0.0511, loss = 0.0215, val_loss = 0.0000, eval: [8.2 s]
# Iteration 41 fit: [25.2 s]: Recall = 0.0936, Jaccard score = 0.0531, loss = 0.0206, val_loss = 0.0000, eval: [8.8 s]
# Iteration 42 fit: [25.1 s]: Recall = 0.0871, Jaccard score = 0.0493, loss = 0.0195, val_loss = 0.0000, eval: [8.4 s]
# Iteration 43 fit: [25.2 s]: Recall = 0.0977, Jaccard score = 0.0557, loss = 0.0193, val_loss = 0.0000, eval: [8.3 s]
# Iteration 44 fit: [25.3 s]: Recall = 0.0919, Jaccard score = 0.0521, loss = 0.0190, val_loss = 0.0000, eval: [8.4 s]
# Iteration 45 fit: [25.3 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0180, val_loss = 0.0000, eval: [8.5 s]
# Iteration 46 fit: [25.2 s]: Recall = 0.0936, Jaccard score = 0.0531, loss = 0.0177, val_loss = 0.0000, eval: [8.3 s]
# Iteration 47 fit: [25.2 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0170, val_loss = 0.0000, eval: [8.1 s]
# Iteration 48 fit: [25.0 s]: Recall = 0.0934, Jaccard score = 0.0530, loss = 0.0171, val_loss = 0.0000, eval: [8.1 s]
# Iteration 49 fit: [25.2 s]: Recall = 0.0989, Jaccard score = 0.0563, loss = 0.0158, val_loss = 0.0000, eval: [8.4 s]
# End. Best Iteration 49:  Recall = 0.0989, Jaccard score = 0.0563. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[1024,512,256]_1560262848.h5
