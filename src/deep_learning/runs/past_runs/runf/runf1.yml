--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "130"
--layers: "[128,128]"
--reg_layers: "[0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=130, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560242683.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0028, Jaccard score = 0.0015
# Iteration 0 fit: [9.3 s]: Recall = 0.0243, Jaccard score = 0.0133, loss = 0.4578, val_loss = 0.0000, eval: [6.9 s]
# Iteration 1 fit: [6.5 s]: Recall = 0.0243, Jaccard score = 0.0133, loss = 0.4411, val_loss = 0.0000, eval: [6.9 s]
# Iteration 2 fit: [6.5 s]: Recall = 0.0213, Jaccard score = 0.0116, loss = 0.4385, val_loss = 0.0000, eval: [6.9 s]
# Iteration 3 fit: [6.5 s]: Recall = 0.0264, Jaccard score = 0.0144, loss = 0.4352, val_loss = 0.0000, eval: [7.0 s]
# Iteration 4 fit: [6.5 s]: Recall = 0.0214, Jaccard score = 0.0117, loss = 0.4301, val_loss = 0.0000, eval: [7.0 s]
# Iteration 5 fit: [6.5 s]: Recall = 0.0213, Jaccard score = 0.0116, loss = 0.4216, val_loss = 0.0000, eval: [7.2 s]
# Iteration 6 fit: [6.5 s]: Recall = 0.0228, Jaccard score = 0.0124, loss = 0.4095, val_loss = 0.0000, eval: [6.9 s]
# Iteration 7 fit: [6.5 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.3951, val_loss = 0.0000, eval: [7.0 s]
# Iteration 8 fit: [6.5 s]: Recall = 0.0256, Jaccard score = 0.0140, loss = 0.3777, val_loss = 0.0000, eval: [7.0 s]
# Iteration 9 fit: [6.5 s]: Recall = 0.0288, Jaccard score = 0.0158, loss = 0.3610, val_loss = 0.0000, eval: [7.0 s]
# Iteration 10 fit: [6.5 s]: Recall = 0.0306, Jaccard score = 0.0168, loss = 0.3424, val_loss = 0.0000, eval: [6.9 s]
# Iteration 11 fit: [6.5 s]: Recall = 0.0313, Jaccard score = 0.0172, loss = 0.3260, val_loss = 0.0000, eval: [7.0 s]
# Iteration 12 fit: [6.5 s]: Recall = 0.0351, Jaccard score = 0.0193, loss = 0.3088, val_loss = 0.0000, eval: [6.9 s]
# Iteration 13 fit: [6.5 s]: Recall = 0.0402, Jaccard score = 0.0222, loss = 0.2931, val_loss = 0.0000, eval: [7.0 s]
# Iteration 14 fit: [6.5 s]: Recall = 0.0425, Jaccard score = 0.0235, loss = 0.2779, val_loss = 0.0000, eval: [7.0 s]
# Iteration 15 fit: [6.5 s]: Recall = 0.0440, Jaccard score = 0.0243, loss = 0.2640, val_loss = 0.0000, eval: [7.0 s]
# Iteration 16 fit: [6.6 s]: Recall = 0.0454, Jaccard score = 0.0251, loss = 0.2511, val_loss = 0.0000, eval: [7.0 s]
# Iteration 17 fit: [6.6 s]: Recall = 0.0452, Jaccard score = 0.0250, loss = 0.2387, val_loss = 0.0000, eval: [7.0 s]
# Iteration 18 fit: [6.5 s]: Recall = 0.0503, Jaccard score = 0.0279, loss = 0.2269, val_loss = 0.0000, eval: [7.2 s]
# Iteration 19 fit: [6.5 s]: Recall = 0.0512, Jaccard score = 0.0284, loss = 0.2155, val_loss = 0.0000, eval: [6.9 s]
# Iteration 20 fit: [6.5 s]: Recall = 0.0492, Jaccard score = 0.0272, loss = 0.2052, val_loss = 0.0000, eval: [6.9 s]
# Iteration 21 fit: [6.5 s]: Recall = 0.0528, Jaccard score = 0.0293, loss = 0.1954, val_loss = 0.0000, eval: [6.9 s]
# Iteration 22 fit: [6.8 s]: Recall = 0.0562, Jaccard score = 0.0312, loss = 0.1861, val_loss = 0.0000, eval: [6.9 s]
# Iteration 23 fit: [6.5 s]: Recall = 0.0571, Jaccard score = 0.0318, loss = 0.1767, val_loss = 0.0000, eval: [7.0 s]
# Iteration 24 fit: [6.5 s]: Recall = 0.0604, Jaccard score = 0.0336, loss = 0.1689, val_loss = 0.0000, eval: [6.9 s]
# Iteration 25 fit: [6.5 s]: Recall = 0.0604, Jaccard score = 0.0336, loss = 0.1615, val_loss = 0.0000, eval: [6.9 s]
# Iteration 26 fit: [6.5 s]: Recall = 0.0600, Jaccard score = 0.0334, loss = 0.1535, val_loss = 0.0000, eval: [6.9 s]
# Iteration 27 fit: [6.5 s]: Recall = 0.0604, Jaccard score = 0.0336, loss = 0.1458, val_loss = 0.0000, eval: [6.9 s]
# Iteration 28 fit: [6.5 s]: Recall = 0.0651, Jaccard score = 0.0364, loss = 0.1395, val_loss = 0.0000, eval: [6.9 s]
# Iteration 29 fit: [6.5 s]: Recall = 0.0651, Jaccard score = 0.0364, loss = 0.1334, val_loss = 0.0000, eval: [7.1 s]
# Iteration 30 fit: [6.5 s]: Recall = 0.0640, Jaccard score = 0.0357, loss = 0.1279, val_loss = 0.0000, eval: [6.9 s]
# Iteration 31 fit: [6.5 s]: Recall = 0.0645, Jaccard score = 0.0361, loss = 0.1215, val_loss = 0.0000, eval: [6.9 s]
# Iteration 32 fit: [6.5 s]: Recall = 0.0678, Jaccard score = 0.0379, loss = 0.1169, val_loss = 0.0000, eval: [6.9 s]
# Iteration 33 fit: [6.5 s]: Recall = 0.0659, Jaccard score = 0.0368, loss = 0.1121, val_loss = 0.0000, eval: [6.9 s]
# Iteration 34 fit: [6.5 s]: Recall = 0.0643, Jaccard score = 0.0359, loss = 0.1072, val_loss = 0.0000, eval: [6.9 s]
# Iteration 35 fit: [6.7 s]: Recall = 0.0655, Jaccard score = 0.0366, loss = 0.1021, val_loss = 0.0000, eval: [6.9 s]
# Iteration 36 fit: [6.7 s]: Recall = 0.0706, Jaccard score = 0.0396, loss = 0.0982, val_loss = 0.0000, eval: [6.9 s]
# Iteration 37 fit: [6.5 s]: Recall = 0.0681, Jaccard score = 0.0382, loss = 0.0943, val_loss = 0.0000, eval: [6.9 s]
# Iteration 38 fit: [6.5 s]: Recall = 0.0698, Jaccard score = 0.0391, loss = 0.0904, val_loss = 0.0000, eval: [6.9 s]
# Iteration 39 fit: [6.5 s]: Recall = 0.0640, Jaccard score = 0.0357, loss = 0.0870, val_loss = 0.0000, eval: [6.9 s]
# Iteration 40 fit: [6.6 s]: Recall = 0.0695, Jaccard score = 0.0389, loss = 0.0845, val_loss = 0.0000, eval: [6.9 s]
# Iteration 41 fit: [6.5 s]: Recall = 0.0742, Jaccard score = 0.0417, loss = 0.0808, val_loss = 0.0000, eval: [6.9 s]
# Iteration 42 fit: [6.5 s]: Recall = 0.0698, Jaccard score = 0.0391, loss = 0.0789, val_loss = 0.0000, eval: [6.9 s]
# Iteration 43 fit: [6.5 s]: Recall = 0.0725, Jaccard score = 0.0407, loss = 0.0757, val_loss = 0.0000, eval: [6.9 s]
# Iteration 44 fit: [6.5 s]: Recall = 0.0704, Jaccard score = 0.0395, loss = 0.0724, val_loss = 0.0000, eval: [6.9 s]
# Iteration 45 fit: [6.6 s]: Recall = 0.0717, Jaccard score = 0.0403, loss = 0.0712, val_loss = 0.0000, eval: [6.9 s]
# Iteration 46 fit: [6.5 s]: Recall = 0.0763, Jaccard score = 0.0429, loss = 0.0684, val_loss = 0.0000, eval: [6.9 s]
# Iteration 47 fit: [6.5 s]: Recall = 0.0744, Jaccard score = 0.0418, loss = 0.0658, val_loss = 0.0000, eval: [6.9 s]
# Iteration 48 fit: [6.5 s]: Recall = 0.0755, Jaccard score = 0.0425, loss = 0.0645, val_loss = 0.0000, eval: [6.9 s]
# Iteration 49 fit: [6.5 s]: Recall = 0.0763, Jaccard score = 0.0429, loss = 0.0622, val_loss = 0.0000, eval: [6.9 s]
# Iteration 50 fit: [6.6 s]: Recall = 0.0780, Jaccard score = 0.0439, loss = 0.0601, val_loss = 0.0000, eval: [6.9 s]
# Iteration 51 fit: [6.5 s]: Recall = 0.0795, Jaccard score = 0.0448, loss = 0.0588, val_loss = 0.0000, eval: [6.9 s]
# Iteration 52 fit: [6.5 s]: Recall = 0.0769, Jaccard score = 0.0433, loss = 0.0573, val_loss = 0.0000, eval: [6.9 s]
# Iteration 53 fit: [6.5 s]: Recall = 0.0771, Jaccard score = 0.0434, loss = 0.0555, val_loss = 0.0000, eval: [6.9 s]
# Iteration 54 fit: [6.5 s]: Recall = 0.0761, Jaccard score = 0.0428, loss = 0.0529, val_loss = 0.0000, eval: [6.9 s]
# Iteration 55 fit: [6.5 s]: Recall = 0.0788, Jaccard score = 0.0444, loss = 0.0527, val_loss = 0.0000, eval: [6.9 s]
# Iteration 56 fit: [6.6 s]: Recall = 0.0799, Jaccard score = 0.0450, loss = 0.0511, val_loss = 0.0000, eval: [6.9 s]
# Iteration 57 fit: [6.5 s]: Recall = 0.0780, Jaccard score = 0.0439, loss = 0.0498, val_loss = 0.0000, eval: [7.0 s]
# Iteration 58 fit: [7.1 s]: Recall = 0.0784, Jaccard score = 0.0441, loss = 0.0485, val_loss = 0.0000, eval: [6.9 s]
# Iteration 59 fit: [6.5 s]: Recall = 0.0759, Jaccard score = 0.0427, loss = 0.0478, val_loss = 0.0000, eval: [7.2 s]
# Iteration 60 fit: [6.6 s]: Recall = 0.0826, Jaccard score = 0.0466, loss = 0.0460, val_loss = 0.0000, eval: [6.9 s]
# Iteration 61 fit: [6.5 s]: Recall = 0.0807, Jaccard score = 0.0455, loss = 0.0459, val_loss = 0.0000, eval: [6.9 s]
# Iteration 62 fit: [6.5 s]: Recall = 0.0769, Jaccard score = 0.0433, loss = 0.0437, val_loss = 0.0000, eval: [7.2 s]
# Iteration 63 fit: [6.9 s]: Recall = 0.0829, Jaccard score = 0.0468, loss = 0.0429, val_loss = 0.0000, eval: [7.4 s]
# Iteration 64 fit: [6.6 s]: Recall = 0.0799, Jaccard score = 0.0450, loss = 0.0420, val_loss = 0.0000, eval: [6.9 s]
# Iteration 65 fit: [6.5 s]: Recall = 0.0829, Jaccard score = 0.0468, loss = 0.0414, val_loss = 0.0000, eval: [6.9 s]
# Iteration 66 fit: [6.7 s]: Recall = 0.0801, Jaccard score = 0.0451, loss = 0.0414, val_loss = 0.0000, eval: [6.9 s]
# Iteration 67 fit: [6.5 s]: Recall = 0.0845, Jaccard score = 0.0477, loss = 0.0404, val_loss = 0.0000, eval: [6.9 s]
# Iteration 68 fit: [6.6 s]: Recall = 0.0848, Jaccard score = 0.0480, loss = 0.0382, val_loss = 0.0000, eval: [6.9 s]
# Iteration 69 fit: [6.5 s]: Recall = 0.0845, Jaccard score = 0.0477, loss = 0.0368, val_loss = 0.0000, eval: [6.9 s]
# Iteration 70 fit: [6.5 s]: Recall = 0.0852, Jaccard score = 0.0482, loss = 0.0377, val_loss = 0.0000, eval: [6.9 s]
# Iteration 71 fit: [6.5 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0363, val_loss = 0.0000, eval: [6.9 s]
# Iteration 72 fit: [6.5 s]: Recall = 0.0826, Jaccard score = 0.0466, loss = 0.0365, val_loss = 0.0000, eval: [6.9 s]
# Iteration 73 fit: [6.5 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0350, val_loss = 0.0000, eval: [6.9 s]
# Iteration 74 fit: [6.5 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0351, val_loss = 0.0000, eval: [6.9 s]
# Iteration 75 fit: [6.5 s]: Recall = 0.0864, Jaccard score = 0.0489, loss = 0.0341, val_loss = 0.0000, eval: [6.9 s]
# Iteration 76 fit: [6.5 s]: Recall = 0.0871, Jaccard score = 0.0493, loss = 0.0330, val_loss = 0.0000, eval: [6.9 s]
# Iteration 77 fit: [6.5 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0326, val_loss = 0.0000, eval: [7.0 s]
# Iteration 78 fit: [6.5 s]: Recall = 0.0862, Jaccard score = 0.0487, loss = 0.0327, val_loss = 0.0000, eval: [6.9 s]
# Iteration 79 fit: [6.5 s]: Recall = 0.0858, Jaccard score = 0.0485, loss = 0.0322, val_loss = 0.0000, eval: [6.9 s]
# Iteration 80 fit: [6.5 s]: Recall = 0.0881, Jaccard score = 0.0499, loss = 0.0322, val_loss = 0.0000, eval: [6.9 s]
# Iteration 81 fit: [6.5 s]: Recall = 0.0905, Jaccard score = 0.0513, loss = 0.0306, val_loss = 0.0000, eval: [6.9 s]
# Iteration 82 fit: [6.5 s]: Recall = 0.0881, Jaccard score = 0.0499, loss = 0.0311, val_loss = 0.0000, eval: [6.9 s]
# Iteration 83 fit: [6.5 s]: Recall = 0.0812, Jaccard score = 0.0458, loss = 0.0300, val_loss = 0.0000, eval: [6.9 s]
# Iteration 84 fit: [6.5 s]: Recall = 0.0858, Jaccard score = 0.0485, loss = 0.0297, val_loss = 0.0000, eval: [6.9 s]
# Iteration 85 fit: [6.5 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0289, val_loss = 0.0000, eval: [6.9 s]
# Iteration 86 fit: [6.5 s]: Recall = 0.0875, Jaccard score = 0.0495, loss = 0.0292, val_loss = 0.0000, eval: [7.3 s]
# Iteration 87 fit: [6.5 s]: Recall = 0.0888, Jaccard score = 0.0503, loss = 0.0289, val_loss = 0.0000, eval: [6.9 s]
# Iteration 88 fit: [6.5 s]: Recall = 0.0862, Jaccard score = 0.0487, loss = 0.0280, val_loss = 0.0000, eval: [6.9 s]
# Iteration 89 fit: [6.6 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0279, val_loss = 0.0000, eval: [6.9 s]
# Iteration 90 fit: [6.6 s]: Recall = 0.0871, Jaccard score = 0.0493, loss = 0.0268, val_loss = 0.0000, eval: [6.9 s]
# Iteration 91 fit: [6.6 s]: Recall = 0.0848, Jaccard score = 0.0480, loss = 0.0271, val_loss = 0.0000, eval: [6.9 s]
# Iteration 92 fit: [6.5 s]: Recall = 0.0852, Jaccard score = 0.0482, loss = 0.0269, val_loss = 0.0000, eval: [6.9 s]
# Iteration 93 fit: [6.5 s]: Recall = 0.0854, Jaccard score = 0.0483, loss = 0.0269, val_loss = 0.0000, eval: [6.9 s]
# Iteration 94 fit: [6.5 s]: Recall = 0.0865, Jaccard score = 0.0490, loss = 0.0267, val_loss = 0.0000, eval: [6.9 s]
# Iteration 95 fit: [6.5 s]: Recall = 0.0877, Jaccard score = 0.0496, loss = 0.0261, val_loss = 0.0000, eval: [6.9 s]
# Iteration 96 fit: [6.5 s]: Recall = 0.0894, Jaccard score = 0.0507, loss = 0.0256, val_loss = 0.0000, eval: [6.9 s]
# Iteration 97 fit: [6.5 s]: Recall = 0.0892, Jaccard score = 0.0505, loss = 0.0251, val_loss = 0.0000, eval: [6.9 s]
# Iteration 98 fit: [6.5 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0252, val_loss = 0.0000, eval: [6.9 s]
# Iteration 99 fit: [6.5 s]: Recall = 0.0896, Jaccard score = 0.0508, loss = 0.0239, val_loss = 0.0000, eval: [6.9 s]
# Iteration 100 fit: [6.5 s]: Recall = 0.0901, Jaccard score = 0.0511, loss = 0.0253, val_loss = 0.0000, eval: [6.9 s]
# Iteration 101 fit: [6.5 s]: Recall = 0.0846, Jaccard score = 0.0478, loss = 0.0248, val_loss = 0.0000, eval: [6.9 s]
# Iteration 102 fit: [6.5 s]: Recall = 0.0862, Jaccard score = 0.0487, loss = 0.0246, val_loss = 0.0000, eval: [6.9 s]
# Iteration 103 fit: [6.5 s]: Recall = 0.0858, Jaccard score = 0.0485, loss = 0.0241, val_loss = 0.0000, eval: [6.9 s]
# Iteration 104 fit: [6.5 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0243, val_loss = 0.0000, eval: [6.9 s]
# Iteration 105 fit: [6.5 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0239, val_loss = 0.0000, eval: [6.9 s]
# Iteration 106 fit: [6.5 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0232, val_loss = 0.0000, eval: [6.9 s]
# Iteration 107 fit: [6.5 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0233, val_loss = 0.0000, eval: [6.9 s]
# Iteration 108 fit: [6.5 s]: Recall = 0.0881, Jaccard score = 0.0499, loss = 0.0227, val_loss = 0.0000, eval: [6.9 s]
# Iteration 109 fit: [6.5 s]: Recall = 0.0871, Jaccard score = 0.0493, loss = 0.0226, val_loss = 0.0000, eval: [6.9 s]
# Iteration 110 fit: [6.5 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0229, val_loss = 0.0000, eval: [6.9 s]
# Iteration 111 fit: [6.5 s]: Recall = 0.0881, Jaccard score = 0.0499, loss = 0.0225, val_loss = 0.0000, eval: [6.9 s]
# Iteration 112 fit: [6.5 s]: Recall = 0.0896, Jaccard score = 0.0508, loss = 0.0223, val_loss = 0.0000, eval: [7.0 s]
# Iteration 113 fit: [6.5 s]: Recall = 0.0884, Jaccard score = 0.0501, loss = 0.0223, val_loss = 0.0000, eval: [6.9 s]
# Iteration 114 fit: [6.5 s]: Recall = 0.0888, Jaccard score = 0.0503, loss = 0.0227, val_loss = 0.0000, eval: [6.9 s]
# Iteration 115 fit: [6.5 s]: Recall = 0.0926, Jaccard score = 0.0526, loss = 0.0222, val_loss = 0.0000, eval: [6.9 s]
# Iteration 116 fit: [6.5 s]: Recall = 0.0879, Jaccard score = 0.0498, loss = 0.0222, val_loss = 0.0000, eval: [6.9 s]
# Iteration 117 fit: [6.5 s]: Recall = 0.0900, Jaccard score = 0.0510, loss = 0.0215, val_loss = 0.0000, eval: [6.9 s]
# Iteration 118 fit: [6.5 s]: Recall = 0.0879, Jaccard score = 0.0498, loss = 0.0205, val_loss = 0.0000, eval: [6.9 s]
# Iteration 119 fit: [6.5 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0211, val_loss = 0.0000, eval: [6.9 s]
# Iteration 120 fit: [6.5 s]: Recall = 0.0939, Jaccard score = 0.0534, loss = 0.0214, val_loss = 0.0000, eval: [6.9 s]
# Iteration 121 fit: [6.5 s]: Recall = 0.0901, Jaccard score = 0.0511, loss = 0.0210, val_loss = 0.0000, eval: [6.9 s]
# Iteration 122 fit: [6.5 s]: Recall = 0.0898, Jaccard score = 0.0509, loss = 0.0207, val_loss = 0.0000, eval: [6.9 s]
# Iteration 123 fit: [6.5 s]: Recall = 0.0930, Jaccard score = 0.0528, loss = 0.0209, val_loss = 0.0000, eval: [6.9 s]
# Iteration 124 fit: [6.5 s]: Recall = 0.0920, Jaccard score = 0.0522, loss = 0.0212, val_loss = 0.0000, eval: [6.9 s]
# Iteration 125 fit: [6.5 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0208, val_loss = 0.0000, eval: [6.9 s]
# Iteration 126 fit: [6.5 s]: Recall = 0.0920, Jaccard score = 0.0522, loss = 0.0204, val_loss = 0.0000, eval: [6.9 s]
# Iteration 127 fit: [6.5 s]: Recall = 0.0928, Jaccard score = 0.0527, loss = 0.0199, val_loss = 0.0000, eval: [6.9 s]
# Iteration 128 fit: [6.6 s]: Recall = 0.0890, Jaccard score = 0.0504, loss = 0.0208, val_loss = 0.0000, eval: [6.9 s]
# Iteration 129 fit: [6.5 s]: Recall = 0.0924, Jaccard score = 0.0525, loss = 0.0205, val_loss = 0.0000, eval: [6.9 s]
# End. Best Iteration 120:  Recall = 0.0939, Jaccard score = 0.0534. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128]_1560242683.h5
