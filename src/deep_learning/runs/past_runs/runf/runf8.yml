--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "50"
--layers: "[1024,512,256]"
--reg_layers: "[0,0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=50, eval_recall=1, is_tag=1, layers='[1024,512,256]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[1024,512,256]_1560269271.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0027, Jaccard score = 0.0014
# Iteration 0 fit: [26.1 s]: Recall = 0.0277, Jaccard score = 0.0152, loss = 0.4517, val_loss = 0.0000, eval: [9.2 s]
# Iteration 1 fit: [25.1 s]: Recall = 0.0279, Jaccard score = 0.0153, loss = 0.4409, val_loss = 0.0000, eval: [8.5 s]
# Iteration 2 fit: [25.3 s]: Recall = 0.0311, Jaccard score = 0.0171, loss = 0.4284, val_loss = 0.0000, eval: [8.6 s]
# Iteration 3 fit: [25.1 s]: Recall = 0.0492, Jaccard score = 0.0272, loss = 0.3967, val_loss = 0.0000, eval: [9.2 s]
# Iteration 4 fit: [25.1 s]: Recall = 0.0530, Jaccard score = 0.0294, loss = 0.3539, val_loss = 0.0000, eval: [8.9 s]
# Iteration 5 fit: [25.2 s]: Recall = 0.0712, Jaccard score = 0.0399, loss = 0.3083, val_loss = 0.0000, eval: [8.8 s]
# Iteration 6 fit: [25.1 s]: Recall = 0.0607, Jaccard score = 0.0339, loss = 0.2638, val_loss = 0.0000, eval: [8.5 s]
# Iteration 7 fit: [25.2 s]: Recall = 0.0698, Jaccard score = 0.0391, loss = 0.2243, val_loss = 0.0000, eval: [8.5 s]
# Iteration 8 fit: [25.3 s]: Recall = 0.0716, Jaccard score = 0.0401, loss = 0.1902, val_loss = 0.0000, eval: [9.0 s]
# Iteration 9 fit: [25.3 s]: Recall = 0.0704, Jaccard score = 0.0395, loss = 0.1620, val_loss = 0.0000, eval: [8.6 s]
# Iteration 10 fit: [25.1 s]: Recall = 0.0693, Jaccard score = 0.0388, loss = 0.1394, val_loss = 0.0000, eval: [9.0 s]
# Iteration 11 fit: [25.4 s]: Recall = 0.0721, Jaccard score = 0.0405, loss = 0.1222, val_loss = 0.0000, eval: [9.3 s]
# Iteration 12 fit: [25.4 s]: Recall = 0.0729, Jaccard score = 0.0409, loss = 0.1085, val_loss = 0.0000, eval: [8.6 s]
# Iteration 13 fit: [25.1 s]: Recall = 0.0767, Jaccard score = 0.0431, loss = 0.0965, val_loss = 0.0000, eval: [8.5 s]
# Iteration 14 fit: [25.1 s]: Recall = 0.0731, Jaccard score = 0.0410, loss = 0.0874, val_loss = 0.0000, eval: [10.0 s]
# Iteration 15 fit: [25.1 s]: Recall = 0.0689, Jaccard score = 0.0386, loss = 0.0795, val_loss = 0.0000, eval: [9.2 s]
# Iteration 16 fit: [25.3 s]: Recall = 0.0763, Jaccard score = 0.0429, loss = 0.0734, val_loss = 0.0000, eval: [8.7 s]
# Iteration 17 fit: [25.2 s]: Recall = 0.0820, Jaccard score = 0.0463, loss = 0.0672, val_loss = 0.0000, eval: [8.7 s]
# Iteration 18 fit: [25.4 s]: Recall = 0.0790, Jaccard score = 0.0445, loss = 0.0631, val_loss = 0.0000, eval: [8.5 s]
# Iteration 19 fit: [25.2 s]: Recall = 0.0833, Jaccard score = 0.0471, loss = 0.0579, val_loss = 0.0000, eval: [8.8 s]
# Iteration 20 fit: [25.3 s]: Recall = 0.0795, Jaccard score = 0.0448, loss = 0.0548, val_loss = 0.0000, eval: [8.8 s]
# Iteration 21 fit: [25.1 s]: Recall = 0.0833, Jaccard score = 0.0471, loss = 0.0502, val_loss = 0.0000, eval: [8.7 s]
# Iteration 22 fit: [25.2 s]: Recall = 0.0818, Jaccard score = 0.0462, loss = 0.0475, val_loss = 0.0000, eval: [9.4 s]
# Iteration 23 fit: [25.2 s]: Recall = 0.0809, Jaccard score = 0.0456, loss = 0.0452, val_loss = 0.0000, eval: [8.7 s]
# Iteration 24 fit: [25.3 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0429, val_loss = 0.0000, eval: [9.2 s]
# Iteration 25 fit: [25.2 s]: Recall = 0.0820, Jaccard score = 0.0463, loss = 0.0405, val_loss = 0.0000, eval: [9.7 s]
# Iteration 26 fit: [25.4 s]: Recall = 0.0877, Jaccard score = 0.0496, loss = 0.0384, val_loss = 0.0000, eval: [8.8 s]
# Iteration 27 fit: [25.2 s]: Recall = 0.0862, Jaccard score = 0.0487, loss = 0.0362, val_loss = 0.0000, eval: [9.0 s]
# Iteration 28 fit: [25.3 s]: Recall = 0.0835, Jaccard score = 0.0472, loss = 0.0343, val_loss = 0.0000, eval: [9.2 s]
# Iteration 29 fit: [25.4 s]: Recall = 0.0827, Jaccard score = 0.0467, loss = 0.0327, val_loss = 0.0000, eval: [8.5 s]
# Iteration 30 fit: [25.1 s]: Recall = 0.0835, Jaccard score = 0.0472, loss = 0.0317, val_loss = 0.0000, eval: [10.0 s]
# Iteration 31 fit: [25.3 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0302, val_loss = 0.0000, eval: [8.7 s]
# Iteration 32 fit: [25.2 s]: Recall = 0.0877, Jaccard score = 0.0496, loss = 0.0287, val_loss = 0.0000, eval: [9.2 s]
# Iteration 33 fit: [25.3 s]: Recall = 0.0879, Jaccard score = 0.0498, loss = 0.0276, val_loss = 0.0000, eval: [9.0 s]
# Iteration 34 fit: [25.2 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0268, val_loss = 0.0000, eval: [8.6 s]
# Iteration 35 fit: [25.2 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0253, val_loss = 0.0000, eval: [9.8 s]
# Iteration 36 fit: [25.2 s]: Recall = 0.0865, Jaccard score = 0.0490, loss = 0.0242, val_loss = 0.0000, eval: [9.0 s]
# Iteration 37 fit: [25.4 s]: Recall = 0.0881, Jaccard score = 0.0499, loss = 0.0240, val_loss = 0.0000, eval: [9.4 s]
# Iteration 38 fit: [25.3 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0229, val_loss = 0.0000, eval: [9.5 s]
# Iteration 39 fit: [25.2 s]: Recall = 0.0864, Jaccard score = 0.0489, loss = 0.0222, val_loss = 0.0000, eval: [9.1 s]
# Iteration 40 fit: [25.3 s]: Recall = 0.0892, Jaccard score = 0.0505, loss = 0.0218, val_loss = 0.0000, eval: [9.0 s]
# Iteration 41 fit: [25.2 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0212, val_loss = 0.0000, eval: [8.7 s]
# Iteration 42 fit: [25.1 s]: Recall = 0.0879, Jaccard score = 0.0498, loss = 0.0201, val_loss = 0.0000, eval: [9.3 s]
# Iteration 43 fit: [25.1 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0198, val_loss = 0.0000, eval: [9.0 s]
# Iteration 44 fit: [25.3 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0185, val_loss = 0.0000, eval: [9.7 s]
# Iteration 45 fit: [25.2 s]: Recall = 0.0890, Jaccard score = 0.0504, loss = 0.0175, val_loss = 0.0000, eval: [9.2 s]
# Iteration 46 fit: [25.2 s]: Recall = 0.0898, Jaccard score = 0.0509, loss = 0.0179, val_loss = 0.0000, eval: [8.7 s]
# Iteration 47 fit: [25.2 s]: Recall = 0.0898, Jaccard score = 0.0509, loss = 0.0166, val_loss = 0.0000, eval: [8.4 s]
# Iteration 48 fit: [25.2 s]: Recall = 0.0881, Jaccard score = 0.0499, loss = 0.0167, val_loss = 0.0000, eval: [8.7 s]
# Iteration 49 fit: [25.3 s]: Recall = 0.0797, Jaccard score = 0.0449, loss = 0.0159, val_loss = 0.0000, eval: [9.3 s]
# End. Best Iteration 38:  Recall = 0.0903, Jaccard score = 0.0512. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[1024,512,256]_1560269271.h5
