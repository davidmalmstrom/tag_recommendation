--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "130"
--layers: "[128,128]"
--reg_layers: "[0,0]"
--test_dataset: "1"

# Did not change train after split //fail

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=130, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1561736613.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1561736613.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=170756, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0336, Jaccard score = 0.0204
# Iteration 0 fit: [9.8 s]: Recall = 0.1700, Jaccard score = 0.1126, loss = 0.4403, eval: [6.4 s]
# Iteration 1 fit: [9.4 s]: Recall = 0.1726, Jaccard score = 0.1145, loss = 0.4212, eval: [6.4 s]
# Iteration 2 fit: [9.3 s]: Recall = 0.1743, Jaccard score = 0.1158, loss = 0.4186, eval: [6.4 s]
# Iteration 3 fit: [9.4 s]: Recall = 0.1760, Jaccard score = 0.1171, loss = 0.4154, eval: [6.4 s]
# Iteration 4 fit: [9.3 s]: Recall = 0.1843, Jaccard score = 0.1232, loss = 0.4096, eval: [6.4 s]
# Iteration 5 fit: [9.3 s]: Recall = 0.1930, Jaccard score = 0.1298, loss = 0.4008, eval: [6.4 s]
# Iteration 6 fit: [9.3 s]: Recall = 0.2128, Jaccard score = 0.1451, loss = 0.3887, eval: [6.4 s]
# Iteration 7 fit: [9.3 s]: Recall = 0.2272, Jaccard score = 0.1564, loss = 0.3732, eval: [6.4 s]
# Iteration 8 fit: [9.3 s]: Recall = 0.2527, Jaccard score = 0.1771, loss = 0.3561, eval: [6.4 s]
# Iteration 9 fit: [9.3 s]: Recall = 0.2726, Jaccard score = 0.1938, loss = 0.3396, eval: [6.4 s]
# Iteration 10 fit: [9.3 s]: Recall = 0.2943, Jaccard score = 0.2124, loss = 0.3224, eval: [6.4 s]
# Iteration 11 fit: [9.3 s]: Recall = 0.3162, Jaccard score = 0.2320, loss = 0.3055, eval: [6.4 s]
# Iteration 12 fit: [9.3 s]: Recall = 0.3324, Jaccard score = 0.2468, loss = 0.2888, eval: [6.4 s]
# Iteration 13 fit: [9.3 s]: Recall = 0.3496, Jaccard score = 0.2629, loss = 0.2742, eval: [6.4 s]
# Iteration 14 fit: [9.3 s]: Recall = 0.3677, Jaccard score = 0.2802, loss = 0.2594, eval: [6.4 s]
# Iteration 15 fit: [9.3 s]: Recall = 0.3810, Jaccard score = 0.2934, loss = 0.2459, eval: [6.4 s]
# Iteration 16 fit: [9.3 s]: Recall = 0.3990, Jaccard score = 0.3116, loss = 0.2324, eval: [6.5 s]
# Iteration 17 fit: [9.3 s]: Recall = 0.4101, Jaccard score = 0.3231, loss = 0.2204, eval: [6.4 s]
# Iteration 18 fit: [9.3 s]: Recall = 0.4280, Jaccard score = 0.3420, loss = 0.2089, eval: [6.4 s]
# Iteration 19 fit: [9.3 s]: Recall = 0.4328, Jaccard score = 0.3471, loss = 0.1981, eval: [6.4 s]
# Iteration 20 fit: [9.3 s]: Recall = 0.4410, Jaccard score = 0.3561, loss = 0.1885, eval: [6.4 s]
# Iteration 21 fit: [9.3 s]: Recall = 0.4634, Jaccard score = 0.3810, loss = 0.1785, eval: [6.4 s]
# Iteration 22 fit: [9.3 s]: Recall = 0.4692, Jaccard score = 0.3877, loss = 0.1697, eval: [6.5 s]
# Iteration 23 fit: [9.3 s]: Recall = 0.4747, Jaccard score = 0.3940, loss = 0.1610, eval: [6.4 s]
# Iteration 24 fit: [9.3 s]: Recall = 0.4857, Jaccard score = 0.4068, loss = 0.1535, eval: [6.4 s]
# Iteration 25 fit: [9.3 s]: Recall = 0.4933, Jaccard score = 0.4158, loss = 0.1454, eval: [6.4 s]
# Iteration 26 fit: [9.3 s]: Recall = 0.4993, Jaccard score = 0.4230, loss = 0.1383, eval: [6.4 s]
# Iteration 27 fit: [9.3 s]: Recall = 0.5109, Jaccard score = 0.4372, loss = 0.1324, eval: [6.4 s]
# Iteration 28 fit: [9.3 s]: Recall = 0.5163, Jaccard score = 0.4438, loss = 0.1260, eval: [6.4 s]
# Iteration 29 fit: [9.3 s]: Recall = 0.5263, Jaccard score = 0.4564, loss = 0.1196, eval: [6.4 s]
# Iteration 30 fit: [9.3 s]: Recall = 0.5271, Jaccard score = 0.4574, loss = 0.1146, eval: [6.4 s]
# Iteration 31 fit: [9.3 s]: Recall = 0.5374, Jaccard score = 0.4705, loss = 0.1102, eval: [6.4 s]
# Iteration 32 fit: [9.3 s]: Recall = 0.5486, Jaccard score = 0.4851, loss = 0.1048, eval: [6.4 s]
# Iteration 33 fit: [9.3 s]: Recall = 0.5473, Jaccard score = 0.4833, loss = 0.0996, eval: [6.4 s]
# Iteration 34 fit: [9.3 s]: Recall = 0.5548, Jaccard score = 0.4932, loss = 0.0960, eval: [6.4 s]
# Iteration 35 fit: [9.3 s]: Recall = 0.5603, Jaccard score = 0.5006, loss = 0.0924, eval: [6.4 s]
# Iteration 36 fit: [9.3 s]: Recall = 0.5661, Jaccard score = 0.5084, loss = 0.0891, eval: [6.4 s]
# Iteration 37 fit: [9.3 s]: Recall = 0.5720, Jaccard score = 0.5164, loss = 0.0859, eval: [6.4 s]
# Iteration 38 fit: [9.3 s]: Recall = 0.5772, Jaccard score = 0.5236, loss = 0.0817, eval: [6.4 s]
# Iteration 39 fit: [9.3 s]: Recall = 0.5825, Jaccard score = 0.5310, loss = 0.0791, eval: [6.4 s]
# Iteration 40 fit: [9.3 s]: Recall = 0.5874, Jaccard score = 0.5378, loss = 0.0758, eval: [6.5 s]
# Iteration 41 fit: [9.3 s]: Recall = 0.5942, Jaccard score = 0.5474, loss = 0.0738, eval: [6.4 s]
# Iteration 42 fit: [9.3 s]: Recall = 0.5878, Jaccard score = 0.5384, loss = 0.0715, eval: [6.4 s]
# Iteration 43 fit: [9.3 s]: Recall = 0.5986, Jaccard score = 0.5538, loss = 0.0684, eval: [6.4 s]
# Iteration 44 fit: [9.3 s]: Recall = 0.5978, Jaccard score = 0.5526, loss = 0.0662, eval: [6.4 s]
# Iteration 45 fit: [9.3 s]: Recall = 0.6051, Jaccard score = 0.5631, loss = 0.0644, eval: [6.4 s]
# Iteration 46 fit: [9.3 s]: Recall = 0.6034, Jaccard score = 0.5606, loss = 0.0623, eval: [6.4 s]
# Iteration 47 fit: [9.3 s]: Recall = 0.6062, Jaccard score = 0.5647, loss = 0.0607, eval: [6.4 s]
# Iteration 48 fit: [9.3 s]: Recall = 0.6129, Jaccard score = 0.5745, loss = 0.0589, eval: [6.4 s]
# Iteration 49 fit: [9.3 s]: Recall = 0.6143, Jaccard score = 0.5767, loss = 0.0571, eval: [6.5 s]
# Iteration 50 fit: [9.3 s]: Recall = 0.6154, Jaccard score = 0.5782, loss = 0.0546, eval: [6.5 s]
# Iteration 51 fit: [9.3 s]: Recall = 0.6169, Jaccard score = 0.5806, loss = 0.0535, eval: [6.4 s]
# Iteration 52 fit: [9.3 s]: Recall = 0.6260, Jaccard score = 0.5942, loss = 0.0519, eval: [6.4 s]
# Iteration 53 fit: [9.3 s]: Recall = 0.6227, Jaccard score = 0.5892, loss = 0.0517, eval: [6.4 s]
# Iteration 54 fit: [9.3 s]: Recall = 0.6250, Jaccard score = 0.5926, loss = 0.0489, eval: [6.5 s]
# Iteration 55 fit: [9.3 s]: Recall = 0.6257, Jaccard score = 0.5937, loss = 0.0488, eval: [6.4 s]
# Iteration 56 fit: [9.3 s]: Recall = 0.6290, Jaccard score = 0.5986, loss = 0.0476, eval: [6.4 s]
# Iteration 57 fit: [9.3 s]: Recall = 0.6317, Jaccard score = 0.6028, loss = 0.0462, eval: [6.4 s]
# Iteration 58 fit: [9.3 s]: Recall = 0.6333, Jaccard score = 0.6052, loss = 0.0456, eval: [6.4 s]
# Iteration 59 fit: [9.3 s]: Recall = 0.6337, Jaccard score = 0.6059, loss = 0.0442, eval: [6.4 s]
# Iteration 60 fit: [9.3 s]: Recall = 0.6384, Jaccard score = 0.6131, loss = 0.0430, eval: [6.4 s]
# Iteration 61 fit: [9.3 s]: Recall = 0.6408, Jaccard score = 0.6169, loss = 0.0417, eval: [6.4 s]
# Iteration 62 fit: [9.3 s]: Recall = 0.6396, Jaccard score = 0.6150, loss = 0.0417, eval: [6.4 s]
# Iteration 63 fit: [9.3 s]: Recall = 0.6357, Jaccard score = 0.6090, loss = 0.0407, eval: [6.4 s]
# Iteration 64 fit: [9.3 s]: Recall = 0.6412, Jaccard score = 0.6175, loss = 0.0401, eval: [6.5 s]
# Iteration 65 fit: [9.3 s]: Recall = 0.6432, Jaccard score = 0.6207, loss = 0.0393, eval: [6.5 s]
# Iteration 66 fit: [9.3 s]: Recall = 0.6448, Jaccard score = 0.6231, loss = 0.0378, eval: [6.4 s]
# Iteration 67 fit: [9.3 s]: Recall = 0.6442, Jaccard score = 0.6223, loss = 0.0372, eval: [6.4 s]
# Iteration 68 fit: [9.3 s]: Recall = 0.6463, Jaccard score = 0.6255, loss = 0.0378, eval: [6.4 s]
# Iteration 69 fit: [9.3 s]: Recall = 0.6479, Jaccard score = 0.6280, loss = 0.0358, eval: [6.4 s]
# Iteration 70 fit: [9.3 s]: Recall = 0.6479, Jaccard score = 0.6280, loss = 0.0352, eval: [6.5 s]
# Iteration 71 fit: [9.3 s]: Recall = 0.6458, Jaccard score = 0.6247, loss = 0.0351, eval: [6.4 s]
# Iteration 72 fit: [9.3 s]: Recall = 0.6500, Jaccard score = 0.6314, loss = 0.0348, eval: [6.4 s]
# Iteration 73 fit: [9.3 s]: Recall = 0.6483, Jaccard score = 0.6287, loss = 0.0343, eval: [6.4 s]
# Iteration 74 fit: [9.3 s]: Recall = 0.6497, Jaccard score = 0.6308, loss = 0.0338, eval: [6.4 s]
# Iteration 75 fit: [9.3 s]: Recall = 0.6538, Jaccard score = 0.6373, loss = 0.0332, eval: [6.4 s]
# Iteration 76 fit: [9.3 s]: Recall = 0.6489, Jaccard score = 0.6296, loss = 0.0330, eval: [6.4 s]
# Iteration 77 fit: [9.3 s]: Recall = 0.6528, Jaccard score = 0.6359, loss = 0.0319, eval: [6.4 s]
# Iteration 78 fit: [9.3 s]: Recall = 0.6525, Jaccard score = 0.6353, loss = 0.0321, eval: [6.4 s]
# Iteration 79 fit: [9.3 s]: Recall = 0.6510, Jaccard score = 0.6330, loss = 0.0315, eval: [6.4 s]
# Iteration 80 fit: [9.3 s]: Recall = 0.6564, Jaccard score = 0.6415, loss = 0.0310, eval: [6.4 s]
# Iteration 81 fit: [9.3 s]: Recall = 0.6536, Jaccard score = 0.6371, loss = 0.0309, eval: [6.4 s]
# Iteration 82 fit: [9.3 s]: Recall = 0.6523, Jaccard score = 0.6350, loss = 0.0306, eval: [6.4 s]
# Iteration 83 fit: [9.3 s]: Recall = 0.6564, Jaccard score = 0.6415, loss = 0.0295, eval: [6.4 s]
# Iteration 84 fit: [9.3 s]: Recall = 0.6568, Jaccard score = 0.6422, loss = 0.0295, eval: [6.4 s]
# Iteration 85 fit: [9.3 s]: Recall = 0.6575, Jaccard score = 0.6433, loss = 0.0293, eval: [6.4 s]
# Iteration 86 fit: [9.3 s]: Recall = 0.6555, Jaccard score = 0.6400, loss = 0.0291, eval: [6.4 s]
# Iteration 87 fit: [9.3 s]: Recall = 0.6574, Jaccard score = 0.6431, loss = 0.0289, eval: [6.4 s]
# Iteration 88 fit: [9.3 s]: Recall = 0.6570, Jaccard score = 0.6426, loss = 0.0285, eval: [6.5 s]
# Iteration 89 fit: [9.3 s]: Recall = 0.6593, Jaccard score = 0.6462, loss = 0.0288, eval: [6.4 s]
# Iteration 90 fit: [9.3 s]: Recall = 0.6579, Jaccard score = 0.6440, loss = 0.0285, eval: [6.4 s]
# Iteration 91 fit: [9.3 s]: Recall = 0.6578, Jaccard score = 0.6438, loss = 0.0281, eval: [6.4 s]
# Iteration 92 fit: [9.3 s]: Recall = 0.6607, Jaccard score = 0.6484, loss = 0.0277, eval: [6.4 s]
# Iteration 93 fit: [9.3 s]: Recall = 0.6612, Jaccard score = 0.6493, loss = 0.0270, eval: [6.4 s]
# Iteration 94 fit: [9.3 s]: Recall = 0.6586, Jaccard score = 0.6451, loss = 0.0279, eval: [6.5 s]
# Iteration 95 fit: [9.3 s]: Recall = 0.6629, Jaccard score = 0.6521, loss = 0.0270, eval: [6.4 s]
# Iteration 96 fit: [9.3 s]: Recall = 0.6618, Jaccard score = 0.6502, loss = 0.0274, eval: [6.4 s]
# Iteration 97 fit: [9.3 s]: Recall = 0.6606, Jaccard score = 0.6482, loss = 0.0271, eval: [6.4 s]
# Iteration 98 fit: [9.3 s]: Recall = 0.6609, Jaccard score = 0.6488, loss = 0.0269, eval: [6.4 s]
# Iteration 99 fit: [9.3 s]: Recall = 0.6616, Jaccard score = 0.6499, loss = 0.0261, eval: [6.4 s]
# Iteration 100 fit: [9.3 s]: Recall = 0.6625, Jaccard score = 0.6513, loss = 0.0264, eval: [6.4 s]
# Iteration 101 fit: [9.3 s]: Recall = 0.6603, Jaccard score = 0.6478, loss = 0.0261, eval: [6.4 s]
# Iteration 102 fit: [9.3 s]: Recall = 0.6609, Jaccard score = 0.6488, loss = 0.0262, eval: [6.4 s]
# Iteration 103 fit: [9.3 s]: Recall = 0.6633, Jaccard score = 0.6526, loss = 0.0257, eval: [6.5 s]
# Iteration 104 fit: [9.3 s]: Recall = 0.6622, Jaccard score = 0.6510, loss = 0.0257, eval: [6.4 s]
# Iteration 105 fit: [9.3 s]: Recall = 0.6618, Jaccard score = 0.6502, loss = 0.0255, eval: [6.4 s]
# Iteration 106 fit: [9.3 s]: Recall = 0.6636, Jaccard score = 0.6532, loss = 0.0256, eval: [6.4 s]
# Iteration 107 fit: [9.3 s]: Recall = 0.6629, Jaccard score = 0.6521, loss = 0.0259, eval: [6.4 s]
# Iteration 108 fit: [9.3 s]: Recall = 0.6629, Jaccard score = 0.6521, loss = 0.0257, eval: [6.4 s]
# Iteration 109 fit: [9.3 s]: Recall = 0.6639, Jaccard score = 0.6537, loss = 0.0246, eval: [6.4 s]
# Iteration 110 fit: [9.3 s]: Recall = 0.6647, Jaccard score = 0.6550, loss = 0.0254, eval: [6.4 s]
# Iteration 111 fit: [9.3 s]: Recall = 0.6654, Jaccard score = 0.6561, loss = 0.0254, eval: [6.4 s]
# Iteration 112 fit: [9.3 s]: Recall = 0.6630, Jaccard score = 0.6523, loss = 0.0250, eval: [6.4 s]
# Iteration 113 fit: [9.3 s]: Recall = 0.6641, Jaccard score = 0.6539, loss = 0.0246, eval: [6.5 s]
# Iteration 114 fit: [9.3 s]: Recall = 0.6636, Jaccard score = 0.6532, loss = 0.0252, eval: [6.4 s]
# Iteration 115 fit: [9.3 s]: Recall = 0.6632, Jaccard score = 0.6524, loss = 0.0248, eval: [6.4 s]
# Iteration 116 fit: [9.3 s]: Recall = 0.6663, Jaccard score = 0.6576, loss = 0.0241, eval: [6.4 s]
# Iteration 117 fit: [9.3 s]: Recall = 0.6634, Jaccard score = 0.6528, loss = 0.0249, eval: [6.4 s]
# Iteration 118 fit: [9.3 s]: Recall = 0.6661, Jaccard score = 0.6572, loss = 0.0248, eval: [6.4 s]
# Iteration 119 fit: [9.3 s]: Recall = 0.6681, Jaccard score = 0.6606, loss = 0.0245, eval: [6.4 s]
# Iteration 120 fit: [9.3 s]: Recall = 0.6651, Jaccard score = 0.6556, loss = 0.0243, eval: [6.4 s]
# Iteration 121 fit: [9.3 s]: Recall = 0.6644, Jaccard score = 0.6545, loss = 0.0245, eval: [6.4 s]
# Iteration 122 fit: [9.3 s]: Recall = 0.6645, Jaccard score = 0.6547, loss = 0.0237, eval: [6.4 s]
# Iteration 123 fit: [9.3 s]: Recall = 0.6642, Jaccard score = 0.6541, loss = 0.0241, eval: [6.4 s]
# Iteration 124 fit: [9.3 s]: Recall = 0.6654, Jaccard score = 0.6561, loss = 0.0240, eval: [6.4 s]
# Iteration 125 fit: [9.3 s]: Recall = 0.6651, Jaccard score = 0.6556, loss = 0.0240, eval: [6.4 s]
# Iteration 126 fit: [9.3 s]: Recall = 0.6639, Jaccard score = 0.6537, loss = 0.0239, eval: [6.5 s]
# Iteration 127 fit: [9.3 s]: Recall = 0.6677, Jaccard score = 0.6598, loss = 0.0241, eval: [6.4 s]
# Iteration 128 fit: [9.3 s]: Recall = 0.6639, Jaccard score = 0.6537, loss = 0.0239, eval: [6.4 s]
# Iteration 129 fit: [9.3 s]: Recall = 0.6675, Jaccard score = 0.6595, loss = 0.0239, eval: [6.4 s]
# End. Best Iteration 119:  Recall = 0.6681, Jaccard score = 0.6606. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128]_1561736613.h5
# Model test performed 
# Recall score: 0.25710668661526065     Jaccard score: 0.17936571657968686