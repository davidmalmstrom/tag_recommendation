--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "120"
--num_factors: "64"
--num_k_folds: "10"

# FAILED because train was just appended for each k-fold.

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=120, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_k_folds=10, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# Load data done [1.9 s]. #user=18000, #item=2000, #train=161371, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0295, Jaccard score = 0.0179
# Iteration 0 fit: [8.0 s]: Recall = 0.0311, Jaccard score = 0.0188, loss = 0.5389, val_loss = 0.0000, eval: [5.5 s]
# Iteration 1 fit: [8.2 s]: Recall = 0.0283, Jaccard score = 0.0171, loss = 0.5007, val_loss = 0.0000, eval: [5.6 s]
# Iteration 2 fit: [7.6 s]: Recall = 0.0264, Jaccard score = 0.0159, loss = 0.4998, val_loss = 0.0000, eval: [5.6 s]
# Iteration 3 fit: [7.6 s]: Recall = 0.0311, Jaccard score = 0.0188, loss = 0.4967, val_loss = 0.0000, eval: [5.6 s]
# Iteration 4 fit: [7.6 s]: Recall = 0.0345, Jaccard score = 0.0209, loss = 0.4894, val_loss = 0.0000, eval: [5.6 s]
# Iteration 5 fit: [7.6 s]: Recall = 0.0388, Jaccard score = 0.0236, loss = 0.4771, val_loss = 0.0000, eval: [5.5 s]
# Iteration 6 fit: [7.5 s]: Recall = 0.0475, Jaccard score = 0.0290, loss = 0.4587, val_loss = 0.0000, eval: [5.6 s]
# Iteration 7 fit: [7.6 s]: Recall = 0.0568, Jaccard score = 0.0350, loss = 0.4350, val_loss = 0.0000, eval: [5.6 s]
# Iteration 8 fit: [7.6 s]: Recall = 0.0663, Jaccard score = 0.0410, loss = 0.4068, val_loss = 0.0000, eval: [5.5 s]
# Iteration 9 fit: [7.6 s]: Recall = 0.0785, Jaccard score = 0.0490, loss = 0.3763, val_loss = 0.0000, eval: [5.6 s]
# Iteration 10 fit: [7.5 s]: Recall = 0.0915, Jaccard score = 0.0576, loss = 0.3443, val_loss = 0.0000, eval: [5.5 s]
# Iteration 11 fit: [7.5 s]: Recall = 0.1039, Jaccard score = 0.0658, loss = 0.3135, val_loss = 0.0000, eval: [5.5 s]
# Iteration 12 fit: [7.5 s]: Recall = 0.1152, Jaccard score = 0.0736, loss = 0.2851, val_loss = 0.0000, eval: [5.6 s]
# Iteration 13 fit: [7.6 s]: Recall = 0.1211, Jaccard score = 0.0776, loss = 0.2573, val_loss = 0.0000, eval: [5.5 s]
# Iteration 14 fit: [7.6 s]: Recall = 0.1327, Jaccard score = 0.0856, loss = 0.2336, val_loss = 0.0000, eval: [5.5 s]
# Iteration 15 fit: [7.6 s]: Recall = 0.1308, Jaccard score = 0.0843, loss = 0.2123, val_loss = 0.0000, eval: [5.5 s]
# Iteration 16 fit: [7.5 s]: Recall = 0.1383, Jaccard score = 0.0896, loss = 0.1923, val_loss = 0.0000, eval: [5.5 s]
# Iteration 17 fit: [7.5 s]: Recall = 0.1442, Jaccard score = 0.0938, loss = 0.1746, val_loss = 0.0000, eval: [5.5 s]
# Iteration 18 fit: [7.5 s]: Recall = 0.1483, Jaccard score = 0.0967, loss = 0.1577, val_loss = 0.0000, eval: [5.5 s]
# Iteration 19 fit: [7.6 s]: Recall = 0.1471, Jaccard score = 0.0958, loss = 0.1421, val_loss = 0.0000, eval: [5.6 s]
# Iteration 20 fit: [7.5 s]: Recall = 0.1526, Jaccard score = 0.0998, loss = 0.1286, val_loss = 0.0000, eval: [5.5 s]
# Iteration 21 fit: [7.6 s]: Recall = 0.1559, Jaccard score = 0.1022, loss = 0.1166, val_loss = 0.0000, eval: [5.6 s]
# Iteration 22 fit: [7.5 s]: Recall = 0.1598, Jaccard score = 0.1050, loss = 0.1049, val_loss = 0.0000, eval: [5.5 s]
# Iteration 23 fit: [7.5 s]: Recall = 0.1618, Jaccard score = 0.1065, loss = 0.0946, val_loss = 0.0000, eval: [5.6 s]
# Iteration 24 fit: [7.5 s]: Recall = 0.1637, Jaccard score = 0.1079, loss = 0.0860, val_loss = 0.0000, eval: [5.6 s]
# Iteration 25 fit: [7.6 s]: Recall = 0.1686, Jaccard score = 0.1115, loss = 0.0777, val_loss = 0.0000, eval: [5.5 s]
# Iteration 26 fit: [7.5 s]: Recall = 0.1695, Jaccard score = 0.1121, loss = 0.0706, val_loss = 0.0000, eval: [5.5 s]
# Iteration 27 fit: [7.5 s]: Recall = 0.1752, Jaccard score = 0.1163, loss = 0.0640, val_loss = 0.0000, eval: [5.5 s]
# Iteration 28 fit: [7.5 s]: Recall = 0.1746, Jaccard score = 0.1158, loss = 0.0586, val_loss = 0.0000, eval: [5.5 s]
# Iteration 29 fit: [7.6 s]: Recall = 0.1791, Jaccard score = 0.1192, loss = 0.0527, val_loss = 0.0000, eval: [5.6 s]
# Iteration 30 fit: [7.5 s]: Recall = 0.1819, Jaccard score = 0.1213, loss = 0.0494, val_loss = 0.0000, eval: [5.5 s]
# Iteration 31 fit: [7.5 s]: Recall = 0.1859, Jaccard score = 0.1243, loss = 0.0451, val_loss = 0.0000, eval: [5.5 s]
# Iteration 32 fit: [7.5 s]: Recall = 0.1877, Jaccard score = 0.1256, loss = 0.0413, val_loss = 0.0000, eval: [5.5 s]
# Iteration 33 fit: [7.6 s]: Recall = 0.1938, Jaccard score = 0.1302, loss = 0.0375, val_loss = 0.0000, eval: [5.6 s]
# Iteration 34 fit: [7.5 s]: Recall = 0.1967, Jaccard score = 0.1324, loss = 0.0351, val_loss = 0.0000, eval: [5.5 s]
# Iteration 35 fit: [7.5 s]: Recall = 0.2003, Jaccard score = 0.1352, loss = 0.0331, val_loss = 0.0000, eval: [5.6 s]
# Iteration 36 fit: [7.5 s]: Recall = 0.2032, Jaccard score = 0.1375, loss = 0.0309, val_loss = 0.0000, eval: [5.5 s]
# Iteration 37 fit: [7.5 s]: Recall = 0.2084, Jaccard score = 0.1415, loss = 0.0291, val_loss = 0.0000, eval: [5.5 s]
# Iteration 38 fit: [7.5 s]: Recall = 0.2104, Jaccard score = 0.1430, loss = 0.0264, val_loss = 0.0000, eval: [5.5 s]
# Iteration 39 fit: [7.5 s]: Recall = 0.2142, Jaccard score = 0.1460, loss = 0.0258, val_loss = 0.0000, eval: [5.5 s]
# Iteration 40 fit: [7.5 s]: Recall = 0.2176, Jaccard score = 0.1486, loss = 0.0241, val_loss = 0.0000, eval: [5.6 s]
# Iteration 41 fit: [7.6 s]: Recall = 0.2196, Jaccard score = 0.1502, loss = 0.0223, val_loss = 0.0000, eval: [5.6 s]
# Iteration 42 fit: [7.5 s]: Recall = 0.2201, Jaccard score = 0.1506, loss = 0.0218, val_loss = 0.0000, eval: [5.5 s]
# Iteration 43 fit: [7.6 s]: Recall = 0.2268, Jaccard score = 0.1559, loss = 0.0203, val_loss = 0.0000, eval: [5.5 s]
# Iteration 44 fit: [7.5 s]: Recall = 0.2319, Jaccard score = 0.1599, loss = 0.0191, val_loss = 0.0000, eval: [5.6 s]
# Iteration 45 fit: [7.5 s]: Recall = 0.2316, Jaccard score = 0.1597, loss = 0.0184, val_loss = 0.0000, eval: [5.5 s]
# Iteration 46 fit: [7.5 s]: Recall = 0.2321, Jaccard score = 0.1601, loss = 0.0173, val_loss = 0.0000, eval: [5.6 s]
# Iteration 47 fit: [7.5 s]: Recall = 0.2373, Jaccard score = 0.1643, loss = 0.0167, val_loss = 0.0000, eval: [5.6 s]
# Iteration 48 fit: [7.6 s]: Recall = 0.2422, Jaccard score = 0.1683, loss = 0.0161, val_loss = 0.0000, eval: [5.6 s]
# Iteration 49 fit: [7.5 s]: Recall = 0.2411, Jaccard score = 0.1674, loss = 0.0155, val_loss = 0.0000, eval: [5.5 s]
# Iteration 50 fit: [7.6 s]: Recall = 0.2449, Jaccard score = 0.1704, loss = 0.0147, val_loss = 0.0000, eval: [5.6 s]
# Iteration 51 fit: [7.5 s]: Recall = 0.2497, Jaccard score = 0.1744, loss = 0.0152, val_loss = 0.0000, eval: [5.5 s]
# Iteration 52 fit: [7.5 s]: Recall = 0.2489, Jaccard score = 0.1737, loss = 0.0136, val_loss = 0.0000, eval: [5.6 s]
# Iteration 53 fit: [7.5 s]: Recall = 0.2515, Jaccard score = 0.1758, loss = 0.0137, val_loss = 0.0000, eval: [5.5 s]
# Iteration 54 fit: [7.6 s]: Recall = 0.2530, Jaccard score = 0.1771, loss = 0.0129, val_loss = 0.0000, eval: [5.6 s]
# Iteration 55 fit: [7.6 s]: Recall = 0.2542, Jaccard score = 0.1781, loss = 0.0125, val_loss = 0.0000, eval: [5.5 s]
# Iteration 56 fit: [7.5 s]: Recall = 0.2565, Jaccard score = 0.1800, loss = 0.0121, val_loss = 0.0000, eval: [5.6 s]
# Iteration 57 fit: [7.6 s]: Recall = 0.2607, Jaccard score = 0.1834, loss = 0.0120, val_loss = 0.0000, eval: [5.5 s]
# Iteration 58 fit: [7.5 s]: Recall = 0.2575, Jaccard score = 0.1808, loss = 0.0117, val_loss = 0.0000, eval: [5.6 s]
# Iteration 59 fit: [7.5 s]: Recall = 0.2619, Jaccard score = 0.1845, loss = 0.0112, val_loss = 0.0000, eval: [5.6 s]
# Iteration 60 fit: [7.5 s]: Recall = 0.2638, Jaccard score = 0.1861, loss = 0.0109, val_loss = 0.0000, eval: [5.6 s]
# Iteration 61 fit: [7.6 s]: Recall = 0.2675, Jaccard score = 0.1891, loss = 0.0107, val_loss = 0.0000, eval: [5.6 s]
# Iteration 62 fit: [7.5 s]: Recall = 0.2648, Jaccard score = 0.1869, loss = 0.0103, val_loss = 0.0000, eval: [5.5 s]
# Iteration 63 fit: [7.5 s]: Recall = 0.2680, Jaccard score = 0.1896, loss = 0.0104, val_loss = 0.0000, eval: [5.6 s]
# Iteration 64 fit: [7.5 s]: Recall = 0.2632, Jaccard score = 0.1855, loss = 0.0098, val_loss = 0.0000, eval: [5.6 s]
# Iteration 65 fit: [7.6 s]: Recall = 0.2710, Jaccard score = 0.1921, loss = 0.0094, val_loss = 0.0000, eval: [5.5 s]
# Iteration 66 fit: [7.5 s]: Recall = 0.2728, Jaccard score = 0.1936, loss = 0.0095, val_loss = 0.0000, eval: [5.6 s]
# Iteration 67 fit: [7.6 s]: Recall = 0.2723, Jaccard score = 0.1932, loss = 0.0094, val_loss = 0.0000, eval: [5.5 s]
# Iteration 68 fit: [7.5 s]: Recall = 0.2729, Jaccard score = 0.1937, loss = 0.0090, val_loss = 0.0000, eval: [5.6 s]
# Iteration 69 fit: [7.5 s]: Recall = 0.2723, Jaccard score = 0.1932, loss = 0.0088, val_loss = 0.0000, eval: [5.6 s]
# Iteration 70 fit: [7.5 s]: Recall = 0.2762, Jaccard score = 0.1965, loss = 0.0086, val_loss = 0.0000, eval: [5.6 s]
# Iteration 71 fit: [7.5 s]: Recall = 0.2737, Jaccard score = 0.1944, loss = 0.0086, val_loss = 0.0000, eval: [5.5 s]
# Iteration 72 fit: [7.5 s]: Recall = 0.2783, Jaccard score = 0.1983, loss = 0.0085, val_loss = 0.0000, eval: [5.6 s]
# Iteration 73 fit: [7.6 s]: Recall = 0.2810, Jaccard score = 0.2006, loss = 0.0083, val_loss = 0.0000, eval: [5.5 s]
# Iteration 74 fit: [7.5 s]: Recall = 0.2778, Jaccard score = 0.1979, loss = 0.0082, val_loss = 0.0000, eval: [5.6 s]
# Iteration 75 fit: [7.6 s]: Recall = 0.2845, Jaccard score = 0.2037, loss = 0.0079, val_loss = 0.0000, eval: [5.5 s]
# Iteration 76 fit: [7.5 s]: Recall = 0.2833, Jaccard score = 0.2026, loss = 0.0079, val_loss = 0.0000, eval: [5.5 s]
# Iteration 77 fit: [7.6 s]: Recall = 0.2850, Jaccard score = 0.2041, loss = 0.0077, val_loss = 0.0000, eval: [5.5 s]
# Iteration 78 fit: [7.6 s]: Recall = 0.2873, Jaccard score = 0.2060, loss = 0.0077, val_loss = 0.0000, eval: [5.6 s]
# Iteration 79 fit: [7.6 s]: Recall = 0.2869, Jaccard score = 0.2057, loss = 0.0077, val_loss = 0.0000, eval: [5.5 s]
# Iteration 80 fit: [7.5 s]: Recall = 0.2883, Jaccard score = 0.2069, loss = 0.0077, val_loss = 0.0000, eval: [5.6 s]
# Iteration 81 fit: [7.6 s]: Recall = 0.2849, Jaccard score = 0.2040, loss = 0.0073, val_loss = 0.0000, eval: [5.5 s]
# Iteration 82 fit: [7.6 s]: Recall = 0.2868, Jaccard score = 0.2056, loss = 0.0070, val_loss = 0.0000, eval: [5.6 s]
# Iteration 83 fit: [7.6 s]: Recall = 0.2859, Jaccard score = 0.2048, loss = 0.0072, val_loss = 0.0000, eval: [5.5 s]
# Iteration 84 fit: [7.6 s]: Recall = 0.2896, Jaccard score = 0.2080, loss = 0.0073, val_loss = 0.0000, eval: [5.5 s]
# Iteration 85 fit: [7.5 s]: Recall = 0.2881, Jaccard score = 0.2067, loss = 0.0067, val_loss = 0.0000, eval: [5.5 s]
# Iteration 86 fit: [7.5 s]: Recall = 0.2897, Jaccard score = 0.2081, loss = 0.0070, val_loss = 0.0000, eval: [5.5 s]
# Iteration 87 fit: [7.5 s]: Recall = 0.2927, Jaccard score = 0.2108, loss = 0.0069, val_loss = 0.0000, eval: [5.5 s]
# Iteration 88 fit: [7.5 s]: Recall = 0.2931, Jaccard score = 0.2111, loss = 0.0070, val_loss = 0.0000, eval: [5.5 s]
# Iteration 89 fit: [7.5 s]: Recall = 0.2945, Jaccard score = 0.2123, loss = 0.0068, val_loss = 0.0000, eval: [5.5 s]
# Iteration 90 fit: [7.5 s]: Recall = 0.2987, Jaccard score = 0.2160, loss = 0.0070, val_loss = 0.0000, eval: [5.5 s]
# Iteration 91 fit: [7.6 s]: Recall = 0.2965, Jaccard score = 0.2141, loss = 0.0065, val_loss = 0.0000, eval: [5.5 s]
# Iteration 92 fit: [7.5 s]: Recall = 0.2955, Jaccard score = 0.2132, loss = 0.0065, val_loss = 0.0000, eval: [5.5 s]
# Iteration 93 fit: [7.6 s]: Recall = 0.2954, Jaccard score = 0.2131, loss = 0.0063, val_loss = 0.0000, eval: [5.5 s]
# Iteration 94 fit: [7.5 s]: Recall = 0.2956, Jaccard score = 0.2133, loss = 0.0065, val_loss = 0.0000, eval: [5.5 s]
# Iteration 95 fit: [7.6 s]: Recall = 0.2961, Jaccard score = 0.2137, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 96 fit: [7.6 s]: Recall = 0.2980, Jaccard score = 0.2154, loss = 0.0064, val_loss = 0.0000, eval: [5.5 s]
# Iteration 97 fit: [7.6 s]: Recall = 0.2992, Jaccard score = 0.2164, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 98 fit: [7.6 s]: Recall = 0.3033, Jaccard score = 0.2201, loss = 0.0062, val_loss = 0.0000, eval: [5.7 s]
# Iteration 99 fit: [7.6 s]: Recall = 0.3008, Jaccard score = 0.2178, loss = 0.0061, val_loss = 0.0000, eval: [5.6 s]
# Iteration 100 fit: [7.6 s]: Recall = 0.3074, Jaccard score = 0.2237, loss = 0.0061, val_loss = 0.0000, eval: [5.5 s]
# Iteration 101 fit: [7.6 s]: Recall = 0.3007, Jaccard score = 0.2177, loss = 0.0062, val_loss = 0.0000, eval: [5.5 s]
# Iteration 102 fit: [7.6 s]: Recall = 0.3021, Jaccard score = 0.2190, loss = 0.0059, val_loss = 0.0000, eval: [5.6 s]
# Iteration 103 fit: [7.6 s]: Recall = 0.3033, Jaccard score = 0.2201, loss = 0.0063, val_loss = 0.0000, eval: [5.5 s]
# Iteration 104 fit: [7.6 s]: Recall = 0.2982, Jaccard score = 0.2155, loss = 0.0061, val_loss = 0.0000, eval: [5.5 s]
# Iteration 105 fit: [7.6 s]: Recall = 0.3014, Jaccard score = 0.2184, loss = 0.0060, val_loss = 0.0000, eval: [5.5 s]
# Iteration 106 fit: [7.6 s]: Recall = 0.3032, Jaccard score = 0.2200, loss = 0.0059, val_loss = 0.0000, eval: [5.5 s]
# Iteration 107 fit: [7.6 s]: Recall = 0.3062, Jaccard score = 0.2227, loss = 0.0061, val_loss = 0.0000, eval: [5.5 s]
# Iteration 108 fit: [7.5 s]: Recall = 0.3019, Jaccard score = 0.2188, loss = 0.0059, val_loss = 0.0000, eval: [5.5 s]
# Iteration 109 fit: [7.6 s]: Recall = 0.3051, Jaccard score = 0.2216, loss = 0.0059, val_loss = 0.0000, eval: [5.5 s]
# Iteration 110 fit: [7.6 s]: Recall = 0.3050, Jaccard score = 0.2215, loss = 0.0058, val_loss = 0.0000, eval: [5.5 s]
# Iteration 111 fit: [7.6 s]: Recall = 0.3062, Jaccard score = 0.2227, loss = 0.0059, val_loss = 0.0000, eval: [5.5 s]
# Iteration 112 fit: [7.6 s]: Recall = 0.3048, Jaccard score = 0.2214, loss = 0.0061, val_loss = 0.0000, eval: [5.5 s]
# Iteration 113 fit: [7.6 s]: Recall = 0.3060, Jaccard score = 0.2224, loss = 0.0061, val_loss = 0.0000, eval: [5.5 s]
# Iteration 114 fit: [7.6 s]: Recall = 0.3100, Jaccard score = 0.2260, loss = 0.0058, val_loss = 0.0000, eval: [5.6 s]
# Iteration 115 fit: [7.6 s]: Recall = 0.3062, Jaccard score = 0.2227, loss = 0.0058, val_loss = 0.0000, eval: [5.6 s]
# Iteration 116 fit: [7.6 s]: Recall = 0.3083, Jaccard score = 0.2244, loss = 0.0059, val_loss = 0.0000, eval: [5.6 s]
# Iteration 117 fit: [7.6 s]: Recall = 0.3056, Jaccard score = 0.2221, loss = 0.0059, val_loss = 0.0000, eval: [5.6 s]
# Iteration 118 fit: [7.6 s]: Recall = 0.3085, Jaccard score = 0.2247, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 119 fit: [7.6 s]: Recall = 0.3084, Jaccard score = 0.2246, loss = 0.0057, val_loss = 0.0000, eval: [5.6 s]
# End. Best Iteration 114:  Recall = 0.3100, Jaccard score = 0.2260. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 1 is: Recall = 0.3100227215349659, Jaccard score = 0.22602613657279588
# 
# Performing k-fold 2
# Init: Recall = 0.0269, Jaccard score = 0.0162
# Iteration 0 fit: [7.6 s]: Recall = 0.0293, Jaccard score = 0.0177, loss = 0.5407, val_loss = 0.0000, eval: [5.6 s]
# Iteration 1 fit: [7.2 s]: Recall = 0.0305, Jaccard score = 0.0185, loss = 0.5007, val_loss = 0.0000, eval: [5.6 s]
# Iteration 2 fit: [7.2 s]: Recall = 0.0271, Jaccard score = 0.0164, loss = 0.4999, val_loss = 0.0000, eval: [5.6 s]
# Iteration 3 fit: [7.2 s]: Recall = 0.0299, Jaccard score = 0.0181, loss = 0.4972, val_loss = 0.0000, eval: [5.6 s]
# Iteration 4 fit: [7.2 s]: Recall = 0.0341, Jaccard score = 0.0207, loss = 0.4910, val_loss = 0.0000, eval: [5.6 s]
# Iteration 5 fit: [7.2 s]: Recall = 0.0402, Jaccard score = 0.0244, loss = 0.4801, val_loss = 0.0000, eval: [5.6 s]
# Iteration 6 fit: [7.2 s]: Recall = 0.0445, Jaccard score = 0.0271, loss = 0.4639, val_loss = 0.0000, eval: [5.6 s]
# Iteration 7 fit: [7.2 s]: Recall = 0.0549, Jaccard score = 0.0337, loss = 0.4427, val_loss = 0.0000, eval: [5.6 s]
# Iteration 8 fit: [7.2 s]: Recall = 0.0654, Jaccard score = 0.0404, loss = 0.4162, val_loss = 0.0000, eval: [5.6 s]
# Iteration 9 fit: [7.2 s]: Recall = 0.0755, Jaccard score = 0.0469, loss = 0.3873, val_loss = 0.0000, eval: [5.6 s]
# Iteration 10 fit: [7.2 s]: Recall = 0.0898, Jaccard score = 0.0563, loss = 0.3569, val_loss = 0.0000, eval: [5.6 s]
# Iteration 11 fit: [7.2 s]: Recall = 0.1008, Jaccard score = 0.0637, loss = 0.3263, val_loss = 0.0000, eval: [5.6 s]
# Iteration 12 fit: [7.2 s]: Recall = 0.1074, Jaccard score = 0.0681, loss = 0.2971, val_loss = 0.0000, eval: [5.6 s]
# Iteration 13 fit: [7.2 s]: Recall = 0.1147, Jaccard score = 0.0731, loss = 0.2705, val_loss = 0.0000, eval: [5.6 s]
# Iteration 14 fit: [7.2 s]: Recall = 0.1233, Jaccard score = 0.0790, loss = 0.2459, val_loss = 0.0000, eval: [5.6 s]
# Iteration 15 fit: [7.2 s]: Recall = 0.1286, Jaccard score = 0.0827, loss = 0.2223, val_loss = 0.0000, eval: [5.6 s]
# Iteration 16 fit: [7.2 s]: Recall = 0.1381, Jaccard score = 0.0893, loss = 0.2020, val_loss = 0.0000, eval: [5.6 s]
# Iteration 17 fit: [7.2 s]: Recall = 0.1422, Jaccard score = 0.0922, loss = 0.1839, val_loss = 0.0000, eval: [5.6 s]
# Iteration 18 fit: [7.2 s]: Recall = 0.1435, Jaccard score = 0.0932, loss = 0.1669, val_loss = 0.0000, eval: [5.6 s]
# Iteration 19 fit: [7.2 s]: Recall = 0.1468, Jaccard score = 0.0955, loss = 0.1498, val_loss = 0.0000, eval: [5.6 s]
# Iteration 20 fit: [7.2 s]: Recall = 0.1500, Jaccard score = 0.0978, loss = 0.1363, val_loss = 0.0000, eval: [5.6 s]
# Iteration 21 fit: [7.2 s]: Recall = 0.1575, Jaccard score = 0.1032, loss = 0.1225, val_loss = 0.0000, eval: [5.6 s]
# Iteration 22 fit: [7.2 s]: Recall = 0.1567, Jaccard score = 0.1026, loss = 0.1109, val_loss = 0.0000, eval: [5.6 s]
# Iteration 23 fit: [7.2 s]: Recall = 0.1598, Jaccard score = 0.1048, loss = 0.1008, val_loss = 0.0000, eval: [5.6 s]
# Iteration 24 fit: [7.3 s]: Recall = 0.1615, Jaccard score = 0.1061, loss = 0.0913, val_loss = 0.0000, eval: [5.6 s]
# Iteration 25 fit: [7.2 s]: Recall = 0.1679, Jaccard score = 0.1107, loss = 0.0827, val_loss = 0.0000, eval: [5.6 s]
# Iteration 26 fit: [7.2 s]: Recall = 0.1688, Jaccard score = 0.1114, loss = 0.0748, val_loss = 0.0000, eval: [5.6 s]
# Iteration 27 fit: [7.2 s]: Recall = 0.1719, Jaccard score = 0.1137, loss = 0.0682, val_loss = 0.0000, eval: [5.6 s]
# Iteration 28 fit: [7.2 s]: Recall = 0.1779, Jaccard score = 0.1181, loss = 0.0610, val_loss = 0.0000, eval: [5.6 s]
# Iteration 29 fit: [7.2 s]: Recall = 0.1771, Jaccard score = 0.1175, loss = 0.0562, val_loss = 0.0000, eval: [5.6 s]
# Iteration 30 fit: [7.2 s]: Recall = 0.1817, Jaccard score = 0.1209, loss = 0.0516, val_loss = 0.0000, eval: [5.6 s]
# Iteration 31 fit: [7.2 s]: Recall = 0.1864, Jaccard score = 0.1244, loss = 0.0474, val_loss = 0.0000, eval: [5.6 s]
# Iteration 32 fit: [7.2 s]: Recall = 0.1936, Jaccard score = 0.1299, loss = 0.0433, val_loss = 0.0000, eval: [5.6 s]
# Iteration 33 fit: [7.2 s]: Recall = 0.1957, Jaccard score = 0.1315, loss = 0.0403, val_loss = 0.0000, eval: [5.6 s]
# Iteration 34 fit: [7.2 s]: Recall = 0.1985, Jaccard score = 0.1336, loss = 0.0369, val_loss = 0.0000, eval: [5.6 s]
# Iteration 35 fit: [7.2 s]: Recall = 0.1998, Jaccard score = 0.1346, loss = 0.0347, val_loss = 0.0000, eval: [5.6 s]
# Iteration 36 fit: [7.2 s]: Recall = 0.2042, Jaccard score = 0.1380, loss = 0.0323, val_loss = 0.0000, eval: [5.6 s]
# Iteration 37 fit: [7.2 s]: Recall = 0.2099, Jaccard score = 0.1424, loss = 0.0303, val_loss = 0.0000, eval: [5.6 s]
# Iteration 38 fit: [7.2 s]: Recall = 0.2118, Jaccard score = 0.1439, loss = 0.0274, val_loss = 0.0000, eval: [5.6 s]
# Iteration 39 fit: [7.2 s]: Recall = 0.2128, Jaccard score = 0.1447, loss = 0.0262, val_loss = 0.0000, eval: [5.6 s]
# Iteration 40 fit: [7.2 s]: Recall = 0.2202, Jaccard score = 0.1504, loss = 0.0250, val_loss = 0.0000, eval: [5.6 s]
# Iteration 41 fit: [7.2 s]: Recall = 0.2204, Jaccard score = 0.1506, loss = 0.0229, val_loss = 0.0000, eval: [5.6 s]
# Iteration 42 fit: [7.2 s]: Recall = 0.2239, Jaccard score = 0.1533, loss = 0.0220, val_loss = 0.0000, eval: [5.6 s]
# Iteration 43 fit: [7.2 s]: Recall = 0.2235, Jaccard score = 0.1530, loss = 0.0210, val_loss = 0.0000, eval: [5.6 s]
# Iteration 44 fit: [7.2 s]: Recall = 0.2343, Jaccard score = 0.1616, loss = 0.0195, val_loss = 0.0000, eval: [5.6 s]
# Iteration 45 fit: [7.2 s]: Recall = 0.2354, Jaccard score = 0.1625, loss = 0.0188, val_loss = 0.0000, eval: [5.6 s]
# Iteration 46 fit: [7.2 s]: Recall = 0.2350, Jaccard score = 0.1622, loss = 0.0179, val_loss = 0.0000, eval: [5.6 s]
# Iteration 47 fit: [7.2 s]: Recall = 0.2381, Jaccard score = 0.1646, loss = 0.0169, val_loss = 0.0000, eval: [5.6 s]
# Iteration 48 fit: [7.2 s]: Recall = 0.2425, Jaccard score = 0.1682, loss = 0.0165, val_loss = 0.0000, eval: [5.6 s]
# Iteration 49 fit: [7.2 s]: Recall = 0.2412, Jaccard score = 0.1672, loss = 0.0156, val_loss = 0.0000, eval: [5.6 s]
# Iteration 50 fit: [7.2 s]: Recall = 0.2429, Jaccard score = 0.1685, loss = 0.0150, val_loss = 0.0000, eval: [5.6 s]
# Iteration 51 fit: [7.2 s]: Recall = 0.2412, Jaccard score = 0.1672, loss = 0.0150, val_loss = 0.0000, eval: [5.7 s]
# Iteration 52 fit: [7.2 s]: Recall = 0.2479, Jaccard score = 0.1726, loss = 0.0142, val_loss = 0.0000, eval: [5.6 s]
# Iteration 53 fit: [7.2 s]: Recall = 0.2529, Jaccard score = 0.1767, loss = 0.0133, val_loss = 0.0000, eval: [5.6 s]
# Iteration 54 fit: [7.2 s]: Recall = 0.2510, Jaccard score = 0.1751, loss = 0.0131, val_loss = 0.0000, eval: [5.6 s]
# Iteration 55 fit: [7.2 s]: Recall = 0.2543, Jaccard score = 0.1778, loss = 0.0125, val_loss = 0.0000, eval: [5.6 s]
# Iteration 56 fit: [7.2 s]: Recall = 0.2567, Jaccard score = 0.1798, loss = 0.0123, val_loss = 0.0000, eval: [5.6 s]
# Iteration 57 fit: [7.2 s]: Recall = 0.2592, Jaccard score = 0.1819, loss = 0.0115, val_loss = 0.0000, eval: [5.6 s]
# Iteration 58 fit: [7.2 s]: Recall = 0.2558, Jaccard score = 0.1791, loss = 0.0120, val_loss = 0.0000, eval: [5.6 s]
# Iteration 59 fit: [7.2 s]: Recall = 0.2623, Jaccard score = 0.1844, loss = 0.0110, val_loss = 0.0000, eval: [5.6 s]
# Iteration 60 fit: [7.2 s]: Recall = 0.2633, Jaccard score = 0.1853, loss = 0.0111, val_loss = 0.0000, eval: [5.6 s]
# Iteration 61 fit: [7.2 s]: Recall = 0.2614, Jaccard score = 0.1837, loss = 0.0104, val_loss = 0.0000, eval: [5.6 s]
# Iteration 62 fit: [7.2 s]: Recall = 0.2671, Jaccard score = 0.1885, loss = 0.0101, val_loss = 0.0000, eval: [5.6 s]
# Iteration 63 fit: [7.2 s]: Recall = 0.2677, Jaccard score = 0.1890, loss = 0.0097, val_loss = 0.0000, eval: [5.6 s]
# Iteration 64 fit: [7.2 s]: Recall = 0.2667, Jaccard score = 0.1881, loss = 0.0092, val_loss = 0.0000, eval: [5.6 s]
# Iteration 65 fit: [7.2 s]: Recall = 0.2683, Jaccard score = 0.1895, loss = 0.0095, val_loss = 0.0000, eval: [5.6 s]
# Iteration 66 fit: [7.2 s]: Recall = 0.2720, Jaccard score = 0.1926, loss = 0.0094, val_loss = 0.0000, eval: [5.6 s]
# Iteration 67 fit: [7.2 s]: Recall = 0.2705, Jaccard score = 0.1913, loss = 0.0092, val_loss = 0.0000, eval: [5.6 s]
# Iteration 68 fit: [7.2 s]: Recall = 0.2742, Jaccard score = 0.1944, loss = 0.0089, val_loss = 0.0000, eval: [5.6 s]
# Iteration 69 fit: [7.2 s]: Recall = 0.2747, Jaccard score = 0.1949, loss = 0.0086, val_loss = 0.0000, eval: [5.6 s]
# Iteration 70 fit: [7.2 s]: Recall = 0.2764, Jaccard score = 0.1964, loss = 0.0085, val_loss = 0.0000, eval: [5.6 s]
# Iteration 71 fit: [7.2 s]: Recall = 0.2780, Jaccard score = 0.1977, loss = 0.0081, val_loss = 0.0000, eval: [5.6 s]
# Iteration 72 fit: [7.2 s]: Recall = 0.2796, Jaccard score = 0.1991, loss = 0.0084, val_loss = 0.0000, eval: [5.6 s]
# Iteration 73 fit: [7.2 s]: Recall = 0.2751, Jaccard score = 0.1952, loss = 0.0080, val_loss = 0.0000, eval: [5.6 s]
# Iteration 74 fit: [7.2 s]: Recall = 0.2756, Jaccard score = 0.1956, loss = 0.0079, val_loss = 0.0000, eval: [5.6 s]
# Iteration 75 fit: [7.2 s]: Recall = 0.2830, Jaccard score = 0.2020, loss = 0.0074, val_loss = 0.0000, eval: [5.6 s]
# Iteration 76 fit: [7.2 s]: Recall = 0.2800, Jaccard score = 0.1994, loss = 0.0074, val_loss = 0.0000, eval: [5.6 s]
# Iteration 77 fit: [7.2 s]: Recall = 0.2837, Jaccard score = 0.2026, loss = 0.0078, val_loss = 0.0000, eval: [5.6 s]
# Iteration 78 fit: [7.2 s]: Recall = 0.2814, Jaccard score = 0.2006, loss = 0.0073, val_loss = 0.0000, eval: [5.6 s]
# Iteration 79 fit: [7.2 s]: Recall = 0.2830, Jaccard score = 0.2020, loss = 0.0071, val_loss = 0.0000, eval: [5.7 s]
# Iteration 80 fit: [7.2 s]: Recall = 0.2846, Jaccard score = 0.2033, loss = 0.0074, val_loss = 0.0000, eval: [5.6 s]
# Iteration 81 fit: [7.2 s]: Recall = 0.2867, Jaccard score = 0.2052, loss = 0.0074, val_loss = 0.0000, eval: [5.6 s]
# Iteration 82 fit: [7.2 s]: Recall = 0.2871, Jaccard score = 0.2055, loss = 0.0067, val_loss = 0.0000, eval: [5.6 s]
# Iteration 83 fit: [7.2 s]: Recall = 0.2898, Jaccard score = 0.2078, loss = 0.0070, val_loss = 0.0000, eval: [5.6 s]
# Iteration 84 fit: [7.2 s]: Recall = 0.2910, Jaccard score = 0.2089, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 85 fit: [7.2 s]: Recall = 0.2892, Jaccard score = 0.2074, loss = 0.0069, val_loss = 0.0000, eval: [5.6 s]
# Iteration 86 fit: [7.2 s]: Recall = 0.2889, Jaccard score = 0.2070, loss = 0.0066, val_loss = 0.0000, eval: [5.6 s]
# Iteration 87 fit: [7.2 s]: Recall = 0.2929, Jaccard score = 0.2105, loss = 0.0068, val_loss = 0.0000, eval: [5.6 s]
# Iteration 88 fit: [7.2 s]: Recall = 0.2936, Jaccard score = 0.2111, loss = 0.0067, val_loss = 0.0000, eval: [5.6 s]
# Iteration 89 fit: [7.2 s]: Recall = 0.2928, Jaccard score = 0.2104, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 90 fit: [7.2 s]: Recall = 0.2898, Jaccard score = 0.2078, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 91 fit: [7.2 s]: Recall = 0.2924, Jaccard score = 0.2101, loss = 0.0066, val_loss = 0.0000, eval: [5.6 s]
# Iteration 92 fit: [7.2 s]: Recall = 0.2963, Jaccard score = 0.2135, loss = 0.0063, val_loss = 0.0000, eval: [5.5 s]
# Iteration 93 fit: [7.2 s]: Recall = 0.2934, Jaccard score = 0.2110, loss = 0.0062, val_loss = 0.0000, eval: [5.6 s]
# Iteration 94 fit: [7.2 s]: Recall = 0.2961, Jaccard score = 0.2133, loss = 0.0061, val_loss = 0.0000, eval: [5.6 s]
# Iteration 95 fit: [7.2 s]: Recall = 0.2977, Jaccard score = 0.2147, loss = 0.0061, val_loss = 0.0000, eval: [5.6 s]
# Iteration 96 fit: [7.2 s]: Recall = 0.2927, Jaccard score = 0.2103, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 97 fit: [7.2 s]: Recall = 0.2948, Jaccard score = 0.2122, loss = 0.0058, val_loss = 0.0000, eval: [5.6 s]
# Iteration 98 fit: [7.2 s]: Recall = 0.2961, Jaccard score = 0.2133, loss = 0.0061, val_loss = 0.0000, eval: [5.6 s]
# Iteration 99 fit: [7.2 s]: Recall = 0.2965, Jaccard score = 0.2136, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 100 fit: [7.2 s]: Recall = 0.3000, Jaccard score = 0.2168, loss = 0.0061, val_loss = 0.0000, eval: [5.6 s]
# Iteration 101 fit: [7.2 s]: Recall = 0.2998, Jaccard score = 0.2165, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 102 fit: [7.2 s]: Recall = 0.3024, Jaccard score = 0.2189, loss = 0.0058, val_loss = 0.0000, eval: [5.6 s]
# Iteration 103 fit: [7.2 s]: Recall = 0.2974, Jaccard score = 0.2144, loss = 0.0059, val_loss = 0.0000, eval: [5.6 s]
# Iteration 104 fit: [7.2 s]: Recall = 0.3019, Jaccard score = 0.2184, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 105 fit: [7.2 s]: Recall = 0.3033, Jaccard score = 0.2197, loss = 0.0057, val_loss = 0.0000, eval: [5.6 s]
# Iteration 106 fit: [7.2 s]: Recall = 0.3023, Jaccard score = 0.2188, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 107 fit: [7.2 s]: Recall = 0.3013, Jaccard score = 0.2179, loss = 0.0058, val_loss = 0.0000, eval: [5.6 s]
# Iteration 108 fit: [7.2 s]: Recall = 0.3082, Jaccard score = 0.2240, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 109 fit: [7.2 s]: Recall = 0.3033, Jaccard score = 0.2197, loss = 0.0055, val_loss = 0.0000, eval: [5.7 s]
# Iteration 110 fit: [7.2 s]: Recall = 0.3015, Jaccard score = 0.2181, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 111 fit: [7.2 s]: Recall = 0.3036, Jaccard score = 0.2199, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 112 fit: [7.2 s]: Recall = 0.3088, Jaccard score = 0.2245, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 113 fit: [7.2 s]: Recall = 0.3038, Jaccard score = 0.2201, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 114 fit: [7.2 s]: Recall = 0.3042, Jaccard score = 0.2204, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 115 fit: [7.2 s]: Recall = 0.3070, Jaccard score = 0.2229, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 116 fit: [7.2 s]: Recall = 0.3070, Jaccard score = 0.2229, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 117 fit: [7.2 s]: Recall = 0.3033, Jaccard score = 0.2197, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 118 fit: [7.2 s]: Recall = 0.3099, Jaccard score = 0.2255, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# Iteration 119 fit: [7.2 s]: Recall = 0.3098, Jaccard score = 0.2254, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# End. Best Iteration 118:  Recall = 0.3099, Jaccard score = 0.2255. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 2 is: Recall = 0.30995878253360487, Jaccard score = 0.22576313742993992
# 
# Performing k-fold 3
# Init: Recall = 0.0310, Jaccard score = 0.0187
# Iteration 0 fit: [7.2 s]: Recall = 0.0298, Jaccard score = 0.0180, loss = 0.5442, val_loss = 0.0000, eval: [5.6 s]
# Iteration 1 fit: [6.8 s]: Recall = 0.0306, Jaccard score = 0.0185, loss = 0.5007, val_loss = 0.0000, eval: [5.6 s]
# Iteration 2 fit: [6.8 s]: Recall = 0.0287, Jaccard score = 0.0173, loss = 0.5000, val_loss = 0.0000, eval: [5.6 s]
# Iteration 3 fit: [6.8 s]: Recall = 0.0296, Jaccard score = 0.0179, loss = 0.4972, val_loss = 0.0000, eval: [5.6 s]
# Iteration 4 fit: [6.8 s]: Recall = 0.0345, Jaccard score = 0.0209, loss = 0.4910, val_loss = 0.0000, eval: [5.7 s]
# Iteration 5 fit: [6.8 s]: Recall = 0.0357, Jaccard score = 0.0216, loss = 0.4801, val_loss = 0.0000, eval: [5.6 s]
# Iteration 6 fit: [6.8 s]: Recall = 0.0418, Jaccard score = 0.0254, loss = 0.4644, val_loss = 0.0000, eval: [5.6 s]
# Iteration 7 fit: [6.8 s]: Recall = 0.0510, Jaccard score = 0.0312, loss = 0.4440, val_loss = 0.0000, eval: [5.6 s]
# Iteration 8 fit: [6.8 s]: Recall = 0.0565, Jaccard score = 0.0347, loss = 0.4191, val_loss = 0.0000, eval: [5.6 s]
# Iteration 9 fit: [6.8 s]: Recall = 0.0699, Jaccard score = 0.0433, loss = 0.3918, val_loss = 0.0000, eval: [5.6 s]
# Iteration 10 fit: [6.8 s]: Recall = 0.0793, Jaccard score = 0.0494, loss = 0.3609, val_loss = 0.0000, eval: [5.6 s]
# Iteration 11 fit: [6.8 s]: Recall = 0.0916, Jaccard score = 0.0575, loss = 0.3315, val_loss = 0.0000, eval: [5.6 s]
# Iteration 12 fit: [6.8 s]: Recall = 0.0981, Jaccard score = 0.0618, loss = 0.3026, val_loss = 0.0000, eval: [5.6 s]
# Iteration 13 fit: [6.8 s]: Recall = 0.1080, Jaccard score = 0.0685, loss = 0.2754, val_loss = 0.0000, eval: [5.6 s]
# Iteration 14 fit: [6.8 s]: Recall = 0.1137, Jaccard score = 0.0724, loss = 0.2500, val_loss = 0.0000, eval: [5.6 s]
# Iteration 15 fit: [6.8 s]: Recall = 0.1173, Jaccard score = 0.0748, loss = 0.2276, val_loss = 0.0000, eval: [5.6 s]
# Iteration 16 fit: [6.8 s]: Recall = 0.1278, Jaccard score = 0.0821, loss = 0.2057, val_loss = 0.0000, eval: [5.6 s]
# Iteration 17 fit: [6.8 s]: Recall = 0.1297, Jaccard score = 0.0834, loss = 0.1868, val_loss = 0.0000, eval: [5.6 s]
# Iteration 18 fit: [6.8 s]: Recall = 0.1380, Jaccard score = 0.0892, loss = 0.1677, val_loss = 0.0000, eval: [5.6 s]
# Iteration 19 fit: [6.8 s]: Recall = 0.1399, Jaccard score = 0.0905, loss = 0.1536, val_loss = 0.0000, eval: [5.6 s]
# Iteration 20 fit: [6.8 s]: Recall = 0.1428, Jaccard score = 0.0926, loss = 0.1384, val_loss = 0.0000, eval: [5.6 s]
# Iteration 21 fit: [6.8 s]: Recall = 0.1462, Jaccard score = 0.0950, loss = 0.1254, val_loss = 0.0000, eval: [5.6 s]
# Iteration 22 fit: [6.8 s]: Recall = 0.1477, Jaccard score = 0.0961, loss = 0.1128, val_loss = 0.0000, eval: [5.6 s]
# Iteration 23 fit: [6.8 s]: Recall = 0.1515, Jaccard score = 0.0988, loss = 0.1022, val_loss = 0.0000, eval: [5.6 s]
# Iteration 24 fit: [6.8 s]: Recall = 0.1547, Jaccard score = 0.1011, loss = 0.0923, val_loss = 0.0000, eval: [5.6 s]
# Iteration 25 fit: [6.8 s]: Recall = 0.1557, Jaccard score = 0.1018, loss = 0.0836, val_loss = 0.0000, eval: [5.6 s]
# Iteration 26 fit: [6.8 s]: Recall = 0.1617, Jaccard score = 0.1061, loss = 0.0762, val_loss = 0.0000, eval: [5.6 s]
# Iteration 27 fit: [6.8 s]: Recall = 0.1627, Jaccard score = 0.1069, loss = 0.0693, val_loss = 0.0000, eval: [5.6 s]
# Iteration 28 fit: [6.8 s]: Recall = 0.1645, Jaccard score = 0.1082, loss = 0.0627, val_loss = 0.0000, eval: [5.6 s]
# Iteration 29 fit: [6.8 s]: Recall = 0.1688, Jaccard score = 0.1113, loss = 0.0572, val_loss = 0.0000, eval: [5.6 s]
# Iteration 30 fit: [6.8 s]: Recall = 0.1731, Jaccard score = 0.1145, loss = 0.0513, val_loss = 0.0000, eval: [5.6 s]
# Iteration 31 fit: [6.8 s]: Recall = 0.1731, Jaccard score = 0.1145, loss = 0.0484, val_loss = 0.0000, eval: [5.7 s]
# Iteration 32 fit: [6.8 s]: Recall = 0.1791, Jaccard score = 0.1189, loss = 0.0435, val_loss = 0.0000, eval: [5.6 s]
# Iteration 33 fit: [6.8 s]: Recall = 0.1825, Jaccard score = 0.1214, loss = 0.0409, val_loss = 0.0000, eval: [5.6 s]
# Iteration 34 fit: [6.8 s]: Recall = 0.1871, Jaccard score = 0.1249, loss = 0.0374, val_loss = 0.0000, eval: [5.6 s]
# Iteration 35 fit: [6.8 s]: Recall = 0.1867, Jaccard score = 0.1246, loss = 0.0344, val_loss = 0.0000, eval: [5.6 s]
# Iteration 36 fit: [6.8 s]: Recall = 0.1922, Jaccard score = 0.1287, loss = 0.0320, val_loss = 0.0000, eval: [5.6 s]
# Iteration 37 fit: [6.8 s]: Recall = 0.1932, Jaccard score = 0.1295, loss = 0.0298, val_loss = 0.0000, eval: [5.7 s]
# Iteration 38 fit: [6.8 s]: Recall = 0.2022, Jaccard score = 0.1363, loss = 0.0278, val_loss = 0.0000, eval: [5.6 s]
# Iteration 39 fit: [6.8 s]: Recall = 0.1980, Jaccard score = 0.1331, loss = 0.0264, val_loss = 0.0000, eval: [5.6 s]
# Iteration 40 fit: [6.8 s]: Recall = 0.2057, Jaccard score = 0.1390, loss = 0.0249, val_loss = 0.0000, eval: [5.6 s]
# Iteration 41 fit: [6.8 s]: Recall = 0.2069, Jaccard score = 0.1399, loss = 0.0232, val_loss = 0.0000, eval: [5.6 s]
# Iteration 42 fit: [6.8 s]: Recall = 0.2093, Jaccard score = 0.1418, loss = 0.0226, val_loss = 0.0000, eval: [5.6 s]
# Iteration 43 fit: [6.8 s]: Recall = 0.2101, Jaccard score = 0.1424, loss = 0.0207, val_loss = 0.0000, eval: [5.6 s]
# Iteration 44 fit: [6.8 s]: Recall = 0.2142, Jaccard score = 0.1456, loss = 0.0197, val_loss = 0.0000, eval: [5.6 s]
# Iteration 45 fit: [6.8 s]: Recall = 0.2179, Jaccard score = 0.1485, loss = 0.0184, val_loss = 0.0000, eval: [5.6 s]
# Iteration 46 fit: [6.8 s]: Recall = 0.2231, Jaccard score = 0.1526, loss = 0.0175, val_loss = 0.0000, eval: [5.6 s]
# Iteration 47 fit: [6.8 s]: Recall = 0.2254, Jaccard score = 0.1544, loss = 0.0171, val_loss = 0.0000, eval: [5.6 s]
# Iteration 48 fit: [6.8 s]: Recall = 0.2271, Jaccard score = 0.1557, loss = 0.0159, val_loss = 0.0000, eval: [5.6 s]
# Iteration 49 fit: [6.8 s]: Recall = 0.2304, Jaccard score = 0.1583, loss = 0.0157, val_loss = 0.0000, eval: [5.6 s]
# Iteration 50 fit: [6.8 s]: Recall = 0.2315, Jaccard score = 0.1592, loss = 0.0149, val_loss = 0.0000, eval: [5.6 s]
# Iteration 51 fit: [6.8 s]: Recall = 0.2312, Jaccard score = 0.1590, loss = 0.0146, val_loss = 0.0000, eval: [5.6 s]
# Iteration 52 fit: [6.8 s]: Recall = 0.2328, Jaccard score = 0.1602, loss = 0.0137, val_loss = 0.0000, eval: [5.6 s]
# Iteration 53 fit: [6.8 s]: Recall = 0.2404, Jaccard score = 0.1664, loss = 0.0129, val_loss = 0.0000, eval: [5.6 s]
# Iteration 54 fit: [6.8 s]: Recall = 0.2335, Jaccard score = 0.1609, loss = 0.0127, val_loss = 0.0000, eval: [5.6 s]
# Iteration 55 fit: [6.8 s]: Recall = 0.2431, Jaccard score = 0.1685, loss = 0.0120, val_loss = 0.0000, eval: [5.6 s]
# Iteration 56 fit: [6.8 s]: Recall = 0.2419, Jaccard score = 0.1676, loss = 0.0123, val_loss = 0.0000, eval: [5.6 s]
# Iteration 57 fit: [6.8 s]: Recall = 0.2457, Jaccard score = 0.1707, loss = 0.0111, val_loss = 0.0000, eval: [5.6 s]
# Iteration 58 fit: [6.8 s]: Recall = 0.2486, Jaccard score = 0.1731, loss = 0.0112, val_loss = 0.0000, eval: [5.6 s]
# Iteration 59 fit: [6.8 s]: Recall = 0.2460, Jaccard score = 0.1709, loss = 0.0109, val_loss = 0.0000, eval: [5.6 s]
# Iteration 60 fit: [6.8 s]: Recall = 0.2467, Jaccard score = 0.1715, loss = 0.0103, val_loss = 0.0000, eval: [5.6 s]
# Iteration 61 fit: [6.8 s]: Recall = 0.2516, Jaccard score = 0.1754, loss = 0.0101, val_loss = 0.0000, eval: [5.6 s]
# Iteration 62 fit: [6.8 s]: Recall = 0.2537, Jaccard score = 0.1772, loss = 0.0099, val_loss = 0.0000, eval: [5.6 s]
# Iteration 63 fit: [6.8 s]: Recall = 0.2550, Jaccard score = 0.1783, loss = 0.0092, val_loss = 0.0000, eval: [5.6 s]
# Iteration 64 fit: [6.8 s]: Recall = 0.2582, Jaccard score = 0.1809, loss = 0.0094, val_loss = 0.0000, eval: [5.6 s]
# Iteration 65 fit: [6.8 s]: Recall = 0.2536, Jaccard score = 0.1771, loss = 0.0091, val_loss = 0.0000, eval: [5.6 s]
# Iteration 66 fit: [6.8 s]: Recall = 0.2587, Jaccard score = 0.1813, loss = 0.0089, val_loss = 0.0000, eval: [5.6 s]
# Iteration 67 fit: [6.8 s]: Recall = 0.2594, Jaccard score = 0.1819, loss = 0.0085, val_loss = 0.0000, eval: [5.6 s]
# Iteration 68 fit: [6.8 s]: Recall = 0.2588, Jaccard score = 0.1814, loss = 0.0085, val_loss = 0.0000, eval: [5.7 s]
# Iteration 69 fit: [6.8 s]: Recall = 0.2642, Jaccard score = 0.1859, loss = 0.0082, val_loss = 0.0000, eval: [5.6 s]
# Iteration 70 fit: [6.8 s]: Recall = 0.2612, Jaccard score = 0.1834, loss = 0.0081, val_loss = 0.0000, eval: [5.6 s]
# Iteration 71 fit: [6.8 s]: Recall = 0.2627, Jaccard score = 0.1847, loss = 0.0079, val_loss = 0.0000, eval: [5.6 s]
# Iteration 72 fit: [6.8 s]: Recall = 0.2629, Jaccard score = 0.1848, loss = 0.0078, val_loss = 0.0000, eval: [5.6 s]
# Iteration 73 fit: [6.8 s]: Recall = 0.2679, Jaccard score = 0.1890, loss = 0.0075, val_loss = 0.0000, eval: [5.6 s]
# Iteration 74 fit: [6.8 s]: Recall = 0.2655, Jaccard score = 0.1870, loss = 0.0073, val_loss = 0.0000, eval: [5.6 s]
# Iteration 75 fit: [6.8 s]: Recall = 0.2653, Jaccard score = 0.1868, loss = 0.0071, val_loss = 0.0000, eval: [5.6 s]
# Iteration 76 fit: [6.8 s]: Recall = 0.2697, Jaccard score = 0.1905, loss = 0.0076, val_loss = 0.0000, eval: [5.6 s]
# Iteration 77 fit: [6.8 s]: Recall = 0.2695, Jaccard score = 0.1903, loss = 0.0070, val_loss = 0.0000, eval: [5.6 s]
# Iteration 78 fit: [6.8 s]: Recall = 0.2736, Jaccard score = 0.1938, loss = 0.0072, val_loss = 0.0000, eval: [5.6 s]
# Iteration 79 fit: [6.8 s]: Recall = 0.2716, Jaccard score = 0.1921, loss = 0.0068, val_loss = 0.0000, eval: [5.6 s]
# Iteration 80 fit: [6.8 s]: Recall = 0.2720, Jaccard score = 0.1924, loss = 0.0067, val_loss = 0.0000, eval: [5.6 s]
# Iteration 81 fit: [6.8 s]: Recall = 0.2747, Jaccard score = 0.1947, loss = 0.0069, val_loss = 0.0000, eval: [5.6 s]
# Iteration 82 fit: [6.8 s]: Recall = 0.2749, Jaccard score = 0.1949, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 83 fit: [6.8 s]: Recall = 0.2777, Jaccard score = 0.1973, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 84 fit: [6.8 s]: Recall = 0.2777, Jaccard score = 0.1973, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 85 fit: [6.8 s]: Recall = 0.2786, Jaccard score = 0.1980, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 86 fit: [6.8 s]: Recall = 0.2809, Jaccard score = 0.2000, loss = 0.0059, val_loss = 0.0000, eval: [5.6 s]
# Iteration 87 fit: [6.8 s]: Recall = 0.2807, Jaccard score = 0.1999, loss = 0.0062, val_loss = 0.0000, eval: [5.6 s]
# Iteration 88 fit: [6.8 s]: Recall = 0.2762, Jaccard score = 0.1960, loss = 0.0059, val_loss = 0.0000, eval: [5.7 s]
# Iteration 89 fit: [6.8 s]: Recall = 0.2828, Jaccard score = 0.2016, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 90 fit: [6.8 s]: Recall = 0.2842, Jaccard score = 0.2028, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 91 fit: [6.8 s]: Recall = 0.2863, Jaccard score = 0.2047, loss = 0.0064, val_loss = 0.0000, eval: [5.6 s]
# Iteration 92 fit: [7.0 s]: Recall = 0.2813, Jaccard score = 0.2003, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 93 fit: [6.8 s]: Recall = 0.2843, Jaccard score = 0.2029, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 94 fit: [6.8 s]: Recall = 0.2807, Jaccard score = 0.1999, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 95 fit: [6.8 s]: Recall = 0.2849, Jaccard score = 0.2035, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 96 fit: [6.8 s]: Recall = 0.2931, Jaccard score = 0.2105, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 97 fit: [6.8 s]: Recall = 0.2899, Jaccard score = 0.2077, loss = 0.0061, val_loss = 0.0000, eval: [5.6 s]
# Iteration 98 fit: [6.8 s]: Recall = 0.2890, Jaccard score = 0.2070, loss = 0.0057, val_loss = 0.0000, eval: [5.6 s]
# Iteration 99 fit: [6.8 s]: Recall = 0.2900, Jaccard score = 0.2078, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 100 fit: [6.8 s]: Recall = 0.2929, Jaccard score = 0.2104, loss = 0.0054, val_loss = 0.0000, eval: [5.7 s]
# Iteration 101 fit: [6.8 s]: Recall = 0.2923, Jaccard score = 0.2098, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 102 fit: [6.8 s]: Recall = 0.2941, Jaccard score = 0.2114, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 103 fit: [6.8 s]: Recall = 0.2947, Jaccard score = 0.2119, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 104 fit: [6.8 s]: Recall = 0.2904, Jaccard score = 0.2082, loss = 0.0056, val_loss = 0.0000, eval: [5.6 s]
# Iteration 105 fit: [6.8 s]: Recall = 0.2936, Jaccard score = 0.2109, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# Iteration 106 fit: [6.8 s]: Recall = 0.2917, Jaccard score = 0.2093, loss = 0.0055, val_loss = 0.0000, eval: [5.6 s]
# Iteration 107 fit: [6.8 s]: Recall = 0.2969, Jaccard score = 0.2138, loss = 0.0052, val_loss = 0.0000, eval: [5.6 s]
# Iteration 108 fit: [6.8 s]: Recall = 0.2892, Jaccard score = 0.2072, loss = 0.0052, val_loss = 0.0000, eval: [5.6 s]
# Iteration 109 fit: [6.8 s]: Recall = 0.2948, Jaccard score = 0.2120, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# Iteration 110 fit: [6.8 s]: Recall = 0.2981, Jaccard score = 0.2149, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 111 fit: [6.8 s]: Recall = 0.2956, Jaccard score = 0.2127, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# Iteration 112 fit: [6.8 s]: Recall = 0.2972, Jaccard score = 0.2141, loss = 0.0049, val_loss = 0.0000, eval: [5.6 s]
# Iteration 113 fit: [6.8 s]: Recall = 0.2985, Jaccard score = 0.2152, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 114 fit: [6.8 s]: Recall = 0.2978, Jaccard score = 0.2146, loss = 0.0052, val_loss = 0.0000, eval: [5.6 s]
# Iteration 115 fit: [6.8 s]: Recall = 0.2979, Jaccard score = 0.2147, loss = 0.0049, val_loss = 0.0000, eval: [5.6 s]
# Iteration 116 fit: [6.8 s]: Recall = 0.2972, Jaccard score = 0.2141, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# Iteration 117 fit: [6.8 s]: Recall = 0.3003, Jaccard score = 0.2168, loss = 0.0051, val_loss = 0.0000, eval: [5.6 s]
# Iteration 118 fit: [6.8 s]: Recall = 0.3018, Jaccard score = 0.2181, loss = 0.0050, val_loss = 0.0000, eval: [5.6 s]
# Iteration 119 fit: [6.8 s]: Recall = 0.3033, Jaccard score = 0.2195, loss = 0.0050, val_loss = 0.0000, eval: [5.6 s]
# End. Best Iteration 119:  Recall = 0.3033, Jaccard score = 0.2195. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 3 is: Recall = 0.3077518507071348, Jaccard score = 0.2236712770364353
# 
# Performing k-fold 4
# Init: Recall = 0.0299, Jaccard score = 0.0181
# Iteration 0 fit: [6.8 s]: Recall = 0.0269, Jaccard score = 0.0163, loss = 0.5466, val_loss = 0.0000, eval: [5.7 s]
# Iteration 1 fit: [6.4 s]: Recall = 0.0297, Jaccard score = 0.0180, loss = 0.5008, val_loss = 0.0000, eval: [5.6 s]
# Iteration 2 fit: [6.4 s]: Recall = 0.0284, Jaccard score = 0.0172, loss = 0.5002, val_loss = 0.0000, eval: [5.7 s]
# Iteration 3 fit: [6.4 s]: Recall = 0.0293, Jaccard score = 0.0177, loss = 0.4979, val_loss = 0.0000, eval: [5.6 s]
# Iteration 4 fit: [6.4 s]: Recall = 0.0318, Jaccard score = 0.0193, loss = 0.4922, val_loss = 0.0000, eval: [5.6 s]
# Iteration 5 fit: [6.4 s]: Recall = 0.0345, Jaccard score = 0.0209, loss = 0.4820, val_loss = 0.0000, eval: [5.6 s]
# Iteration 6 fit: [6.4 s]: Recall = 0.0392, Jaccard score = 0.0238, loss = 0.4675, val_loss = 0.0000, eval: [5.7 s]
# Iteration 7 fit: [6.4 s]: Recall = 0.0457, Jaccard score = 0.0279, loss = 0.4480, val_loss = 0.0000, eval: [5.6 s]
# Iteration 8 fit: [6.4 s]: Recall = 0.0538, Jaccard score = 0.0331, loss = 0.4243, val_loss = 0.0000, eval: [5.6 s]
# Iteration 9 fit: [6.4 s]: Recall = 0.0657, Jaccard score = 0.0406, loss = 0.3969, val_loss = 0.0000, eval: [5.6 s]
# Iteration 10 fit: [6.4 s]: Recall = 0.0739, Jaccard score = 0.0460, loss = 0.3676, val_loss = 0.0000, eval: [5.6 s]
# Iteration 11 fit: [6.4 s]: Recall = 0.0841, Jaccard score = 0.0527, loss = 0.3383, val_loss = 0.0000, eval: [5.7 s]
# Iteration 12 fit: [6.4 s]: Recall = 0.0924, Jaccard score = 0.0581, loss = 0.3100, val_loss = 0.0000, eval: [5.6 s]
# Iteration 13 fit: [6.4 s]: Recall = 0.1001, Jaccard score = 0.0632, loss = 0.2824, val_loss = 0.0000, eval: [5.6 s]
# Iteration 14 fit: [6.4 s]: Recall = 0.1049, Jaccard score = 0.0665, loss = 0.2567, val_loss = 0.0000, eval: [5.6 s]
# Iteration 15 fit: [6.4 s]: Recall = 0.1117, Jaccard score = 0.0711, loss = 0.2324, val_loss = 0.0000, eval: [5.6 s]
# Iteration 16 fit: [6.4 s]: Recall = 0.1157, Jaccard score = 0.0739, loss = 0.2121, val_loss = 0.0000, eval: [5.7 s]
# Iteration 17 fit: [6.4 s]: Recall = 0.1209, Jaccard score = 0.0774, loss = 0.1918, val_loss = 0.0000, eval: [5.6 s]
# Iteration 18 fit: [6.4 s]: Recall = 0.1274, Jaccard score = 0.0819, loss = 0.1735, val_loss = 0.0000, eval: [5.7 s]
# Iteration 19 fit: [6.4 s]: Recall = 0.1272, Jaccard score = 0.0818, loss = 0.1568, val_loss = 0.0000, eval: [5.6 s]
# Iteration 20 fit: [6.4 s]: Recall = 0.1316, Jaccard score = 0.0849, loss = 0.1419, val_loss = 0.0000, eval: [5.6 s]
# Iteration 21 fit: [6.4 s]: Recall = 0.1333, Jaccard score = 0.0861, loss = 0.1287, val_loss = 0.0000, eval: [5.7 s]
# Iteration 22 fit: [6.4 s]: Recall = 0.1328, Jaccard score = 0.0857, loss = 0.1161, val_loss = 0.0000, eval: [5.6 s]
# Iteration 23 fit: [6.4 s]: Recall = 0.1391, Jaccard score = 0.0901, loss = 0.1048, val_loss = 0.0000, eval: [5.7 s]
# Iteration 24 fit: [6.4 s]: Recall = 0.1399, Jaccard score = 0.0907, loss = 0.0947, val_loss = 0.0000, eval: [5.6 s]
# Iteration 25 fit: [6.4 s]: Recall = 0.1474, Jaccard score = 0.0961, loss = 0.0857, val_loss = 0.0000, eval: [5.7 s]
# Iteration 26 fit: [6.4 s]: Recall = 0.1479, Jaccard score = 0.0964, loss = 0.0788, val_loss = 0.0000, eval: [5.7 s]
# Iteration 27 fit: [6.4 s]: Recall = 0.1517, Jaccard score = 0.0991, loss = 0.0706, val_loss = 0.0000, eval: [5.7 s]
# Iteration 28 fit: [6.4 s]: Recall = 0.1515, Jaccard score = 0.0990, loss = 0.0647, val_loss = 0.0000, eval: [5.6 s]
# Iteration 29 fit: [6.4 s]: Recall = 0.1574, Jaccard score = 0.1032, loss = 0.0581, val_loss = 0.0000, eval: [5.7 s]
# Iteration 30 fit: [6.4 s]: Recall = 0.1596, Jaccard score = 0.1048, loss = 0.0534, val_loss = 0.0000, eval: [5.6 s]
# Iteration 31 fit: [6.4 s]: Recall = 0.1670, Jaccard score = 0.1102, loss = 0.0487, val_loss = 0.0000, eval: [5.6 s]
# Iteration 32 fit: [6.4 s]: Recall = 0.1684, Jaccard score = 0.1113, loss = 0.0451, val_loss = 0.0000, eval: [5.6 s]
# Iteration 33 fit: [6.4 s]: Recall = 0.1699, Jaccard score = 0.1124, loss = 0.0410, val_loss = 0.0000, eval: [5.7 s]
# Iteration 34 fit: [6.4 s]: Recall = 0.1756, Jaccard score = 0.1166, loss = 0.0377, val_loss = 0.0000, eval: [5.7 s]
# Iteration 35 fit: [6.4 s]: Recall = 0.1768, Jaccard score = 0.1174, loss = 0.0350, val_loss = 0.0000, eval: [5.6 s]
# Iteration 36 fit: [6.4 s]: Recall = 0.1813, Jaccard score = 0.1208, loss = 0.0328, val_loss = 0.0000, eval: [5.7 s]
# Iteration 37 fit: [6.4 s]: Recall = 0.1824, Jaccard score = 0.1216, loss = 0.0309, val_loss = 0.0000, eval: [5.6 s]
# Iteration 38 fit: [6.4 s]: Recall = 0.1895, Jaccard score = 0.1270, loss = 0.0281, val_loss = 0.0000, eval: [5.7 s]
# Iteration 39 fit: [6.4 s]: Recall = 0.1880, Jaccard score = 0.1258, loss = 0.0267, val_loss = 0.0000, eval: [5.6 s]
# Iteration 40 fit: [6.4 s]: Recall = 0.1903, Jaccard score = 0.1275, loss = 0.0251, val_loss = 0.0000, eval: [5.7 s]
# Iteration 41 fit: [6.4 s]: Recall = 0.1994, Jaccard score = 0.1344, loss = 0.0232, val_loss = 0.0000, eval: [5.7 s]
# Iteration 42 fit: [6.4 s]: Recall = 0.1990, Jaccard score = 0.1342, loss = 0.0221, val_loss = 0.0000, eval: [5.7 s]
# Iteration 43 fit: [6.4 s]: Recall = 0.2004, Jaccard score = 0.1352, loss = 0.0206, val_loss = 0.0000, eval: [5.6 s]
# Iteration 44 fit: [6.4 s]: Recall = 0.2033, Jaccard score = 0.1375, loss = 0.0196, val_loss = 0.0000, eval: [5.7 s]
# Iteration 45 fit: [6.4 s]: Recall = 0.2064, Jaccard score = 0.1399, loss = 0.0192, val_loss = 0.0000, eval: [5.6 s]
# Iteration 46 fit: [6.4 s]: Recall = 0.2085, Jaccard score = 0.1414, loss = 0.0177, val_loss = 0.0000, eval: [5.7 s]
# Iteration 47 fit: [6.4 s]: Recall = 0.2139, Jaccard score = 0.1457, loss = 0.0166, val_loss = 0.0000, eval: [5.6 s]
# Iteration 48 fit: [6.4 s]: Recall = 0.2139, Jaccard score = 0.1457, loss = 0.0162, val_loss = 0.0000, eval: [5.7 s]
# Iteration 49 fit: [6.4 s]: Recall = 0.2145, Jaccard score = 0.1462, loss = 0.0153, val_loss = 0.0000, eval: [5.7 s]
# Iteration 50 fit: [6.4 s]: Recall = 0.2224, Jaccard score = 0.1523, loss = 0.0144, val_loss = 0.0000, eval: [5.7 s]
# Iteration 51 fit: [6.4 s]: Recall = 0.2225, Jaccard score = 0.1524, loss = 0.0137, val_loss = 0.0000, eval: [5.7 s]
# Iteration 52 fit: [6.4 s]: Recall = 0.2243, Jaccard score = 0.1538, loss = 0.0135, val_loss = 0.0000, eval: [5.6 s]
# Iteration 53 fit: [6.4 s]: Recall = 0.2225, Jaccard score = 0.1524, loss = 0.0134, val_loss = 0.0000, eval: [5.7 s]
# Iteration 54 fit: [6.4 s]: Recall = 0.2260, Jaccard score = 0.1552, loss = 0.0127, val_loss = 0.0000, eval: [5.7 s]
# Iteration 55 fit: [6.4 s]: Recall = 0.2292, Jaccard score = 0.1577, loss = 0.0119, val_loss = 0.0000, eval: [5.6 s]
# Iteration 56 fit: [6.4 s]: Recall = 0.2321, Jaccard score = 0.1600, loss = 0.0123, val_loss = 0.0000, eval: [5.7 s]
# Iteration 57 fit: [6.4 s]: Recall = 0.2289, Jaccard score = 0.1575, loss = 0.0113, val_loss = 0.0000, eval: [5.6 s]
# Iteration 58 fit: [6.4 s]: Recall = 0.2339, Jaccard score = 0.1615, loss = 0.0111, val_loss = 0.0000, eval: [5.7 s]
# Iteration 59 fit: [6.4 s]: Recall = 0.2375, Jaccard score = 0.1644, loss = 0.0104, val_loss = 0.0000, eval: [5.7 s]
# Iteration 60 fit: [6.4 s]: Recall = 0.2350, Jaccard score = 0.1624, loss = 0.0098, val_loss = 0.0000, eval: [5.6 s]
# Iteration 61 fit: [6.4 s]: Recall = 0.2430, Jaccard score = 0.1688, loss = 0.0100, val_loss = 0.0000, eval: [5.7 s]
# Iteration 62 fit: [6.4 s]: Recall = 0.2392, Jaccard score = 0.1657, loss = 0.0093, val_loss = 0.0000, eval: [5.7 s]
# Iteration 63 fit: [6.4 s]: Recall = 0.2451, Jaccard score = 0.1705, loss = 0.0097, val_loss = 0.0000, eval: [5.6 s]
# Iteration 64 fit: [6.4 s]: Recall = 0.2425, Jaccard score = 0.1684, loss = 0.0089, val_loss = 0.0000, eval: [5.6 s]
# Iteration 65 fit: [6.4 s]: Recall = 0.2432, Jaccard score = 0.1690, loss = 0.0089, val_loss = 0.0000, eval: [5.7 s]
# Iteration 66 fit: [6.4 s]: Recall = 0.2438, Jaccard score = 0.1695, loss = 0.0087, val_loss = 0.0000, eval: [5.6 s]
# Iteration 67 fit: [6.4 s]: Recall = 0.2485, Jaccard score = 0.1733, loss = 0.0084, val_loss = 0.0000, eval: [5.6 s]
# Iteration 68 fit: [6.4 s]: Recall = 0.2498, Jaccard score = 0.1744, loss = 0.0080, val_loss = 0.0000, eval: [5.7 s]
# Iteration 69 fit: [6.4 s]: Recall = 0.2505, Jaccard score = 0.1750, loss = 0.0079, val_loss = 0.0000, eval: [5.7 s]
# Iteration 70 fit: [6.4 s]: Recall = 0.2529, Jaccard score = 0.1770, loss = 0.0078, val_loss = 0.0000, eval: [5.6 s]
# Iteration 71 fit: [6.4 s]: Recall = 0.2508, Jaccard score = 0.1752, loss = 0.0074, val_loss = 0.0000, eval: [5.7 s]
# Iteration 72 fit: [6.4 s]: Recall = 0.2527, Jaccard score = 0.1768, loss = 0.0073, val_loss = 0.0000, eval: [5.7 s]
# Iteration 73 fit: [6.4 s]: Recall = 0.2557, Jaccard score = 0.1793, loss = 0.0073, val_loss = 0.0000, eval: [5.7 s]
# Iteration 74 fit: [6.4 s]: Recall = 0.2566, Jaccard score = 0.1800, loss = 0.0069, val_loss = 0.0000, eval: [5.7 s]
# Iteration 75 fit: [6.4 s]: Recall = 0.2558, Jaccard score = 0.1794, loss = 0.0070, val_loss = 0.0000, eval: [5.6 s]
# Iteration 76 fit: [6.4 s]: Recall = 0.2582, Jaccard score = 0.1814, loss = 0.0067, val_loss = 0.0000, eval: [5.6 s]
# Iteration 77 fit: [6.4 s]: Recall = 0.2637, Jaccard score = 0.1859, loss = 0.0067, val_loss = 0.0000, eval: [5.7 s]
# Iteration 78 fit: [6.4 s]: Recall = 0.2609, Jaccard score = 0.1836, loss = 0.0066, val_loss = 0.0000, eval: [5.7 s]
# Iteration 79 fit: [6.4 s]: Recall = 0.2615, Jaccard score = 0.1841, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 80 fit: [6.4 s]: Recall = 0.2634, Jaccard score = 0.1857, loss = 0.0065, val_loss = 0.0000, eval: [5.6 s]
# Iteration 81 fit: [6.4 s]: Recall = 0.2622, Jaccard score = 0.1846, loss = 0.0063, val_loss = 0.0000, eval: [5.6 s]
# Iteration 82 fit: [6.4 s]: Recall = 0.2637, Jaccard score = 0.1859, loss = 0.0060, val_loss = 0.0000, eval: [5.6 s]
# Iteration 83 fit: [6.4 s]: Recall = 0.2668, Jaccard score = 0.1885, loss = 0.0062, val_loss = 0.0000, eval: [5.6 s]
# Iteration 84 fit: [6.4 s]: Recall = 0.2634, Jaccard score = 0.1857, loss = 0.0062, val_loss = 0.0000, eval: [5.6 s]
# Iteration 85 fit: [6.4 s]: Recall = 0.2692, Jaccard score = 0.1905, loss = 0.0058, val_loss = 0.0000, eval: [5.7 s]
# Iteration 86 fit: [6.4 s]: Recall = 0.2694, Jaccard score = 0.1906, loss = 0.0061, val_loss = 0.0000, eval: [5.7 s]
# Iteration 87 fit: [6.4 s]: Recall = 0.2677, Jaccard score = 0.1893, loss = 0.0057, val_loss = 0.0000, eval: [5.6 s]
# Iteration 88 fit: [6.4 s]: Recall = 0.2716, Jaccard score = 0.1926, loss = 0.0057, val_loss = 0.0000, eval: [5.7 s]
# Iteration 89 fit: [6.4 s]: Recall = 0.2715, Jaccard score = 0.1925, loss = 0.0057, val_loss = 0.0000, eval: [5.7 s]
# Iteration 90 fit: [6.4 s]: Recall = 0.2718, Jaccard score = 0.1927, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 91 fit: [6.4 s]: Recall = 0.2728, Jaccard score = 0.1935, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 92 fit: [6.4 s]: Recall = 0.2749, Jaccard score = 0.1953, loss = 0.0054, val_loss = 0.0000, eval: [5.7 s]
# Iteration 93 fit: [6.4 s]: Recall = 0.2721, Jaccard score = 0.1930, loss = 0.0052, val_loss = 0.0000, eval: [5.6 s]
# Iteration 94 fit: [6.4 s]: Recall = 0.2737, Jaccard score = 0.1943, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 95 fit: [6.4 s]: Recall = 0.2713, Jaccard score = 0.1922, loss = 0.0054, val_loss = 0.0000, eval: [5.6 s]
# Iteration 96 fit: [6.4 s]: Recall = 0.2734, Jaccard score = 0.1941, loss = 0.0053, val_loss = 0.0000, eval: [5.6 s]
# Iteration 97 fit: [6.4 s]: Recall = 0.2753, Jaccard score = 0.1957, loss = 0.0051, val_loss = 0.0000, eval: [5.7 s]
# Iteration 98 fit: [6.4 s]: Recall = 0.2811, Jaccard score = 0.2006, loss = 0.0051, val_loss = 0.0000, eval: [5.6 s]
# Iteration 99 fit: [6.4 s]: Recall = 0.2778, Jaccard score = 0.1978, loss = 0.0051, val_loss = 0.0000, eval: [5.6 s]
# Iteration 100 fit: [6.4 s]: Recall = 0.2759, Jaccard score = 0.1962, loss = 0.0052, val_loss = 0.0000, eval: [5.6 s]
# Iteration 101 fit: [6.4 s]: Recall = 0.2796, Jaccard score = 0.1993, loss = 0.0051, val_loss = 0.0000, eval: [5.7 s]
# Iteration 102 fit: [6.4 s]: Recall = 0.2812, Jaccard score = 0.2007, loss = 0.0051, val_loss = 0.0000, eval: [5.6 s]
# Iteration 103 fit: [6.4 s]: Recall = 0.2816, Jaccard score = 0.2011, loss = 0.0050, val_loss = 0.0000, eval: [5.6 s]
# Iteration 104 fit: [6.4 s]: Recall = 0.2780, Jaccard score = 0.1979, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 105 fit: [6.4 s]: Recall = 0.2819, Jaccard score = 0.2013, loss = 0.0047, val_loss = 0.0000, eval: [5.6 s]
# Iteration 106 fit: [6.4 s]: Recall = 0.2797, Jaccard score = 0.1994, loss = 0.0048, val_loss = 0.0000, eval: [5.7 s]
# Iteration 107 fit: [6.4 s]: Recall = 0.2801, Jaccard score = 0.1998, loss = 0.0046, val_loss = 0.0000, eval: [5.6 s]
# Iteration 108 fit: [6.4 s]: Recall = 0.2845, Jaccard score = 0.2036, loss = 0.0047, val_loss = 0.0000, eval: [5.6 s]
# Iteration 109 fit: [6.4 s]: Recall = 0.2838, Jaccard score = 0.2029, loss = 0.0049, val_loss = 0.0000, eval: [5.6 s]
# Iteration 110 fit: [6.4 s]: Recall = 0.2858, Jaccard score = 0.2047, loss = 0.0048, val_loss = 0.0000, eval: [5.7 s]
# Iteration 111 fit: [6.4 s]: Recall = 0.2910, Jaccard score = 0.2091, loss = 0.0047, val_loss = 0.0000, eval: [5.6 s]
# Iteration 112 fit: [6.4 s]: Recall = 0.2829, Jaccard score = 0.2021, loss = 0.0049, val_loss = 0.0000, eval: [5.7 s]
# Iteration 113 fit: [6.4 s]: Recall = 0.2877, Jaccard score = 0.2063, loss = 0.0046, val_loss = 0.0000, eval: [5.6 s]
# Iteration 114 fit: [6.4 s]: Recall = 0.2819, Jaccard score = 0.2013, loss = 0.0048, val_loss = 0.0000, eval: [5.6 s]
# Iteration 115 fit: [6.4 s]: Recall = 0.2859, Jaccard score = 0.2048, loss = 0.0046, val_loss = 0.0000, eval: [5.6 s]
# Iteration 116 fit: [6.4 s]: Recall = 0.2814, Jaccard score = 0.2008, loss = 0.0045, val_loss = 0.0000, eval: [5.7 s]
# Iteration 117 fit: [6.4 s]: Recall = 0.2846, Jaccard score = 0.2037, loss = 0.0046, val_loss = 0.0000, eval: [5.7 s]
# Iteration 118 fit: [6.4 s]: Recall = 0.2860, Jaccard score = 0.2049, loss = 0.0044, val_loss = 0.0000, eval: [5.6 s]
# Iteration 119 fit: [6.4 s]: Recall = 0.2926, Jaccard score = 0.2106, loss = 0.0045, val_loss = 0.0000, eval: [5.6 s]
# End. Best Iteration 119:  Recall = 0.2926, Jaccard score = 0.2106. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 4 is: Recall = 0.3039661306077358, Jaccard score = 0.22039460697270788
# 
# Performing k-fold 5
# Init: Recall = 0.0291, Jaccard score = 0.0177
# Iteration 0 fit: [6.5 s]: Recall = 0.0290, Jaccard score = 0.0176, loss = 0.5493, val_loss = 0.0000, eval: [5.7 s]
# Iteration 1 fit: [6.0 s]: Recall = 0.0280, Jaccard score = 0.0170, loss = 0.5008, val_loss = 0.0000, eval: [5.7 s]
# Iteration 2 fit: [6.0 s]: Recall = 0.0318, Jaccard score = 0.0193, loss = 0.5000, val_loss = 0.0000, eval: [5.7 s]
# Iteration 3 fit: [6.0 s]: Recall = 0.0340, Jaccard score = 0.0207, loss = 0.4973, val_loss = 0.0000, eval: [5.7 s]
# Iteration 4 fit: [6.0 s]: Recall = 0.0345, Jaccard score = 0.0210, loss = 0.4910, val_loss = 0.0000, eval: [5.7 s]
# Iteration 5 fit: [6.0 s]: Recall = 0.0388, Jaccard score = 0.0237, loss = 0.4808, val_loss = 0.0000, eval: [5.7 s]
# Iteration 6 fit: [6.0 s]: Recall = 0.0419, Jaccard score = 0.0256, loss = 0.4655, val_loss = 0.0000, eval: [5.7 s]
# Iteration 7 fit: [6.0 s]: Recall = 0.0474, Jaccard score = 0.0291, loss = 0.4462, val_loss = 0.0000, eval: [5.7 s]
# Iteration 8 fit: [6.0 s]: Recall = 0.0593, Jaccard score = 0.0367, loss = 0.4226, val_loss = 0.0000, eval: [5.7 s]
# Iteration 9 fit: [6.0 s]: Recall = 0.0635, Jaccard score = 0.0394, loss = 0.3961, val_loss = 0.0000, eval: [5.7 s]
# Iteration 10 fit: [6.0 s]: Recall = 0.0740, Jaccard score = 0.0462, loss = 0.3685, val_loss = 0.0000, eval: [5.7 s]
# Iteration 11 fit: [6.0 s]: Recall = 0.0813, Jaccard score = 0.0510, loss = 0.3397, val_loss = 0.0000, eval: [5.7 s]
# Iteration 12 fit: [6.0 s]: Recall = 0.0914, Jaccard score = 0.0577, loss = 0.3112, val_loss = 0.0000, eval: [5.7 s]
# Iteration 13 fit: [6.0 s]: Recall = 0.0975, Jaccard score = 0.0618, loss = 0.2837, val_loss = 0.0000, eval: [5.7 s]
# Iteration 14 fit: [6.0 s]: Recall = 0.1024, Jaccard score = 0.0651, loss = 0.2577, val_loss = 0.0000, eval: [5.7 s]
# Iteration 15 fit: [6.0 s]: Recall = 0.1125, Jaccard score = 0.0720, loss = 0.2351, val_loss = 0.0000, eval: [5.7 s]
# Iteration 16 fit: [6.0 s]: Recall = 0.1194, Jaccard score = 0.0767, loss = 0.2132, val_loss = 0.0000, eval: [5.7 s]
# Iteration 17 fit: [6.0 s]: Recall = 0.1209, Jaccard score = 0.0778, loss = 0.1943, val_loss = 0.0000, eval: [5.7 s]
# Iteration 18 fit: [6.0 s]: Recall = 0.1261, Jaccard score = 0.0814, loss = 0.1752, val_loss = 0.0000, eval: [5.7 s]
# Iteration 19 fit: [6.0 s]: Recall = 0.1316, Jaccard score = 0.0853, loss = 0.1591, val_loss = 0.0000, eval: [5.7 s]
# Iteration 20 fit: [6.0 s]: Recall = 0.1288, Jaccard score = 0.0833, loss = 0.1444, val_loss = 0.0000, eval: [5.7 s]
# Iteration 21 fit: [6.1 s]: Recall = 0.1349, Jaccard score = 0.0876, loss = 0.1301, val_loss = 0.0000, eval: [5.7 s]
# Iteration 22 fit: [6.0 s]: Recall = 0.1344, Jaccard score = 0.0872, loss = 0.1181, val_loss = 0.0000, eval: [5.7 s]
# Iteration 23 fit: [6.0 s]: Recall = 0.1398, Jaccard score = 0.0910, loss = 0.1072, val_loss = 0.0000, eval: [5.7 s]
# Iteration 24 fit: [6.0 s]: Recall = 0.1410, Jaccard score = 0.0919, loss = 0.0966, val_loss = 0.0000, eval: [5.7 s]
# Iteration 25 fit: [6.0 s]: Recall = 0.1485, Jaccard score = 0.0973, loss = 0.0864, val_loss = 0.0000, eval: [5.7 s]
# Iteration 26 fit: [6.0 s]: Recall = 0.1459, Jaccard score = 0.0954, loss = 0.0793, val_loss = 0.0000, eval: [5.7 s]
# Iteration 27 fit: [6.0 s]: Recall = 0.1478, Jaccard score = 0.0968, loss = 0.0714, val_loss = 0.0000, eval: [5.7 s]
# Iteration 28 fit: [6.0 s]: Recall = 0.1513, Jaccard score = 0.0993, loss = 0.0643, val_loss = 0.0000, eval: [5.7 s]
# Iteration 29 fit: [6.0 s]: Recall = 0.1498, Jaccard score = 0.0982, loss = 0.0589, val_loss = 0.0000, eval: [5.7 s]
# Iteration 30 fit: [6.0 s]: Recall = 0.1609, Jaccard score = 0.1063, loss = 0.0537, val_loss = 0.0000, eval: [5.7 s]
# Iteration 31 fit: [6.1 s]: Recall = 0.1598, Jaccard score = 0.1054, loss = 0.0491, val_loss = 0.0000, eval: [5.8 s]
# Iteration 32 fit: [6.0 s]: Recall = 0.1633, Jaccard score = 0.1080, loss = 0.0455, val_loss = 0.0000, eval: [5.7 s]
# Iteration 33 fit: [6.0 s]: Recall = 0.1690, Jaccard score = 0.1122, loss = 0.0415, val_loss = 0.0000, eval: [5.7 s]
# Iteration 34 fit: [6.0 s]: Recall = 0.1639, Jaccard score = 0.1085, loss = 0.0383, val_loss = 0.0000, eval: [5.7 s]
# Iteration 35 fit: [6.0 s]: Recall = 0.1676, Jaccard score = 0.1112, loss = 0.0348, val_loss = 0.0000, eval: [5.7 s]
# Iteration 36 fit: [6.0 s]: Recall = 0.1749, Jaccard score = 0.1166, loss = 0.0327, val_loss = 0.0000, eval: [5.7 s]
# Iteration 37 fit: [6.1 s]: Recall = 0.1834, Jaccard score = 0.1229, loss = 0.0300, val_loss = 0.0000, eval: [5.7 s]
# Iteration 38 fit: [6.0 s]: Recall = 0.1851, Jaccard score = 0.1243, loss = 0.0283, val_loss = 0.0000, eval: [5.7 s]
# Iteration 39 fit: [6.0 s]: Recall = 0.1850, Jaccard score = 0.1242, loss = 0.0269, val_loss = 0.0000, eval: [5.7 s]
# Iteration 40 fit: [6.0 s]: Recall = 0.1859, Jaccard score = 0.1248, loss = 0.0238, val_loss = 0.0000, eval: [5.7 s]
# Iteration 41 fit: [6.0 s]: Recall = 0.1886, Jaccard score = 0.1269, loss = 0.0227, val_loss = 0.0000, eval: [5.7 s]
# Iteration 42 fit: [6.0 s]: Recall = 0.1903, Jaccard score = 0.1281, loss = 0.0217, val_loss = 0.0000, eval: [5.7 s]
# Iteration 43 fit: [6.0 s]: Recall = 0.1946, Jaccard score = 0.1315, loss = 0.0203, val_loss = 0.0000, eval: [5.7 s]
# Iteration 44 fit: [6.0 s]: Recall = 0.1965, Jaccard score = 0.1329, loss = 0.0186, val_loss = 0.0000, eval: [5.7 s]
# Iteration 45 fit: [6.0 s]: Recall = 0.2032, Jaccard score = 0.1380, loss = 0.0186, val_loss = 0.0000, eval: [5.6 s]
# Iteration 46 fit: [6.0 s]: Recall = 0.2043, Jaccard score = 0.1389, loss = 0.0176, val_loss = 0.0000, eval: [5.7 s]
# Iteration 47 fit: [6.0 s]: Recall = 0.2069, Jaccard score = 0.1409, loss = 0.0168, val_loss = 0.0000, eval: [5.7 s]
# Iteration 48 fit: [6.0 s]: Recall = 0.2102, Jaccard score = 0.1435, loss = 0.0157, val_loss = 0.0000, eval: [5.7 s]
# Iteration 49 fit: [6.0 s]: Recall = 0.2100, Jaccard score = 0.1434, loss = 0.0146, val_loss = 0.0000, eval: [5.6 s]
# Iteration 50 fit: [6.0 s]: Recall = 0.2179, Jaccard score = 0.1495, loss = 0.0135, val_loss = 0.0000, eval: [5.7 s]
# Iteration 51 fit: [6.0 s]: Recall = 0.2203, Jaccard score = 0.1514, loss = 0.0132, val_loss = 0.0000, eval: [5.7 s]
# Iteration 52 fit: [6.0 s]: Recall = 0.2214, Jaccard score = 0.1523, loss = 0.0128, val_loss = 0.0000, eval: [5.7 s]
# Iteration 53 fit: [6.0 s]: Recall = 0.2209, Jaccard score = 0.1519, loss = 0.0125, val_loss = 0.0000, eval: [5.7 s]
# Iteration 54 fit: [6.0 s]: Recall = 0.2245, Jaccard score = 0.1548, loss = 0.0120, val_loss = 0.0000, eval: [5.7 s]
# Iteration 55 fit: [6.0 s]: Recall = 0.2278, Jaccard score = 0.1574, loss = 0.0116, val_loss = 0.0000, eval: [5.7 s]
# Iteration 56 fit: [6.0 s]: Recall = 0.2265, Jaccard score = 0.1564, loss = 0.0114, val_loss = 0.0000, eval: [5.7 s]
# Iteration 57 fit: [6.1 s]: Recall = 0.2318, Jaccard score = 0.1606, loss = 0.0108, val_loss = 0.0000, eval: [5.7 s]
# Iteration 58 fit: [6.0 s]: Recall = 0.2295, Jaccard score = 0.1588, loss = 0.0102, val_loss = 0.0000, eval: [5.7 s]
# Iteration 59 fit: [6.0 s]: Recall = 0.2360, Jaccard score = 0.1640, loss = 0.0097, val_loss = 0.0000, eval: [5.7 s]
# Iteration 60 fit: [6.0 s]: Recall = 0.2343, Jaccard score = 0.1626, loss = 0.0096, val_loss = 0.0000, eval: [5.7 s]
# Iteration 61 fit: [6.1 s]: Recall = 0.2339, Jaccard score = 0.1623, loss = 0.0092, val_loss = 0.0000, eval: [5.7 s]
# Iteration 62 fit: [6.1 s]: Recall = 0.2372, Jaccard score = 0.1649, loss = 0.0093, val_loss = 0.0000, eval: [5.7 s]
# Iteration 63 fit: [6.0 s]: Recall = 0.2365, Jaccard score = 0.1644, loss = 0.0088, val_loss = 0.0000, eval: [5.7 s]
# Iteration 64 fit: [6.0 s]: Recall = 0.2430, Jaccard score = 0.1697, loss = 0.0084, val_loss = 0.0000, eval: [5.7 s]
# Iteration 65 fit: [6.0 s]: Recall = 0.2410, Jaccard score = 0.1681, loss = 0.0084, val_loss = 0.0000, eval: [5.7 s]
# Iteration 66 fit: [6.0 s]: Recall = 0.2422, Jaccard score = 0.1690, loss = 0.0078, val_loss = 0.0000, eval: [5.7 s]
# Iteration 67 fit: [6.0 s]: Recall = 0.2474, Jaccard score = 0.1733, loss = 0.0078, val_loss = 0.0000, eval: [5.7 s]
# Iteration 68 fit: [6.0 s]: Recall = 0.2484, Jaccard score = 0.1741, loss = 0.0076, val_loss = 0.0000, eval: [5.7 s]
# Iteration 69 fit: [6.0 s]: Recall = 0.2453, Jaccard score = 0.1715, loss = 0.0074, val_loss = 0.0000, eval: [5.7 s]
# Iteration 70 fit: [6.0 s]: Recall = 0.2510, Jaccard score = 0.1763, loss = 0.0074, val_loss = 0.0000, eval: [5.7 s]
# Iteration 71 fit: [6.0 s]: Recall = 0.2475, Jaccard score = 0.1734, loss = 0.0070, val_loss = 0.0000, eval: [5.7 s]
# Iteration 72 fit: [6.1 s]: Recall = 0.2542, Jaccard score = 0.1789, loss = 0.0066, val_loss = 0.0000, eval: [5.7 s]
# Iteration 73 fit: [6.1 s]: Recall = 0.2560, Jaccard score = 0.1804, loss = 0.0066, val_loss = 0.0000, eval: [5.7 s]
# Iteration 74 fit: [6.0 s]: Recall = 0.2568, Jaccard score = 0.1810, loss = 0.0065, val_loss = 0.0000, eval: [5.7 s]
# Iteration 75 fit: [6.0 s]: Recall = 0.2534, Jaccard score = 0.1782, loss = 0.0067, val_loss = 0.0000, eval: [5.7 s]
# Iteration 76 fit: [6.0 s]: Recall = 0.2548, Jaccard score = 0.1794, loss = 0.0061, val_loss = 0.0000, eval: [5.7 s]
# Iteration 77 fit: [6.1 s]: Recall = 0.2564, Jaccard score = 0.1807, loss = 0.0062, val_loss = 0.0000, eval: [5.7 s]
# Iteration 78 fit: [6.0 s]: Recall = 0.2593, Jaccard score = 0.1831, loss = 0.0060, val_loss = 0.0000, eval: [5.7 s]
# Iteration 79 fit: [6.0 s]: Recall = 0.2594, Jaccard score = 0.1832, loss = 0.0061, val_loss = 0.0000, eval: [5.7 s]
# Iteration 80 fit: [6.0 s]: Recall = 0.2579, Jaccard score = 0.1820, loss = 0.0058, val_loss = 0.0000, eval: [5.7 s]
# Iteration 81 fit: [6.1 s]: Recall = 0.2647, Jaccard score = 0.1876, loss = 0.0061, val_loss = 0.0000, eval: [5.7 s]
# Iteration 82 fit: [6.0 s]: Recall = 0.2635, Jaccard score = 0.1867, loss = 0.0057, val_loss = 0.0000, eval: [5.7 s]
# Iteration 83 fit: [6.0 s]: Recall = 0.2627, Jaccard score = 0.1860, loss = 0.0058, val_loss = 0.0000, eval: [5.7 s]
# Iteration 84 fit: [6.0 s]: Recall = 0.2655, Jaccard score = 0.1884, loss = 0.0057, val_loss = 0.0000, eval: [5.7 s]
# Iteration 85 fit: [6.0 s]: Recall = 0.2624, Jaccard score = 0.1858, loss = 0.0054, val_loss = 0.0000, eval: [5.7 s]
# Iteration 86 fit: [6.0 s]: Recall = 0.2683, Jaccard score = 0.1907, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 87 fit: [6.0 s]: Recall = 0.2682, Jaccard score = 0.1906, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 88 fit: [6.0 s]: Recall = 0.2668, Jaccard score = 0.1894, loss = 0.0052, val_loss = 0.0000, eval: [5.7 s]
# Iteration 89 fit: [6.1 s]: Recall = 0.2702, Jaccard score = 0.1923, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 90 fit: [6.0 s]: Recall = 0.2695, Jaccard score = 0.1918, loss = 0.0051, val_loss = 0.0000, eval: [5.7 s]
# Iteration 91 fit: [6.0 s]: Recall = 0.2720, Jaccard score = 0.1939, loss = 0.0051, val_loss = 0.0000, eval: [5.7 s]
# Iteration 92 fit: [6.1 s]: Recall = 0.2737, Jaccard score = 0.1953, loss = 0.0048, val_loss = 0.0000, eval: [5.7 s]
# Iteration 93 fit: [6.0 s]: Recall = 0.2700, Jaccard score = 0.1922, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 94 fit: [6.0 s]: Recall = 0.2725, Jaccard score = 0.1943, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 95 fit: [6.0 s]: Recall = 0.2754, Jaccard score = 0.1968, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 96 fit: [6.0 s]: Recall = 0.2724, Jaccard score = 0.1942, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 97 fit: [6.1 s]: Recall = 0.2805, Jaccard score = 0.2012, loss = 0.0049, val_loss = 0.0000, eval: [5.7 s]
# Iteration 98 fit: [6.0 s]: Recall = 0.2754, Jaccard score = 0.1968, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 99 fit: [6.0 s]: Recall = 0.2784, Jaccard score = 0.1993, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 100 fit: [6.0 s]: Recall = 0.2754, Jaccard score = 0.1968, loss = 0.0044, val_loss = 0.0000, eval: [5.7 s]
# Iteration 101 fit: [6.0 s]: Recall = 0.2795, Jaccard score = 0.2003, loss = 0.0045, val_loss = 0.0000, eval: [5.7 s]
# Iteration 102 fit: [6.0 s]: Recall = 0.2780, Jaccard score = 0.1990, loss = 0.0046, val_loss = 0.0000, eval: [5.7 s]
# Iteration 103 fit: [6.1 s]: Recall = 0.2787, Jaccard score = 0.1996, loss = 0.0044, val_loss = 0.0000, eval: [5.7 s]
# Iteration 104 fit: [6.0 s]: Recall = 0.2805, Jaccard score = 0.2012, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 105 fit: [6.0 s]: Recall = 0.2798, Jaccard score = 0.2005, loss = 0.0044, val_loss = 0.0000, eval: [5.7 s]
# Iteration 106 fit: [6.0 s]: Recall = 0.2829, Jaccard score = 0.2032, loss = 0.0044, val_loss = 0.0000, eval: [5.7 s]
# Iteration 107 fit: [6.0 s]: Recall = 0.2832, Jaccard score = 0.2034, loss = 0.0043, val_loss = 0.0000, eval: [5.7 s]
# Iteration 108 fit: [6.0 s]: Recall = 0.2827, Jaccard score = 0.2030, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 109 fit: [6.0 s]: Recall = 0.2822, Jaccard score = 0.2026, loss = 0.0044, val_loss = 0.0000, eval: [5.7 s]
# Iteration 110 fit: [6.0 s]: Recall = 0.2818, Jaccard score = 0.2022, loss = 0.0040, val_loss = 0.0000, eval: [5.7 s]
# Iteration 111 fit: [6.0 s]: Recall = 0.2853, Jaccard score = 0.2053, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 112 fit: [6.0 s]: Recall = 0.2800, Jaccard score = 0.2007, loss = 0.0041, val_loss = 0.0000, eval: [5.7 s]
# Iteration 113 fit: [6.1 s]: Recall = 0.2875, Jaccard score = 0.2072, loss = 0.0041, val_loss = 0.0000, eval: [5.7 s]
# Iteration 114 fit: [6.0 s]: Recall = 0.2830, Jaccard score = 0.2033, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 115 fit: [6.0 s]: Recall = 0.2838, Jaccard score = 0.2040, loss = 0.0043, val_loss = 0.0000, eval: [5.7 s]
# Iteration 116 fit: [6.0 s]: Recall = 0.2868, Jaccard score = 0.2066, loss = 0.0043, val_loss = 0.0000, eval: [5.7 s]
# Iteration 117 fit: [6.0 s]: Recall = 0.2850, Jaccard score = 0.2051, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 118 fit: [6.1 s]: Recall = 0.2868, Jaccard score = 0.2066, loss = 0.0041, val_loss = 0.0000, eval: [5.7 s]
# Iteration 119 fit: [6.1 s]: Recall = 0.2909, Jaccard score = 0.2102, loss = 0.0040, val_loss = 0.0000, eval: [5.7 s]
# End. Best Iteration 119:  Recall = 0.2909, Jaccard score = 0.2102. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 5 is: Recall = 0.30135517727028666, Jaccard score = 0.21834964511573857
# 
# Performing k-fold 6
# Init: Recall = 0.0261, Jaccard score = 0.0157
# Iteration 0 fit: [6.1 s]: Recall = 0.0284, Jaccard score = 0.0171, loss = 0.5526, val_loss = 0.0000, eval: [5.7 s]
# Iteration 1 fit: [5.7 s]: Recall = 0.0285, Jaccard score = 0.0172, loss = 0.5008, val_loss = 0.0000, eval: [5.7 s]
# Iteration 2 fit: [5.6 s]: Recall = 0.0304, Jaccard score = 0.0183, loss = 0.5001, val_loss = 0.0000, eval: [5.7 s]
# Iteration 3 fit: [5.7 s]: Recall = 0.0313, Jaccard score = 0.0189, loss = 0.4977, val_loss = 0.0000, eval: [5.7 s]
# Iteration 4 fit: [5.6 s]: Recall = 0.0316, Jaccard score = 0.0190, loss = 0.4922, val_loss = 0.0000, eval: [5.7 s]
# Iteration 5 fit: [5.7 s]: Recall = 0.0333, Jaccard score = 0.0201, loss = 0.4821, val_loss = 0.0000, eval: [5.7 s]
# Iteration 6 fit: [5.6 s]: Recall = 0.0393, Jaccard score = 0.0238, loss = 0.4680, val_loss = 0.0000, eval: [5.7 s]
# Iteration 7 fit: [5.7 s]: Recall = 0.0457, Jaccard score = 0.0278, loss = 0.4501, val_loss = 0.0000, eval: [5.7 s]
# Iteration 8 fit: [5.7 s]: Recall = 0.0501, Jaccard score = 0.0306, loss = 0.4285, val_loss = 0.0000, eval: [5.7 s]
# Iteration 9 fit: [5.6 s]: Recall = 0.0596, Jaccard score = 0.0365, loss = 0.4029, val_loss = 0.0000, eval: [5.7 s]
# Iteration 10 fit: [5.6 s]: Recall = 0.0650, Jaccard score = 0.0400, loss = 0.3762, val_loss = 0.0000, eval: [5.7 s]
# Iteration 11 fit: [5.6 s]: Recall = 0.0750, Jaccard score = 0.0464, loss = 0.3481, val_loss = 0.0000, eval: [5.7 s]
# Iteration 12 fit: [5.6 s]: Recall = 0.0783, Jaccard score = 0.0485, loss = 0.3185, val_loss = 0.0000, eval: [5.7 s]
# Iteration 13 fit: [5.7 s]: Recall = 0.0869, Jaccard score = 0.0542, loss = 0.2918, val_loss = 0.0000, eval: [5.7 s]
# Iteration 14 fit: [5.7 s]: Recall = 0.0935, Jaccard score = 0.0585, loss = 0.2666, val_loss = 0.0000, eval: [5.7 s]
# Iteration 15 fit: [5.7 s]: Recall = 0.0994, Jaccard score = 0.0625, loss = 0.2417, val_loss = 0.0000, eval: [5.7 s]
# Iteration 16 fit: [5.6 s]: Recall = 0.1054, Jaccard score = 0.0665, loss = 0.2200, val_loss = 0.0000, eval: [5.7 s]
# Iteration 17 fit: [5.7 s]: Recall = 0.1095, Jaccard score = 0.0692, loss = 0.1994, val_loss = 0.0000, eval: [5.7 s]
# Iteration 18 fit: [5.7 s]: Recall = 0.1138, Jaccard score = 0.0722, loss = 0.1807, val_loss = 0.0000, eval: [5.7 s]
# Iteration 19 fit: [5.7 s]: Recall = 0.1168, Jaccard score = 0.0742, loss = 0.1642, val_loss = 0.0000, eval: [5.7 s]
# Iteration 20 fit: [5.7 s]: Recall = 0.1177, Jaccard score = 0.0748, loss = 0.1489, val_loss = 0.0000, eval: [5.7 s]
# Iteration 21 fit: [5.6 s]: Recall = 0.1199, Jaccard score = 0.0763, loss = 0.1345, val_loss = 0.0000, eval: [5.7 s]
# Iteration 22 fit: [5.7 s]: Recall = 0.1271, Jaccard score = 0.0813, loss = 0.1215, val_loss = 0.0000, eval: [5.7 s]
# Iteration 23 fit: [5.7 s]: Recall = 0.1283, Jaccard score = 0.0821, loss = 0.1099, val_loss = 0.0000, eval: [5.7 s]
# Iteration 24 fit: [5.7 s]: Recall = 0.1305, Jaccard score = 0.0836, loss = 0.0995, val_loss = 0.0000, eval: [5.7 s]
# Iteration 25 fit: [5.7 s]: Recall = 0.1326, Jaccard score = 0.0851, loss = 0.0899, val_loss = 0.0000, eval: [5.7 s]
# Iteration 26 fit: [5.7 s]: Recall = 0.1320, Jaccard score = 0.0847, loss = 0.0807, val_loss = 0.0000, eval: [5.7 s]
# Iteration 27 fit: [5.6 s]: Recall = 0.1356, Jaccard score = 0.0872, loss = 0.0736, val_loss = 0.0000, eval: [5.7 s]
# Iteration 28 fit: [5.7 s]: Recall = 0.1365, Jaccard score = 0.0878, loss = 0.0662, val_loss = 0.0000, eval: [5.7 s]
# Iteration 29 fit: [5.7 s]: Recall = 0.1433, Jaccard score = 0.0926, loss = 0.0607, val_loss = 0.0000, eval: [5.7 s]
# Iteration 30 fit: [5.7 s]: Recall = 0.1445, Jaccard score = 0.0935, loss = 0.0551, val_loss = 0.0000, eval: [5.7 s]
# Iteration 31 fit: [5.6 s]: Recall = 0.1433, Jaccard score = 0.0926, loss = 0.0504, val_loss = 0.0000, eval: [5.7 s]
# Iteration 32 fit: [5.6 s]: Recall = 0.1465, Jaccard score = 0.0948, loss = 0.0463, val_loss = 0.0000, eval: [5.7 s]
# Iteration 33 fit: [5.7 s]: Recall = 0.1520, Jaccard score = 0.0988, loss = 0.0418, val_loss = 0.0000, eval: [5.7 s]
# Iteration 34 fit: [5.7 s]: Recall = 0.1536, Jaccard score = 0.0999, loss = 0.0387, val_loss = 0.0000, eval: [5.7 s]
# Iteration 35 fit: [5.7 s]: Recall = 0.1573, Jaccard score = 0.1026, loss = 0.0358, val_loss = 0.0000, eval: [5.7 s]
# Iteration 36 fit: [5.7 s]: Recall = 0.1581, Jaccard score = 0.1032, loss = 0.0328, val_loss = 0.0000, eval: [5.7 s]
# Iteration 37 fit: [5.7 s]: Recall = 0.1635, Jaccard score = 0.1070, loss = 0.0308, val_loss = 0.0000, eval: [5.7 s]
# Iteration 38 fit: [5.7 s]: Recall = 0.1659, Jaccard score = 0.1088, loss = 0.0287, val_loss = 0.0000, eval: [5.7 s]
# Iteration 39 fit: [5.7 s]: Recall = 0.1690, Jaccard score = 0.1110, loss = 0.0256, val_loss = 0.0000, eval: [5.7 s]
# Iteration 40 fit: [5.7 s]: Recall = 0.1737, Jaccard score = 0.1145, loss = 0.0251, val_loss = 0.0000, eval: [5.7 s]
# Iteration 41 fit: [5.7 s]: Recall = 0.1745, Jaccard score = 0.1151, loss = 0.0234, val_loss = 0.0000, eval: [5.7 s]
# Iteration 42 fit: [5.6 s]: Recall = 0.1757, Jaccard score = 0.1160, loss = 0.0222, val_loss = 0.0000, eval: [5.7 s]
# Iteration 43 fit: [5.7 s]: Recall = 0.1793, Jaccard score = 0.1187, loss = 0.0203, val_loss = 0.0000, eval: [5.7 s]
# Iteration 44 fit: [5.6 s]: Recall = 0.1848, Jaccard score = 0.1227, loss = 0.0191, val_loss = 0.0000, eval: [5.7 s]
# Iteration 45 fit: [5.7 s]: Recall = 0.1871, Jaccard score = 0.1245, loss = 0.0181, val_loss = 0.0000, eval: [5.7 s]
# Iteration 46 fit: [5.7 s]: Recall = 0.1930, Jaccard score = 0.1289, loss = 0.0170, val_loss = 0.0000, eval: [5.7 s]
# Iteration 47 fit: [5.6 s]: Recall = 0.1956, Jaccard score = 0.1308, loss = 0.0159, val_loss = 0.0000, eval: [5.7 s]
# Iteration 48 fit: [5.6 s]: Recall = 0.1940, Jaccard score = 0.1296, loss = 0.0157, val_loss = 0.0000, eval: [5.7 s]
# Iteration 49 fit: [5.7 s]: Recall = 0.1930, Jaccard score = 0.1289, loss = 0.0146, val_loss = 0.0000, eval: [5.7 s]
# Iteration 50 fit: [5.7 s]: Recall = 0.1994, Jaccard score = 0.1337, loss = 0.0143, val_loss = 0.0000, eval: [5.7 s]
# Iteration 51 fit: [5.7 s]: Recall = 0.2053, Jaccard score = 0.1382, loss = 0.0135, val_loss = 0.0000, eval: [5.7 s]
# Iteration 52 fit: [5.6 s]: Recall = 0.2007, Jaccard score = 0.1347, loss = 0.0124, val_loss = 0.0000, eval: [5.7 s]
# Iteration 53 fit: [5.7 s]: Recall = 0.2071, Jaccard score = 0.1396, loss = 0.0122, val_loss = 0.0000, eval: [5.7 s]
# Iteration 54 fit: [5.6 s]: Recall = 0.2082, Jaccard score = 0.1405, loss = 0.0116, val_loss = 0.0000, eval: [5.7 s]
# Iteration 55 fit: [5.7 s]: Recall = 0.2112, Jaccard score = 0.1427, loss = 0.0109, val_loss = 0.0000, eval: [5.7 s]
# Iteration 56 fit: [5.7 s]: Recall = 0.2121, Jaccard score = 0.1434, loss = 0.0108, val_loss = 0.0000, eval: [5.7 s]
# Iteration 57 fit: [5.7 s]: Recall = 0.2140, Jaccard score = 0.1449, loss = 0.0106, val_loss = 0.0000, eval: [5.7 s]
# Iteration 58 fit: [5.6 s]: Recall = 0.2166, Jaccard score = 0.1469, loss = 0.0095, val_loss = 0.0000, eval: [5.7 s]
# Iteration 59 fit: [5.6 s]: Recall = 0.2141, Jaccard score = 0.1450, loss = 0.0096, val_loss = 0.0000, eval: [5.7 s]
# Iteration 60 fit: [5.7 s]: Recall = 0.2249, Jaccard score = 0.1534, loss = 0.0092, val_loss = 0.0000, eval: [5.7 s]
# Iteration 61 fit: [5.7 s]: Recall = 0.2208, Jaccard score = 0.1502, loss = 0.0090, val_loss = 0.0000, eval: [5.8 s]
# Iteration 62 fit: [5.7 s]: Recall = 0.2247, Jaccard score = 0.1533, loss = 0.0085, val_loss = 0.0000, eval: [5.7 s]
# Iteration 63 fit: [5.6 s]: Recall = 0.2250, Jaccard score = 0.1535, loss = 0.0083, val_loss = 0.0000, eval: [5.7 s]
# Iteration 64 fit: [5.6 s]: Recall = 0.2283, Jaccard score = 0.1561, loss = 0.0081, val_loss = 0.0000, eval: [5.7 s]
# Iteration 65 fit: [5.7 s]: Recall = 0.2288, Jaccard score = 0.1565, loss = 0.0078, val_loss = 0.0000, eval: [5.7 s]
# Iteration 66 fit: [5.7 s]: Recall = 0.2307, Jaccard score = 0.1581, loss = 0.0076, val_loss = 0.0000, eval: [5.7 s]
# Iteration 67 fit: [5.7 s]: Recall = 0.2339, Jaccard score = 0.1606, loss = 0.0074, val_loss = 0.0000, eval: [5.7 s]
# Iteration 68 fit: [5.6 s]: Recall = 0.2327, Jaccard score = 0.1596, loss = 0.0076, val_loss = 0.0000, eval: [5.7 s]
# Iteration 69 fit: [5.7 s]: Recall = 0.2361, Jaccard score = 0.1623, loss = 0.0076, val_loss = 0.0000, eval: [5.7 s]
# Iteration 70 fit: [5.7 s]: Recall = 0.2354, Jaccard score = 0.1617, loss = 0.0071, val_loss = 0.0000, eval: [5.7 s]
# Iteration 71 fit: [5.6 s]: Recall = 0.2380, Jaccard score = 0.1639, loss = 0.0068, val_loss = 0.0000, eval: [5.7 s]
# Iteration 72 fit: [5.7 s]: Recall = 0.2394, Jaccard score = 0.1650, loss = 0.0066, val_loss = 0.0000, eval: [5.7 s]
# Iteration 73 fit: [5.7 s]: Recall = 0.2378, Jaccard score = 0.1637, loss = 0.0065, val_loss = 0.0000, eval: [5.7 s]
# Iteration 74 fit: [5.6 s]: Recall = 0.2360, Jaccard score = 0.1622, loss = 0.0066, val_loss = 0.0000, eval: [5.7 s]
# Iteration 75 fit: [5.7 s]: Recall = 0.2439, Jaccard score = 0.1686, loss = 0.0061, val_loss = 0.0000, eval: [5.7 s]
# Iteration 76 fit: [5.7 s]: Recall = 0.2425, Jaccard score = 0.1675, loss = 0.0059, val_loss = 0.0000, eval: [5.7 s]
# Iteration 77 fit: [5.7 s]: Recall = 0.2424, Jaccard score = 0.1674, loss = 0.0059, val_loss = 0.0000, eval: [5.7 s]
# Iteration 78 fit: [5.7 s]: Recall = 0.2464, Jaccard score = 0.1706, loss = 0.0057, val_loss = 0.0000, eval: [5.7 s]
# Iteration 79 fit: [5.6 s]: Recall = 0.2492, Jaccard score = 0.1728, loss = 0.0055, val_loss = 0.0000, eval: [5.7 s]
# Iteration 80 fit: [5.7 s]: Recall = 0.2489, Jaccard score = 0.1726, loss = 0.0055, val_loss = 0.0000, eval: [5.7 s]
# Iteration 81 fit: [5.7 s]: Recall = 0.2466, Jaccard score = 0.1708, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 82 fit: [5.7 s]: Recall = 0.2476, Jaccard score = 0.1716, loss = 0.0054, val_loss = 0.0000, eval: [5.7 s]
# Iteration 83 fit: [5.7 s]: Recall = 0.2490, Jaccard score = 0.1727, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 84 fit: [5.7 s]: Recall = 0.2558, Jaccard score = 0.1783, loss = 0.0053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 85 fit: [5.7 s]: Recall = 0.2571, Jaccard score = 0.1793, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 86 fit: [5.7 s]: Recall = 0.2536, Jaccard score = 0.1765, loss = 0.0051, val_loss = 0.0000, eval: [5.7 s]
# Iteration 87 fit: [5.7 s]: Recall = 0.2548, Jaccard score = 0.1774, loss = 0.0050, val_loss = 0.0000, eval: [5.7 s]
# Iteration 88 fit: [5.7 s]: Recall = 0.2534, Jaccard score = 0.1763, loss = 0.0051, val_loss = 0.0000, eval: [5.7 s]
# Iteration 89 fit: [5.7 s]: Recall = 0.2559, Jaccard score = 0.1784, loss = 0.0049, val_loss = 0.0000, eval: [5.7 s]
# Iteration 90 fit: [5.7 s]: Recall = 0.2590, Jaccard score = 0.1809, loss = 0.0049, val_loss = 0.0000, eval: [5.7 s]
# Iteration 91 fit: [5.7 s]: Recall = 0.2621, Jaccard score = 0.1835, loss = 0.0046, val_loss = 0.0000, eval: [5.7 s]
# Iteration 92 fit: [5.7 s]: Recall = 0.2621, Jaccard score = 0.1835, loss = 0.0048, val_loss = 0.0000, eval: [5.7 s]
# Iteration 93 fit: [5.7 s]: Recall = 0.2646, Jaccard score = 0.1856, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 94 fit: [5.7 s]: Recall = 0.2632, Jaccard score = 0.1844, loss = 0.0045, val_loss = 0.0000, eval: [5.7 s]
# Iteration 95 fit: [5.7 s]: Recall = 0.2622, Jaccard score = 0.1836, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 96 fit: [5.7 s]: Recall = 0.2661, Jaccard score = 0.1867, loss = 0.0046, val_loss = 0.0000, eval: [5.7 s]
# Iteration 97 fit: [5.7 s]: Recall = 0.2700, Jaccard score = 0.1901, loss = 0.0043, val_loss = 0.0000, eval: [5.7 s]
# Iteration 98 fit: [5.7 s]: Recall = 0.2671, Jaccard score = 0.1876, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 99 fit: [5.7 s]: Recall = 0.2664, Jaccard score = 0.1871, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 100 fit: [5.7 s]: Recall = 0.2657, Jaccard score = 0.1864, loss = 0.0043, val_loss = 0.0000, eval: [5.7 s]
# Iteration 101 fit: [5.7 s]: Recall = 0.2667, Jaccard score = 0.1873, loss = 0.0043, val_loss = 0.0000, eval: [5.8 s]
# Iteration 102 fit: [5.7 s]: Recall = 0.2653, Jaccard score = 0.1861, loss = 0.0044, val_loss = 0.0000, eval: [5.7 s]
# Iteration 103 fit: [5.7 s]: Recall = 0.2685, Jaccard score = 0.1888, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 104 fit: [5.7 s]: Recall = 0.2737, Jaccard score = 0.1932, loss = 0.0040, val_loss = 0.0000, eval: [5.7 s]
# Iteration 105 fit: [5.7 s]: Recall = 0.2709, Jaccard score = 0.1908, loss = 0.0041, val_loss = 0.0000, eval: [5.7 s]
# Iteration 106 fit: [5.7 s]: Recall = 0.2730, Jaccard score = 0.1925, loss = 0.0039, val_loss = 0.0000, eval: [5.7 s]
# Iteration 107 fit: [5.7 s]: Recall = 0.2718, Jaccard score = 0.1916, loss = 0.0038, val_loss = 0.0000, eval: [5.7 s]
# Iteration 108 fit: [5.7 s]: Recall = 0.2733, Jaccard score = 0.1929, loss = 0.0040, val_loss = 0.0000, eval: [5.7 s]
# Iteration 109 fit: [5.7 s]: Recall = 0.2767, Jaccard score = 0.1957, loss = 0.0040, val_loss = 0.0000, eval: [5.7 s]
# Iteration 110 fit: [5.7 s]: Recall = 0.2781, Jaccard score = 0.1968, loss = 0.0039, val_loss = 0.0000, eval: [5.7 s]
# Iteration 111 fit: [5.7 s]: Recall = 0.2782, Jaccard score = 0.1970, loss = 0.0037, val_loss = 0.0000, eval: [5.7 s]
# Iteration 112 fit: [5.7 s]: Recall = 0.2769, Jaccard score = 0.1959, loss = 0.0037, val_loss = 0.0000, eval: [5.7 s]
# Iteration 113 fit: [5.7 s]: Recall = 0.2745, Jaccard score = 0.1938, loss = 0.0039, val_loss = 0.0000, eval: [5.7 s]
# Iteration 114 fit: [5.7 s]: Recall = 0.2781, Jaccard score = 0.1968, loss = 0.0035, val_loss = 0.0000, eval: [5.7 s]
# Iteration 115 fit: [5.6 s]: Recall = 0.2760, Jaccard score = 0.1951, loss = 0.0041, val_loss = 0.0000, eval: [5.7 s]
# Iteration 116 fit: [5.7 s]: Recall = 0.2750, Jaccard score = 0.1943, loss = 0.0037, val_loss = 0.0000, eval: [5.7 s]
# Iteration 117 fit: [5.7 s]: Recall = 0.2823, Jaccard score = 0.2004, loss = 0.0036, val_loss = 0.0000, eval: [5.7 s]
# Iteration 118 fit: [5.7 s]: Recall = 0.2797, Jaccard score = 0.1983, loss = 0.0035, val_loss = 0.0000, eval: [5.7 s]
# Iteration 119 fit: [5.7 s]: Recall = 0.2810, Jaccard score = 0.1993, loss = 0.0034, val_loss = 0.0000, eval: [5.7 s]
# End. Best Iteration 117:  Recall = 0.2823, Jaccard score = 0.2004. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 6 is: Recall = 0.29817885817974554, Jaccard score = 0.2153640255478913
# 
# Performing k-fold 7
# Init: Recall = 0.0279, Jaccard score = 0.0170
# Iteration 0 fit: [5.8 s]: Recall = 0.0259, Jaccard score = 0.0157, loss = 0.5567, val_loss = 0.0000, eval: [5.7 s]
# Iteration 1 fit: [5.3 s]: Recall = 0.0271, Jaccard score = 0.0165, loss = 0.5010, val_loss = 0.0000, eval: [5.7 s]
# Iteration 2 fit: [5.3 s]: Recall = 0.0260, Jaccard score = 0.0158, loss = 0.5001, val_loss = 0.0000, eval: [5.7 s]
# Iteration 3 fit: [5.3 s]: Recall = 0.0271, Jaccard score = 0.0165, loss = 0.4980, val_loss = 0.0000, eval: [5.7 s]
# Iteration 4 fit: [5.3 s]: Recall = 0.0317, Jaccard score = 0.0193, loss = 0.4927, val_loss = 0.0000, eval: [5.7 s]
# Iteration 5 fit: [5.3 s]: Recall = 0.0336, Jaccard score = 0.0205, loss = 0.4834, val_loss = 0.0000, eval: [5.7 s]
# Iteration 6 fit: [5.3 s]: Recall = 0.0343, Jaccard score = 0.0210, loss = 0.4699, val_loss = 0.0000, eval: [5.8 s]
# Iteration 7 fit: [5.3 s]: Recall = 0.0391, Jaccard score = 0.0239, loss = 0.4526, val_loss = 0.0000, eval: [5.7 s]
# Iteration 8 fit: [5.3 s]: Recall = 0.0422, Jaccard score = 0.0259, loss = 0.4315, val_loss = 0.0000, eval: [5.8 s]
# Iteration 9 fit: [5.3 s]: Recall = 0.0503, Jaccard score = 0.0310, loss = 0.4075, val_loss = 0.0000, eval: [5.7 s]
# Iteration 10 fit: [5.3 s]: Recall = 0.0595, Jaccard score = 0.0369, loss = 0.3815, val_loss = 0.0000, eval: [5.8 s]
# Iteration 11 fit: [5.3 s]: Recall = 0.0664, Jaccard score = 0.0414, loss = 0.3541, val_loss = 0.0000, eval: [5.8 s]
# Iteration 12 fit: [5.3 s]: Recall = 0.0725, Jaccard score = 0.0453, loss = 0.3260, val_loss = 0.0000, eval: [5.8 s]
# Iteration 13 fit: [5.3 s]: Recall = 0.0763, Jaccard score = 0.0478, loss = 0.2992, val_loss = 0.0000, eval: [5.8 s]
# Iteration 14 fit: [5.3 s]: Recall = 0.0867, Jaccard score = 0.0547, loss = 0.2729, val_loss = 0.0000, eval: [5.8 s]
# Iteration 15 fit: [5.3 s]: Recall = 0.0928, Jaccard score = 0.0588, loss = 0.2478, val_loss = 0.0000, eval: [5.8 s]
# Iteration 16 fit: [5.3 s]: Recall = 0.0995, Jaccard score = 0.0633, loss = 0.2254, val_loss = 0.0000, eval: [5.7 s]
# Iteration 17 fit: [5.3 s]: Recall = 0.1031, Jaccard score = 0.0657, loss = 0.2053, val_loss = 0.0000, eval: [5.7 s]
# Iteration 18 fit: [5.3 s]: Recall = 0.1075, Jaccard score = 0.0687, loss = 0.1860, val_loss = 0.0000, eval: [5.7 s]
# Iteration 19 fit: [5.3 s]: Recall = 0.1101, Jaccard score = 0.0705, loss = 0.1689, val_loss = 0.0000, eval: [5.8 s]
# Iteration 20 fit: [5.3 s]: Recall = 0.1166, Jaccard score = 0.0749, loss = 0.1526, val_loss = 0.0000, eval: [5.8 s]
# Iteration 21 fit: [5.3 s]: Recall = 0.1174, Jaccard score = 0.0756, loss = 0.1387, val_loss = 0.0000, eval: [5.7 s]
# Iteration 22 fit: [5.3 s]: Recall = 0.1205, Jaccard score = 0.0777, loss = 0.1239, val_loss = 0.0000, eval: [5.7 s]
# Iteration 23 fit: [5.3 s]: Recall = 0.1217, Jaccard score = 0.0785, loss = 0.1124, val_loss = 0.0000, eval: [5.7 s]
# Iteration 24 fit: [5.3 s]: Recall = 0.1229, Jaccard score = 0.0794, loss = 0.1009, val_loss = 0.0000, eval: [5.8 s]
# Iteration 25 fit: [5.3 s]: Recall = 0.1249, Jaccard score = 0.0807, loss = 0.0916, val_loss = 0.0000, eval: [5.8 s]
# Iteration 26 fit: [5.3 s]: Recall = 0.1238, Jaccard score = 0.0800, loss = 0.0825, val_loss = 0.0000, eval: [5.7 s]
# Iteration 27 fit: [5.3 s]: Recall = 0.1311, Jaccard score = 0.0851, loss = 0.0744, val_loss = 0.0000, eval: [5.8 s]
# Iteration 28 fit: [5.3 s]: Recall = 0.1305, Jaccard score = 0.0847, loss = 0.0674, val_loss = 0.0000, eval: [5.7 s]
# Iteration 29 fit: [5.3 s]: Recall = 0.1329, Jaccard score = 0.0863, loss = 0.0614, val_loss = 0.0000, eval: [5.7 s]
# Iteration 30 fit: [5.2 s]: Recall = 0.1360, Jaccard score = 0.0885, loss = 0.0557, val_loss = 0.0000, eval: [5.8 s]
# Iteration 31 fit: [5.3 s]: Recall = 0.1389, Jaccard score = 0.0907, loss = 0.0508, val_loss = 0.0000, eval: [5.7 s]
# Iteration 32 fit: [5.3 s]: Recall = 0.1389, Jaccard score = 0.0907, loss = 0.0465, val_loss = 0.0000, eval: [5.7 s]
# Iteration 33 fit: [5.3 s]: Recall = 0.1413, Jaccard score = 0.0923, loss = 0.0432, val_loss = 0.0000, eval: [5.8 s]
# Iteration 34 fit: [5.3 s]: Recall = 0.1470, Jaccard score = 0.0964, loss = 0.0390, val_loss = 0.0000, eval: [5.8 s]
# Iteration 35 fit: [5.2 s]: Recall = 0.1487, Jaccard score = 0.0976, loss = 0.0361, val_loss = 0.0000, eval: [5.7 s]
# Iteration 36 fit: [5.3 s]: Recall = 0.1529, Jaccard score = 0.1007, loss = 0.0327, val_loss = 0.0000, eval: [5.8 s]
# Iteration 37 fit: [5.3 s]: Recall = 0.1538, Jaccard score = 0.1013, loss = 0.0306, val_loss = 0.0000, eval: [5.7 s]
# Iteration 38 fit: [5.2 s]: Recall = 0.1566, Jaccard score = 0.1034, loss = 0.0291, val_loss = 0.0000, eval: [5.8 s]
# Iteration 39 fit: [5.3 s]: Recall = 0.1593, Jaccard score = 0.1054, loss = 0.0268, val_loss = 0.0000, eval: [5.8 s]
# Iteration 40 fit: [5.3 s]: Recall = 0.1628, Jaccard score = 0.1079, loss = 0.0250, val_loss = 0.0000, eval: [5.8 s]
# Iteration 41 fit: [5.2 s]: Recall = 0.1684, Jaccard score = 0.1120, loss = 0.0237, val_loss = 0.0000, eval: [5.7 s]
# Iteration 42 fit: [5.3 s]: Recall = 0.1681, Jaccard score = 0.1118, loss = 0.0216, val_loss = 0.0000, eval: [5.8 s]
# Iteration 43 fit: [5.3 s]: Recall = 0.1697, Jaccard score = 0.1130, loss = 0.0204, val_loss = 0.0000, eval: [5.8 s]
# Iteration 44 fit: [5.3 s]: Recall = 0.1761, Jaccard score = 0.1178, loss = 0.0191, val_loss = 0.0000, eval: [5.8 s]
# Iteration 45 fit: [5.3 s]: Recall = 0.1814, Jaccard score = 0.1217, loss = 0.0178, val_loss = 0.0000, eval: [5.7 s]
# Iteration 46 fit: [5.3 s]: Recall = 0.1807, Jaccard score = 0.1212, loss = 0.0168, val_loss = 0.0000, eval: [5.7 s]
# Iteration 47 fit: [5.3 s]: Recall = 0.1830, Jaccard score = 0.1229, loss = 0.0161, val_loss = 0.0000, eval: [5.8 s]
# Iteration 48 fit: [5.3 s]: Recall = 0.1829, Jaccard score = 0.1228, loss = 0.0151, val_loss = 0.0000, eval: [5.8 s]
# Iteration 49 fit: [5.3 s]: Recall = 0.1860, Jaccard score = 0.1252, loss = 0.0146, val_loss = 0.0000, eval: [5.7 s]
# Iteration 50 fit: [5.2 s]: Recall = 0.1923, Jaccard score = 0.1300, loss = 0.0135, val_loss = 0.0000, eval: [5.7 s]
# Iteration 51 fit: [5.3 s]: Recall = 0.1880, Jaccard score = 0.1267, loss = 0.0127, val_loss = 0.0000, eval: [5.8 s]
# Iteration 52 fit: [5.3 s]: Recall = 0.1934, Jaccard score = 0.1308, loss = 0.0123, val_loss = 0.0000, eval: [5.8 s]
# Iteration 53 fit: [5.3 s]: Recall = 0.1975, Jaccard score = 0.1340, loss = 0.0120, val_loss = 0.0000, eval: [5.8 s]
# Iteration 54 fit: [5.3 s]: Recall = 0.1939, Jaccard score = 0.1312, loss = 0.0112, val_loss = 0.0000, eval: [5.7 s]
# Iteration 55 fit: [5.3 s]: Recall = 0.2014, Jaccard score = 0.1370, loss = 0.0104, val_loss = 0.0000, eval: [5.7 s]
# Iteration 56 fit: [5.3 s]: Recall = 0.2054, Jaccard score = 0.1401, loss = 0.0108, val_loss = 0.0000, eval: [5.8 s]
# Iteration 57 fit: [5.3 s]: Recall = 0.2001, Jaccard score = 0.1360, loss = 0.0100, val_loss = 0.0000, eval: [5.8 s]
# Iteration 58 fit: [5.3 s]: Recall = 0.2090, Jaccard score = 0.1429, loss = 0.0093, val_loss = 0.0000, eval: [5.7 s]
# Iteration 59 fit: [5.3 s]: Recall = 0.2035, Jaccard score = 0.1386, loss = 0.0091, val_loss = 0.0000, eval: [5.7 s]
# Iteration 60 fit: [5.3 s]: Recall = 0.2080, Jaccard score = 0.1421, loss = 0.0095, val_loss = 0.0000, eval: [5.7 s]
# Iteration 61 fit: [5.3 s]: Recall = 0.2100, Jaccard score = 0.1436, loss = 0.0085, val_loss = 0.0000, eval: [5.8 s]
# Iteration 62 fit: [5.3 s]: Recall = 0.2150, Jaccard score = 0.1476, loss = 0.0084, val_loss = 0.0000, eval: [5.8 s]
# Iteration 63 fit: [5.3 s]: Recall = 0.2148, Jaccard score = 0.1475, loss = 0.0080, val_loss = 0.0000, eval: [5.8 s]
# Iteration 64 fit: [5.3 s]: Recall = 0.2186, Jaccard score = 0.1504, loss = 0.0077, val_loss = 0.0000, eval: [5.7 s]
# Iteration 65 fit: [5.3 s]: Recall = 0.2209, Jaccard score = 0.1523, loss = 0.0074, val_loss = 0.0000, eval: [5.7 s]
# Iteration 66 fit: [5.3 s]: Recall = 0.2218, Jaccard score = 0.1530, loss = 0.0071, val_loss = 0.0000, eval: [5.7 s]
# Iteration 67 fit: [5.3 s]: Recall = 0.2225, Jaccard score = 0.1536, loss = 0.0071, val_loss = 0.0000, eval: [5.8 s]
# Iteration 68 fit: [5.3 s]: Recall = 0.2223, Jaccard score = 0.1534, loss = 0.0067, val_loss = 0.0000, eval: [5.8 s]
# Iteration 69 fit: [5.3 s]: Recall = 0.2263, Jaccard score = 0.1565, loss = 0.0066, val_loss = 0.0000, eval: [5.7 s]
# Iteration 70 fit: [5.3 s]: Recall = 0.2230, Jaccard score = 0.1540, loss = 0.0063, val_loss = 0.0000, eval: [5.7 s]
# Iteration 71 fit: [5.3 s]: Recall = 0.2278, Jaccard score = 0.1577, loss = 0.0065, val_loss = 0.0000, eval: [5.8 s]
# Iteration 72 fit: [5.3 s]: Recall = 0.2312, Jaccard score = 0.1605, loss = 0.0061, val_loss = 0.0000, eval: [5.7 s]
# Iteration 73 fit: [5.2 s]: Recall = 0.2301, Jaccard score = 0.1596, loss = 0.0060, val_loss = 0.0000, eval: [5.7 s]
# Iteration 74 fit: [5.3 s]: Recall = 0.2346, Jaccard score = 0.1632, loss = 0.0056, val_loss = 0.0000, eval: [5.7 s]
# Iteration 75 fit: [5.3 s]: Recall = 0.2326, Jaccard score = 0.1616, loss = 0.0058, val_loss = 0.0000, eval: [5.8 s]
# Iteration 76 fit: [5.3 s]: Recall = 0.2340, Jaccard score = 0.1627, loss = 0.0051, val_loss = 0.0000, eval: [5.8 s]
# Iteration 77 fit: [5.3 s]: Recall = 0.2365, Jaccard score = 0.1648, loss = 0.0054, val_loss = 0.0000, eval: [5.7 s]
# Iteration 78 fit: [5.3 s]: Recall = 0.2351, Jaccard score = 0.1637, loss = 0.0057, val_loss = 0.0000, eval: [5.7 s]
# Iteration 79 fit: [5.3 s]: Recall = 0.2368, Jaccard score = 0.1651, loss = 0.0054, val_loss = 0.0000, eval: [5.7 s]
# Iteration 80 fit: [5.3 s]: Recall = 0.2397, Jaccard score = 0.1674, loss = 0.0052, val_loss = 0.0000, eval: [5.8 s]
# Iteration 81 fit: [5.3 s]: Recall = 0.2395, Jaccard score = 0.1672, loss = 0.0052, val_loss = 0.0000, eval: [5.8 s]
# Iteration 82 fit: [5.3 s]: Recall = 0.2402, Jaccard score = 0.1678, loss = 0.0046, val_loss = 0.0000, eval: [5.7 s]
# Iteration 83 fit: [5.3 s]: Recall = 0.2412, Jaccard score = 0.1686, loss = 0.0047, val_loss = 0.0000, eval: [5.7 s]
# Iteration 84 fit: [5.3 s]: Recall = 0.2442, Jaccard score = 0.1711, loss = 0.0046, val_loss = 0.0000, eval: [5.7 s]
# Iteration 85 fit: [5.3 s]: Recall = 0.2416, Jaccard score = 0.1689, loss = 0.0047, val_loss = 0.0000, eval: [5.8 s]
# Iteration 86 fit: [5.3 s]: Recall = 0.2452, Jaccard score = 0.1719, loss = 0.0044, val_loss = 0.0000, eval: [5.8 s]
# Iteration 87 fit: [5.3 s]: Recall = 0.2454, Jaccard score = 0.1721, loss = 0.0049, val_loss = 0.0000, eval: [5.8 s]
# Iteration 88 fit: [5.3 s]: Recall = 0.2492, Jaccard score = 0.1751, loss = 0.0045, val_loss = 0.0000, eval: [5.7 s]
# Iteration 89 fit: [5.3 s]: Recall = 0.2463, Jaccard score = 0.1728, loss = 0.0046, val_loss = 0.0000, eval: [5.8 s]
# Iteration 90 fit: [5.3 s]: Recall = 0.2494, Jaccard score = 0.1754, loss = 0.0042, val_loss = 0.0000, eval: [5.8 s]
# Iteration 91 fit: [5.3 s]: Recall = 0.2484, Jaccard score = 0.1745, loss = 0.0044, val_loss = 0.0000, eval: [5.8 s]
# Iteration 92 fit: [5.3 s]: Recall = 0.2494, Jaccard score = 0.1754, loss = 0.0041, val_loss = 0.0000, eval: [5.8 s]
# Iteration 93 fit: [5.3 s]: Recall = 0.2513, Jaccard score = 0.1769, loss = 0.0042, val_loss = 0.0000, eval: [5.7 s]
# Iteration 94 fit: [5.3 s]: Recall = 0.2510, Jaccard score = 0.1767, loss = 0.0041, val_loss = 0.0000, eval: [5.8 s]
# Iteration 95 fit: [5.3 s]: Recall = 0.2498, Jaccard score = 0.1757, loss = 0.0039, val_loss = 0.0000, eval: [5.7 s]
# Iteration 96 fit: [5.3 s]: Recall = 0.2525, Jaccard score = 0.1779, loss = 0.0037, val_loss = 0.0000, eval: [5.8 s]
# Iteration 97 fit: [5.3 s]: Recall = 0.2539, Jaccard score = 0.1791, loss = 0.0038, val_loss = 0.0000, eval: [5.8 s]
# Iteration 98 fit: [5.3 s]: Recall = 0.2554, Jaccard score = 0.1803, loss = 0.0038, val_loss = 0.0000, eval: [5.7 s]
# Iteration 99 fit: [5.3 s]: Recall = 0.2560, Jaccard score = 0.1808, loss = 0.0039, val_loss = 0.0000, eval: [5.8 s]
# Iteration 100 fit: [5.3 s]: Recall = 0.2612, Jaccard score = 0.1852, loss = 0.0037, val_loss = 0.0000, eval: [5.7 s]
# Iteration 101 fit: [5.3 s]: Recall = 0.2556, Jaccard score = 0.1805, loss = 0.0037, val_loss = 0.0000, eval: [5.7 s]
# Iteration 102 fit: [5.3 s]: Recall = 0.2575, Jaccard score = 0.1821, loss = 0.0036, val_loss = 0.0000, eval: [5.8 s]
# Iteration 103 fit: [5.3 s]: Recall = 0.2545, Jaccard score = 0.1796, loss = 0.0036, val_loss = 0.0000, eval: [5.7 s]
# Iteration 104 fit: [5.2 s]: Recall = 0.2589, Jaccard score = 0.1832, loss = 0.0036, val_loss = 0.0000, eval: [5.7 s]
# Iteration 105 fit: [5.3 s]: Recall = 0.2572, Jaccard score = 0.1819, loss = 0.0035, val_loss = 0.0000, eval: [5.7 s]
# Iteration 106 fit: [5.2 s]: Recall = 0.2650, Jaccard score = 0.1883, loss = 0.0037, val_loss = 0.0000, eval: [5.7 s]
# Iteration 107 fit: [5.3 s]: Recall = 0.2571, Jaccard score = 0.1818, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 108 fit: [5.3 s]: Recall = 0.2561, Jaccard score = 0.1809, loss = 0.0036, val_loss = 0.0000, eval: [5.7 s]
# Iteration 109 fit: [5.3 s]: Recall = 0.2589, Jaccard score = 0.1832, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 110 fit: [5.3 s]: Recall = 0.2587, Jaccard score = 0.1831, loss = 0.0033, val_loss = 0.0000, eval: [5.7 s]
# Iteration 111 fit: [5.3 s]: Recall = 0.2607, Jaccard score = 0.1848, loss = 0.0035, val_loss = 0.0000, eval: [5.7 s]
# Iteration 112 fit: [5.3 s]: Recall = 0.2646, Jaccard score = 0.1880, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 113 fit: [5.3 s]: Recall = 0.2587, Jaccard score = 0.1831, loss = 0.0033, val_loss = 0.0000, eval: [5.7 s]
# Iteration 114 fit: [5.3 s]: Recall = 0.2642, Jaccard score = 0.1877, loss = 0.0031, val_loss = 0.0000, eval: [5.7 s]
# Iteration 115 fit: [5.3 s]: Recall = 0.2667, Jaccard score = 0.1898, loss = 0.0036, val_loss = 0.0000, eval: [5.8 s]
# Iteration 116 fit: [5.3 s]: Recall = 0.2673, Jaccard score = 0.1903, loss = 0.0033, val_loss = 0.0000, eval: [5.7 s]
# Iteration 117 fit: [5.3 s]: Recall = 0.2660, Jaccard score = 0.1892, loss = 0.0032, val_loss = 0.0000, eval: [5.7 s]
# Iteration 118 fit: [5.3 s]: Recall = 0.2674, Jaccard score = 0.1905, loss = 0.0033, val_loss = 0.0000, eval: [5.8 s]
# Iteration 119 fit: [5.3 s]: Recall = 0.2650, Jaccard score = 0.1883, loss = 0.0033, val_loss = 0.0000, eval: [5.7 s]
# End. Best Iteration 118:  Recall = 0.2674, Jaccard score = 0.1905. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 7 is: Recall = 0.293788478407795, Jaccard score = 0.21180500495375865
# 
# Performing k-fold 8
# Init: Recall = 0.0290, Jaccard score = 0.0177
# Iteration 0 fit: [5.4 s]: Recall = 0.0259, Jaccard score = 0.0158, loss = 0.5612, val_loss = 0.0000, eval: [5.7 s]
# Iteration 1 fit: [4.9 s]: Recall = 0.0303, Jaccard score = 0.0186, loss = 0.5012, val_loss = 0.0000, eval: [5.8 s]
# Iteration 2 fit: [4.9 s]: Recall = 0.0295, Jaccard score = 0.0180, loss = 0.5002, val_loss = 0.0000, eval: [5.8 s]
# Iteration 3 fit: [4.9 s]: Recall = 0.0317, Jaccard score = 0.0194, loss = 0.4980, val_loss = 0.0000, eval: [5.8 s]
# Iteration 4 fit: [4.9 s]: Recall = 0.0333, Jaccard score = 0.0204, loss = 0.4924, val_loss = 0.0000, eval: [5.8 s]
# Iteration 5 fit: [4.9 s]: Recall = 0.0374, Jaccard score = 0.0229, loss = 0.4832, val_loss = 0.0000, eval: [5.8 s]
# Iteration 6 fit: [4.9 s]: Recall = 0.0382, Jaccard score = 0.0235, loss = 0.4697, val_loss = 0.0000, eval: [5.8 s]
# Iteration 7 fit: [4.9 s]: Recall = 0.0475, Jaccard score = 0.0293, loss = 0.4521, val_loss = 0.0000, eval: [5.8 s]
# Iteration 8 fit: [4.9 s]: Recall = 0.0490, Jaccard score = 0.0303, loss = 0.4316, val_loss = 0.0000, eval: [5.8 s]
# Iteration 9 fit: [4.9 s]: Recall = 0.0567, Jaccard score = 0.0353, loss = 0.4081, val_loss = 0.0000, eval: [5.8 s]
# Iteration 10 fit: [4.9 s]: Recall = 0.0612, Jaccard score = 0.0381, loss = 0.3827, val_loss = 0.0000, eval: [5.8 s]
# Iteration 11 fit: [4.9 s]: Recall = 0.0688, Jaccard score = 0.0431, loss = 0.3550, val_loss = 0.0000, eval: [5.8 s]
# Iteration 12 fit: [4.9 s]: Recall = 0.0780, Jaccard score = 0.0491, loss = 0.3282, val_loss = 0.0000, eval: [5.8 s]
# Iteration 13 fit: [4.9 s]: Recall = 0.0838, Jaccard score = 0.0529, loss = 0.3016, val_loss = 0.0000, eval: [5.8 s]
# Iteration 14 fit: [4.9 s]: Recall = 0.0848, Jaccard score = 0.0536, loss = 0.2757, val_loss = 0.0000, eval: [5.8 s]
# Iteration 15 fit: [4.9 s]: Recall = 0.0907, Jaccard score = 0.0576, loss = 0.2511, val_loss = 0.0000, eval: [5.8 s]
# Iteration 16 fit: [4.9 s]: Recall = 0.0960, Jaccard score = 0.0611, loss = 0.2280, val_loss = 0.0000, eval: [5.8 s]
# Iteration 17 fit: [4.9 s]: Recall = 0.1010, Jaccard score = 0.0646, loss = 0.2070, val_loss = 0.0000, eval: [5.8 s]
# Iteration 18 fit: [4.9 s]: Recall = 0.1054, Jaccard score = 0.0675, loss = 0.1874, val_loss = 0.0000, eval: [5.8 s]
# Iteration 19 fit: [4.9 s]: Recall = 0.1063, Jaccard score = 0.0682, loss = 0.1704, val_loss = 0.0000, eval: [5.8 s]
# Iteration 20 fit: [4.9 s]: Recall = 0.1086, Jaccard score = 0.0697, loss = 0.1535, val_loss = 0.0000, eval: [5.8 s]
# Iteration 21 fit: [4.9 s]: Recall = 0.1103, Jaccard score = 0.0709, loss = 0.1388, val_loss = 0.0000, eval: [5.8 s]
# Iteration 22 fit: [4.9 s]: Recall = 0.1124, Jaccard score = 0.0723, loss = 0.1246, val_loss = 0.0000, eval: [5.8 s]
# Iteration 23 fit: [4.9 s]: Recall = 0.1110, Jaccard score = 0.0714, loss = 0.1133, val_loss = 0.0000, eval: [5.8 s]
# Iteration 24 fit: [4.9 s]: Recall = 0.1140, Jaccard score = 0.0734, loss = 0.1022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 25 fit: [4.9 s]: Recall = 0.1183, Jaccard score = 0.0764, loss = 0.0927, val_loss = 0.0000, eval: [5.8 s]
# Iteration 26 fit: [4.9 s]: Recall = 0.1177, Jaccard score = 0.0760, loss = 0.0836, val_loss = 0.0000, eval: [5.8 s]
# Iteration 27 fit: [4.9 s]: Recall = 0.1219, Jaccard score = 0.0789, loss = 0.0753, val_loss = 0.0000, eval: [5.8 s]
# Iteration 28 fit: [4.9 s]: Recall = 0.1244, Jaccard score = 0.0807, loss = 0.0677, val_loss = 0.0000, eval: [5.8 s]
# Iteration 29 fit: [4.9 s]: Recall = 0.1234, Jaccard score = 0.0800, loss = 0.0615, val_loss = 0.0000, eval: [5.8 s]
# Iteration 30 fit: [4.9 s]: Recall = 0.1277, Jaccard score = 0.0830, loss = 0.0556, val_loss = 0.0000, eval: [5.8 s]
# Iteration 31 fit: [4.9 s]: Recall = 0.1273, Jaccard score = 0.0827, loss = 0.0506, val_loss = 0.0000, eval: [5.8 s]
# Iteration 32 fit: [4.9 s]: Recall = 0.1263, Jaccard score = 0.0820, loss = 0.0457, val_loss = 0.0000, eval: [5.8 s]
# Iteration 33 fit: [4.9 s]: Recall = 0.1308, Jaccard score = 0.0852, loss = 0.0424, val_loss = 0.0000, eval: [5.8 s]
# Iteration 34 fit: [4.9 s]: Recall = 0.1340, Jaccard score = 0.0874, loss = 0.0389, val_loss = 0.0000, eval: [5.8 s]
# Iteration 35 fit: [4.9 s]: Recall = 0.1357, Jaccard score = 0.0887, loss = 0.0359, val_loss = 0.0000, eval: [5.8 s]
# Iteration 36 fit: [4.9 s]: Recall = 0.1377, Jaccard score = 0.0901, loss = 0.0326, val_loss = 0.0000, eval: [5.8 s]
# Iteration 37 fit: [4.9 s]: Recall = 0.1452, Jaccard score = 0.0955, loss = 0.0304, val_loss = 0.0000, eval: [5.8 s]
# Iteration 38 fit: [4.9 s]: Recall = 0.1396, Jaccard score = 0.0915, loss = 0.0279, val_loss = 0.0000, eval: [5.8 s]
# Iteration 39 fit: [4.9 s]: Recall = 0.1454, Jaccard score = 0.0956, loss = 0.0261, val_loss = 0.0000, eval: [5.8 s]
# Iteration 40 fit: [4.9 s]: Recall = 0.1447, Jaccard score = 0.0951, loss = 0.0239, val_loss = 0.0000, eval: [5.8 s]
# Iteration 41 fit: [4.9 s]: Recall = 0.1494, Jaccard score = 0.0985, loss = 0.0221, val_loss = 0.0000, eval: [5.8 s]
# Iteration 42 fit: [4.9 s]: Recall = 0.1567, Jaccard score = 0.1038, loss = 0.0202, val_loss = 0.0000, eval: [5.8 s]
# Iteration 43 fit: [4.9 s]: Recall = 0.1520, Jaccard score = 0.1004, loss = 0.0191, val_loss = 0.0000, eval: [5.8 s]
# Iteration 44 fit: [4.9 s]: Recall = 0.1559, Jaccard score = 0.1033, loss = 0.0185, val_loss = 0.0000, eval: [5.8 s]
# Iteration 45 fit: [4.9 s]: Recall = 0.1575, Jaccard score = 0.1044, loss = 0.0170, val_loss = 0.0000, eval: [5.8 s]
# Iteration 46 fit: [4.9 s]: Recall = 0.1575, Jaccard score = 0.1044, loss = 0.0164, val_loss = 0.0000, eval: [5.8 s]
# Iteration 47 fit: [4.9 s]: Recall = 0.1644, Jaccard score = 0.1095, loss = 0.0154, val_loss = 0.0000, eval: [5.8 s]
# Iteration 48 fit: [4.9 s]: Recall = 0.1644, Jaccard score = 0.1095, loss = 0.0144, val_loss = 0.0000, eval: [5.8 s]
# Iteration 49 fit: [4.9 s]: Recall = 0.1658, Jaccard score = 0.1105, loss = 0.0138, val_loss = 0.0000, eval: [5.8 s]
# Iteration 50 fit: [4.9 s]: Recall = 0.1665, Jaccard score = 0.1111, loss = 0.0133, val_loss = 0.0000, eval: [5.9 s]
# Iteration 51 fit: [4.9 s]: Recall = 0.1731, Jaccard score = 0.1159, loss = 0.0121, val_loss = 0.0000, eval: [5.8 s]
# Iteration 52 fit: [4.9 s]: Recall = 0.1744, Jaccard score = 0.1169, loss = 0.0119, val_loss = 0.0000, eval: [5.8 s]
# Iteration 53 fit: [4.9 s]: Recall = 0.1772, Jaccard score = 0.1190, loss = 0.0113, val_loss = 0.0000, eval: [5.8 s]
# Iteration 54 fit: [4.9 s]: Recall = 0.1796, Jaccard score = 0.1208, loss = 0.0107, val_loss = 0.0000, eval: [5.8 s]
# Iteration 55 fit: [4.9 s]: Recall = 0.1781, Jaccard score = 0.1197, loss = 0.0102, val_loss = 0.0000, eval: [5.8 s]
# Iteration 56 fit: [4.9 s]: Recall = 0.1839, Jaccard score = 0.1241, loss = 0.0097, val_loss = 0.0000, eval: [5.8 s]
# Iteration 57 fit: [4.9 s]: Recall = 0.1800, Jaccard score = 0.1211, loss = 0.0094, val_loss = 0.0000, eval: [5.8 s]
# Iteration 58 fit: [4.9 s]: Recall = 0.1821, Jaccard score = 0.1227, loss = 0.0088, val_loss = 0.0000, eval: [5.8 s]
# Iteration 59 fit: [4.9 s]: Recall = 0.1867, Jaccard score = 0.1262, loss = 0.0087, val_loss = 0.0000, eval: [5.8 s]
# Iteration 60 fit: [4.9 s]: Recall = 0.1862, Jaccard score = 0.1258, loss = 0.0080, val_loss = 0.0000, eval: [5.8 s]
# Iteration 61 fit: [4.9 s]: Recall = 0.1920, Jaccard score = 0.1302, loss = 0.0079, val_loss = 0.0000, eval: [5.8 s]
# Iteration 62 fit: [4.9 s]: Recall = 0.1950, Jaccard score = 0.1326, loss = 0.0076, val_loss = 0.0000, eval: [5.8 s]
# Iteration 63 fit: [4.9 s]: Recall = 0.1906, Jaccard score = 0.1292, loss = 0.0074, val_loss = 0.0000, eval: [5.8 s]
# Iteration 64 fit: [4.9 s]: Recall = 0.1966, Jaccard score = 0.1338, loss = 0.0070, val_loss = 0.0000, eval: [5.8 s]
# Iteration 65 fit: [4.9 s]: Recall = 0.1934, Jaccard score = 0.1313, loss = 0.0069, val_loss = 0.0000, eval: [5.8 s]
# Iteration 66 fit: [4.9 s]: Recall = 0.2013, Jaccard score = 0.1374, loss = 0.0066, val_loss = 0.0000, eval: [5.8 s]
# Iteration 67 fit: [4.9 s]: Recall = 0.1986, Jaccard score = 0.1353, loss = 0.0062, val_loss = 0.0000, eval: [5.8 s]
# Iteration 68 fit: [4.9 s]: Recall = 0.2023, Jaccard score = 0.1382, loss = 0.0060, val_loss = 0.0000, eval: [5.8 s]
# Iteration 69 fit: [4.9 s]: Recall = 0.2057, Jaccard score = 0.1408, loss = 0.0060, val_loss = 0.0000, eval: [5.8 s]
# Iteration 70 fit: [4.9 s]: Recall = 0.2065, Jaccard score = 0.1415, loss = 0.0056, val_loss = 0.0000, eval: [5.8 s]
# Iteration 71 fit: [4.9 s]: Recall = 0.2063, Jaccard score = 0.1413, loss = 0.0057, val_loss = 0.0000, eval: [5.8 s]
# Iteration 72 fit: [4.9 s]: Recall = 0.2066, Jaccard score = 0.1416, loss = 0.0056, val_loss = 0.0000, eval: [5.8 s]
# Iteration 73 fit: [4.9 s]: Recall = 0.2092, Jaccard score = 0.1436, loss = 0.0054, val_loss = 0.0000, eval: [5.8 s]
# Iteration 74 fit: [4.9 s]: Recall = 0.2092, Jaccard score = 0.1436, loss = 0.0052, val_loss = 0.0000, eval: [5.8 s]
# Iteration 75 fit: [4.9 s]: Recall = 0.2069, Jaccard score = 0.1418, loss = 0.0050, val_loss = 0.0000, eval: [5.8 s]
# Iteration 76 fit: [4.9 s]: Recall = 0.2135, Jaccard score = 0.1470, loss = 0.0052, val_loss = 0.0000, eval: [5.8 s]
# Iteration 77 fit: [4.9 s]: Recall = 0.2126, Jaccard score = 0.1462, loss = 0.0049, val_loss = 0.0000, eval: [5.8 s]
# Iteration 78 fit: [4.9 s]: Recall = 0.2139, Jaccard score = 0.1473, loss = 0.0050, val_loss = 0.0000, eval: [5.8 s]
# Iteration 79 fit: [4.9 s]: Recall = 0.2165, Jaccard score = 0.1493, loss = 0.0047, val_loss = 0.0000, eval: [5.8 s]
# Iteration 80 fit: [4.9 s]: Recall = 0.2174, Jaccard score = 0.1500, loss = 0.0045, val_loss = 0.0000, eval: [5.8 s]
# Iteration 81 fit: [4.9 s]: Recall = 0.2155, Jaccard score = 0.1486, loss = 0.0044, val_loss = 0.0000, eval: [5.8 s]
# Iteration 82 fit: [4.9 s]: Recall = 0.2202, Jaccard score = 0.1523, loss = 0.0043, val_loss = 0.0000, eval: [5.8 s]
# Iteration 83 fit: [4.9 s]: Recall = 0.2217, Jaccard score = 0.1535, loss = 0.0041, val_loss = 0.0000, eval: [5.8 s]
# Iteration 84 fit: [4.9 s]: Recall = 0.2171, Jaccard score = 0.1498, loss = 0.0040, val_loss = 0.0000, eval: [5.8 s]
# Iteration 85 fit: [4.9 s]: Recall = 0.2229, Jaccard score = 0.1545, loss = 0.0041, val_loss = 0.0000, eval: [5.8 s]
# Iteration 86 fit: [4.9 s]: Recall = 0.2223, Jaccard score = 0.1540, loss = 0.0038, val_loss = 0.0000, eval: [5.8 s]
# Iteration 87 fit: [4.9 s]: Recall = 0.2274, Jaccard score = 0.1580, loss = 0.0040, val_loss = 0.0000, eval: [5.8 s]
# Iteration 88 fit: [4.9 s]: Recall = 0.2248, Jaccard score = 0.1559, loss = 0.0043, val_loss = 0.0000, eval: [5.8 s]
# Iteration 89 fit: [4.9 s]: Recall = 0.2309, Jaccard score = 0.1609, loss = 0.0037, val_loss = 0.0000, eval: [5.8 s]
# Iteration 90 fit: [4.9 s]: Recall = 0.2251, Jaccard score = 0.1562, loss = 0.0037, val_loss = 0.0000, eval: [5.8 s]
# Iteration 91 fit: [4.9 s]: Recall = 0.2266, Jaccard score = 0.1574, loss = 0.0038, val_loss = 0.0000, eval: [5.8 s]
# Iteration 92 fit: [4.9 s]: Recall = 0.2265, Jaccard score = 0.1573, loss = 0.0036, val_loss = 0.0000, eval: [5.8 s]
# Iteration 93 fit: [4.9 s]: Recall = 0.2292, Jaccard score = 0.1595, loss = 0.0038, val_loss = 0.0000, eval: [5.8 s]
# Iteration 94 fit: [4.9 s]: Recall = 0.2281, Jaccard score = 0.1586, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 95 fit: [4.9 s]: Recall = 0.2309, Jaccard score = 0.1609, loss = 0.0033, val_loss = 0.0000, eval: [5.8 s]
# Iteration 96 fit: [4.9 s]: Recall = 0.2301, Jaccard score = 0.1602, loss = 0.0034, val_loss = 0.0000, eval: [5.9 s]
# Iteration 97 fit: [4.9 s]: Recall = 0.2312, Jaccard score = 0.1611, loss = 0.0033, val_loss = 0.0000, eval: [5.8 s]
# Iteration 98 fit: [4.9 s]: Recall = 0.2319, Jaccard score = 0.1617, loss = 0.0036, val_loss = 0.0000, eval: [5.8 s]
# Iteration 99 fit: [4.9 s]: Recall = 0.2327, Jaccard score = 0.1623, loss = 0.0033, val_loss = 0.0000, eval: [5.8 s]
# Iteration 100 fit: [4.9 s]: Recall = 0.2323, Jaccard score = 0.1620, loss = 0.0031, val_loss = 0.0000, eval: [5.8 s]
# Iteration 101 fit: [4.9 s]: Recall = 0.2362, Jaccard score = 0.1652, loss = 0.0033, val_loss = 0.0000, eval: [5.8 s]
# Iteration 102 fit: [4.9 s]: Recall = 0.2374, Jaccard score = 0.1661, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 103 fit: [4.9 s]: Recall = 0.2406, Jaccard score = 0.1687, loss = 0.0031, val_loss = 0.0000, eval: [5.8 s]
# Iteration 104 fit: [4.9 s]: Recall = 0.2428, Jaccard score = 0.1706, loss = 0.0030, val_loss = 0.0000, eval: [5.8 s]
# Iteration 105 fit: [4.9 s]: Recall = 0.2425, Jaccard score = 0.1704, loss = 0.0029, val_loss = 0.0000, eval: [5.8 s]
# Iteration 106 fit: [4.9 s]: Recall = 0.2423, Jaccard score = 0.1702, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 107 fit: [4.9 s]: Recall = 0.2412, Jaccard score = 0.1692, loss = 0.0028, val_loss = 0.0000, eval: [5.8 s]
# Iteration 108 fit: [4.9 s]: Recall = 0.2408, Jaccard score = 0.1689, loss = 0.0028, val_loss = 0.0000, eval: [5.8 s]
# Iteration 109 fit: [4.9 s]: Recall = 0.2419, Jaccard score = 0.1699, loss = 0.0031, val_loss = 0.0000, eval: [5.8 s]
# Iteration 110 fit: [4.9 s]: Recall = 0.2372, Jaccard score = 0.1660, loss = 0.0028, val_loss = 0.0000, eval: [5.8 s]
# Iteration 111 fit: [4.9 s]: Recall = 0.2412, Jaccard score = 0.1692, loss = 0.0028, val_loss = 0.0000, eval: [5.8 s]
# Iteration 112 fit: [4.9 s]: Recall = 0.2461, Jaccard score = 0.1733, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 113 fit: [4.9 s]: Recall = 0.2470, Jaccard score = 0.1740, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 114 fit: [4.9 s]: Recall = 0.2473, Jaccard score = 0.1743, loss = 0.0030, val_loss = 0.0000, eval: [5.8 s]
# Iteration 115 fit: [4.9 s]: Recall = 0.2481, Jaccard score = 0.1749, loss = 0.0028, val_loss = 0.0000, eval: [5.8 s]
# Iteration 116 fit: [4.9 s]: Recall = 0.2451, Jaccard score = 0.1725, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 117 fit: [4.9 s]: Recall = 0.2466, Jaccard score = 0.1737, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 118 fit: [4.9 s]: Recall = 0.2493, Jaccard score = 0.1760, loss = 0.0025, val_loss = 0.0000, eval: [5.8 s]
# Iteration 119 fit: [4.9 s]: Recall = 0.2488, Jaccard score = 0.1756, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# End. Best Iteration 118:  Recall = 0.2493, Jaccard score = 0.1760. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 8 is: Recall = 0.2882301048885872, Jaccard score = 0.20732546118042475
# 
# Performing k-fold 9
# Init: Recall = 0.0296, Jaccard score = 0.0179
# Iteration 0 fit: [5.1 s]: Recall = 0.0290, Jaccard score = 0.0175, loss = 0.5660, val_loss = 0.0000, eval: [5.8 s]
# Iteration 1 fit: [4.5 s]: Recall = 0.0300, Jaccard score = 0.0181, loss = 0.5016, val_loss = 0.0000, eval: [5.8 s]
# Iteration 2 fit: [4.5 s]: Recall = 0.0321, Jaccard score = 0.0194, loss = 0.5001, val_loss = 0.0000, eval: [5.8 s]
# Iteration 3 fit: [4.5 s]: Recall = 0.0325, Jaccard score = 0.0197, loss = 0.4977, val_loss = 0.0000, eval: [5.8 s]
# Iteration 4 fit: [4.5 s]: Recall = 0.0347, Jaccard score = 0.0210, loss = 0.4919, val_loss = 0.0000, eval: [5.8 s]
# Iteration 5 fit: [4.5 s]: Recall = 0.0347, Jaccard score = 0.0210, loss = 0.4816, val_loss = 0.0000, eval: [5.8 s]
# Iteration 6 fit: [4.5 s]: Recall = 0.0389, Jaccard score = 0.0236, loss = 0.4676, val_loss = 0.0000, eval: [5.8 s]
# Iteration 7 fit: [4.5 s]: Recall = 0.0418, Jaccard score = 0.0254, loss = 0.4503, val_loss = 0.0000, eval: [5.8 s]
# Iteration 8 fit: [4.5 s]: Recall = 0.0457, Jaccard score = 0.0279, loss = 0.4298, val_loss = 0.0000, eval: [5.8 s]
# Iteration 9 fit: [4.5 s]: Recall = 0.0478, Jaccard score = 0.0292, loss = 0.4064, val_loss = 0.0000, eval: [5.8 s]
# Iteration 10 fit: [4.5 s]: Recall = 0.0518, Jaccard score = 0.0317, loss = 0.3808, val_loss = 0.0000, eval: [5.8 s]
# Iteration 11 fit: [4.5 s]: Recall = 0.0607, Jaccard score = 0.0374, loss = 0.3540, val_loss = 0.0000, eval: [5.8 s]
# Iteration 12 fit: [4.5 s]: Recall = 0.0644, Jaccard score = 0.0397, loss = 0.3277, val_loss = 0.0000, eval: [5.8 s]
# Iteration 13 fit: [4.5 s]: Recall = 0.0708, Jaccard score = 0.0438, loss = 0.2998, val_loss = 0.0000, eval: [5.8 s]
# Iteration 14 fit: [4.5 s]: Recall = 0.0742, Jaccard score = 0.0460, loss = 0.2741, val_loss = 0.0000, eval: [5.8 s]
# Iteration 15 fit: [4.5 s]: Recall = 0.0800, Jaccard score = 0.0498, loss = 0.2485, val_loss = 0.0000, eval: [5.8 s]
# Iteration 16 fit: [4.5 s]: Recall = 0.0835, Jaccard score = 0.0521, loss = 0.2260, val_loss = 0.0000, eval: [5.8 s]
# Iteration 17 fit: [4.5 s]: Recall = 0.0889, Jaccard score = 0.0557, loss = 0.2049, val_loss = 0.0000, eval: [5.8 s]
# Iteration 18 fit: [4.5 s]: Recall = 0.0898, Jaccard score = 0.0563, loss = 0.1858, val_loss = 0.0000, eval: [5.8 s]
# Iteration 19 fit: [4.5 s]: Recall = 0.0901, Jaccard score = 0.0564, loss = 0.1669, val_loss = 0.0000, eval: [5.8 s]
# Iteration 20 fit: [4.5 s]: Recall = 0.0939, Jaccard score = 0.0590, loss = 0.1517, val_loss = 0.0000, eval: [5.8 s]
# Iteration 21 fit: [4.5 s]: Recall = 0.0966, Jaccard score = 0.0607, loss = 0.1352, val_loss = 0.0000, eval: [5.8 s]
# Iteration 22 fit: [4.5 s]: Recall = 0.0968, Jaccard score = 0.0609, loss = 0.1216, val_loss = 0.0000, eval: [5.8 s]
# Iteration 23 fit: [4.5 s]: Recall = 0.1004, Jaccard score = 0.0633, loss = 0.1104, val_loss = 0.0000, eval: [5.8 s]
# Iteration 24 fit: [4.5 s]: Recall = 0.1007, Jaccard score = 0.0636, loss = 0.0990, val_loss = 0.0000, eval: [5.8 s]
# Iteration 25 fit: [4.5 s]: Recall = 0.0996, Jaccard score = 0.0628, loss = 0.0897, val_loss = 0.0000, eval: [5.8 s]
# Iteration 26 fit: [4.5 s]: Recall = 0.1018, Jaccard score = 0.0642, loss = 0.0814, val_loss = 0.0000, eval: [5.8 s]
# Iteration 27 fit: [4.5 s]: Recall = 0.1051, Jaccard score = 0.0665, loss = 0.0730, val_loss = 0.0000, eval: [5.8 s]
# Iteration 28 fit: [4.5 s]: Recall = 0.1048, Jaccard score = 0.0663, loss = 0.0662, val_loss = 0.0000, eval: [5.8 s]
# Iteration 29 fit: [4.5 s]: Recall = 0.1033, Jaccard score = 0.0653, loss = 0.0600, val_loss = 0.0000, eval: [5.8 s]
# Iteration 30 fit: [4.5 s]: Recall = 0.1053, Jaccard score = 0.0666, loss = 0.0533, val_loss = 0.0000, eval: [5.8 s]
# Iteration 31 fit: [4.5 s]: Recall = 0.1082, Jaccard score = 0.0686, loss = 0.0495, val_loss = 0.0000, eval: [5.8 s]
# Iteration 32 fit: [4.5 s]: Recall = 0.1107, Jaccard score = 0.0702, loss = 0.0444, val_loss = 0.0000, eval: [5.8 s]
# Iteration 33 fit: [4.5 s]: Recall = 0.1112, Jaccard score = 0.0706, loss = 0.0402, val_loss = 0.0000, eval: [5.8 s]
# Iteration 34 fit: [4.5 s]: Recall = 0.1154, Jaccard score = 0.0734, loss = 0.0372, val_loss = 0.0000, eval: [5.8 s]
# Iteration 35 fit: [4.5 s]: Recall = 0.1135, Jaccard score = 0.0721, loss = 0.0342, val_loss = 0.0000, eval: [5.8 s]
# Iteration 36 fit: [4.5 s]: Recall = 0.1187, Jaccard score = 0.0757, loss = 0.0317, val_loss = 0.0000, eval: [5.8 s]
# Iteration 37 fit: [4.5 s]: Recall = 0.1208, Jaccard score = 0.0772, loss = 0.0294, val_loss = 0.0000, eval: [5.8 s]
# Iteration 38 fit: [4.5 s]: Recall = 0.1182, Jaccard score = 0.0754, loss = 0.0271, val_loss = 0.0000, eval: [5.8 s]
# Iteration 39 fit: [4.5 s]: Recall = 0.1267, Jaccard score = 0.0812, loss = 0.0245, val_loss = 0.0000, eval: [5.8 s]
# Iteration 40 fit: [4.5 s]: Recall = 0.1244, Jaccard score = 0.0796, loss = 0.0233, val_loss = 0.0000, eval: [5.8 s]
# Iteration 41 fit: [4.5 s]: Recall = 0.1279, Jaccard score = 0.0821, loss = 0.0218, val_loss = 0.0000, eval: [5.8 s]
# Iteration 42 fit: [4.5 s]: Recall = 0.1295, Jaccard score = 0.0832, loss = 0.0204, val_loss = 0.0000, eval: [5.8 s]
# Iteration 43 fit: [4.5 s]: Recall = 0.1315, Jaccard score = 0.0846, loss = 0.0191, val_loss = 0.0000, eval: [5.8 s]
# Iteration 44 fit: [4.5 s]: Recall = 0.1358, Jaccard score = 0.0876, loss = 0.0167, val_loss = 0.0000, eval: [5.8 s]
# Iteration 45 fit: [4.5 s]: Recall = 0.1354, Jaccard score = 0.0873, loss = 0.0161, val_loss = 0.0000, eval: [5.8 s]
# Iteration 46 fit: [4.5 s]: Recall = 0.1414, Jaccard score = 0.0915, loss = 0.0157, val_loss = 0.0000, eval: [5.8 s]
# Iteration 47 fit: [4.5 s]: Recall = 0.1378, Jaccard score = 0.0890, loss = 0.0149, val_loss = 0.0000, eval: [5.8 s]
# Iteration 48 fit: [4.5 s]: Recall = 0.1410, Jaccard score = 0.0913, loss = 0.0139, val_loss = 0.0000, eval: [5.8 s]
# Iteration 49 fit: [4.5 s]: Recall = 0.1441, Jaccard score = 0.0934, loss = 0.0129, val_loss = 0.0000, eval: [5.8 s]
# Iteration 50 fit: [4.5 s]: Recall = 0.1467, Jaccard score = 0.0953, loss = 0.0124, val_loss = 0.0000, eval: [5.8 s]
# Iteration 51 fit: [4.5 s]: Recall = 0.1469, Jaccard score = 0.0954, loss = 0.0118, val_loss = 0.0000, eval: [5.8 s]
# Iteration 52 fit: [4.5 s]: Recall = 0.1520, Jaccard score = 0.0990, loss = 0.0114, val_loss = 0.0000, eval: [5.8 s]
# Iteration 53 fit: [4.5 s]: Recall = 0.1540, Jaccard score = 0.1005, loss = 0.0100, val_loss = 0.0000, eval: [5.8 s]
# Iteration 54 fit: [4.5 s]: Recall = 0.1530, Jaccard score = 0.0998, loss = 0.0100, val_loss = 0.0000, eval: [5.8 s]
# Iteration 55 fit: [4.5 s]: Recall = 0.1555, Jaccard score = 0.1016, loss = 0.0093, val_loss = 0.0000, eval: [5.8 s]
# Iteration 56 fit: [4.5 s]: Recall = 0.1546, Jaccard score = 0.1010, loss = 0.0087, val_loss = 0.0000, eval: [5.8 s]
# Iteration 57 fit: [4.5 s]: Recall = 0.1541, Jaccard score = 0.1006, loss = 0.0087, val_loss = 0.0000, eval: [5.8 s]
# Iteration 58 fit: [4.5 s]: Recall = 0.1565, Jaccard score = 0.1023, loss = 0.0080, val_loss = 0.0000, eval: [5.8 s]
# Iteration 59 fit: [4.5 s]: Recall = 0.1579, Jaccard score = 0.1033, loss = 0.0075, val_loss = 0.0000, eval: [5.8 s]
# Iteration 60 fit: [4.5 s]: Recall = 0.1625, Jaccard score = 0.1067, loss = 0.0075, val_loss = 0.0000, eval: [5.8 s]
# Iteration 61 fit: [4.5 s]: Recall = 0.1617, Jaccard score = 0.1061, loss = 0.0075, val_loss = 0.0000, eval: [5.8 s]
# Iteration 62 fit: [4.5 s]: Recall = 0.1648, Jaccard score = 0.1083, loss = 0.0072, val_loss = 0.0000, eval: [5.8 s]
# Iteration 63 fit: [4.5 s]: Recall = 0.1634, Jaccard score = 0.1073, loss = 0.0065, val_loss = 0.0000, eval: [5.8 s]
# Iteration 64 fit: [4.5 s]: Recall = 0.1688, Jaccard score = 0.1113, loss = 0.0063, val_loss = 0.0000, eval: [5.8 s]
# Iteration 65 fit: [4.5 s]: Recall = 0.1681, Jaccard score = 0.1107, loss = 0.0061, val_loss = 0.0000, eval: [5.8 s]
# Iteration 66 fit: [4.5 s]: Recall = 0.1671, Jaccard score = 0.1100, loss = 0.0060, val_loss = 0.0000, eval: [5.8 s]
# Iteration 67 fit: [4.5 s]: Recall = 0.1661, Jaccard score = 0.1092, loss = 0.0058, val_loss = 0.0000, eval: [5.7 s]
# Iteration 68 fit: [4.5 s]: Recall = 0.1688, Jaccard score = 0.1113, loss = 0.0053, val_loss = 0.0000, eval: [5.8 s]
# Iteration 69 fit: [4.5 s]: Recall = 0.1725, Jaccard score = 0.1140, loss = 0.0055, val_loss = 0.0000, eval: [5.8 s]
# Iteration 70 fit: [4.5 s]: Recall = 0.1725, Jaccard score = 0.1140, loss = 0.0054, val_loss = 0.0000, eval: [5.8 s]
# Iteration 71 fit: [4.5 s]: Recall = 0.1730, Jaccard score = 0.1144, loss = 0.0048, val_loss = 0.0000, eval: [5.8 s]
# Iteration 72 fit: [4.5 s]: Recall = 0.1744, Jaccard score = 0.1154, loss = 0.0050, val_loss = 0.0000, eval: [5.8 s]
# Iteration 73 fit: [4.5 s]: Recall = 0.1734, Jaccard score = 0.1146, loss = 0.0045, val_loss = 0.0000, eval: [5.8 s]
# Iteration 74 fit: [4.5 s]: Recall = 0.1781, Jaccard score = 0.1181, loss = 0.0047, val_loss = 0.0000, eval: [5.8 s]
# Iteration 75 fit: [4.5 s]: Recall = 0.1786, Jaccard score = 0.1185, loss = 0.0043, val_loss = 0.0000, eval: [5.8 s]
# Iteration 76 fit: [4.5 s]: Recall = 0.1789, Jaccard score = 0.1187, loss = 0.0040, val_loss = 0.0000, eval: [5.8 s]
# Iteration 77 fit: [4.5 s]: Recall = 0.1790, Jaccard score = 0.1188, loss = 0.0041, val_loss = 0.0000, eval: [5.8 s]
# Iteration 78 fit: [4.5 s]: Recall = 0.1833, Jaccard score = 0.1220, loss = 0.0042, val_loss = 0.0000, eval: [5.8 s]
# Iteration 79 fit: [4.5 s]: Recall = 0.1827, Jaccard score = 0.1215, loss = 0.0039, val_loss = 0.0000, eval: [5.8 s]
# Iteration 80 fit: [4.5 s]: Recall = 0.1845, Jaccard score = 0.1229, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 81 fit: [4.5 s]: Recall = 0.1843, Jaccard score = 0.1228, loss = 0.0036, val_loss = 0.0000, eval: [5.8 s]
# Iteration 82 fit: [4.5 s]: Recall = 0.1850, Jaccard score = 0.1232, loss = 0.0037, val_loss = 0.0000, eval: [5.8 s]
# Iteration 83 fit: [4.5 s]: Recall = 0.1870, Jaccard score = 0.1248, loss = 0.0035, val_loss = 0.0000, eval: [5.8 s]
# Iteration 84 fit: [4.5 s]: Recall = 0.1883, Jaccard score = 0.1257, loss = 0.0037, val_loss = 0.0000, eval: [5.8 s]
# Iteration 85 fit: [4.5 s]: Recall = 0.1824, Jaccard score = 0.1213, loss = 0.0034, val_loss = 0.0000, eval: [5.8 s]
# Iteration 86 fit: [4.5 s]: Recall = 0.1883, Jaccard score = 0.1257, loss = 0.0032, val_loss = 0.0000, eval: [5.8 s]
# Iteration 87 fit: [4.5 s]: Recall = 0.1912, Jaccard score = 0.1279, loss = 0.0032, val_loss = 0.0000, eval: [5.8 s]
# Iteration 88 fit: [4.5 s]: Recall = 0.1871, Jaccard score = 0.1249, loss = 0.0030, val_loss = 0.0000, eval: [5.8 s]
# Iteration 89 fit: [4.5 s]: Recall = 0.1921, Jaccard score = 0.1286, loss = 0.0032, val_loss = 0.0000, eval: [5.8 s]
# Iteration 90 fit: [4.5 s]: Recall = 0.1929, Jaccard score = 0.1292, loss = 0.0030, val_loss = 0.0000, eval: [5.8 s]
# Iteration 91 fit: [4.5 s]: Recall = 0.1964, Jaccard score = 0.1319, loss = 0.0029, val_loss = 0.0000, eval: [5.8 s]
# Iteration 92 fit: [4.5 s]: Recall = 0.1945, Jaccard score = 0.1304, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 93 fit: [4.5 s]: Recall = 0.1953, Jaccard score = 0.1310, loss = 0.0031, val_loss = 0.0000, eval: [5.8 s]
# Iteration 94 fit: [4.5 s]: Recall = 0.1958, Jaccard score = 0.1314, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 95 fit: [4.5 s]: Recall = 0.1972, Jaccard score = 0.1324, loss = 0.0029, val_loss = 0.0000, eval: [5.8 s]
# Iteration 96 fit: [4.5 s]: Recall = 0.1967, Jaccard score = 0.1320, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 97 fit: [4.5 s]: Recall = 0.1988, Jaccard score = 0.1337, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 98 fit: [4.5 s]: Recall = 0.2012, Jaccard score = 0.1355, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 99 fit: [4.5 s]: Recall = 0.2028, Jaccard score = 0.1367, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 100 fit: [4.5 s]: Recall = 0.2010, Jaccard score = 0.1353, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 101 fit: [4.5 s]: Recall = 0.2025, Jaccard score = 0.1365, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 102 fit: [4.5 s]: Recall = 0.2035, Jaccard score = 0.1373, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 103 fit: [4.5 s]: Recall = 0.2037, Jaccard score = 0.1374, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 104 fit: [4.5 s]: Recall = 0.2063, Jaccard score = 0.1394, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 105 fit: [4.5 s]: Recall = 0.2052, Jaccard score = 0.1386, loss = 0.0024, val_loss = 0.0000, eval: [5.9 s]
# Iteration 106 fit: [4.5 s]: Recall = 0.2048, Jaccard score = 0.1383, loss = 0.0025, val_loss = 0.0000, eval: [5.8 s]
# Iteration 107 fit: [4.5 s]: Recall = 0.2042, Jaccard score = 0.1378, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 108 fit: [4.5 s]: Recall = 0.2062, Jaccard score = 0.1393, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 109 fit: [4.5 s]: Recall = 0.2090, Jaccard score = 0.1415, loss = 0.0023, val_loss = 0.0000, eval: [5.8 s]
# Iteration 110 fit: [4.5 s]: Recall = 0.2084, Jaccard score = 0.1410, loss = 0.0021, val_loss = 0.0000, eval: [5.8 s]
# Iteration 111 fit: [4.5 s]: Recall = 0.2114, Jaccard score = 0.1434, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 112 fit: [4.5 s]: Recall = 0.2091, Jaccard score = 0.1416, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 113 fit: [4.5 s]: Recall = 0.2096, Jaccard score = 0.1420, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 114 fit: [4.5 s]: Recall = 0.2089, Jaccard score = 0.1414, loss = 0.0019, val_loss = 0.0000, eval: [5.7 s]
# Iteration 115 fit: [4.5 s]: Recall = 0.2114, Jaccard score = 0.1434, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 116 fit: [4.5 s]: Recall = 0.2105, Jaccard score = 0.1427, loss = 0.0021, val_loss = 0.0000, eval: [5.8 s]
# Iteration 117 fit: [4.5 s]: Recall = 0.2129, Jaccard score = 0.1445, loss = 0.0021, val_loss = 0.0000, eval: [5.8 s]
# Iteration 118 fit: [4.5 s]: Recall = 0.2129, Jaccard score = 0.1445, loss = 0.0020, val_loss = 0.0000, eval: [5.8 s]
# Iteration 119 fit: [4.5 s]: Recall = 0.2098, Jaccard score = 0.1421, loss = 0.0019, val_loss = 0.0000, eval: [5.8 s]
# End. Best Iteration 117:  Recall = 0.2129, Jaccard score = 0.1445. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1561629448.h5
# The average best performance after k-fold 9 is: Recall = 0.2798638214066342, Jaccard score = 0.2003498613300388
# 
# Performing k-fold 10
# Init: Recall = 0.0302, Jaccard score = 0.0184
# Iteration 0 fit: [4.7 s]: Recall = 0.0280, Jaccard score = 0.0170, loss = 0.5713, val_loss = 0.0000, eval: [5.8 s]
# Iteration 1 fit: [4.1 s]: Recall = 0.0281, Jaccard score = 0.0171, loss = 0.5023, val_loss = 0.0000, eval: [5.8 s]
# Iteration 2 fit: [4.1 s]: Recall = 0.0280, Jaccard score = 0.0170, loss = 0.5001, val_loss = 0.0000, eval: [5.8 s]
# Iteration 3 fit: [4.1 s]: Recall = 0.0326, Jaccard score = 0.0198, loss = 0.4979, val_loss = 0.0000, eval: [5.8 s]
# Iteration 4 fit: [4.1 s]: Recall = 0.0287, Jaccard score = 0.0175, loss = 0.4927, val_loss = 0.0000, eval: [5.8 s]
# Iteration 5 fit: [4.1 s]: Recall = 0.0315, Jaccard score = 0.0192, loss = 0.4832, val_loss = 0.0000, eval: [5.8 s]
# Iteration 6 fit: [4.1 s]: Recall = 0.0345, Jaccard score = 0.0210, loss = 0.4700, val_loss = 0.0000, eval: [5.8 s]
# Iteration 7 fit: [4.1 s]: Recall = 0.0386, Jaccard score = 0.0236, loss = 0.4532, val_loss = 0.0000, eval: [5.8 s]
# Iteration 8 fit: [4.1 s]: Recall = 0.0419, Jaccard score = 0.0257, loss = 0.4332, val_loss = 0.0000, eval: [5.8 s]
# Iteration 9 fit: [4.1 s]: Recall = 0.0449, Jaccard score = 0.0276, loss = 0.4113, val_loss = 0.0000, eval: [5.8 s]
# Iteration 10 fit: [4.1 s]: Recall = 0.0496, Jaccard score = 0.0305, loss = 0.3870, val_loss = 0.0000, eval: [5.8 s]
# Iteration 11 fit: [4.1 s]: Recall = 0.0544, Jaccard score = 0.0336, loss = 0.3604, val_loss = 0.0000, eval: [5.8 s]
# Iteration 12 fit: [4.1 s]: Recall = 0.0569, Jaccard score = 0.0352, loss = 0.3341, val_loss = 0.0000, eval: [5.8 s]
# Iteration 13 fit: [4.1 s]: Recall = 0.0630, Jaccard score = 0.0391, loss = 0.3078, val_loss = 0.0000, eval: [5.8 s]
# Iteration 14 fit: [4.1 s]: Recall = 0.0704, Jaccard score = 0.0439, loss = 0.2809, val_loss = 0.0000, eval: [5.8 s]
# Iteration 15 fit: [4.1 s]: Recall = 0.0698, Jaccard score = 0.0435, loss = 0.2563, val_loss = 0.0000, eval: [5.8 s]
# Iteration 16 fit: [4.1 s]: Recall = 0.0758, Jaccard score = 0.0474, loss = 0.2320, val_loss = 0.0000, eval: [5.8 s]
# Iteration 17 fit: [4.1 s]: Recall = 0.0813, Jaccard score = 0.0510, loss = 0.2097, val_loss = 0.0000, eval: [5.8 s]
# Iteration 18 fit: [4.1 s]: Recall = 0.0844, Jaccard score = 0.0531, loss = 0.1880, val_loss = 0.0000, eval: [5.8 s]
# Iteration 19 fit: [4.1 s]: Recall = 0.0863, Jaccard score = 0.0543, loss = 0.1705, val_loss = 0.0000, eval: [5.8 s]
# Iteration 20 fit: [4.1 s]: Recall = 0.0878, Jaccard score = 0.0553, loss = 0.1526, val_loss = 0.0000, eval: [5.8 s]
# Iteration 21 fit: [4.1 s]: Recall = 0.0888, Jaccard score = 0.0560, loss = 0.1371, val_loss = 0.0000, eval: [5.9 s]
# Iteration 22 fit: [4.1 s]: Recall = 0.0909, Jaccard score = 0.0574, loss = 0.1221, val_loss = 0.0000, eval: [5.8 s]
# Iteration 23 fit: [4.1 s]: Recall = 0.0929, Jaccard score = 0.0587, loss = 0.1102, val_loss = 0.0000, eval: [5.8 s]
# Iteration 24 fit: [4.1 s]: Recall = 0.0939, Jaccard score = 0.0594, loss = 0.0977, val_loss = 0.0000, eval: [5.8 s]
# Iteration 25 fit: [4.1 s]: Recall = 0.0974, Jaccard score = 0.0618, loss = 0.0885, val_loss = 0.0000, eval: [5.8 s]
# Iteration 26 fit: [4.1 s]: Recall = 0.0953, Jaccard score = 0.0603, loss = 0.0778, val_loss = 0.0000, eval: [5.8 s]
# Iteration 27 fit: [4.1 s]: Recall = 0.0984, Jaccard score = 0.0624, loss = 0.0710, val_loss = 0.0000, eval: [5.8 s]
# Iteration 28 fit: [4.1 s]: Recall = 0.0976, Jaccard score = 0.0619, loss = 0.0633, val_loss = 0.0000, eval: [5.8 s]
# Iteration 29 fit: [4.1 s]: Recall = 0.0979, Jaccard score = 0.0621, loss = 0.0573, val_loss = 0.0000, eval: [5.8 s]
# Iteration 30 fit: [4.1 s]: Recall = 0.1012, Jaccard score = 0.0644, loss = 0.0530, val_loss = 0.0000, eval: [5.8 s]
# Iteration 31 fit: [4.1 s]: Recall = 0.1029, Jaccard score = 0.0655, loss = 0.0477, val_loss = 0.0000, eval: [5.9 s]
# Iteration 32 fit: [4.1 s]: Recall = 0.1044, Jaccard score = 0.0665, loss = 0.0427, val_loss = 0.0000, eval: [5.8 s]
# Iteration 33 fit: [4.1 s]: Recall = 0.1065, Jaccard score = 0.0679, loss = 0.0394, val_loss = 0.0000, eval: [5.8 s]
# Iteration 34 fit: [4.1 s]: Recall = 0.1067, Jaccard score = 0.0681, loss = 0.0355, val_loss = 0.0000, eval: [5.9 s]
# Iteration 35 fit: [4.1 s]: Recall = 0.1082, Jaccard score = 0.0691, loss = 0.0326, val_loss = 0.0000, eval: [5.8 s]
# Iteration 36 fit: [4.1 s]: Recall = 0.1069, Jaccard score = 0.0682, loss = 0.0302, val_loss = 0.0000, eval: [5.8 s]
# Iteration 37 fit: [4.1 s]: Recall = 0.1071, Jaccard score = 0.0684, loss = 0.0276, val_loss = 0.0000, eval: [5.8 s]
# Iteration 38 fit: [4.1 s]: Recall = 0.1132, Jaccard score = 0.0725, loss = 0.0260, val_loss = 0.0000, eval: [5.8 s]
# Iteration 39 fit: [4.1 s]: Recall = 0.1157, Jaccard score = 0.0743, loss = 0.0234, val_loss = 0.0000, eval: [5.9 s]
# Iteration 40 fit: [4.1 s]: Recall = 0.1172, Jaccard score = 0.0753, loss = 0.0216, val_loss = 0.0000, eval: [5.8 s]
# Iteration 41 fit: [4.1 s]: Recall = 0.1190, Jaccard score = 0.0765, loss = 0.0203, val_loss = 0.0000, eval: [5.8 s]
# Iteration 42 fit: [4.1 s]: Recall = 0.1196, Jaccard score = 0.0769, loss = 0.0189, val_loss = 0.0000, eval: [5.8 s]
# Iteration 43 fit: [4.1 s]: Recall = 0.1197, Jaccard score = 0.0770, loss = 0.0172, val_loss = 0.0000, eval: [5.8 s]
# Iteration 44 fit: [4.1 s]: Recall = 0.1195, Jaccard score = 0.0768, loss = 0.0163, val_loss = 0.0000, eval: [5.8 s]
# Iteration 45 fit: [4.1 s]: Recall = 0.1233, Jaccard score = 0.0795, loss = 0.0159, val_loss = 0.0000, eval: [5.8 s]
# Iteration 46 fit: [4.1 s]: Recall = 0.1251, Jaccard score = 0.0808, loss = 0.0142, val_loss = 0.0000, eval: [5.8 s]
# Iteration 47 fit: [4.1 s]: Recall = 0.1223, Jaccard score = 0.0788, loss = 0.0134, val_loss = 0.0000, eval: [5.8 s]
# Iteration 48 fit: [4.1 s]: Recall = 0.1293, Jaccard score = 0.0837, loss = 0.0127, val_loss = 0.0000, eval: [5.8 s]
# Iteration 49 fit: [4.1 s]: Recall = 0.1288, Jaccard score = 0.0834, loss = 0.0117, val_loss = 0.0000, eval: [6.0 s]
# Iteration 50 fit: [4.1 s]: Recall = 0.1310, Jaccard score = 0.0849, loss = 0.0114, val_loss = 0.0000, eval: [5.8 s]
# Iteration 51 fit: [4.1 s]: Recall = 0.1362, Jaccard score = 0.0886, loss = 0.0107, val_loss = 0.0000, eval: [5.8 s]
# Iteration 52 fit: [4.1 s]: Recall = 0.1315, Jaccard score = 0.0852, loss = 0.0099, val_loss = 0.0000, eval: [5.9 s]
# Iteration 53 fit: [4.1 s]: Recall = 0.1336, Jaccard score = 0.0867, loss = 0.0088, val_loss = 0.0000, eval: [5.8 s]
# Iteration 54 fit: [4.1 s]: Recall = 0.1368, Jaccard score = 0.0890, loss = 0.0089, val_loss = 0.0000, eval: [5.9 s]
# Iteration 55 fit: [4.1 s]: Recall = 0.1348, Jaccard score = 0.0876, loss = 0.0085, val_loss = 0.0000, eval: [5.8 s]
# Iteration 56 fit: [4.1 s]: Recall = 0.1390, Jaccard score = 0.0905, loss = 0.0076, val_loss = 0.0000, eval: [5.9 s]
# Iteration 57 fit: [4.1 s]: Recall = 0.1402, Jaccard score = 0.0914, loss = 0.0077, val_loss = 0.0000, eval: [5.8 s]
# Iteration 58 fit: [4.1 s]: Recall = 0.1380, Jaccard score = 0.0898, loss = 0.0074, val_loss = 0.0000, eval: [5.8 s]
# Iteration 59 fit: [4.1 s]: Recall = 0.1432, Jaccard score = 0.0935, loss = 0.0068, val_loss = 0.0000, eval: [5.8 s]
# Iteration 60 fit: [4.1 s]: Recall = 0.1433, Jaccard score = 0.0936, loss = 0.0068, val_loss = 0.0000, eval: [5.8 s]
# Iteration 61 fit: [4.1 s]: Recall = 0.1479, Jaccard score = 0.0969, loss = 0.0064, val_loss = 0.0000, eval: [5.8 s]
# Iteration 62 fit: [4.1 s]: Recall = 0.1487, Jaccard score = 0.0975, loss = 0.0061, val_loss = 0.0000, eval: [5.8 s]
# Iteration 63 fit: [4.1 s]: Recall = 0.1479, Jaccard score = 0.0969, loss = 0.0054, val_loss = 0.0000, eval: [5.8 s]
# Iteration 64 fit: [4.1 s]: Recall = 0.1538, Jaccard score = 0.1012, loss = 0.0058, val_loss = 0.0000, eval: [5.8 s]
# Iteration 65 fit: [4.1 s]: Recall = 0.1506, Jaccard score = 0.0988, loss = 0.0052, val_loss = 0.0000, eval: [5.8 s]
# Iteration 66 fit: [4.1 s]: Recall = 0.1524, Jaccard score = 0.1002, loss = 0.0050, val_loss = 0.0000, eval: [5.8 s]
# Iteration 67 fit: [4.1 s]: Recall = 0.1548, Jaccard score = 0.1019, loss = 0.0047, val_loss = 0.0000, eval: [5.8 s]
# Iteration 68 fit: [4.1 s]: Recall = 0.1554, Jaccard score = 0.1023, loss = 0.0047, val_loss = 0.0000, eval: [5.8 s]
# Iteration 69 fit: [4.1 s]: Recall = 0.1583, Jaccard score = 0.1044, loss = 0.0043, val_loss = 0.0000, eval: [5.8 s]
# Iteration 70 fit: [4.1 s]: Recall = 0.1598, Jaccard score = 0.1055, loss = 0.0044, val_loss = 0.0000, eval: [5.8 s]
# Iteration 71 fit: [4.1 s]: Recall = 0.1562, Jaccard score = 0.1029, loss = 0.0041, val_loss = 0.0000, eval: [5.8 s]
# Iteration 72 fit: [4.1 s]: Recall = 0.1589, Jaccard score = 0.1049, loss = 0.0040, val_loss = 0.0000, eval: [5.9 s]
# Iteration 73 fit: [4.1 s]: Recall = 0.1607, Jaccard score = 0.1062, loss = 0.0040, val_loss = 0.0000, eval: [5.8 s]
# Iteration 74 fit: [4.1 s]: Recall = 0.1622, Jaccard score = 0.1073, loss = 0.0035, val_loss = 0.0000, eval: [5.8 s]
# Iteration 75 fit: [4.1 s]: Recall = 0.1653, Jaccard score = 0.1095, loss = 0.0036, val_loss = 0.0000, eval: [5.8 s]
# Iteration 76 fit: [4.1 s]: Recall = 0.1660, Jaccard score = 0.1101, loss = 0.0033, val_loss = 0.0000, eval: [5.8 s]
# Iteration 77 fit: [4.1 s]: Recall = 0.1663, Jaccard score = 0.1103, loss = 0.0035, val_loss = 0.0000, eval: [5.8 s]
# Iteration 78 fit: [4.1 s]: Recall = 0.1657, Jaccard score = 0.1098, loss = 0.0032, val_loss = 0.0000, eval: [5.8 s]
# Iteration 79 fit: [4.1 s]: Recall = 0.1689, Jaccard score = 0.1122, loss = 0.0032, val_loss = 0.0000, eval: [5.8 s]
# Iteration 80 fit: [4.1 s]: Recall = 0.1709, Jaccard score = 0.1137, loss = 0.0031, val_loss = 0.0000, eval: [5.8 s]
# Iteration 81 fit: [4.1 s]: Recall = 0.1698, Jaccard score = 0.1129, loss = 0.0031, val_loss = 0.0000, eval: [5.8 s]
# Iteration 82 fit: [4.6 s]: Recall = 0.1704, Jaccard score = 0.1133, loss = 0.0029, val_loss = 0.0000, eval: [7.3 s]
# Iteration 83 fit: [4.8 s]: Recall = 0.1715, Jaccard score = 0.1142, loss = 0.0029, val_loss = 0.0000, eval: [5.8 s]
# Iteration 84 fit: [4.1 s]: Recall = 0.1752, Jaccard score = 0.1168, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 85 fit: [4.1 s]: Recall = 0.1744, Jaccard score = 0.1163, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 86 fit: [4.1 s]: Recall = 0.1748, Jaccard score = 0.1166, loss = 0.0025, val_loss = 0.0000, eval: [5.8 s]
# Iteration 87 fit: [4.1 s]: Recall = 0.1778, Jaccard score = 0.1188, loss = 0.0026, val_loss = 0.0000, eval: [5.8 s]
# Iteration 88 fit: [4.1 s]: Recall = 0.1782, Jaccard score = 0.1191, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 89 fit: [4.1 s]: Recall = 0.1783, Jaccard score = 0.1192, loss = 0.0027, val_loss = 0.0000, eval: [5.8 s]
# Iteration 90 fit: [4.1 s]: Recall = 0.1811, Jaccard score = 0.1213, loss = 0.0024, val_loss = 0.0000, eval: [5.8 s]
# Iteration 91 fit: [4.1 s]: Recall = 0.1799, Jaccard score = 0.1204, loss = 0.0023, val_loss = 0.0000, eval: [5.8 s]
# Iteration 92 fit: [4.1 s]: Recall = 0.1818, Jaccard score = 0.1218, loss = 0.0023, val_loss = 0.0000, eval: [5.9 s]
# Iteration 93 fit: [4.1 s]: Recall = 0.1821, Jaccard score = 0.1221, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 94 fit: [4.1 s]: Recall = 0.1801, Jaccard score = 0.1206, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 95 fit: [4.2 s]: Recall = 0.1779, Jaccard score = 0.1189, loss = 0.0021, val_loss = 0.0000, eval: [5.8 s]
# Iteration 96 fit: [4.1 s]: Recall = 0.1843, Jaccard score = 0.1237, loss = 0.0022, val_loss = 0.0000, eval: [5.8 s]
# Iteration 97 fit: [4.1 s]: Recall = 0.1851, Jaccard score = 0.1243, loss = 0.0020, val_loss = 0.0000, eval: [5.8 s]
# Iteration 98 fit: [4.1 s]: Recall = 0.1871, Jaccard score = 0.1259, loss = 0.0021, val_loss = 0.0000, eval: [5.9 s]
# Iteration 99 fit: [4.1 s]: Recall = 0.1889, Jaccard score = 0.1272, loss = 0.0019, val_loss = 0.0000, eval: [5.8 s]
# Iteration 100 fit: [4.1 s]: Recall = 0.1891, Jaccard score = 0.1274, loss = 0.0020, val_loss = 0.0000, eval: [5.9 s]
# Iteration 101 fit: [4.1 s]: Recall = 0.1849, Jaccard score = 0.1242, loss = 0.0019, val_loss = 0.0000, eval: [5.8 s]
# Iteration 102 fit: [4.1 s]: Recall = 0.1884, Jaccard score = 0.1268, loss = 0.0018, val_loss = 0.0000, eval: [5.8 s]
# Iteration 103 fit: [4.1 s]: Recall = 0.1848, Jaccard score = 0.1241, loss = 0.0019, val_loss = 0.0000, eval: [5.8 s]
# Iteration 104 fit: [4.1 s]: Recall = 0.1891, Jaccard score = 0.1274, loss = 0.0020, val_loss = 0.0000, eval: [5.8 s]
# Iteration 105 fit: [4.1 s]: Recall = 0.1921, Jaccard score = 0.1296, loss = 0.0017, val_loss = 0.0000, eval: [5.8 s]
# Iteration 106 fit: [4.1 s]: Recall = 0.1935, Jaccard score = 0.1307, loss = 0.0020, val_loss = 0.0000, eval: [5.9 s]
# Iteration 107 fit: [4.2 s]: Recall = 0.1883, Jaccard score = 0.1267, loss = 0.0017, val_loss = 0.0000, eval: [5.8 s]
# Iteration 108 fit: [4.1 s]: Recall = 0.1878, Jaccard score = 0.1263, loss = 0.0019, val_loss = 0.0000, eval: [5.9 s]
# Iteration 109 fit: [4.1 s]: Recall = 0.1919, Jaccard score = 0.1295, loss = 0.0018, val_loss = 0.0000, eval: [5.8 s]
# Iteration 110 fit: [4.1 s]: Recall = 0.1938, Jaccard score = 0.1309, loss = 0.0017, val_loss = 0.0000, eval: [5.8 s]
# Iteration 111 fit: [4.1 s]: Recall = 0.1930, Jaccard score = 0.1303, loss = 0.0016, val_loss = 0.0000, eval: [5.9 s]
# Iteration 112 fit: [4.3 s]: Recall = 0.1990, Jaccard score = 0.1349, loss = 0.0016, val_loss = 0.0000, eval: [5.8 s]
