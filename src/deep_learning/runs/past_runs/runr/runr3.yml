--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[128,64,32]"
--reg_layers: "[0,0,0]"
--num_k_folds: "5"
--early_stopping: "35"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[128,64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,64,32]_1563519550.h5
--weights_path: Pretrain/_MLP_8_[128,64,32]_1563519550.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0288, Jaccard score = 0.0173
# Iteration 0 fit: [14.3 s]: Recall = 0.2196, Jaccard score = 0.1493, loss = 0.4336, eval: [14.9 s]
# Iteration 1 fit: [13.5 s]: Recall = 0.2481, Jaccard score = 0.1720, loss = 0.3947, eval: [14.9 s]
# Iteration 2 fit: [13.9 s]: Recall = 0.2603, Jaccard score = 0.1820, loss = 0.3771, eval: [15.0 s]
# Iteration 3 fit: [13.5 s]: Recall = 0.2660, Jaccard score = 0.1868, loss = 0.3624, eval: [15.0 s]
# Iteration 4 fit: [13.9 s]: Recall = 0.2674, Jaccard score = 0.1879, loss = 0.3488, eval: [14.8 s]
# Iteration 5 fit: [13.7 s]: Recall = 0.2666, Jaccard score = 0.1872, loss = 0.3355, eval: [15.0 s]
# Iteration 6 fit: [13.9 s]: Recall = 0.2675, Jaccard score = 0.1879, loss = 0.3224, eval: [15.0 s]
# Iteration 7 fit: [13.7 s]: Recall = 0.2632, Jaccard score = 0.1844, loss = 0.3099, eval: [15.0 s]
# Iteration 8 fit: [13.9 s]: Recall = 0.2630, Jaccard score = 0.1842, loss = 0.2969, eval: [15.0 s]
# Iteration 9 fit: [13.7 s]: Recall = 0.2613, Jaccard score = 0.1828, loss = 0.2851, eval: [15.0 s]
# Iteration 10 fit: [13.9 s]: Recall = 0.2577, Jaccard score = 0.1798, loss = 0.2731, eval: [15.0 s]
# Iteration 11 fit: [13.7 s]: Recall = 0.2554, Jaccard score = 0.1779, loss = 0.2614, eval: [15.0 s]
# Iteration 12 fit: [13.9 s]: Recall = 0.2582, Jaccard score = 0.1803, loss = 0.2510, eval: [15.0 s]
# Iteration 13 fit: [13.7 s]: Recall = 0.2542, Jaccard score = 0.1769, loss = 0.2401, eval: [15.0 s]
# Iteration 14 fit: [13.9 s]: Recall = 0.2519, Jaccard score = 0.1751, loss = 0.2305, eval: [15.0 s]
# Iteration 15 fit: [13.7 s]: Recall = 0.2519, Jaccard score = 0.1751, loss = 0.2200, eval: [15.0 s]
# Iteration 16 fit: [13.9 s]: Recall = 0.2548, Jaccard score = 0.1775, loss = 0.2107, eval: [14.9 s]
# Iteration 17 fit: [13.7 s]: Recall = 0.2519, Jaccard score = 0.1751, loss = 0.2023, eval: [15.0 s]
# Iteration 18 fit: [13.9 s]: Recall = 0.2448, Jaccard score = 0.1693, loss = 0.1940, eval: [15.0 s]
# Iteration 19 fit: [13.7 s]: Recall = 0.2487, Jaccard score = 0.1725, loss = 0.1859, eval: [15.0 s]
# Iteration 20 fit: [13.9 s]: Recall = 0.2441, Jaccard score = 0.1688, loss = 0.1782, eval: [15.0 s]
# Iteration 21 fit: [13.7 s]: Recall = 0.2432, Jaccard score = 0.1680, loss = 0.1713, eval: [15.0 s]
# Iteration 22 fit: [13.9 s]: Recall = 0.2446, Jaccard score = 0.1691, loss = 0.1639, eval: [15.0 s]
# Iteration 23 fit: [13.7 s]: Recall = 0.2439, Jaccard score = 0.1686, loss = 0.1577, eval: [15.0 s]
# Iteration 24 fit: [13.9 s]: Recall = 0.2413, Jaccard score = 0.1665, loss = 0.1517, eval: [15.0 s]
# Iteration 25 fit: [13.7 s]: Recall = 0.2401, Jaccard score = 0.1655, loss = 0.1461, eval: [15.0 s]
# Iteration 26 fit: [13.9 s]: Recall = 0.2384, Jaccard score = 0.1642, loss = 0.1401, eval: [15.0 s]
# Iteration 27 fit: [13.7 s]: Recall = 0.2391, Jaccard score = 0.1648, loss = 0.1349, eval: [15.0 s]
# Iteration 28 fit: [13.9 s]: Recall = 0.2395, Jaccard score = 0.1650, loss = 0.1306, eval: [15.0 s]
# Iteration 29 fit: [13.7 s]: Recall = 0.2403, Jaccard score = 0.1657, loss = 0.1255, eval: [15.0 s]
# Iteration 30 fit: [13.9 s]: Recall = 0.2374, Jaccard score = 0.1634, loss = 0.1212, eval: [15.0 s]
# Iteration 31 fit: [13.7 s]: Recall = 0.2354, Jaccard score = 0.1618, loss = 0.1168, eval: [14.9 s]
# Iteration 32 fit: [13.9 s]: Recall = 0.2370, Jaccard score = 0.1631, loss = 0.1125, eval: [15.0 s]
# Iteration 33 fit: [13.7 s]: Recall = 0.2373, Jaccard score = 0.1633, loss = 0.1108, eval: [14.9 s]
# Iteration 34 fit: [13.9 s]: Recall = 0.2361, Jaccard score = 0.1624, loss = 0.1067, eval: [15.0 s]
# Iteration 35 fit: [13.7 s]: Recall = 0.2345, Jaccard score = 0.1610, loss = 0.1036, eval: [14.9 s]
# Iteration 36 fit: [13.9 s]: Recall = 0.2381, Jaccard score = 0.1639, loss = 0.1005, eval: [15.1 s]
# Iteration 37 fit: [13.7 s]: Recall = 0.2361, Jaccard score = 0.1623, loss = 0.0974, eval: [15.0 s]
# Iteration 38 fit: [13.9 s]: Recall = 0.2352, Jaccard score = 0.1616, loss = 0.0945, eval: [14.9 s]
# Iteration 39 fit: [13.7 s]: Recall = 0.2354, Jaccard score = 0.1617, loss = 0.0917, eval: [14.9 s]
# Iteration 40 fit: [13.9 s]: Recall = 0.2334, Jaccard score = 0.1602, loss = 0.0895, eval: [15.0 s]
# Iteration 41 fit: [13.7 s]: Recall = 0.2330, Jaccard score = 0.1599, loss = 0.0869, eval: [15.0 s]
# End. Best Iteration 6:  Recall = 0.2675, Jaccard score = 0.1879. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,64,32]_1563519550.h5
# The average best performance after k-fold 1 is: Recall = 0.26745524296675194, Jaccard score = 0.18794087253448352
# 
# Performing k-fold 2
# Init: Recall = 0.0316, Jaccard score = 0.0192
# Iteration 0 fit: [14.5 s]: Recall = 0.2194, Jaccard score = 0.1506, loss = 0.4331, eval: [15.0 s]
# Iteration 1 fit: [13.9 s]: Recall = 0.2412, Jaccard score = 0.1681, loss = 0.3938, eval: [14.9 s]
# Iteration 2 fit: [13.9 s]: Recall = 0.2515, Jaccard score = 0.1766, loss = 0.3756, eval: [14.9 s]
# Iteration 3 fit: [13.9 s]: Recall = 0.2543, Jaccard score = 0.1789, loss = 0.3612, eval: [14.9 s]
# Iteration 4 fit: [13.9 s]: Recall = 0.2546, Jaccard score = 0.1792, loss = 0.3481, eval: [14.9 s]
# Iteration 5 fit: [13.9 s]: Recall = 0.2577, Jaccard score = 0.1817, loss = 0.3353, eval: [15.0 s]
# Iteration 6 fit: [13.9 s]: Recall = 0.2579, Jaccard score = 0.1819, loss = 0.3221, eval: [14.9 s]
# Iteration 7 fit: [13.9 s]: Recall = 0.2530, Jaccard score = 0.1778, loss = 0.3092, eval: [15.0 s]
# Iteration 8 fit: [13.9 s]: Recall = 0.2568, Jaccard score = 0.1810, loss = 0.2962, eval: [14.9 s]
# Iteration 9 fit: [14.0 s]: Recall = 0.2541, Jaccard score = 0.1787, loss = 0.2840, eval: [15.1 s]
# Iteration 10 fit: [13.9 s]: Recall = 0.2533, Jaccard score = 0.1781, loss = 0.2722, eval: [15.0 s]
# Iteration 11 fit: [14.0 s]: Recall = 0.2486, Jaccard score = 0.1742, loss = 0.2607, eval: [14.9 s]
# Iteration 12 fit: [13.9 s]: Recall = 0.2486, Jaccard score = 0.1742, loss = 0.2501, eval: [15.0 s]
# Iteration 13 fit: [14.0 s]: Recall = 0.2479, Jaccard score = 0.1736, loss = 0.2390, eval: [14.9 s]
# Iteration 14 fit: [13.9 s]: Recall = 0.2410, Jaccard score = 0.1680, loss = 0.2300, eval: [14.9 s]
# Iteration 15 fit: [14.0 s]: Recall = 0.2433, Jaccard score = 0.1698, loss = 0.2190, eval: [15.0 s]
# Iteration 16 fit: [13.9 s]: Recall = 0.2414, Jaccard score = 0.1683, loss = 0.2094, eval: [15.0 s]
# Iteration 17 fit: [14.0 s]: Recall = 0.2360, Jaccard score = 0.1639, loss = 0.2011, eval: [15.0 s]
# Iteration 18 fit: [13.9 s]: Recall = 0.2378, Jaccard score = 0.1654, loss = 0.1925, eval: [14.9 s]
# Iteration 19 fit: [14.0 s]: Recall = 0.2381, Jaccard score = 0.1656, loss = 0.1835, eval: [15.0 s]
# Iteration 20 fit: [13.9 s]: Recall = 0.2367, Jaccard score = 0.1645, loss = 0.1770, eval: [14.9 s]
# Iteration 21 fit: [14.0 s]: Recall = 0.2336, Jaccard score = 0.1620, loss = 0.1695, eval: [15.0 s]
# Iteration 22 fit: [13.9 s]: Recall = 0.2333, Jaccard score = 0.1617, loss = 0.1621, eval: [14.9 s]
# Iteration 23 fit: [14.0 s]: Recall = 0.2350, Jaccard score = 0.1631, loss = 0.1562, eval: [15.0 s]
# Iteration 24 fit: [13.9 s]: Recall = 0.2344, Jaccard score = 0.1626, loss = 0.1501, eval: [14.9 s]
# Iteration 25 fit: [14.0 s]: Recall = 0.2364, Jaccard score = 0.1642, loss = 0.1452, eval: [14.9 s]
# Iteration 26 fit: [13.9 s]: Recall = 0.2380, Jaccard score = 0.1655, loss = 0.1394, eval: [14.9 s]
# Iteration 27 fit: [14.0 s]: Recall = 0.2338, Jaccard score = 0.1621, loss = 0.1333, eval: [14.9 s]
# Iteration 28 fit: [13.9 s]: Recall = 0.2347, Jaccard score = 0.1628, loss = 0.1290, eval: [14.9 s]
# Iteration 29 fit: [14.0 s]: Recall = 0.2336, Jaccard score = 0.1619, loss = 0.1237, eval: [15.0 s]
# Iteration 30 fit: [13.9 s]: Recall = 0.2313, Jaccard score = 0.1601, loss = 0.1202, eval: [14.9 s]
# Iteration 31 fit: [14.0 s]: Recall = 0.2301, Jaccard score = 0.1591, loss = 0.1165, eval: [15.0 s]
# Iteration 32 fit: [13.9 s]: Recall = 0.2327, Jaccard score = 0.1613, loss = 0.1120, eval: [14.9 s]
# Iteration 33 fit: [14.0 s]: Recall = 0.2283, Jaccard score = 0.1577, loss = 0.1082, eval: [15.0 s]
# Iteration 34 fit: [13.9 s]: Recall = 0.2256, Jaccard score = 0.1556, loss = 0.1052, eval: [14.9 s]
# Iteration 35 fit: [14.0 s]: Recall = 0.2312, Jaccard score = 0.1600, loss = 0.1021, eval: [15.0 s]
# Iteration 36 fit: [13.9 s]: Recall = 0.2299, Jaccard score = 0.1590, loss = 0.0989, eval: [14.9 s]
# Iteration 37 fit: [13.9 s]: Recall = 0.2278, Jaccard score = 0.1573, loss = 0.0961, eval: [15.0 s]
# Iteration 38 fit: [13.9 s]: Recall = 0.2267, Jaccard score = 0.1565, loss = 0.0941, eval: [14.9 s]
# Iteration 39 fit: [13.9 s]: Recall = 0.2311, Jaccard score = 0.1599, loss = 0.0903, eval: [15.0 s]
# Iteration 40 fit: [13.9 s]: Recall = 0.2304, Jaccard score = 0.1594, loss = 0.0880, eval: [14.9 s]
# Iteration 41 fit: [14.0 s]: Recall = 0.2288, Jaccard score = 0.1581, loss = 0.0866, eval: [15.0 s]
# End. Best Iteration 6:  Recall = 0.2579, Jaccard score = 0.1819. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,64,32]_1563519550.h5
# The average best performance after k-fold 2 is: Recall = 0.2626781190113815, Jaccard score = 0.1849096188958939
# 
# Performing k-fold 3
# Init: Recall = 0.0294, Jaccard score = 0.0178
# Iteration 0 fit: [14.6 s]: Recall = 0.2185, Jaccard score = 0.1495, loss = 0.4338, eval: [15.0 s]
# Iteration 1 fit: [14.1 s]: Recall = 0.2428, Jaccard score = 0.1690, loss = 0.3947, eval: [15.3 s]
# Iteration 2 fit: [14.1 s]: Recall = 0.2480, Jaccard score = 0.1732, loss = 0.3765, eval: [15.2 s]
# Iteration 3 fit: [14.1 s]: Recall = 0.2603, Jaccard score = 0.1834, loss = 0.3620, eval: [15.3 s]
# Iteration 4 fit: [14.1 s]: Recall = 0.2595, Jaccard score = 0.1826, loss = 0.3487, eval: [15.1 s]
# Iteration 5 fit: [14.1 s]: Recall = 0.2618, Jaccard score = 0.1846, loss = 0.3358, eval: [15.3 s]
# Iteration 6 fit: [14.1 s]: Recall = 0.2610, Jaccard score = 0.1839, loss = 0.3227, eval: [15.3 s]
# Iteration 7 fit: [14.1 s]: Recall = 0.2588, Jaccard score = 0.1821, loss = 0.3100, eval: [15.3 s]
# Iteration 8 fit: [14.1 s]: Recall = 0.2581, Jaccard score = 0.1815, loss = 0.2972, eval: [15.2 s]
# Iteration 9 fit: [14.2 s]: Recall = 0.2544, Jaccard score = 0.1784, loss = 0.2853, eval: [15.3 s]
# Iteration 10 fit: [14.1 s]: Recall = 0.2540, Jaccard score = 0.1781, loss = 0.2736, eval: [15.2 s]
# Iteration 11 fit: [14.1 s]: Recall = 0.2508, Jaccard score = 0.1754, loss = 0.2626, eval: [15.3 s]
# Iteration 12 fit: [14.1 s]: Recall = 0.2472, Jaccard score = 0.1725, loss = 0.2521, eval: [15.2 s]
# Iteration 13 fit: [14.1 s]: Recall = 0.2459, Jaccard score = 0.1714, loss = 0.2407, eval: [15.3 s]
# Iteration 14 fit: [14.1 s]: Recall = 0.2420, Jaccard score = 0.1683, loss = 0.2311, eval: [15.2 s]
# Iteration 15 fit: [14.1 s]: Recall = 0.2447, Jaccard score = 0.1704, loss = 0.2214, eval: [15.2 s]
# Iteration 16 fit: [14.1 s]: Recall = 0.2441, Jaccard score = 0.1700, loss = 0.2118, eval: [15.2 s]
# Iteration 17 fit: [14.1 s]: Recall = 0.2452, Jaccard score = 0.1709, loss = 0.2030, eval: [15.3 s]
# Iteration 18 fit: [14.1 s]: Recall = 0.2401, Jaccard score = 0.1668, loss = 0.1949, eval: [15.2 s]
# Iteration 19 fit: [14.1 s]: Recall = 0.2400, Jaccard score = 0.1667, loss = 0.1869, eval: [15.3 s]
# Iteration 20 fit: [14.1 s]: Recall = 0.2377, Jaccard score = 0.1648, loss = 0.1795, eval: [15.2 s]
# Iteration 21 fit: [14.1 s]: Recall = 0.2355, Jaccard score = 0.1630, loss = 0.1722, eval: [15.3 s]
# Iteration 22 fit: [14.1 s]: Recall = 0.2371, Jaccard score = 0.1643, loss = 0.1654, eval: [15.2 s]
# Iteration 23 fit: [14.1 s]: Recall = 0.2358, Jaccard score = 0.1632, loss = 0.1585, eval: [15.3 s]
# Iteration 24 fit: [14.1 s]: Recall = 0.2304, Jaccard score = 0.1589, loss = 0.1524, eval: [15.2 s]
# Iteration 25 fit: [14.1 s]: Recall = 0.2346, Jaccard score = 0.1623, loss = 0.1472, eval: [15.3 s]
# Iteration 26 fit: [14.1 s]: Recall = 0.2318, Jaccard score = 0.1600, loss = 0.1416, eval: [15.4 s]
# Iteration 27 fit: [14.1 s]: Recall = 0.2340, Jaccard score = 0.1618, loss = 0.1356, eval: [15.3 s]
# Iteration 28 fit: [14.1 s]: Recall = 0.2310, Jaccard score = 0.1594, loss = 0.1313, eval: [15.2 s]
# Iteration 29 fit: [14.1 s]: Recall = 0.2326, Jaccard score = 0.1607, loss = 0.1265, eval: [15.3 s]
# Iteration 30 fit: [14.1 s]: Recall = 0.2311, Jaccard score = 0.1595, loss = 0.1224, eval: [15.2 s]
# Iteration 31 fit: [14.1 s]: Recall = 0.2282, Jaccard score = 0.1571, loss = 0.1179, eval: [15.3 s]
# Iteration 32 fit: [14.1 s]: Recall = 0.2287, Jaccard score = 0.1575, loss = 0.1151, eval: [15.3 s]
# Iteration 33 fit: [14.1 s]: Recall = 0.2279, Jaccard score = 0.1569, loss = 0.1111, eval: [15.3 s]
# Iteration 34 fit: [14.1 s]: Recall = 0.2297, Jaccard score = 0.1583, loss = 0.1072, eval: [15.2 s]
# Iteration 35 fit: [14.1 s]: Recall = 0.2261, Jaccard score = 0.1555, loss = 0.1037, eval: [15.3 s]
# Iteration 36 fit: [14.1 s]: Recall = 0.2274, Jaccard score = 0.1565, loss = 0.1001, eval: [15.3 s]
# Iteration 37 fit: [14.1 s]: Recall = 0.2343, Jaccard score = 0.1620, loss = 0.0984, eval: [15.3 s]
# Iteration 38 fit: [14.1 s]: Recall = 0.2275, Jaccard score = 0.1566, loss = 0.0948, eval: [15.2 s]
# Iteration 39 fit: [14.1 s]: Recall = 0.2279, Jaccard score = 0.1569, loss = 0.0920, eval: [15.3 s]
# Iteration 40 fit: [14.1 s]: Recall = 0.2267, Jaccard score = 0.1559, loss = 0.0894, eval: [15.3 s]
# End. Best Iteration 5:  Recall = 0.2618, Jaccard score = 0.1846. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,64,32]_1563519550.h5
# The average best performance after k-fold 3 is: Recall = 0.26238284744134716, Jaccard score = 0.1847981066445645
# 
# Performing k-fold 4
# Init: Recall = 0.0304, Jaccard score = 0.0184
# Iteration 0 fit: [14.7 s]: Recall = 0.2267, Jaccard score = 0.1564, loss = 0.4329, eval: [15.2 s]
# Iteration 1 fit: [14.1 s]: Recall = 0.2492, Jaccard score = 0.1747, loss = 0.3933, eval: [15.3 s]
# Iteration 2 fit: [13.8 s]: Recall = 0.2574, Jaccard score = 0.1815, loss = 0.3749, eval: [15.4 s]
# Iteration 3 fit: [14.0 s]: Recall = 0.2613, Jaccard score = 0.1847, loss = 0.3606, eval: [15.3 s]
# Iteration 4 fit: [13.8 s]: Recall = 0.2676, Jaccard score = 0.1901, loss = 0.3480, eval: [15.4 s]
# Iteration 5 fit: [14.0 s]: Recall = 0.2666, Jaccard score = 0.1892, loss = 0.3343, eval: [15.3 s]
# Iteration 6 fit: [13.8 s]: Recall = 0.2678, Jaccard score = 0.1902, loss = 0.3218, eval: [15.4 s]
# Iteration 7 fit: [14.1 s]: Recall = 0.2648, Jaccard score = 0.1877, loss = 0.3089, eval: [15.3 s]
# Iteration 8 fit: [13.8 s]: Recall = 0.2611, Jaccard score = 0.1846, loss = 0.2965, eval: [15.4 s]
# Iteration 9 fit: [14.1 s]: Recall = 0.2619, Jaccard score = 0.1852, loss = 0.2846, eval: [15.3 s]
# Iteration 10 fit: [13.8 s]: Recall = 0.2606, Jaccard score = 0.1842, loss = 0.2724, eval: [15.4 s]
# Iteration 11 fit: [14.0 s]: Recall = 0.2615, Jaccard score = 0.1849, loss = 0.2613, eval: [15.4 s]
# Iteration 12 fit: [13.8 s]: Recall = 0.2591, Jaccard score = 0.1829, loss = 0.2503, eval: [15.3 s]
# Iteration 13 fit: [14.0 s]: Recall = 0.2577, Jaccard score = 0.1817, loss = 0.2396, eval: [15.4 s]
# Iteration 14 fit: [13.8 s]: Recall = 0.2558, Jaccard score = 0.1802, loss = 0.2299, eval: [15.3 s]
# Iteration 15 fit: [14.0 s]: Recall = 0.2550, Jaccard score = 0.1795, loss = 0.2192, eval: [15.3 s]
# Iteration 16 fit: [13.8 s]: Recall = 0.2515, Jaccard score = 0.1766, loss = 0.2109, eval: [15.3 s]
# Iteration 17 fit: [14.1 s]: Recall = 0.2509, Jaccard score = 0.1761, loss = 0.2026, eval: [15.4 s]
# Iteration 18 fit: [13.8 s]: Recall = 0.2490, Jaccard score = 0.1745, loss = 0.1939, eval: [15.4 s]
# Iteration 19 fit: [14.0 s]: Recall = 0.2480, Jaccard score = 0.1737, loss = 0.1855, eval: [15.3 s]
# Iteration 20 fit: [13.8 s]: Recall = 0.2461, Jaccard score = 0.1721, loss = 0.1787, eval: [15.4 s]
# Iteration 21 fit: [14.0 s]: Recall = 0.2471, Jaccard score = 0.1730, loss = 0.1713, eval: [15.3 s]
# Iteration 22 fit: [13.8 s]: Recall = 0.2463, Jaccard score = 0.1723, loss = 0.1640, eval: [15.3 s]
# Iteration 23 fit: [14.1 s]: Recall = 0.2516, Jaccard score = 0.1766, loss = 0.1568, eval: [15.3 s]
# Iteration 24 fit: [13.8 s]: Recall = 0.2443, Jaccard score = 0.1707, loss = 0.1518, eval: [15.4 s]
# Iteration 25 fit: [14.1 s]: Recall = 0.2451, Jaccard score = 0.1713, loss = 0.1458, eval: [15.4 s]
# Iteration 26 fit: [13.8 s]: Recall = 0.2397, Jaccard score = 0.1669, loss = 0.1408, eval: [15.3 s]
# Iteration 27 fit: [14.1 s]: Recall = 0.2390, Jaccard score = 0.1663, loss = 0.1352, eval: [15.4 s]
# Iteration 28 fit: [13.8 s]: Recall = 0.2386, Jaccard score = 0.1660, loss = 0.1304, eval: [15.4 s]
# Iteration 29 fit: [14.0 s]: Recall = 0.2406, Jaccard score = 0.1676, loss = 0.1258, eval: [15.3 s]
# Iteration 30 fit: [13.8 s]: Recall = 0.2375, Jaccard score = 0.1652, loss = 0.1210, eval: [15.4 s]
# Iteration 31 fit: [14.1 s]: Recall = 0.2426, Jaccard score = 0.1692, loss = 0.1171, eval: [15.3 s]
# Iteration 32 fit: [13.8 s]: Recall = 0.2370, Jaccard score = 0.1647, loss = 0.1132, eval: [15.3 s]
# Iteration 33 fit: [14.0 s]: Recall = 0.2377, Jaccard score = 0.1653, loss = 0.1096, eval: [15.3 s]
# Iteration 34 fit: [13.8 s]: Recall = 0.2411, Jaccard score = 0.1681, loss = 0.1061, eval: [15.4 s]
# Iteration 35 fit: [14.0 s]: Recall = 0.2365, Jaccard score = 0.1643, loss = 0.1037, eval: [15.3 s]
# Iteration 36 fit: [13.8 s]: Recall = 0.2375, Jaccard score = 0.1651, loss = 0.0999, eval: [15.3 s]
# Iteration 37 fit: [14.0 s]: Recall = 0.2357, Jaccard score = 0.1636, loss = 0.0971, eval: [15.4 s]
# Iteration 38 fit: [13.8 s]: Recall = 0.2382, Jaccard score = 0.1657, loss = 0.0943, eval: [15.3 s]
# Iteration 39 fit: [14.1 s]: Recall = 0.2349, Jaccard score = 0.1630, loss = 0.0919, eval: [15.3 s]
# Iteration 40 fit: [13.8 s]: Recall = 0.2366, Jaccard score = 0.1644, loss = 0.0885, eval: [15.3 s]
# Iteration 41 fit: [14.0 s]: Recall = 0.2336, Jaccard score = 0.1620, loss = 0.0860, eval: [15.3 s]
# End. Best Iteration 6:  Recall = 0.2678, Jaccard score = 0.1902. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,64,32]_1563519550.h5
# The average best performance after k-fold 4 is: Recall = 0.26373018939828197, Jaccard score = 0.18614091143535885
# 
# Performing k-fold 5
# Init: Recall = 0.0279, Jaccard score = 0.0169
# Iteration 0 fit: [14.9 s]: Recall = 0.2207, Jaccard score = 0.1514, loss = 0.4328, eval: [15.2 s]
# Iteration 1 fit: [14.1 s]: Recall = 0.2468, Jaccard score = 0.1724, loss = 0.3934, eval: [15.3 s]
# Iteration 2 fit: [14.1 s]: Recall = 0.2607, Jaccard score = 0.1839, loss = 0.3760, eval: [15.2 s]
# Iteration 3 fit: [14.1 s]: Recall = 0.2635, Jaccard score = 0.1863, loss = 0.3615, eval: [15.3 s]
# Iteration 4 fit: [14.1 s]: Recall = 0.2672, Jaccard score = 0.1894, loss = 0.3482, eval: [15.4 s]
# Iteration 5 fit: [14.1 s]: Recall = 0.2669, Jaccard score = 0.1892, loss = 0.3352, eval: [15.4 s]
# Iteration 6 fit: [14.1 s]: Recall = 0.2681, Jaccard score = 0.1902, loss = 0.3225, eval: [15.4 s]
# Iteration 7 fit: [14.1 s]: Recall = 0.2647, Jaccard score = 0.1873, loss = 0.3099, eval: [15.3 s]
# Iteration 8 fit: [14.1 s]: Recall = 0.2651, Jaccard score = 0.1876, loss = 0.2968, eval: [15.4 s]
# Iteration 9 fit: [14.1 s]: Recall = 0.2633, Jaccard score = 0.1861, loss = 0.2852, eval: [15.3 s]
# Iteration 10 fit: [14.1 s]: Recall = 0.2625, Jaccard score = 0.1854, loss = 0.2736, eval: [15.4 s]
# Iteration 11 fit: [14.1 s]: Recall = 0.2578, Jaccard score = 0.1815, loss = 0.2625, eval: [15.4 s]
# Iteration 12 fit: [14.1 s]: Recall = 0.2553, Jaccard score = 0.1794, loss = 0.2512, eval: [15.4 s]
# Iteration 13 fit: [14.1 s]: Recall = 0.2549, Jaccard score = 0.1791, loss = 0.2402, eval: [15.5 s]
# Iteration 14 fit: [14.1 s]: Recall = 0.2578, Jaccard score = 0.1815, loss = 0.2311, eval: [15.4 s]
# Iteration 15 fit: [14.1 s]: Recall = 0.2521, Jaccard score = 0.1767, loss = 0.2211, eval: [15.5 s]
# Iteration 16 fit: [14.1 s]: Recall = 0.2522, Jaccard score = 0.1768, loss = 0.2120, eval: [15.4 s]
# Iteration 17 fit: [14.1 s]: Recall = 0.2517, Jaccard score = 0.1764, loss = 0.2028, eval: [15.4 s]
# Iteration 18 fit: [14.1 s]: Recall = 0.2522, Jaccard score = 0.1768, loss = 0.1940, eval: [15.4 s]
# Iteration 19 fit: [14.1 s]: Recall = 0.2480, Jaccard score = 0.1734, loss = 0.1862, eval: [15.4 s]
# Iteration 20 fit: [14.1 s]: Recall = 0.2492, Jaccard score = 0.1744, loss = 0.1799, eval: [15.4 s]
# Iteration 21 fit: [14.1 s]: Recall = 0.2470, Jaccard score = 0.1726, loss = 0.1714, eval: [15.3 s]
# Iteration 22 fit: [14.1 s]: Recall = 0.2484, Jaccard score = 0.1737, loss = 0.1652, eval: [15.4 s]
# Iteration 23 fit: [14.1 s]: Recall = 0.2435, Jaccard score = 0.1697, loss = 0.1586, eval: [15.4 s]
# Iteration 24 fit: [14.1 s]: Recall = 0.2409, Jaccard score = 0.1676, loss = 0.1523, eval: [15.4 s]
# Iteration 25 fit: [14.1 s]: Recall = 0.2458, Jaccard score = 0.1716, loss = 0.1467, eval: [15.5 s]
# Iteration 26 fit: [14.1 s]: Recall = 0.2412, Jaccard score = 0.1678, loss = 0.1411, eval: [15.4 s]
# Iteration 27 fit: [14.1 s]: Recall = 0.2400, Jaccard score = 0.1669, loss = 0.1356, eval: [15.4 s]
# Iteration 28 fit: [14.1 s]: Recall = 0.2428, Jaccard score = 0.1692, loss = 0.1313, eval: [15.4 s]
# Iteration 29 fit: [14.1 s]: Recall = 0.2369, Jaccard score = 0.1643, loss = 0.1262, eval: [15.4 s]
# Iteration 30 fit: [14.1 s]: Recall = 0.2386, Jaccard score = 0.1658, loss = 0.1216, eval: [15.4 s]
# Iteration 31 fit: [14.1 s]: Recall = 0.2355, Jaccard score = 0.1633, loss = 0.1178, eval: [15.5 s]
# Iteration 32 fit: [14.1 s]: Recall = 0.2427, Jaccard score = 0.1691, loss = 0.1134, eval: [15.4 s]
# Iteration 33 fit: [14.1 s]: Recall = 0.2405, Jaccard score = 0.1673, loss = 0.1110, eval: [15.4 s]
# Iteration 34 fit: [14.1 s]: Recall = 0.2382, Jaccard score = 0.1654, loss = 0.1070, eval: [15.4 s]
# Iteration 35 fit: [14.1 s]: Recall = 0.2386, Jaccard score = 0.1657, loss = 0.1035, eval: [15.5 s]
# Iteration 36 fit: [14.1 s]: Recall = 0.2376, Jaccard score = 0.1649, loss = 0.1007, eval: [15.3 s]
# Iteration 37 fit: [14.1 s]: Recall = 0.2389, Jaccard score = 0.1660, loss = 0.0982, eval: [15.5 s]
# Iteration 38 fit: [14.1 s]: Recall = 0.2381, Jaccard score = 0.1654, loss = 0.0948, eval: [15.5 s]
# Iteration 39 fit: [14.1 s]: Recall = 0.2354, Jaccard score = 0.1631, loss = 0.0925, eval: [15.4 s]
# Iteration 40 fit: [14.1 s]: Recall = 0.2369, Jaccard score = 0.1643, loss = 0.0902, eval: [15.4 s]
# Iteration 41 fit: [14.1 s]: Recall = 0.2352, Jaccard score = 0.1630, loss = 0.0877, eval: [15.4 s]
# End. Best Iteration 6:  Recall = 0.2681, Jaccard score = 0.1902. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,64,32]_1563519550.h5
# The average best performance after k-fold 5 is: Recall = 0.2646105251449992, Jaccard score = 0.18694434794142892
