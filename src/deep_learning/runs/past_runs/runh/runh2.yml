--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "100"
--num_factors: "64"


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560955233.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1560955233.h5
# <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'Data//dev_tag_dataset{}.pkl'


# Launched by terminal.
# <class 'NameError'>: name 'parse_known_args' is not defined


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560955426.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1560955426.h5
# <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'Data/dev_tag_dataset{}.pkl'


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560958581.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1560958581.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0036, Jaccard score = 0.0019
# Iteration 0 fit: [6.5 s]: Recall = 0.0038, Jaccard score = 0.0021, loss = 0.5464, val_loss = 0.0000, eval: [6.5 s]
# Iteration 1 fit: [6.2 s]: Recall = 0.0030, Jaccard score = 0.0016, loss = 0.5007, val_loss = 0.0000, eval: [6.6 s]
# Iteration 2 fit: [6.2 s]: Recall = 0.0036, Jaccard score = 0.0019, loss = 0.4999, val_loss = 0.0000, eval: [6.6 s]
# Iteration 3 fit: [6.3 s]: Recall = 0.0036, Jaccard score = 0.0019, loss = 0.4972, val_loss = 0.0000, eval: [6.5 s]
# Iteration 4 fit: [6.3 s]: Recall = 0.0057, Jaccard score = 0.0031, loss = 0.4913, val_loss = 0.0000, eval: [6.5 s]
# Iteration 5 fit: [6.2 s]: Recall = 0.0061, Jaccard score = 0.0033, loss = 0.4814, val_loss = 0.0000, eval: [6.6 s]
# Iteration 6 fit: [6.2 s]: Recall = 0.0076, Jaccard score = 0.0041, loss = 0.4667, val_loss = 0.0000, eval: [6.5 s]
# Iteration 7 fit: [6.2 s]: Recall = 0.0097, Jaccard score = 0.0052, loss = 0.4474, val_loss = 0.0000, eval: [6.5 s]
# Iteration 8 fit: [6.1 s]: Recall = 0.0123, Jaccard score = 0.0067, loss = 0.4240, val_loss = 0.0000, eval: [6.6 s]
# Iteration 9 fit: [6.2 s]: Recall = 0.0150, Jaccard score = 0.0082, loss = 0.3978, val_loss = 0.0000, eval: [6.5 s]
# Iteration 10 fit: [6.2 s]: Recall = 0.0188, Jaccard score = 0.0102, loss = 0.3692, val_loss = 0.0000, eval: [6.5 s]
# Iteration 11 fit: [6.2 s]: Recall = 0.0230, Jaccard score = 0.0125, loss = 0.3414, val_loss = 0.0000, eval: [6.6 s]
# Iteration 12 fit: [6.2 s]: Recall = 0.0252, Jaccard score = 0.0138, loss = 0.3147, val_loss = 0.0000, eval: [6.5 s]
# Iteration 13 fit: [6.2 s]: Recall = 0.0268, Jaccard score = 0.0146, loss = 0.2890, val_loss = 0.0000, eval: [6.5 s]
# Iteration 14 fit: [6.2 s]: Recall = 0.0292, Jaccard score = 0.0160, loss = 0.2649, val_loss = 0.0000, eval: [6.5 s]
# Iteration 15 fit: [6.2 s]: Recall = 0.0319, Jaccard score = 0.0175, loss = 0.2429, val_loss = 0.0000, eval: [6.6 s]
# Iteration 16 fit: [6.2 s]: Recall = 0.0328, Jaccard score = 0.0180, loss = 0.2232, val_loss = 0.0000, eval: [6.6 s]
# Iteration 17 fit: [6.2 s]: Recall = 0.0332, Jaccard score = 0.0182, loss = 0.2040, val_loss = 0.0000, eval: [6.6 s]
# Iteration 18 fit: [6.2 s]: Recall = 0.0368, Jaccard score = 0.0203, loss = 0.1865, val_loss = 0.0000, eval: [6.6 s]
# Iteration 19 fit: [6.2 s]: Recall = 0.0364, Jaccard score = 0.0200, loss = 0.1696, val_loss = 0.0000, eval: [6.5 s]
# Iteration 20 fit: [6.2 s]: Recall = 0.0391, Jaccard score = 0.0215, loss = 0.1548, val_loss = 0.0000, eval: [6.6 s]
# Iteration 21 fit: [6.2 s]: Recall = 0.0399, Jaccard score = 0.0220, loss = 0.1409, val_loss = 0.0000, eval: [6.6 s]
# Iteration 22 fit: [6.1 s]: Recall = 0.0404, Jaccard score = 0.0223, loss = 0.1286, val_loss = 0.0000, eval: [6.5 s]
# Iteration 23 fit: [6.2 s]: Recall = 0.0442, Jaccard score = 0.0244, loss = 0.1176, val_loss = 0.0000, eval: [6.6 s]
# Iteration 24 fit: [6.2 s]: Recall = 0.0463, Jaccard score = 0.0256, loss = 0.1064, val_loss = 0.0000, eval: [7.3 s]
# Iteration 25 fit: [6.3 s]: Recall = 0.0495, Jaccard score = 0.0275, loss = 0.0967, val_loss = 0.0000, eval: [6.6 s]
# Iteration 26 fit: [6.2 s]: Recall = 0.0524, Jaccard score = 0.0291, loss = 0.0881, val_loss = 0.0000, eval: [6.6 s]
# Iteration 27 fit: [6.2 s]: Recall = 0.0552, Jaccard score = 0.0307, loss = 0.0810, val_loss = 0.0000, eval: [6.6 s]
# Iteration 28 fit: [6.2 s]: Recall = 0.0564, Jaccard score = 0.0314, loss = 0.0733, val_loss = 0.0000, eval: [6.6 s]
# Iteration 29 fit: [6.2 s]: Recall = 0.0588, Jaccard score = 0.0328, loss = 0.0672, val_loss = 0.0000, eval: [6.5 s]
# Iteration 30 fit: [6.2 s]: Recall = 0.0613, Jaccard score = 0.0342, loss = 0.0616, val_loss = 0.0000, eval: [6.5 s]
# Iteration 31 fit: [6.2 s]: Recall = 0.0636, Jaccard score = 0.0355, loss = 0.0560, val_loss = 0.0000, eval: [6.6 s]
# Iteration 32 fit: [6.2 s]: Recall = 0.0641, Jaccard score = 0.0358, loss = 0.0523, val_loss = 0.0000, eval: [6.5 s]
# Iteration 33 fit: [6.2 s]: Recall = 0.0660, Jaccard score = 0.0369, loss = 0.0476, val_loss = 0.0000, eval: [6.5 s]
# Iteration 34 fit: [6.2 s]: Recall = 0.0672, Jaccard score = 0.0376, loss = 0.0438, val_loss = 0.0000, eval: [6.6 s]
# Iteration 35 fit: [6.2 s]: Recall = 0.0704, Jaccard score = 0.0395, loss = 0.0408, val_loss = 0.0000, eval: [6.6 s]
# Iteration 36 fit: [6.2 s]: Recall = 0.0721, Jaccard score = 0.0405, loss = 0.0385, val_loss = 0.0000, eval: [6.5 s]
# Iteration 37 fit: [6.2 s]: Recall = 0.0748, Jaccard score = 0.0420, loss = 0.0359, val_loss = 0.0000, eval: [6.6 s]
# Iteration 38 fit: [6.2 s]: Recall = 0.0771, Jaccard score = 0.0434, loss = 0.0337, val_loss = 0.0000, eval: [6.6 s]
# Iteration 39 fit: [6.2 s]: Recall = 0.0791, Jaccard score = 0.0446, loss = 0.0312, val_loss = 0.0000, eval: [6.6 s]
# Iteration 40 fit: [6.2 s]: Recall = 0.0803, Jaccard score = 0.0453, loss = 0.0287, val_loss = 0.0000, eval: [6.6 s]
# Iteration 41 fit: [6.2 s]: Recall = 0.0835, Jaccard score = 0.0472, loss = 0.0268, val_loss = 0.0000, eval: [6.6 s]
# Iteration 42 fit: [6.2 s]: Recall = 0.0860, Jaccard score = 0.0486, loss = 0.0258, val_loss = 0.0000, eval: [6.6 s]
# Iteration 43 fit: [6.2 s]: Recall = 0.0860, Jaccard score = 0.0486, loss = 0.0245, val_loss = 0.0000, eval: [6.6 s]


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560960572.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1560960572.h5
# Load data done [2.0 s]. #user=18000, #item=985, #train=135566, #test=18000
# Init: Recall = 0.0023, Jaccard score = 0.0012
# Iteration 0 fit: [6.7 s]: Recall = 0.0039, Jaccard score = 0.0021, loss = 0.5466, val_loss = 0.0000, eval: [6.5 s]
# Iteration 1 fit: [6.3 s]: Recall = 0.0027, Jaccard score = 0.0015, loss = 0.5008, val_loss = 0.0000, eval: [6.6 s]
# Iteration 2 fit: [6.3 s]: Recall = 0.0035, Jaccard score = 0.0019, loss = 0.5002, val_loss = 0.0000, eval: [6.6 s]
# Iteration 3 fit: [6.3 s]: Recall = 0.0031, Jaccard score = 0.0017, loss = 0.4983, val_loss = 0.0000, eval: [6.7 s]
# Iteration 4 fit: [6.3 s]: Recall = 0.0052, Jaccard score = 0.0028, loss = 0.4933, val_loss = 0.0000, eval: [6.6 s]
# Iteration 5 fit: [6.3 s]: Recall = 0.0049, Jaccard score = 0.0026, loss = 0.4846, val_loss = 0.0000, eval: [6.6 s]
# Iteration 6 fit: [6.3 s]: Recall = 0.0084, Jaccard score = 0.0045, loss = 0.4716, val_loss = 0.0000, eval: [6.6 s]
# Iteration 7 fit: [6.4 s]: Recall = 0.0085, Jaccard score = 0.0046, loss = 0.4537, val_loss = 0.0000, eval: [6.6 s]
# Iteration 8 fit: [6.3 s]: Recall = 0.0111, Jaccard score = 0.0059, loss = 0.4306, val_loss = 0.0000, eval: [6.6 s]
# Iteration 9 fit: [6.3 s]: Recall = 0.0148, Jaccard score = 0.0079, loss = 0.4048, val_loss = 0.0000, eval: [6.6 s]
# Iteration 10 fit: [6.3 s]: Recall = 0.0171, Jaccard score = 0.0092, loss = 0.3770, val_loss = 0.0000, eval: [6.6 s]
# Iteration 11 fit: [6.3 s]: Recall = 0.0185, Jaccard score = 0.0099, loss = 0.3498, val_loss = 0.0000, eval: [6.6 s]
# Iteration 12 fit: [6.3 s]: Recall = 0.0214, Jaccard score = 0.0115, loss = 0.3226, val_loss = 0.0000, eval: [6.6 s]
# Iteration 13 fit: [6.3 s]: Recall = 0.0239, Jaccard score = 0.0129, loss = 0.2966, val_loss = 0.0000, eval: [6.6 s]
# Iteration 14 fit: [6.3 s]: Recall = 0.0264, Jaccard score = 0.0143, loss = 0.2732, val_loss = 0.0000, eval: [6.6 s]
# Iteration 15 fit: [6.3 s]: Recall = 0.0282, Jaccard score = 0.0153, loss = 0.2503, val_loss = 0.0000, eval: [6.6 s]
# Iteration 16 fit: [6.3 s]: Recall = 0.0299, Jaccard score = 0.0162, loss = 0.2296, val_loss = 0.0000, eval: [6.6 s]
# Iteration 17 fit: [6.3 s]: Recall = 0.0315, Jaccard score = 0.0171, loss = 0.2102, val_loss = 0.0000, eval: [6.6 s]
# Iteration 18 fit: [6.3 s]: Recall = 0.0324, Jaccard score = 0.0176, loss = 0.1925, val_loss = 0.0000, eval: [6.6 s]
# Iteration 19 fit: [6.3 s]: Recall = 0.0342, Jaccard score = 0.0186, loss = 0.1759, val_loss = 0.0000, eval: [6.6 s]
# Iteration 20 fit: [6.3 s]: Recall = 0.0357, Jaccard score = 0.0194, loss = 0.1604, val_loss = 0.0000, eval: [6.6 s]
# Iteration 21 fit: [6.3 s]: Recall = 0.0365, Jaccard score = 0.0199, loss = 0.1461, val_loss = 0.0000, eval: [6.6 s]
# Iteration 22 fit: [6.3 s]: Recall = 0.0373, Jaccard score = 0.0203, loss = 0.1331, val_loss = 0.0000, eval: [6.6 s]
# Iteration 23 fit: [6.3 s]: Recall = 0.0396, Jaccard score = 0.0216, loss = 0.1208, val_loss = 0.0000, eval: [6.6 s]
# Iteration 24 fit: [6.3 s]: Recall = 0.0406, Jaccard score = 0.0221, loss = 0.1115, val_loss = 0.0000, eval: [6.6 s]
# Iteration 25 fit: [6.3 s]: Recall = 0.0427, Jaccard score = 0.0233, loss = 0.1000, val_loss = 0.0000, eval: [6.6 s]
# Iteration 26 fit: [6.3 s]: Recall = 0.0443, Jaccard score = 0.0242, loss = 0.0906, val_loss = 0.0000, eval: [6.6 s]
# Iteration 27 fit: [6.3 s]: Recall = 0.0451, Jaccard score = 0.0246, loss = 0.0839, val_loss = 0.0000, eval: [6.6 s]
# Iteration 28 fit: [6.3 s]: Recall = 0.0466, Jaccard score = 0.0255, loss = 0.0765, val_loss = 0.0000, eval: [6.6 s]
# Iteration 29 fit: [6.3 s]: Recall = 0.0501, Jaccard score = 0.0275, loss = 0.0699, val_loss = 0.0000, eval: [6.6 s]
# Iteration 30 fit: [6.3 s]: Recall = 0.0490, Jaccard score = 0.0268, loss = 0.0637, val_loss = 0.0000, eval: [6.6 s]
# Iteration 31 fit: [6.4 s]: Recall = 0.0517, Jaccard score = 0.0284, loss = 0.0584, val_loss = 0.0000, eval: [6.6 s]
# Iteration 32 fit: [6.3 s]: Recall = 0.0542, Jaccard score = 0.0298, loss = 0.0533, val_loss = 0.0000, eval: [6.6 s]
# Iteration 33 fit: [6.3 s]: Recall = 0.0556, Jaccard score = 0.0305, loss = 0.0488, val_loss = 0.0000, eval: [6.6 s]
# Iteration 34 fit: [6.3 s]: Recall = 0.0585, Jaccard score = 0.0322, loss = 0.0450, val_loss = 0.0000, eval: [6.6 s]
# Iteration 35 fit: [6.3 s]: Recall = 0.0612, Jaccard score = 0.0338, loss = 0.0418, val_loss = 0.0000, eval: [6.6 s]
# Iteration 36 fit: [6.3 s]: Recall = 0.0624, Jaccard score = 0.0344, loss = 0.0388, val_loss = 0.0000, eval: [6.6 s]
# Iteration 37 fit: [6.3 s]: Recall = 0.0657, Jaccard score = 0.0363, loss = 0.0361, val_loss = 0.0000, eval: [6.6 s]
# Iteration 38 fit: [6.3 s]: Recall = 0.0657, Jaccard score = 0.0363, loss = 0.0338, val_loss = 0.0000, eval: [6.6 s]
# Iteration 39 fit: [6.3 s]: Recall = 0.0668, Jaccard score = 0.0370, loss = 0.0313, val_loss = 0.0000, eval: [6.6 s]
# Iteration 40 fit: [6.3 s]: Recall = 0.0699, Jaccard score = 0.0388, loss = 0.0301, val_loss = 0.0000, eval: [6.6 s]
# Iteration 41 fit: [6.3 s]: Recall = 0.0726, Jaccard score = 0.0403, loss = 0.0274, val_loss = 0.0000, eval: [6.6 s]
# Iteration 42 fit: [6.3 s]: Recall = 0.0760, Jaccard score = 0.0422, loss = 0.0258, val_loss = 0.0000, eval: [6.6 s]
# Iteration 43 fit: [6.4 s]: Recall = 0.0763, Jaccard score = 0.0425, loss = 0.0238, val_loss = 0.0000, eval: [6.6 s]
# Iteration 44 fit: [6.3 s]: Recall = 0.0793, Jaccard score = 0.0442, loss = 0.0225, val_loss = 0.0000, eval: [6.6 s]
# Iteration 45 fit: [6.3 s]: Recall = 0.0812, Jaccard score = 0.0453, loss = 0.0220, val_loss = 0.0000, eval: [6.6 s]
# Iteration 46 fit: [6.3 s]: Recall = 0.0824, Jaccard score = 0.0460, loss = 0.0205, val_loss = 0.0000, eval: [6.6 s]
# Iteration 47 fit: [6.3 s]: Recall = 0.0849, Jaccard score = 0.0474, loss = 0.0193, val_loss = 0.0000, eval: [6.6 s]
# Iteration 48 fit: [6.3 s]: Recall = 0.0864, Jaccard score = 0.0484, loss = 0.0187, val_loss = 0.0000, eval: [6.6 s]
# Iteration 49 fit: [6.3 s]: Recall = 0.0866, Jaccard score = 0.0485, loss = 0.0173, val_loss = 0.0000, eval: [6.6 s]
# Iteration 50 fit: [6.3 s]: Recall = 0.0888, Jaccard score = 0.0497, loss = 0.0169, val_loss = 0.0000, eval: [6.6 s]
# Iteration 51 fit: [6.3 s]: Recall = 0.0907, Jaccard score = 0.0509, loss = 0.0166, val_loss = 0.0000, eval: [6.6 s]
# Iteration 52 fit: [6.3 s]: Recall = 0.0936, Jaccard score = 0.0526, loss = 0.0152, val_loss = 0.0000, eval: [6.6 s]
# Iteration 53 fit: [6.3 s]: Recall = 0.0936, Jaccard score = 0.0526, loss = 0.0150, val_loss = 0.0000, eval: [6.6 s]
# Iteration 54 fit: [6.3 s]: Recall = 0.0946, Jaccard score = 0.0532, loss = 0.0144, val_loss = 0.0000, eval: [6.6 s]
# Iteration 55 fit: [6.3 s]: Recall = 0.0962, Jaccard score = 0.0541, loss = 0.0135, val_loss = 0.0000, eval: [6.6 s]
# Iteration 56 fit: [6.3 s]: Recall = 0.0985, Jaccard score = 0.0555, loss = 0.0132, val_loss = 0.0000, eval: [6.6 s]
# Iteration 57 fit: [6.3 s]: Recall = 0.0981, Jaccard score = 0.0552, loss = 0.0125, val_loss = 0.0000, eval: [6.6 s]
# Iteration 58 fit: [6.3 s]: Recall = 0.1004, Jaccard score = 0.0566, loss = 0.0122, val_loss = 0.0000, eval: [6.6 s]
# Iteration 59 fit: [6.3 s]: Recall = 0.1014, Jaccard score = 0.0572, loss = 0.0114, val_loss = 0.0000, eval: [6.6 s]
# Iteration 60 fit: [6.3 s]: Recall = 0.1028, Jaccard score = 0.0580, loss = 0.0110, val_loss = 0.0000, eval: [6.6 s]
# Iteration 61 fit: [6.3 s]: Recall = 0.1028, Jaccard score = 0.0580, loss = 0.0109, val_loss = 0.0000, eval: [6.6 s]
# Iteration 62 fit: [6.3 s]: Recall = 0.1041, Jaccard score = 0.0588, loss = 0.0103, val_loss = 0.0000, eval: [6.6 s]
# Iteration 63 fit: [6.4 s]: Recall = 0.1051, Jaccard score = 0.0594, loss = 0.0105, val_loss = 0.0000, eval: [6.6 s]
# Iteration 64 fit: [6.3 s]: Recall = 0.1041, Jaccard score = 0.0588, loss = 0.0097, val_loss = 0.0000, eval: [6.6 s]
# Iteration 65 fit: [6.3 s]: Recall = 0.1072, Jaccard score = 0.0607, loss = 0.0097, val_loss = 0.0000, eval: [6.6 s]
# Iteration 66 fit: [6.3 s]: Recall = 0.1061, Jaccard score = 0.0600, loss = 0.0092, val_loss = 0.0000, eval: [6.6 s]
# Iteration 67 fit: [6.4 s]: Recall = 0.1080, Jaccard score = 0.0612, loss = 0.0092, val_loss = 0.0000, eval: [6.6 s]
# Iteration 68 fit: [6.3 s]: Recall = 0.1082, Jaccard score = 0.0613, loss = 0.0086, val_loss = 0.0000, eval: [6.6 s]
# Iteration 69 fit: [6.3 s]: Recall = 0.1103, Jaccard score = 0.0626, loss = 0.0084, val_loss = 0.0000, eval: [6.6 s]
# Iteration 70 fit: [6.3 s]: Recall = 0.1086, Jaccard score = 0.0615, loss = 0.0082, val_loss = 0.0000, eval: [6.6 s]
# Iteration 71 fit: [6.3 s]: Recall = 0.1101, Jaccard score = 0.0624, loss = 0.0082, val_loss = 0.0000, eval: [6.7 s]
# Iteration 72 fit: [6.4 s]: Recall = 0.1103, Jaccard score = 0.0626, loss = 0.0080, val_loss = 0.0000, eval: [6.7 s]
# Iteration 73 fit: [6.4 s]: Recall = 0.1123, Jaccard score = 0.0637, loss = 0.0077, val_loss = 0.0000, eval: [6.6 s]
# Iteration 74 fit: [6.4 s]: Recall = 0.1107, Jaccard score = 0.0628, loss = 0.0075, val_loss = 0.0000, eval: [6.6 s]
# Iteration 75 fit: [6.4 s]: Recall = 0.1115, Jaccard score = 0.0633, loss = 0.0077, val_loss = 0.0000, eval: [6.6 s]
# Iteration 76 fit: [6.3 s]: Recall = 0.1125, Jaccard score = 0.0638, loss = 0.0070, val_loss = 0.0000, eval: [6.6 s]
# Iteration 77 fit: [6.3 s]: Recall = 0.1125, Jaccard score = 0.0638, loss = 0.0069, val_loss = 0.0000, eval: [6.6 s]
# Iteration 78 fit: [6.3 s]: Recall = 0.1129, Jaccard score = 0.0641, loss = 0.0066, val_loss = 0.0000, eval: [6.6 s]
# Iteration 79 fit: [6.3 s]: Recall = 0.1156, Jaccard score = 0.0657, loss = 0.0066, val_loss = 0.0000, eval: [6.6 s]
# Iteration 80 fit: [6.3 s]: Recall = 0.1162, Jaccard score = 0.0661, loss = 0.0064, val_loss = 0.0000, eval: [6.7 s]
# Iteration 81 fit: [6.4 s]: Recall = 0.1142, Jaccard score = 0.0649, loss = 0.0066, val_loss = 0.0000, eval: [6.6 s]
# Iteration 82 fit: [6.3 s]: Recall = 0.1158, Jaccard score = 0.0658, loss = 0.0060, val_loss = 0.0000, eval: [6.6 s]
# Iteration 83 fit: [6.3 s]: Recall = 0.1152, Jaccard score = 0.0655, loss = 0.0061, val_loss = 0.0000, eval: [6.6 s]
# Iteration 84 fit: [6.3 s]: Recall = 0.1142, Jaccard score = 0.0649, loss = 0.0060, val_loss = 0.0000, eval: [6.6 s]
# Iteration 85 fit: [6.3 s]: Recall = 0.1164, Jaccard score = 0.0662, loss = 0.0060, val_loss = 0.0000, eval: [6.6 s]
# Iteration 86 fit: [6.3 s]: Recall = 0.1187, Jaccard score = 0.0676, loss = 0.0061, val_loss = 0.0000, eval: [6.6 s]
# Iteration 87 fit: [6.3 s]: Recall = 0.1175, Jaccard score = 0.0669, loss = 0.0058, val_loss = 0.0000, eval: [6.6 s]
# Iteration 88 fit: [6.4 s]: Recall = 0.1173, Jaccard score = 0.0668, loss = 0.0055, val_loss = 0.0000, eval: [6.6 s]
# Iteration 89 fit: [6.3 s]: Recall = 0.1187, Jaccard score = 0.0676, loss = 0.0055, val_loss = 0.0000, eval: [6.6 s]
# Iteration 90 fit: [6.3 s]: Recall = 0.1202, Jaccard score = 0.0686, loss = 0.0054, val_loss = 0.0000, eval: [6.6 s]
# Iteration 91 fit: [6.3 s]: Recall = 0.1199, Jaccard score = 0.0683, loss = 0.0052, val_loss = 0.0000, eval: [6.6 s]
# Iteration 92 fit: [6.3 s]: Recall = 0.1200, Jaccard score = 0.0684, loss = 0.0056, val_loss = 0.0000, eval: [6.6 s]
# Iteration 93 fit: [6.3 s]: Recall = 0.1216, Jaccard score = 0.0694, loss = 0.0054, val_loss = 0.0000, eval: [6.6 s]
# Iteration 94 fit: [6.4 s]: Recall = 0.1200, Jaccard score = 0.0684, loss = 0.0051, val_loss = 0.0000, eval: [6.6 s]
# Iteration 95 fit: [6.4 s]: Recall = 0.1208, Jaccard score = 0.0689, loss = 0.0050, val_loss = 0.0000, eval: [6.6 s]
# Iteration 96 fit: [6.4 s]: Recall = 0.1216, Jaccard score = 0.0694, loss = 0.0049, val_loss = 0.0000, eval: [6.8 s]
# Iteration 97 fit: [6.4 s]: Recall = 0.1212, Jaccard score = 0.0691, loss = 0.0046, val_loss = 0.0000, eval: [6.8 s]
# Iteration 98 fit: [6.4 s]: Recall = 0.1232, Jaccard score = 0.0703, loss = 0.0048, val_loss = 0.0000, eval: [6.6 s]
# Iteration 99 fit: [6.4 s]: Recall = 0.1247, Jaccard score = 0.0713, loss = 0.0047, val_loss = 0.0000, eval: [6.6 s]
# End. Best Iteration 99:  Recall = 0.1247, Jaccard score = 0.0713. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1560960572.h5
