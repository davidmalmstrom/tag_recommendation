--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "100"
--num_factors: "72"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=72, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_72_[64,32,16,8]_1560848480.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0021, Jaccard score = 0.0011
# Iteration 0 fit: [6.8 s]: Recall = 0.0030, Jaccard score = 0.0016, loss = 0.5467, val_loss = 0.0000, eval: [6.6 s]
# Iteration 1 fit: [6.4 s]: Recall = 0.0025, Jaccard score = 0.0013, loss = 0.5008, val_loss = 0.0000, eval: [6.6 s]
# Iteration 2 fit: [6.4 s]: Recall = 0.0030, Jaccard score = 0.0016, loss = 0.5002, val_loss = 0.0000, eval: [6.6 s]
# Iteration 3 fit: [6.4 s]: Recall = 0.0038, Jaccard score = 0.0021, loss = 0.4978, val_loss = 0.0000, eval: [6.6 s]
# Iteration 4 fit: [6.4 s]: Recall = 0.0057, Jaccard score = 0.0031, loss = 0.4923, val_loss = 0.0000, eval: [6.6 s]
# Iteration 5 fit: [6.4 s]: Recall = 0.0059, Jaccard score = 0.0032, loss = 0.4821, val_loss = 0.0000, eval: [6.7 s]
# Iteration 6 fit: [6.4 s]: Recall = 0.0068, Jaccard score = 0.0037, loss = 0.4677, val_loss = 0.0000, eval: [6.7 s]
# Iteration 7 fit: [6.4 s]: Recall = 0.0089, Jaccard score = 0.0048, loss = 0.4476, val_loss = 0.0000, eval: [6.6 s]
# Iteration 8 fit: [6.4 s]: Recall = 0.0099, Jaccard score = 0.0054, loss = 0.4235, val_loss = 0.0000, eval: [6.6 s]
# Iteration 9 fit: [6.4 s]: Recall = 0.0129, Jaccard score = 0.0070, loss = 0.3955, val_loss = 0.0000, eval: [6.6 s]
# Iteration 10 fit: [6.4 s]: Recall = 0.0152, Jaccard score = 0.0083, loss = 0.3659, val_loss = 0.0000, eval: [6.6 s]
# Iteration 11 fit: [6.4 s]: Recall = 0.0171, Jaccard score = 0.0093, loss = 0.3362, val_loss = 0.0000, eval: [6.6 s]
# Iteration 12 fit: [6.4 s]: Recall = 0.0194, Jaccard score = 0.0106, loss = 0.3081, val_loss = 0.0000, eval: [6.6 s]
# Iteration 13 fit: [6.4 s]: Recall = 0.0211, Jaccard score = 0.0115, loss = 0.2816, val_loss = 0.0000, eval: [6.6 s]
# Iteration 14 fit: [6.4 s]: Recall = 0.0235, Jaccard score = 0.0129, loss = 0.2556, val_loss = 0.0000, eval: [6.6 s]
# Iteration 15 fit: [6.4 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.2335, val_loss = 0.0000, eval: [6.7 s]
# Iteration 16 fit: [6.4 s]: Recall = 0.0271, Jaccard score = 0.0149, loss = 0.2110, val_loss = 0.0000, eval: [6.7 s]
# Iteration 17 fit: [6.4 s]: Recall = 0.0281, Jaccard score = 0.0154, loss = 0.1915, val_loss = 0.0000, eval: [6.6 s]
# Iteration 18 fit: [6.4 s]: Recall = 0.0302, Jaccard score = 0.0165, loss = 0.1739, val_loss = 0.0000, eval: [6.6 s]
# Iteration 19 fit: [6.4 s]: Recall = 0.0325, Jaccard score = 0.0178, loss = 0.1564, val_loss = 0.0000, eval: [6.6 s]
# Iteration 20 fit: [6.4 s]: Recall = 0.0332, Jaccard score = 0.0182, loss = 0.1413, val_loss = 0.0000, eval: [6.6 s]
# Iteration 21 fit: [6.4 s]: Recall = 0.0349, Jaccard score = 0.0192, loss = 0.1276, val_loss = 0.0000, eval: [6.6 s]
# Iteration 22 fit: [6.4 s]: Recall = 0.0368, Jaccard score = 0.0203, loss = 0.1143, val_loss = 0.0000, eval: [6.6 s]
# Iteration 23 fit: [6.4 s]: Recall = 0.0391, Jaccard score = 0.0215, loss = 0.1041, val_loss = 0.0000, eval: [6.7 s]
# Iteration 24 fit: [6.4 s]: Recall = 0.0425, Jaccard score = 0.0235, loss = 0.0939, val_loss = 0.0000, eval: [6.6 s]
# Iteration 25 fit: [6.4 s]: Recall = 0.0444, Jaccard score = 0.0245, loss = 0.0846, val_loss = 0.0000, eval: [6.6 s]
# Iteration 26 fit: [6.4 s]: Recall = 0.0452, Jaccard score = 0.0250, loss = 0.0744, val_loss = 0.0000, eval: [6.6 s]
# Iteration 27 fit: [6.4 s]: Recall = 0.0476, Jaccard score = 0.0264, loss = 0.0676, val_loss = 0.0000, eval: [6.7 s]
# Iteration 28 fit: [6.4 s]: Recall = 0.0474, Jaccard score = 0.0263, loss = 0.0618, val_loss = 0.0000, eval: [6.7 s]
# Iteration 29 fit: [6.4 s]: Recall = 0.0518, Jaccard score = 0.0287, loss = 0.0552, val_loss = 0.0000, eval: [6.6 s]
# Iteration 30 fit: [6.4 s]: Recall = 0.0537, Jaccard score = 0.0298, loss = 0.0506, val_loss = 0.0000, eval: [6.6 s]
# Iteration 31 fit: [6.4 s]: Recall = 0.0560, Jaccard score = 0.0311, loss = 0.0463, val_loss = 0.0000, eval: [6.6 s]
# Iteration 32 fit: [6.4 s]: Recall = 0.0585, Jaccard score = 0.0326, loss = 0.0421, val_loss = 0.0000, eval: [6.7 s]
# Iteration 33 fit: [6.4 s]: Recall = 0.0604, Jaccard score = 0.0336, loss = 0.0384, val_loss = 0.0000, eval: [6.6 s]
# Iteration 34 fit: [6.4 s]: Recall = 0.0636, Jaccard score = 0.0355, loss = 0.0348, val_loss = 0.0000, eval: [6.6 s]
# Iteration 35 fit: [6.4 s]: Recall = 0.0655, Jaccard score = 0.0366, loss = 0.0321, val_loss = 0.0000, eval: [6.7 s]
# Iteration 36 fit: [6.4 s]: Recall = 0.0687, Jaccard score = 0.0385, loss = 0.0300, val_loss = 0.0000, eval: [6.6 s]
# Iteration 37 fit: [6.4 s]: Recall = 0.0700, Jaccard score = 0.0393, loss = 0.0276, val_loss = 0.0000, eval: [6.6 s]
# Iteration 38 fit: [6.4 s]: Recall = 0.0733, Jaccard score = 0.0411, loss = 0.0250, val_loss = 0.0000, eval: [6.5 s]
# Iteration 39 fit: [6.4 s]: Recall = 0.0744, Jaccard score = 0.0418, loss = 0.0236, val_loss = 0.0000, eval: [6.6 s]
# Iteration 40 fit: [6.4 s]: Recall = 0.0776, Jaccard score = 0.0437, loss = 0.0223, val_loss = 0.0000, eval: [6.6 s]
# Iteration 41 fit: [6.4 s]: Recall = 0.0776, Jaccard score = 0.0437, loss = 0.0206, val_loss = 0.0000, eval: [6.6 s]
# Iteration 42 fit: [6.4 s]: Recall = 0.0807, Jaccard score = 0.0455, loss = 0.0196, val_loss = 0.0000, eval: [6.6 s]
# Iteration 43 fit: [6.4 s]: Recall = 0.0797, Jaccard score = 0.0449, loss = 0.0182, val_loss = 0.0000, eval: [6.6 s]
# Iteration 44 fit: [6.4 s]: Recall = 0.0839, Jaccard score = 0.0474, loss = 0.0169, val_loss = 0.0000, eval: [6.6 s]
# Iteration 45 fit: [6.4 s]: Recall = 0.0860, Jaccard score = 0.0486, loss = 0.0161, val_loss = 0.0000, eval: [6.6 s]
# Iteration 46 fit: [6.4 s]: Recall = 0.0907, Jaccard score = 0.0514, loss = 0.0153, val_loss = 0.0000, eval: [6.6 s]
# Iteration 47 fit: [6.4 s]: Recall = 0.0915, Jaccard score = 0.0519, loss = 0.0143, val_loss = 0.0000, eval: [6.6 s]
# Iteration 48 fit: [6.4 s]: Recall = 0.0917, Jaccard score = 0.0520, loss = 0.0138, val_loss = 0.0000, eval: [6.8 s]
# Iteration 49 fit: [6.4 s]: Recall = 0.0938, Jaccard score = 0.0533, loss = 0.0131, val_loss = 0.0000, eval: [6.7 s]
# Iteration 50 fit: [6.4 s]: Recall = 0.0962, Jaccard score = 0.0547, loss = 0.0122, val_loss = 0.0000, eval: [6.6 s]
# Iteration 51 fit: [6.4 s]: Recall = 0.0964, Jaccard score = 0.0549, loss = 0.0114, val_loss = 0.0000, eval: [6.6 s]
# Iteration 52 fit: [6.4 s]: Recall = 0.0998, Jaccard score = 0.0569, loss = 0.0113, val_loss = 0.0000, eval: [6.6 s]
# Iteration 53 fit: [6.4 s]: Recall = 0.0987, Jaccard score = 0.0562, loss = 0.0109, val_loss = 0.0000, eval: [6.6 s]
# Iteration 54 fit: [6.4 s]: Recall = 0.0989, Jaccard score = 0.0563, loss = 0.0102, val_loss = 0.0000, eval: [6.6 s]
# Iteration 55 fit: [6.4 s]: Recall = 0.1015, Jaccard score = 0.0579, loss = 0.0099, val_loss = 0.0000, eval: [6.6 s]
# Iteration 56 fit: [6.4 s]: Recall = 0.1008, Jaccard score = 0.0575, loss = 0.0094, val_loss = 0.0000, eval: [6.6 s]
# Iteration 57 fit: [6.4 s]: Recall = 0.1034, Jaccard score = 0.0591, loss = 0.0090, val_loss = 0.0000, eval: [6.6 s]
# Iteration 58 fit: [6.4 s]: Recall = 0.1046, Jaccard score = 0.0598, loss = 0.0086, val_loss = 0.0000, eval: [6.6 s]
# Iteration 59 fit: [6.4 s]: Recall = 0.1095, Jaccard score = 0.0628, loss = 0.0083, val_loss = 0.0000, eval: [6.6 s]
# Iteration 60 fit: [6.4 s]: Recall = 0.1108, Jaccard score = 0.0636, loss = 0.0080, val_loss = 0.0000, eval: [6.6 s]
# Iteration 61 fit: [6.4 s]: Recall = 0.1082, Jaccard score = 0.0620, loss = 0.0077, val_loss = 0.0000, eval: [6.6 s]
# Iteration 62 fit: [6.4 s]: Recall = 0.1112, Jaccard score = 0.0638, loss = 0.0074, val_loss = 0.0000, eval: [6.6 s]
# Iteration 63 fit: [6.4 s]: Recall = 0.1114, Jaccard score = 0.0639, loss = 0.0071, val_loss = 0.0000, eval: [6.6 s]
# Iteration 64 fit: [6.4 s]: Recall = 0.1135, Jaccard score = 0.0652, loss = 0.0070, val_loss = 0.0000, eval: [6.6 s]
# Iteration 65 fit: [6.4 s]: Recall = 0.1125, Jaccard score = 0.0646, loss = 0.0065, val_loss = 0.0000, eval: [6.6 s]
# Iteration 66 fit: [6.4 s]: Recall = 0.1129, Jaccard score = 0.0649, loss = 0.0063, val_loss = 0.0000, eval: [6.7 s]
# Iteration 67 fit: [6.4 s]: Recall = 0.1141, Jaccard score = 0.0656, loss = 0.0064, val_loss = 0.0000, eval: [6.6 s]
# Iteration 68 fit: [6.4 s]: Recall = 0.1146, Jaccard score = 0.0659, loss = 0.0061, val_loss = 0.0000, eval: [6.6 s]
# Iteration 69 fit: [6.4 s]: Recall = 0.1139, Jaccard score = 0.0654, loss = 0.0060, val_loss = 0.0000, eval: [6.6 s]
# Iteration 70 fit: [6.4 s]: Recall = 0.1148, Jaccard score = 0.0660, loss = 0.0056, val_loss = 0.0000, eval: [6.6 s]
# Iteration 71 fit: [6.4 s]: Recall = 0.1179, Jaccard score = 0.0679, loss = 0.0057, val_loss = 0.0000, eval: [6.6 s]
# Iteration 72 fit: [6.4 s]: Recall = 0.1184, Jaccard score = 0.0682, loss = 0.0053, val_loss = 0.0000, eval: [6.6 s]
# Iteration 73 fit: [6.4 s]: Recall = 0.1207, Jaccard score = 0.0696, loss = 0.0052, val_loss = 0.0000, eval: [6.8 s]
# Iteration 74 fit: [6.4 s]: Recall = 0.1215, Jaccard score = 0.0701, loss = 0.0050, val_loss = 0.0000, eval: [6.6 s]
# Iteration 75 fit: [6.4 s]: Recall = 0.1205, Jaccard score = 0.0695, loss = 0.0053, val_loss = 0.0000, eval: [6.6 s]
# Iteration 76 fit: [6.4 s]: Recall = 0.1222, Jaccard score = 0.0706, loss = 0.0049, val_loss = 0.0000, eval: [6.6 s]
# Iteration 77 fit: [6.4 s]: Recall = 0.1205, Jaccard score = 0.0695, loss = 0.0049, val_loss = 0.0000, eval: [6.6 s]
# Iteration 78 fit: [6.4 s]: Recall = 0.1224, Jaccard score = 0.0707, loss = 0.0047, val_loss = 0.0000, eval: [6.6 s]
# Iteration 79 fit: [6.4 s]: Recall = 0.1234, Jaccard score = 0.0713, loss = 0.0047, val_loss = 0.0000, eval: [6.6 s]
# Iteration 80 fit: [6.4 s]: Recall = 0.1245, Jaccard score = 0.0720, loss = 0.0044, val_loss = 0.0000, eval: [6.7 s]
# Iteration 81 fit: [6.4 s]: Recall = 0.1260, Jaccard score = 0.0729, loss = 0.0045, val_loss = 0.0000, eval: [6.6 s]
# Iteration 82 fit: [6.4 s]: Recall = 0.1260, Jaccard score = 0.0729, loss = 0.0042, val_loss = 0.0000, eval: [6.6 s]
# Iteration 83 fit: [6.4 s]: Recall = 0.1273, Jaccard score = 0.0738, loss = 0.0041, val_loss = 0.0000, eval: [6.6 s]
# Iteration 84 fit: [6.4 s]: Recall = 0.1281, Jaccard score = 0.0742, loss = 0.0041, val_loss = 0.0000, eval: [6.6 s]
# Iteration 85 fit: [6.4 s]: Recall = 0.1289, Jaccard score = 0.0747, loss = 0.0040, val_loss = 0.0000, eval: [6.6 s]
# Iteration 86 fit: [6.4 s]: Recall = 0.1310, Jaccard score = 0.0760, loss = 0.0039, val_loss = 0.0000, eval: [6.6 s]
# Iteration 87 fit: [6.4 s]: Recall = 0.1308, Jaccard score = 0.0759, loss = 0.0039, val_loss = 0.0000, eval: [6.6 s]
# Iteration 88 fit: [6.4 s]: Recall = 0.1327, Jaccard score = 0.0771, loss = 0.0038, val_loss = 0.0000, eval: [6.6 s]
# Iteration 89 fit: [6.4 s]: Recall = 0.1294, Jaccard score = 0.0751, loss = 0.0038, val_loss = 0.0000, eval: [6.6 s]
# Iteration 90 fit: [6.4 s]: Recall = 0.1308, Jaccard score = 0.0759, loss = 0.0037, val_loss = 0.0000, eval: [6.6 s]
# Iteration 91 fit: [6.4 s]: Recall = 0.1313, Jaccard score = 0.0762, loss = 0.0038, val_loss = 0.0000, eval: [6.6 s]
# Iteration 92 fit: [6.4 s]: Recall = 0.1315, Jaccard score = 0.0764, loss = 0.0034, val_loss = 0.0000, eval: [6.6 s]
# Iteration 93 fit: [6.4 s]: Recall = 0.1300, Jaccard score = 0.0754, loss = 0.0036, val_loss = 0.0000, eval: [6.6 s]
# Iteration 94 fit: [6.4 s]: Recall = 0.1292, Jaccard score = 0.0749, loss = 0.0035, val_loss = 0.0000, eval: [6.6 s]
# Iteration 95 fit: [6.4 s]: Recall = 0.1291, Jaccard score = 0.0748, loss = 0.0032, val_loss = 0.0000, eval: [6.6 s]
# Iteration 96 fit: [6.4 s]: Recall = 0.1327, Jaccard score = 0.0771, loss = 0.0032, val_loss = 0.0000, eval: [6.6 s]
# Iteration 97 fit: [6.4 s]: Recall = 0.1315, Jaccard score = 0.0764, loss = 0.0030, val_loss = 0.0000, eval: [6.6 s]
# Iteration 98 fit: [6.4 s]: Recall = 0.1351, Jaccard score = 0.0786, loss = 0.0032, val_loss = 0.0000, eval: [6.6 s]
# Iteration 99 fit: [6.4 s]: Recall = 0.1334, Jaccard score = 0.0775, loss = 0.0032, val_loss = 0.0000, eval: [6.6 s]
# End. Best Iteration 98:  Recall = 0.1351, Jaccard score = 0.0786. 
# The best NeuMF model has been saved to Pretrain/_GMF_72_[64,32,16,8]_1560848480.h5
