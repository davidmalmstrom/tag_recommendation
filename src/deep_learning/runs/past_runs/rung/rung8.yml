--nn_model: NeuMF
--is_tag: "1"
--eval_recall: "0"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "30"
--layers: "[1024,512,256,128,64,32,16,8]"
--reg_layers: "[0,0,0,0,0,0,0,0]"
--num_factors: "64"
--mf_pretrain: "Pretrain/_GMF_64_[64,32,16,8]_1560852290.h5"
--mlp_pretrain: "Pretrain/_MLP_8_[1024,512,256,128,64,32,16,8]_1560275278.h5"

# Launched by terminal.
# NeuMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=30, eval_recall=0, is_tag=1, layers='[1024,512,256,128,64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='Pretrain/_GMF_64_[64,32,16,8]_1560852290.h5', mlp_pretrain='Pretrain/_MLP_8_[1024,512,256,128,64,32,16,8]_1560275278.h5', nn_model='NeuMF', num_factors=64, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0,0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_64_[1024,512,256,128,64,32,16,8]_1560854244.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Load pretrained GMF (Pretrain/_GMF_64_[64,32,16,8]_1560852290.h5) and MLP (Pretrain/_MLP_8_[1024,512,256,128,64,32,16,8]_1560275278.h5) models done. 
# Init: HR = 0.9639, NDCG = 0.9472
# Iteration 0 fit: [31.3 s]: HR = 0.9767, NDCG = 0.9592, loss = 0.0593, val_loss = 0.0000, eval: [13.0 s]
# Iteration 1 fit: [30.2 s]: HR = 0.9695, NDCG = 0.9540, loss = 0.0410, val_loss = 0.0000, eval: [13.0 s]
# Iteration 2 fit: [30.2 s]: HR = 0.9701, NDCG = 0.9500, loss = 0.0342, val_loss = 0.0000, eval: [13.0 s]
# Iteration 3 fit: [30.1 s]: HR = 0.9623, NDCG = 0.9454, loss = 0.0309, val_loss = 0.0000, eval: [12.9 s]
# Iteration 4 fit: [30.3 s]: HR = 0.9590, NDCG = 0.9394, loss = 0.0273, val_loss = 0.0000, eval: [13.0 s]
# Iteration 5 fit: [30.2 s]: HR = 0.9517, NDCG = 0.9336, loss = 0.0254, val_loss = 0.0000, eval: [13.0 s]
# Iteration 6 fit: [30.1 s]: HR = 0.9504, NDCG = 0.9329, loss = 0.0224, val_loss = 0.0000, eval: [13.0 s]
# Iteration 7 fit: [30.2 s]: HR = 0.9499, NDCG = 0.9293, loss = 0.0207, val_loss = 0.0000, eval: [13.1 s]
# Iteration 8 fit: [30.2 s]: HR = 0.9477, NDCG = 0.9280, loss = 0.0193, val_loss = 0.0000, eval: [12.9 s]
# Iteration 9 fit: [30.1 s]: HR = 0.9484, NDCG = 0.9272, loss = 0.0179, val_loss = 0.0000, eval: [13.0 s]
# Iteration 10 fit: [30.1 s]: HR = 0.9483, NDCG = 0.9211, loss = 0.0162, val_loss = 0.0000, eval: [12.9 s]
# Iteration 11 fit: [30.2 s]: HR = 0.9441, NDCG = 0.9216, loss = 0.0159, val_loss = 0.0000, eval: [13.0 s]
# Iteration 12 fit: [30.2 s]: HR = 0.9425, NDCG = 0.9207, loss = 0.0147, val_loss = 0.0000, eval: [13.0 s]
# Iteration 13 fit: [30.2 s]: HR = 0.9410, NDCG = 0.9204, loss = 0.0136, val_loss = 0.0000, eval: [12.9 s]
# Iteration 14 fit: [30.1 s]: HR = 0.9426, NDCG = 0.9172, loss = 0.0136, val_loss = 0.0000, eval: [13.1 s]
# Iteration 15 fit: [30.1 s]: HR = 0.9417, NDCG = 0.9149, loss = 0.0125, val_loss = 0.0000, eval: [13.0 s]
# Iteration 16 fit: [30.1 s]: HR = 0.9415, NDCG = 0.9126, loss = 0.0120, val_loss = 0.0000, eval: [12.9 s]
# Iteration 17 fit: [30.2 s]: HR = 0.9399, NDCG = 0.9118, loss = 0.0117, val_loss = 0.0000, eval: [12.9 s]
# Iteration 18 fit: [30.1 s]: HR = 0.9381, NDCG = 0.9096, loss = 0.0109, val_loss = 0.0000, eval: [12.9 s]
# Iteration 19 fit: [30.2 s]: HR = 0.9371, NDCG = 0.9053, loss = 0.0102, val_loss = 0.0000, eval: [13.0 s]
# Iteration 20 fit: [30.2 s]: HR = 0.9332, NDCG = 0.9036, loss = 0.0089, val_loss = 0.0000, eval: [12.9 s]
# Iteration 21 fit: [30.2 s]: HR = 0.9328, NDCG = 0.9015, loss = 0.0090, val_loss = 0.0000, eval: [13.0 s]
# Iteration 22 fit: [30.2 s]: HR = 0.9305, NDCG = 0.9010, loss = 0.0084, val_loss = 0.0000, eval: [13.1 s]
# Iteration 23 fit: [30.1 s]: HR = 0.9319, NDCG = 0.8988, loss = 0.0082, val_loss = 0.0000, eval: [12.9 s]
# Iteration 24 fit: [30.2 s]: HR = 0.9329, NDCG = 0.8963, loss = 0.0082, val_loss = 0.0000, eval: [12.9 s]
# Iteration 25 fit: [30.2 s]: HR = 0.9325, NDCG = 0.8962, loss = 0.0075, val_loss = 0.0000, eval: [12.9 s]
# Iteration 26 fit: [30.1 s]: HR = 0.9303, NDCG = 0.8925, loss = 0.0068, val_loss = 0.0000, eval: [13.0 s]
# Iteration 27 fit: [30.1 s]: HR = 0.9319, NDCG = 0.8938, loss = 0.0070, val_loss = 0.0000, eval: [13.0 s]
# Iteration 28 fit: [30.2 s]: HR = 0.9285, NDCG = 0.8910, loss = 0.0064, val_loss = 0.0000, eval: [13.0 s]
# Iteration 29 fit: [30.1 s]: HR = 0.9284, NDCG = 0.8878, loss = 0.0063, val_loss = 0.0000, eval: [13.1 s]
# End. Best Iteration 0:  HR = 0.9767, NDCG = 0.9592. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_64_[1024,512,256,128,64,32,16,8]_1560854244.h5
