--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "70"
--layers: "[256,150,128,100,64]"
--reg_layers: "[0,0,0,0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=70, eval_recall=1, is_tag=1, layers='[256,150,128,100,64]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[256,150,128,100,64]_1560864346.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0017, Jaccard score = 0.0009
# Iteration 0 fit: [11.0 s]: Recall = 0.0239, Jaccard score = 0.0131, loss = 0.4526, val_loss = 0.0000, eval: [9.0 s]
# Iteration 1 fit: [10.2 s]: Recall = 0.0260, Jaccard score = 0.0142, loss = 0.4406, val_loss = 0.0000, eval: [9.3 s]
# Iteration 2 fit: [10.2 s]: Recall = 0.0273, Jaccard score = 0.0150, loss = 0.4361, val_loss = 0.0000, eval: [9.1 s]
# Iteration 3 fit: [10.2 s]: Recall = 0.0283, Jaccard score = 0.0155, loss = 0.4270, val_loss = 0.0000, eval: [8.7 s]
# Iteration 4 fit: [10.2 s]: Recall = 0.0309, Jaccard score = 0.0170, loss = 0.4116, val_loss = 0.0000, eval: [8.8 s]
# Iteration 5 fit: [10.2 s]: Recall = 0.0290, Jaccard score = 0.0159, loss = 0.3891, val_loss = 0.0000, eval: [8.7 s]
# Iteration 6 fit: [10.2 s]: Recall = 0.0344, Jaccard score = 0.0189, loss = 0.3650, val_loss = 0.0000, eval: [8.7 s]
# Iteration 7 fit: [10.2 s]: Recall = 0.0321, Jaccard score = 0.0176, loss = 0.3396, val_loss = 0.0000, eval: [8.9 s]
# Iteration 8 fit: [10.2 s]: Recall = 0.0300, Jaccard score = 0.0164, loss = 0.3161, val_loss = 0.0000, eval: [8.9 s]
# Iteration 9 fit: [10.2 s]: Recall = 0.0294, Jaccard score = 0.0161, loss = 0.2930, val_loss = 0.0000, eval: [8.7 s]
# Iteration 10 fit: [10.2 s]: Recall = 0.0273, Jaccard score = 0.0150, loss = 0.2710, val_loss = 0.0000, eval: [8.8 s]
# Iteration 11 fit: [10.2 s]: Recall = 0.0275, Jaccard score = 0.0151, loss = 0.2504, val_loss = 0.0000, eval: [9.0 s]
# Iteration 12 fit: [10.2 s]: Recall = 0.0319, Jaccard score = 0.0175, loss = 0.2311, val_loss = 0.0000, eval: [8.5 s]
# Iteration 13 fit: [10.2 s]: Recall = 0.0311, Jaccard score = 0.0171, loss = 0.2144, val_loss = 0.0000, eval: [8.5 s]
# Iteration 14 fit: [10.2 s]: Recall = 0.0307, Jaccard score = 0.0169, loss = 0.1988, val_loss = 0.0000, eval: [8.9 s]
# Iteration 15 fit: [10.2 s]: Recall = 0.0313, Jaccard score = 0.0172, loss = 0.1856, val_loss = 0.0000, eval: [8.7 s]
# Iteration 16 fit: [10.2 s]: Recall = 0.0306, Jaccard score = 0.0168, loss = 0.1734, val_loss = 0.0000, eval: [8.9 s]
# Iteration 17 fit: [10.2 s]: Recall = 0.0321, Jaccard score = 0.0176, loss = 0.1623, val_loss = 0.0000, eval: [8.8 s]
# Iteration 18 fit: [10.2 s]: Recall = 0.0319, Jaccard score = 0.0175, loss = 0.1537, val_loss = 0.0000, eval: [8.5 s]
# Iteration 19 fit: [10.2 s]: Recall = 0.0330, Jaccard score = 0.0181, loss = 0.1450, val_loss = 0.0000, eval: [9.0 s]
# Iteration 20 fit: [10.2 s]: Recall = 0.0315, Jaccard score = 0.0173, loss = 0.1377, val_loss = 0.0000, eval: [9.0 s]
# Iteration 21 fit: [10.2 s]: Recall = 0.0332, Jaccard score = 0.0182, loss = 0.1295, val_loss = 0.0000, eval: [8.5 s]
# Iteration 22 fit: [10.2 s]: Recall = 0.0372, Jaccard score = 0.0205, loss = 0.1246, val_loss = 0.0000, eval: [9.0 s]
# Iteration 23 fit: [10.2 s]: Recall = 0.0361, Jaccard score = 0.0198, loss = 0.1188, val_loss = 0.0000, eval: [8.4 s]
# Iteration 24 fit: [10.2 s]: Recall = 0.0338, Jaccard score = 0.0186, loss = 0.1139, val_loss = 0.0000, eval: [8.4 s]
# Iteration 25 fit: [10.2 s]: Recall = 0.0370, Jaccard score = 0.0204, loss = 0.1094, val_loss = 0.0000, eval: [8.9 s]
# Iteration 26 fit: [10.2 s]: Recall = 0.0357, Jaccard score = 0.0196, loss = 0.1044, val_loss = 0.0000, eval: [8.6 s]
# Iteration 27 fit: [10.2 s]: Recall = 0.0397, Jaccard score = 0.0219, loss = 0.1000, val_loss = 0.0000, eval: [8.5 s]
# Iteration 28 fit: [10.2 s]: Recall = 0.0380, Jaccard score = 0.0209, loss = 0.0973, val_loss = 0.0000, eval: [8.5 s]
# Iteration 29 fit: [10.2 s]: Recall = 0.0387, Jaccard score = 0.0213, loss = 0.0936, val_loss = 0.0000, eval: [8.4 s]
# Iteration 30 fit: [10.2 s]: Recall = 0.0380, Jaccard score = 0.0209, loss = 0.0903, val_loss = 0.0000, eval: [9.2 s]
# Iteration 31 fit: [10.2 s]: Recall = 0.0399, Jaccard score = 0.0220, loss = 0.0863, val_loss = 0.0000, eval: [8.6 s]
# Iteration 32 fit: [10.2 s]: Recall = 0.0376, Jaccard score = 0.0207, loss = 0.0828, val_loss = 0.0000, eval: [8.6 s]
# Iteration 33 fit: [10.2 s]: Recall = 0.0400, Jaccard score = 0.0221, loss = 0.0808, val_loss = 0.0000, eval: [9.0 s]
# Iteration 34 fit: [10.2 s]: Recall = 0.0397, Jaccard score = 0.0219, loss = 0.0780, val_loss = 0.0000, eval: [9.2 s]
# Iteration 35 fit: [10.2 s]: Recall = 0.0431, Jaccard score = 0.0238, loss = 0.0756, val_loss = 0.0000, eval: [8.4 s]
# Iteration 36 fit: [10.2 s]: Recall = 0.0404, Jaccard score = 0.0223, loss = 0.0730, val_loss = 0.0000, eval: [9.2 s]
# Iteration 37 fit: [10.2 s]: Recall = 0.0380, Jaccard score = 0.0209, loss = 0.0706, val_loss = 0.0000, eval: [8.9 s]
# Iteration 38 fit: [10.2 s]: Recall = 0.0427, Jaccard score = 0.0236, loss = 0.0687, val_loss = 0.0000, eval: [8.9 s]
# Iteration 39 fit: [10.2 s]: Recall = 0.0414, Jaccard score = 0.0228, loss = 0.0666, val_loss = 0.0000, eval: [8.8 s]
# Iteration 40 fit: [10.2 s]: Recall = 0.0433, Jaccard score = 0.0239, loss = 0.0646, val_loss = 0.0000, eval: [8.8 s]
# Iteration 41 fit: [10.2 s]: Recall = 0.0438, Jaccard score = 0.0242, loss = 0.0619, val_loss = 0.0000, eval: [8.8 s]
# Iteration 42 fit: [10.2 s]: Recall = 0.0429, Jaccard score = 0.0237, loss = 0.0615, val_loss = 0.0000, eval: [9.1 s]
# Iteration 43 fit: [10.2 s]: Recall = 0.0435, Jaccard score = 0.0240, loss = 0.0594, val_loss = 0.0000, eval: [9.2 s]
# Iteration 44 fit: [10.2 s]: Recall = 0.0452, Jaccard score = 0.0250, loss = 0.0576, val_loss = 0.0000, eval: [8.8 s]
# Iteration 45 fit: [10.2 s]: Recall = 0.0418, Jaccard score = 0.0230, loss = 0.0566, val_loss = 0.0000, eval: [8.7 s]
# Iteration 46 fit: [10.2 s]: Recall = 0.0463, Jaccard score = 0.0256, loss = 0.0542, val_loss = 0.0000, eval: [9.0 s]
# Iteration 47 fit: [10.2 s]: Recall = 0.0471, Jaccard score = 0.0260, loss = 0.0527, val_loss = 0.0000, eval: [8.6 s]
# Iteration 48 fit: [10.2 s]: Recall = 0.0440, Jaccard score = 0.0243, loss = 0.0511, val_loss = 0.0000, eval: [9.0 s]
# Iteration 49 fit: [10.2 s]: Recall = 0.0455, Jaccard score = 0.0252, loss = 0.0500, val_loss = 0.0000, eval: [8.8 s]
# Iteration 50 fit: [10.2 s]: Recall = 0.0476, Jaccard score = 0.0264, loss = 0.0490, val_loss = 0.0000, eval: [9.1 s]
# Iteration 51 fit: [10.2 s]: Recall = 0.0459, Jaccard score = 0.0254, loss = 0.0478, val_loss = 0.0000, eval: [9.1 s]
# Iteration 52 fit: [10.2 s]: Recall = 0.0410, Jaccard score = 0.0226, loss = 0.0465, val_loss = 0.0000, eval: [9.1 s]
# Iteration 53 fit: [10.2 s]: Recall = 0.0448, Jaccard score = 0.0248, loss = 0.0459, val_loss = 0.0000, eval: [8.8 s]
# Iteration 54 fit: [10.2 s]: Recall = 0.0474, Jaccard score = 0.0263, loss = 0.0442, val_loss = 0.0000, eval: [8.5 s]
# Iteration 55 fit: [10.2 s]: Recall = 0.0459, Jaccard score = 0.0254, loss = 0.0433, val_loss = 0.0000, eval: [9.1 s]
# Iteration 56 fit: [10.2 s]: Recall = 0.0429, Jaccard score = 0.0237, loss = 0.0422, val_loss = 0.0000, eval: [8.6 s]
# Iteration 57 fit: [10.2 s]: Recall = 0.0490, Jaccard score = 0.0271, loss = 0.0414, val_loss = 0.0000, eval: [9.1 s]
# Iteration 58 fit: [10.2 s]: Recall = 0.0473, Jaccard score = 0.0262, loss = 0.0400, val_loss = 0.0000, eval: [8.6 s]
# Iteration 59 fit: [10.2 s]: Recall = 0.0457, Jaccard score = 0.0253, loss = 0.0396, val_loss = 0.0000, eval: [9.1 s]
# Iteration 60 fit: [10.2 s]: Recall = 0.0501, Jaccard score = 0.0278, loss = 0.0389, val_loss = 0.0000, eval: [8.7 s]
# Iteration 61 fit: [10.2 s]: Recall = 0.0490, Jaccard score = 0.0271, loss = 0.0374, val_loss = 0.0000, eval: [8.9 s]
# Iteration 62 fit: [10.2 s]: Recall = 0.0454, Jaccard score = 0.0251, loss = 0.0372, val_loss = 0.0000, eval: [8.5 s]
# Iteration 63 fit: [10.2 s]: Recall = 0.0486, Jaccard score = 0.0269, loss = 0.0361, val_loss = 0.0000, eval: [8.7 s]
# Iteration 64 fit: [10.2 s]: Recall = 0.0478, Jaccard score = 0.0265, loss = 0.0355, val_loss = 0.0000, eval: [9.1 s]
# Iteration 65 fit: [10.2 s]: Recall = 0.0492, Jaccard score = 0.0272, loss = 0.0343, val_loss = 0.0000, eval: [9.0 s]
# Iteration 66 fit: [10.2 s]: Recall = 0.0474, Jaccard score = 0.0263, loss = 0.0341, val_loss = 0.0000, eval: [9.1 s]
# Iteration 67 fit: [10.2 s]: Recall = 0.0543, Jaccard score = 0.0302, loss = 0.0337, val_loss = 0.0000, eval: [9.0 s]
# Iteration 68 fit: [10.2 s]: Recall = 0.0507, Jaccard score = 0.0281, loss = 0.0329, val_loss = 0.0000, eval: [8.8 s]
# Iteration 69 fit: [10.2 s]: Recall = 0.0516, Jaccard score = 0.0286, loss = 0.0326, val_loss = 0.0000, eval: [8.5 s]
# End. Best Iteration 67:  Recall = 0.0543, Jaccard score = 0.0302. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,150,128,100,64]_1560864346.h5
