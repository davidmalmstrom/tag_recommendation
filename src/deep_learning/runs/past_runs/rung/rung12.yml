--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "70"
--layers: "[256,128,128,64]"
--reg_layers: "[0,0,0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=70, eval_recall=1, is_tag=1, layers='[256,128,128,64]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[256,128,128,64]_1560861953.h5
# Load data done [2.6 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0030, Jaccard score = 0.0016
# Iteration 0 fit: [10.2 s]: Recall = 0.0243, Jaccard score = 0.0133, loss = 0.4529, val_loss = 0.0000, eval: [7.5 s]
# Iteration 1 fit: [9.7 s]: Recall = 0.0239, Jaccard score = 0.0131, loss = 0.4405, val_loss = 0.0000, eval: [7.5 s]
# Iteration 2 fit: [9.7 s]: Recall = 0.0260, Jaccard score = 0.0142, loss = 0.4366, val_loss = 0.0000, eval: [8.0 s]
# Iteration 3 fit: [9.7 s]: Recall = 0.0260, Jaccard score = 0.0142, loss = 0.4282, val_loss = 0.0000, eval: [7.5 s]
# Iteration 4 fit: [9.7 s]: Recall = 0.0268, Jaccard score = 0.0146, loss = 0.4134, val_loss = 0.0000, eval: [7.5 s]
# Iteration 5 fit: [9.7 s]: Recall = 0.0266, Jaccard score = 0.0145, loss = 0.3944, val_loss = 0.0000, eval: [7.7 s]
# Iteration 6 fit: [9.7 s]: Recall = 0.0288, Jaccard score = 0.0158, loss = 0.3708, val_loss = 0.0000, eval: [7.8 s]
# Iteration 7 fit: [9.7 s]: Recall = 0.0323, Jaccard score = 0.0177, loss = 0.3465, val_loss = 0.0000, eval: [7.5 s]
# Iteration 8 fit: [9.7 s]: Recall = 0.0340, Jaccard score = 0.0187, loss = 0.3229, val_loss = 0.0000, eval: [7.5 s]
# Iteration 9 fit: [9.7 s]: Recall = 0.0328, Jaccard score = 0.0180, loss = 0.3002, val_loss = 0.0000, eval: [7.5 s]
# Iteration 10 fit: [9.7 s]: Recall = 0.0332, Jaccard score = 0.0182, loss = 0.2782, val_loss = 0.0000, eval: [7.5 s]
# Iteration 11 fit: [9.7 s]: Recall = 0.0302, Jaccard score = 0.0165, loss = 0.2585, val_loss = 0.0000, eval: [7.5 s]
# Iteration 12 fit: [9.7 s]: Recall = 0.0326, Jaccard score = 0.0179, loss = 0.2395, val_loss = 0.0000, eval: [7.5 s]
# Iteration 13 fit: [9.7 s]: Recall = 0.0319, Jaccard score = 0.0175, loss = 0.2233, val_loss = 0.0000, eval: [8.2 s]
# Iteration 14 fit: [9.7 s]: Recall = 0.0344, Jaccard score = 0.0189, loss = 0.2080, val_loss = 0.0000, eval: [7.5 s]
# Iteration 15 fit: [9.7 s]: Recall = 0.0332, Jaccard score = 0.0182, loss = 0.1941, val_loss = 0.0000, eval: [7.5 s]
# Iteration 16 fit: [9.7 s]: Recall = 0.0355, Jaccard score = 0.0195, loss = 0.1814, val_loss = 0.0000, eval: [7.5 s]
# Iteration 17 fit: [9.7 s]: Recall = 0.0361, Jaccard score = 0.0198, loss = 0.1706, val_loss = 0.0000, eval: [7.8 s]
# Iteration 18 fit: [9.8 s]: Recall = 0.0298, Jaccard score = 0.0163, loss = 0.1608, val_loss = 0.0000, eval: [7.9 s]
# Iteration 19 fit: [9.7 s]: Recall = 0.0321, Jaccard score = 0.0176, loss = 0.1521, val_loss = 0.0000, eval: [8.0 s]
# Iteration 20 fit: [9.7 s]: Recall = 0.0319, Jaccard score = 0.0175, loss = 0.1435, val_loss = 0.0000, eval: [7.6 s]
# Iteration 21 fit: [9.7 s]: Recall = 0.0328, Jaccard score = 0.0180, loss = 0.1368, val_loss = 0.0000, eval: [7.5 s]
# Iteration 22 fit: [9.7 s]: Recall = 0.0351, Jaccard score = 0.0193, loss = 0.1308, val_loss = 0.0000, eval: [7.5 s]
# Iteration 23 fit: [9.7 s]: Recall = 0.0345, Jaccard score = 0.0190, loss = 0.1244, val_loss = 0.0000, eval: [7.7 s]
# Iteration 24 fit: [9.7 s]: Recall = 0.0376, Jaccard score = 0.0207, loss = 0.1188, val_loss = 0.0000, eval: [7.6 s]
# Iteration 25 fit: [9.7 s]: Recall = 0.0357, Jaccard score = 0.0196, loss = 0.1137, val_loss = 0.0000, eval: [7.5 s]
# Iteration 26 fit: [9.7 s]: Recall = 0.0351, Jaccard score = 0.0193, loss = 0.1091, val_loss = 0.0000, eval: [8.2 s]
# Iteration 27 fit: [9.7 s]: Recall = 0.0351, Jaccard score = 0.0193, loss = 0.1042, val_loss = 0.0000, eval: [7.6 s]
# Iteration 28 fit: [9.7 s]: Recall = 0.0370, Jaccard score = 0.0204, loss = 0.1009, val_loss = 0.0000, eval: [7.5 s]
# Iteration 29 fit: [9.7 s]: Recall = 0.0344, Jaccard score = 0.0189, loss = 0.0976, val_loss = 0.0000, eval: [7.9 s]
# Iteration 30 fit: [9.7 s]: Recall = 0.0370, Jaccard score = 0.0204, loss = 0.0928, val_loss = 0.0000, eval: [7.7 s]
# Iteration 31 fit: [9.7 s]: Recall = 0.0380, Jaccard score = 0.0209, loss = 0.0909, val_loss = 0.0000, eval: [7.6 s]
# Iteration 32 fit: [9.7 s]: Recall = 0.0347, Jaccard score = 0.0191, loss = 0.0869, val_loss = 0.0000, eval: [7.5 s]
# Iteration 33 fit: [9.7 s]: Recall = 0.0366, Jaccard score = 0.0202, loss = 0.0845, val_loss = 0.0000, eval: [7.6 s]
# Iteration 34 fit: [9.7 s]: Recall = 0.0376, Jaccard score = 0.0207, loss = 0.0818, val_loss = 0.0000, eval: [7.6 s]
# Iteration 35 fit: [9.6 s]: Recall = 0.0399, Jaccard score = 0.0220, loss = 0.0787, val_loss = 0.0000, eval: [7.5 s]
# Iteration 36 fit: [9.7 s]: Recall = 0.0370, Jaccard score = 0.0204, loss = 0.0758, val_loss = 0.0000, eval: [7.8 s]
# Iteration 37 fit: [9.7 s]: Recall = 0.0421, Jaccard score = 0.0233, loss = 0.0742, val_loss = 0.0000, eval: [7.5 s]
# Iteration 38 fit: [9.7 s]: Recall = 0.0378, Jaccard score = 0.0208, loss = 0.0716, val_loss = 0.0000, eval: [7.7 s]
# Iteration 39 fit: [9.7 s]: Recall = 0.0385, Jaccard score = 0.0212, loss = 0.0699, val_loss = 0.0000, eval: [7.7 s]
# Iteration 40 fit: [9.7 s]: Recall = 0.0385, Jaccard score = 0.0212, loss = 0.0679, val_loss = 0.0000, eval: [7.5 s]
# Iteration 41 fit: [9.7 s]: Recall = 0.0399, Jaccard score = 0.0220, loss = 0.0654, val_loss = 0.0000, eval: [7.9 s]
# Iteration 42 fit: [9.7 s]: Recall = 0.0393, Jaccard score = 0.0216, loss = 0.0639, val_loss = 0.0000, eval: [7.7 s]
# Iteration 43 fit: [9.7 s]: Recall = 0.0387, Jaccard score = 0.0213, loss = 0.0625, val_loss = 0.0000, eval: [7.9 s]
# Iteration 44 fit: [9.7 s]: Recall = 0.0423, Jaccard score = 0.0234, loss = 0.0600, val_loss = 0.0000, eval: [7.5 s]
# Iteration 45 fit: [9.7 s]: Recall = 0.0381, Jaccard score = 0.0210, loss = 0.0585, val_loss = 0.0000, eval: [7.5 s]
# Iteration 46 fit: [9.7 s]: Recall = 0.0408, Jaccard score = 0.0225, loss = 0.0569, val_loss = 0.0000, eval: [7.5 s]
# Iteration 47 fit: [9.7 s]: Recall = 0.0406, Jaccard score = 0.0224, loss = 0.0562, val_loss = 0.0000, eval: [8.2 s]
# Iteration 48 fit: [9.7 s]: Recall = 0.0410, Jaccard score = 0.0226, loss = 0.0547, val_loss = 0.0000, eval: [7.5 s]
# Iteration 49 fit: [9.7 s]: Recall = 0.0364, Jaccard score = 0.0200, loss = 0.0535, val_loss = 0.0000, eval: [7.5 s]
# Iteration 50 fit: [9.7 s]: Recall = 0.0368, Jaccard score = 0.0203, loss = 0.0521, val_loss = 0.0000, eval: [7.5 s]
# Iteration 51 fit: [9.7 s]: Recall = 0.0385, Jaccard score = 0.0212, loss = 0.0509, val_loss = 0.0000, eval: [7.5 s]
# Iteration 52 fit: [9.7 s]: Recall = 0.0437, Jaccard score = 0.0241, loss = 0.0493, val_loss = 0.0000, eval: [8.1 s]
# Iteration 53 fit: [9.7 s]: Recall = 0.0429, Jaccard score = 0.0237, loss = 0.0480, val_loss = 0.0000, eval: [7.6 s]
# Iteration 54 fit: [9.7 s]: Recall = 0.0431, Jaccard score = 0.0238, loss = 0.0475, val_loss = 0.0000, eval: [7.7 s]
# Iteration 55 fit: [9.7 s]: Recall = 0.0423, Jaccard score = 0.0234, loss = 0.0463, val_loss = 0.0000, eval: [7.8 s]
# Iteration 56 fit: [9.7 s]: Recall = 0.0437, Jaccard score = 0.0241, loss = 0.0458, val_loss = 0.0000, eval: [8.1 s]
# Iteration 57 fit: [9.7 s]: Recall = 0.0427, Jaccard score = 0.0236, loss = 0.0441, val_loss = 0.0000, eval: [7.5 s]
# Iteration 58 fit: [9.7 s]: Recall = 0.0406, Jaccard score = 0.0224, loss = 0.0435, val_loss = 0.0000, eval: [8.9 s]
# Iteration 59 fit: [10.7 s]: Recall = 0.0416, Jaccard score = 0.0229, loss = 0.0422, val_loss = 0.0000, eval: [7.7 s]
# Iteration 60 fit: [9.7 s]: Recall = 0.0429, Jaccard score = 0.0237, loss = 0.0416, val_loss = 0.0000, eval: [7.7 s]
# Iteration 61 fit: [9.7 s]: Recall = 0.0437, Jaccard score = 0.0241, loss = 0.0412, val_loss = 0.0000, eval: [7.5 s]
# Iteration 62 fit: [9.7 s]: Recall = 0.0408, Jaccard score = 0.0225, loss = 0.0401, val_loss = 0.0000, eval: [7.5 s]
# Iteration 63 fit: [9.7 s]: Recall = 0.0416, Jaccard score = 0.0229, loss = 0.0393, val_loss = 0.0000, eval: [7.5 s]
# Iteration 64 fit: [9.7 s]: Recall = 0.0435, Jaccard score = 0.0240, loss = 0.0386, val_loss = 0.0000, eval: [7.5 s]
# Iteration 65 fit: [9.7 s]: Recall = 0.0385, Jaccard score = 0.0212, loss = 0.0377, val_loss = 0.0000, eval: [7.5 s]
# Iteration 66 fit: [9.7 s]: Recall = 0.0404, Jaccard score = 0.0223, loss = 0.0366, val_loss = 0.0000, eval: [7.5 s]
# Iteration 67 fit: [9.7 s]: Recall = 0.0410, Jaccard score = 0.0226, loss = 0.0361, val_loss = 0.0000, eval: [8.0 s]
# Iteration 68 fit: [9.7 s]: Recall = 0.0427, Jaccard score = 0.0236, loss = 0.0355, val_loss = 0.0000, eval: [7.5 s]
# Iteration 69 fit: [9.7 s]: Recall = 0.0438, Jaccard score = 0.0242, loss = 0.0355, val_loss = 0.0000, eval: [7.9 s]
# End. Best Iteration 69:  Recall = 0.0438, Jaccard score = 0.0242. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,128,128,64]_1560861953.h5
