--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "100"
--num_factors: "100"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=100, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_100_[64,32,16,8]_1560847081.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0025, Jaccard score = 0.0013
# Iteration 0 fit: [7.8 s]: Recall = 0.0019, Jaccard score = 0.0010, loss = 0.5471, val_loss = 0.0000, eval: [6.4 s]
# Iteration 1 fit: [7.4 s]: Recall = 0.0027, Jaccard score = 0.0014, loss = 0.5009, val_loss = 0.0000, eval: [6.4 s]
# Iteration 2 fit: [7.4 s]: Recall = 0.0038, Jaccard score = 0.0021, loss = 0.5000, val_loss = 0.0000, eval: [6.4 s]
# Iteration 3 fit: [7.4 s]: Recall = 0.0044, Jaccard score = 0.0024, loss = 0.4965, val_loss = 0.0000, eval: [6.5 s]
# Iteration 4 fit: [7.4 s]: Recall = 0.0049, Jaccard score = 0.0027, loss = 0.4887, val_loss = 0.0000, eval: [6.4 s]
# Iteration 5 fit: [7.4 s]: Recall = 0.0049, Jaccard score = 0.0027, loss = 0.4749, val_loss = 0.0000, eval: [6.4 s]
# Iteration 6 fit: [7.5 s]: Recall = 0.0061, Jaccard score = 0.0033, loss = 0.4550, val_loss = 0.0000, eval: [6.4 s]
# Iteration 7 fit: [7.5 s]: Recall = 0.0084, Jaccard score = 0.0045, loss = 0.4285, val_loss = 0.0000, eval: [6.4 s]
# Iteration 8 fit: [7.4 s]: Recall = 0.0110, Jaccard score = 0.0060, loss = 0.3974, val_loss = 0.0000, eval: [6.4 s]
# Iteration 9 fit: [7.5 s]: Recall = 0.0135, Jaccard score = 0.0073, loss = 0.3635, val_loss = 0.0000, eval: [6.4 s]
# Iteration 10 fit: [7.4 s]: Recall = 0.0159, Jaccard score = 0.0087, loss = 0.3287, val_loss = 0.0000, eval: [6.4 s]
# Iteration 11 fit: [7.4 s]: Recall = 0.0186, Jaccard score = 0.0101, loss = 0.2948, val_loss = 0.0000, eval: [6.4 s]
# Iteration 12 fit: [7.4 s]: Recall = 0.0213, Jaccard score = 0.0116, loss = 0.2628, val_loss = 0.0000, eval: [6.4 s]
# Iteration 13 fit: [7.4 s]: Recall = 0.0235, Jaccard score = 0.0129, loss = 0.2329, val_loss = 0.0000, eval: [6.4 s]
# Iteration 14 fit: [7.4 s]: Recall = 0.0239, Jaccard score = 0.0131, loss = 0.2065, val_loss = 0.0000, eval: [6.5 s]
# Iteration 15 fit: [7.4 s]: Recall = 0.0264, Jaccard score = 0.0144, loss = 0.1827, val_loss = 0.0000, eval: [6.5 s]
# Iteration 16 fit: [7.4 s]: Recall = 0.0287, Jaccard score = 0.0157, loss = 0.1596, val_loss = 0.0000, eval: [6.4 s]
# Iteration 17 fit: [7.4 s]: Recall = 0.0288, Jaccard score = 0.0158, loss = 0.1401, val_loss = 0.0000, eval: [6.4 s]
# Iteration 18 fit: [7.4 s]: Recall = 0.0307, Jaccard score = 0.0169, loss = 0.1212, val_loss = 0.0000, eval: [6.4 s]
# Iteration 19 fit: [7.4 s]: Recall = 0.0317, Jaccard score = 0.0174, loss = 0.1065, val_loss = 0.0000, eval: [6.4 s]
# Iteration 20 fit: [7.4 s]: Recall = 0.0323, Jaccard score = 0.0177, loss = 0.0918, val_loss = 0.0000, eval: [6.4 s]
# Iteration 21 fit: [7.4 s]: Recall = 0.0357, Jaccard score = 0.0196, loss = 0.0791, val_loss = 0.0000, eval: [6.6 s]
# Iteration 22 fit: [7.4 s]: Recall = 0.0349, Jaccard score = 0.0192, loss = 0.0681, val_loss = 0.0000, eval: [6.4 s]
# Iteration 23 fit: [7.4 s]: Recall = 0.0393, Jaccard score = 0.0216, loss = 0.0595, val_loss = 0.0000, eval: [6.5 s]
# Iteration 24 fit: [7.4 s]: Recall = 0.0406, Jaccard score = 0.0224, loss = 0.0524, val_loss = 0.0000, eval: [6.4 s]
# Iteration 25 fit: [7.5 s]: Recall = 0.0448, Jaccard score = 0.0248, loss = 0.0448, val_loss = 0.0000, eval: [6.4 s]
# Iteration 26 fit: [7.4 s]: Recall = 0.0455, Jaccard score = 0.0252, loss = 0.0399, val_loss = 0.0000, eval: [6.4 s]
# Iteration 27 fit: [7.4 s]: Recall = 0.0474, Jaccard score = 0.0263, loss = 0.0349, val_loss = 0.0000, eval: [6.4 s]
# Iteration 28 fit: [7.4 s]: Recall = 0.0488, Jaccard score = 0.0270, loss = 0.0307, val_loss = 0.0000, eval: [6.4 s]
# Iteration 29 fit: [7.4 s]: Recall = 0.0524, Jaccard score = 0.0291, loss = 0.0277, val_loss = 0.0000, eval: [6.4 s]
# Iteration 30 fit: [7.4 s]: Recall = 0.0528, Jaccard score = 0.0293, loss = 0.0241, val_loss = 0.0000, eval: [6.4 s]
# Iteration 31 fit: [7.4 s]: Recall = 0.0556, Jaccard score = 0.0309, loss = 0.0215, val_loss = 0.0000, eval: [6.4 s]
# Iteration 32 fit: [7.4 s]: Recall = 0.0573, Jaccard score = 0.0319, loss = 0.0192, val_loss = 0.0000, eval: [6.4 s]
# Iteration 33 fit: [7.4 s]: Recall = 0.0598, Jaccard score = 0.0333, loss = 0.0175, val_loss = 0.0000, eval: [6.4 s]
# Iteration 34 fit: [7.4 s]: Recall = 0.0638, Jaccard score = 0.0356, loss = 0.0156, val_loss = 0.0000, eval: [6.4 s]
# Iteration 35 fit: [7.4 s]: Recall = 0.0634, Jaccard score = 0.0354, loss = 0.0141, val_loss = 0.0000, eval: [6.4 s]
# Iteration 36 fit: [7.4 s]: Recall = 0.0660, Jaccard score = 0.0369, loss = 0.0133, val_loss = 0.0000, eval: [6.4 s]
# Iteration 37 fit: [7.4 s]: Recall = 0.0695, Jaccard score = 0.0389, loss = 0.0120, val_loss = 0.0000, eval: [6.4 s]
# Iteration 38 fit: [7.4 s]: Recall = 0.0719, Jaccard score = 0.0404, loss = 0.0104, val_loss = 0.0000, eval: [6.4 s]
# Iteration 39 fit: [7.4 s]: Recall = 0.0755, Jaccard score = 0.0425, loss = 0.0099, val_loss = 0.0000, eval: [6.4 s]
# Iteration 40 fit: [7.4 s]: Recall = 0.0740, Jaccard score = 0.0416, loss = 0.0091, val_loss = 0.0000, eval: [6.4 s]
# Iteration 41 fit: [7.4 s]: Recall = 0.0772, Jaccard score = 0.0435, loss = 0.0087, val_loss = 0.0000, eval: [6.4 s]
# Iteration 42 fit: [7.5 s]: Recall = 0.0793, Jaccard score = 0.0447, loss = 0.0076, val_loss = 0.0000, eval: [6.5 s]
# Iteration 43 fit: [7.4 s]: Recall = 0.0822, Jaccard score = 0.0464, loss = 0.0074, val_loss = 0.0000, eval: [6.4 s]
# Iteration 44 fit: [7.4 s]: Recall = 0.0827, Jaccard score = 0.0467, loss = 0.0068, val_loss = 0.0000, eval: [6.4 s]
# Iteration 45 fit: [7.4 s]: Recall = 0.0865, Jaccard score = 0.0490, loss = 0.0063, val_loss = 0.0000, eval: [6.4 s]
# Iteration 46 fit: [7.4 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0058, val_loss = 0.0000, eval: [6.5 s]
# Iteration 47 fit: [7.4 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0054, val_loss = 0.0000, eval: [6.4 s]
# Iteration 48 fit: [7.4 s]: Recall = 0.0930, Jaccard score = 0.0528, loss = 0.0050, val_loss = 0.0000, eval: [6.4 s]
# Iteration 49 fit: [7.4 s]: Recall = 0.0930, Jaccard score = 0.0528, loss = 0.0047, val_loss = 0.0000, eval: [6.4 s]
# Iteration 50 fit: [7.5 s]: Recall = 0.0939, Jaccard score = 0.0534, loss = 0.0048, val_loss = 0.0000, eval: [6.4 s]
# Iteration 51 fit: [7.4 s]: Recall = 0.0966, Jaccard score = 0.0550, loss = 0.0044, val_loss = 0.0000, eval: [6.4 s]
# Iteration 52 fit: [7.4 s]: Recall = 0.0981, Jaccard score = 0.0559, loss = 0.0041, val_loss = 0.0000, eval: [6.5 s]
# Iteration 53 fit: [7.4 s]: Recall = 0.1032, Jaccard score = 0.0590, loss = 0.0038, val_loss = 0.0000, eval: [6.5 s]
# Iteration 54 fit: [7.4 s]: Recall = 0.1046, Jaccard score = 0.0598, loss = 0.0038, val_loss = 0.0000, eval: [6.4 s]
# Iteration 55 fit: [7.4 s]: Recall = 0.1048, Jaccard score = 0.0599, loss = 0.0036, val_loss = 0.0000, eval: [6.5 s]
# Iteration 56 fit: [7.4 s]: Recall = 0.1050, Jaccard score = 0.0600, loss = 0.0035, val_loss = 0.0000, eval: [6.4 s]
# Iteration 57 fit: [7.4 s]: Recall = 0.1032, Jaccard score = 0.0590, loss = 0.0032, val_loss = 0.0000, eval: [6.5 s]
# Iteration 58 fit: [7.4 s]: Recall = 0.1072, Jaccard score = 0.0614, loss = 0.0030, val_loss = 0.0000, eval: [6.6 s]
# Iteration 59 fit: [7.4 s]: Recall = 0.1089, Jaccard score = 0.0624, loss = 0.0030, val_loss = 0.0000, eval: [6.4 s]
# Iteration 60 fit: [7.4 s]: Recall = 0.1086, Jaccard score = 0.0622, loss = 0.0027, val_loss = 0.0000, eval: [6.4 s]
# Iteration 61 fit: [7.4 s]: Recall = 0.1139, Jaccard score = 0.0654, loss = 0.0027, val_loss = 0.0000, eval: [6.4 s]
# Iteration 62 fit: [7.4 s]: Recall = 0.1129, Jaccard score = 0.0649, loss = 0.0026, val_loss = 0.0000, eval: [6.4 s]
# Iteration 63 fit: [7.4 s]: Recall = 0.1162, Jaccard score = 0.0668, loss = 0.0024, val_loss = 0.0000, eval: [6.5 s]
# Iteration 64 fit: [7.4 s]: Recall = 0.1150, Jaccard score = 0.0661, loss = 0.0025, val_loss = 0.0000, eval: [6.4 s]
# Iteration 65 fit: [7.5 s]: Recall = 0.1171, Jaccard score = 0.0674, loss = 0.0024, val_loss = 0.0000, eval: [6.5 s]
# Iteration 66 fit: [7.5 s]: Recall = 0.1184, Jaccard score = 0.0682, loss = 0.0022, val_loss = 0.0000, eval: [6.4 s]
# Iteration 67 fit: [7.4 s]: Recall = 0.1171, Jaccard score = 0.0674, loss = 0.0022, val_loss = 0.0000, eval: [6.4 s]
# Iteration 68 fit: [7.4 s]: Recall = 0.1192, Jaccard score = 0.0687, loss = 0.0022, val_loss = 0.0000, eval: [6.4 s]
# Iteration 69 fit: [7.4 s]: Recall = 0.1207, Jaccard score = 0.0696, loss = 0.0021, val_loss = 0.0000, eval: [6.5 s]
# Iteration 70 fit: [7.4 s]: Recall = 0.1224, Jaccard score = 0.0707, loss = 0.0021, val_loss = 0.0000, eval: [6.4 s]
# Iteration 71 fit: [7.4 s]: Recall = 0.1222, Jaccard score = 0.0706, loss = 0.0020, val_loss = 0.0000, eval: [6.4 s]
# Iteration 72 fit: [7.4 s]: Recall = 0.1247, Jaccard score = 0.0721, loss = 0.0019, val_loss = 0.0000, eval: [6.4 s]
# Iteration 73 fit: [7.4 s]: Recall = 0.1243, Jaccard score = 0.0719, loss = 0.0019, val_loss = 0.0000, eval: [6.5 s]
# Iteration 74 fit: [7.4 s]: Recall = 0.1266, Jaccard score = 0.0733, loss = 0.0017, val_loss = 0.0000, eval: [6.4 s]
# Iteration 75 fit: [7.4 s]: Recall = 0.1247, Jaccard score = 0.0721, loss = 0.0018, val_loss = 0.0000, eval: [6.5 s]
# Iteration 76 fit: [7.4 s]: Recall = 0.1289, Jaccard score = 0.0747, loss = 0.0018, val_loss = 0.0000, eval: [6.4 s]
# Iteration 77 fit: [7.4 s]: Recall = 0.1256, Jaccard score = 0.0727, loss = 0.0017, val_loss = 0.0000, eval: [6.4 s]
# Iteration 78 fit: [7.4 s]: Recall = 0.1266, Jaccard score = 0.0733, loss = 0.0015, val_loss = 0.0000, eval: [6.4 s]
# Iteration 79 fit: [7.4 s]: Recall = 0.1287, Jaccard score = 0.0746, loss = 0.0017, val_loss = 0.0000, eval: [6.4 s]
# Iteration 80 fit: [7.4 s]: Recall = 0.1298, Jaccard score = 0.0753, loss = 0.0016, val_loss = 0.0000, eval: [6.4 s]
# Iteration 81 fit: [7.5 s]: Recall = 0.1300, Jaccard score = 0.0754, loss = 0.0015, val_loss = 0.0000, eval: [6.5 s]
# Iteration 82 fit: [7.4 s]: Recall = 0.1336, Jaccard score = 0.0777, loss = 0.0015, val_loss = 0.0000, eval: [6.4 s]
# Iteration 83 fit: [7.4 s]: Recall = 0.1329, Jaccard score = 0.0772, loss = 0.0015, val_loss = 0.0000, eval: [6.4 s]
# Iteration 84 fit: [7.4 s]: Recall = 0.1329, Jaccard score = 0.0772, loss = 0.0014, val_loss = 0.0000, eval: [6.5 s]
# Iteration 85 fit: [7.4 s]: Recall = 0.1311, Jaccard score = 0.0761, loss = 0.0014, val_loss = 0.0000, eval: [6.5 s]
# Iteration 86 fit: [7.5 s]: Recall = 0.1344, Jaccard score = 0.0781, loss = 0.0015, val_loss = 0.0000, eval: [6.4 s]
# Iteration 87 fit: [7.4 s]: Recall = 0.1351, Jaccard score = 0.0786, loss = 0.0014, val_loss = 0.0000, eval: [6.5 s]
# Iteration 88 fit: [7.4 s]: Recall = 0.1340, Jaccard score = 0.0779, loss = 0.0014, val_loss = 0.0000, eval: [6.4 s]
# Iteration 89 fit: [7.4 s]: Recall = 0.1351, Jaccard score = 0.0786, loss = 0.0013, val_loss = 0.0000, eval: [6.4 s]
# Iteration 90 fit: [7.4 s]: Recall = 0.1353, Jaccard score = 0.0787, loss = 0.0013, val_loss = 0.0000, eval: [6.4 s]
# Iteration 91 fit: [7.4 s]: Recall = 0.1374, Jaccard score = 0.0800, loss = 0.0013, val_loss = 0.0000, eval: [6.4 s]
# Iteration 92 fit: [7.4 s]: Recall = 0.1391, Jaccard score = 0.0811, loss = 0.0013, val_loss = 0.0000, eval: [6.5 s]
# Iteration 93 fit: [7.4 s]: Recall = 0.1389, Jaccard score = 0.0810, loss = 0.0012, val_loss = 0.0000, eval: [6.5 s]
# Iteration 94 fit: [7.5 s]: Recall = 0.1384, Jaccard score = 0.0806, loss = 0.0013, val_loss = 0.0000, eval: [6.5 s]
# Iteration 95 fit: [7.5 s]: Recall = 0.1395, Jaccard score = 0.0814, loss = 0.0012, val_loss = 0.0000, eval: [6.4 s]
# Iteration 96 fit: [7.5 s]: Recall = 0.1420, Jaccard score = 0.0829, loss = 0.0011, val_loss = 0.0000, eval: [6.6 s]
# Iteration 97 fit: [7.4 s]: Recall = 0.1427, Jaccard score = 0.0834, loss = 0.0012, val_loss = 0.0000, eval: [6.4 s]
# Iteration 98 fit: [7.5 s]: Recall = 0.1431, Jaccard score = 0.0836, loss = 0.0011, val_loss = 0.0000, eval: [6.5 s]
# Iteration 99 fit: [7.5 s]: Recall = 0.1422, Jaccard score = 0.0830, loss = 0.0011, val_loss = 0.0000, eval: [6.5 s]
# End. Best Iteration 98:  Recall = 0.1431, Jaccard score = 0.0836. 
# The best NeuMF model has been saved to Pretrain/_GMF_100_[64,32,16,8]_1560847081.h5
