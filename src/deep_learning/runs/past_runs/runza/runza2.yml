--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "100"
--lr: "0.002"
--early_stopping: "35"
--layers: "[512,750,350,96]"
--MLP_variant: "drop"
--reg_layers: "[0,0,0,0]"
--num_k_folds: "5"


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_6 (Dropout)             (None, 256)          0           flatten_3[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 1256)         0           dropout_6[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_7 (Dropout)             (None, 256)          0           flatten_4[0][0]                  
# __________________________________________________________________________________________________
# concatenate_4 (Concatenate)     (None, 1512)         0           concatenate_3[0][0]              
#                                                                  dropout_7[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_4[0][0]              
# __________________________________________________________________________________________________
# dropout_8 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_8[0][0]                  
# __________________________________________________________________________________________________
# dropout_9 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_9[0][0]                  
# __________________________________________________________________________________________________
# dropout_10 (Dropout)            (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_10[0][0]                 
# ==================================================================================================
# Total params: 6,551,393
# Trainable params: 6,551,393
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0953, Jaccard score = 0.0297
# Iteration 0 fit: [28.7 s]: Recall = 0.42660, Jaccard score = 0.1484, loss = 0.437006, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 1 fit: [28.1 s]: Recall = 0.46886, Jaccard score = 0.1655, loss = 0.402767, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 2 fit: [27.9 s]: Recall = 0.49885, Jaccard score = 0.1780, loss = 0.381259, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 3 fit: [27.8 s]: Recall = 0.51893, Jaccard score = 0.1865, loss = 0.360617, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 4 fit: [27.8 s]: Recall = 0.52954, Jaccard score = 0.1910, loss = 0.344024, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 5 fit: [27.9 s]: Recall = 0.54015, Jaccard score = 0.1956, loss = 0.328547, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 6 fit: [27.7 s]: Recall = 0.55038, Jaccard score = 0.2000, loss = 0.314321, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 7 fit: [28.0 s]: Recall = 0.55646, Jaccard score = 0.2027, loss = 0.302064, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 8 fit: [28.1 s]: Recall = 0.56349, Jaccard score = 0.2058, loss = 0.289544, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 9 fit: [27.6 s]: Recall = 0.56714, Jaccard score = 0.2074, loss = 0.277817, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 10 fit: [27.7 s]: Recall = 0.57679, Jaccard score = 0.2117, loss = 0.266893, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 11 fit: [27.7 s]: Recall = 0.58031, Jaccard score = 0.2132, loss = 0.256594, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 12 fit: [27.8 s]: Recall = 0.58446, Jaccard score = 0.2151, loss = 0.246713, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 13 fit: [27.7 s]: Recall = 0.58728, Jaccard score = 0.2163, loss = 0.236674, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 14 fit: [27.6 s]: Recall = 0.58849, Jaccard score = 0.2169, loss = 0.227366, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 15 fit: [27.6 s]: Recall = 0.59610, Jaccard score = 0.2203, loss = 0.218489, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 16 fit: [28.2 s]: Recall = 0.60019, Jaccard score = 0.2222, loss = 0.210415, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 17 fit: [27.8 s]: Recall = 0.59974, Jaccard score = 0.2220, loss = 0.203593, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 18 fit: [27.8 s]: Recall = 0.60064, Jaccard score = 0.2224, loss = 0.195116, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 19 fit: [27.6 s]: Recall = 0.60716, Jaccard score = 0.2253, loss = 0.187940, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 20 fit: [27.6 s]: Recall = 0.60575, Jaccard score = 0.2247, loss = 0.181318, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 21 fit: [27.6 s]: Recall = 0.60965, Jaccard score = 0.2265, loss = 0.175403, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 22 fit: [27.6 s]: Recall = 0.61445, Jaccard score = 0.2286, loss = 0.168593, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 23 fit: [27.9 s]: Recall = 0.61330, Jaccard score = 0.2281, loss = 0.163053, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 24 fit: [27.9 s]: Recall = 0.61202, Jaccard score = 0.2275, loss = 0.158135, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 25 fit: [28.1 s]: Recall = 0.61758, Jaccard score = 0.2301, loss = 0.153676, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 26 fit: [27.6 s]: Recall = 0.61861, Jaccard score = 0.2305, loss = 0.148016, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.62148, Jaccard score = 0.2319, loss = 0.143552, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 28 fit: [27.7 s]: Recall = 0.62564, Jaccard score = 0.2338, loss = 0.139416, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 29 fit: [27.8 s]: Recall = 0.61988, Jaccard score = 0.2311, loss = 0.135426, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 30 fit: [27.7 s]: Recall = 0.62212, Jaccard score = 0.2322, loss = 0.131192, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 31 fit: [27.6 s]: Recall = 0.62602, Jaccard score = 0.2340, loss = 0.127209, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 32 fit: [28.0 s]: Recall = 0.62711, Jaccard score = 0.2345, loss = 0.124296, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 33 fit: [27.9 s]: Recall = 0.63146, Jaccard score = 0.2365, loss = 0.120584, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 34 fit: [27.9 s]: Recall = 0.63376, Jaccard score = 0.2375, loss = 0.117991, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 35 fit: [27.8 s]: Recall = 0.62749, Jaccard score = 0.2346, loss = 0.114794, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 36 fit: [27.9 s]: Recall = 0.63376, Jaccard score = 0.2375, loss = 0.111388, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 37 fit: [28.0 s]: Recall = 0.63357, Jaccard score = 0.2374, loss = 0.109672, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 38 fit: [27.5 s]: Recall = 0.63696, Jaccard score = 0.2390, loss = 0.106205, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 39 fit: [27.8 s]: Recall = 0.63376, Jaccard score = 0.2375, loss = 0.103644, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 40 fit: [27.6 s]: Recall = 0.63919, Jaccard score = 0.2401, loss = 0.101974, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 41 fit: [27.6 s]: Recall = 0.63913, Jaccard score = 0.2400, loss = 0.099826, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 42 fit: [27.7 s]: Recall = 0.63907, Jaccard score = 0.2400, loss = 0.096948, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 43 fit: [27.9 s]: Recall = 0.63491, Jaccard score = 0.2381, loss = 0.095313, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 44 fit: [27.7 s]: Recall = 0.63536, Jaccard score = 0.2383, loss = 0.093216, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 45 fit: [27.8 s]: Recall = 0.63760, Jaccard score = 0.2393, loss = 0.091599, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 46 fit: [27.8 s]: Recall = 0.63708, Jaccard score = 0.2391, loss = 0.089859, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 47 fit: [27.8 s]: Recall = 0.63504, Jaccard score = 0.2381, loss = 0.087787, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 48 fit: [27.8 s]: Recall = 0.64035, Jaccard score = 0.2406, loss = 0.086295, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 49 fit: [27.8 s]: Recall = 0.64265, Jaccard score = 0.2417, loss = 0.086090, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 50 fit: [27.9 s]: Recall = 0.64316, Jaccard score = 0.2419, loss = 0.083206, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 51 fit: [27.8 s]: Recall = 0.64290, Jaccard score = 0.2418, loss = 0.082754, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 52 fit: [27.8 s]: Recall = 0.64265, Jaccard score = 0.2417, loss = 0.081378, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 53 fit: [28.1 s]: Recall = 0.63919, Jaccard score = 0.2401, loss = 0.078065, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 54 fit: [27.7 s]: Recall = 0.64578, Jaccard score = 0.2431, loss = 0.078105, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 55 fit: [27.8 s]: Recall = 0.64840, Jaccard score = 0.2444, loss = 0.075742, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 56 fit: [27.9 s]: Recall = 0.63875, Jaccard score = 0.2399, loss = 0.075135, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 57 fit: [28.0 s]: Recall = 0.64738, Jaccard score = 0.2439, loss = 0.074138, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 58 fit: [27.9 s]: Recall = 0.64904, Jaccard score = 0.2447, loss = 0.073024, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 59 fit: [27.8 s]: Recall = 0.64693, Jaccard score = 0.2437, loss = 0.071330, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 60 fit: [27.6 s]: Recall = 0.64476, Jaccard score = 0.2427, loss = 0.071561, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 61 fit: [27.9 s]: Recall = 0.64623, Jaccard score = 0.2433, loss = 0.069364, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 62 fit: [27.7 s]: Recall = 0.64815, Jaccard score = 0.2442, loss = 0.068350, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [27.8 s]: Recall = 0.65224, Jaccard score = 0.2462, loss = 0.068058, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 64 fit: [27.7 s]: Recall = 0.64840, Jaccard score = 0.2444, loss = 0.067063, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 65 fit: [27.7 s]: Recall = 0.64431, Jaccard score = 0.2425, loss = 0.066325, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 66 fit: [27.7 s]: Recall = 0.64821, Jaccard score = 0.2443, loss = 0.064990, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 67 fit: [27.9 s]: Recall = 0.65090, Jaccard score = 0.2455, loss = 0.064719, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 68 fit: [28.1 s]: Recall = 0.64425, Jaccard score = 0.2424, loss = 0.063235, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 69 fit: [27.9 s]: Recall = 0.64393, Jaccard score = 0.2423, loss = 0.062499, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 70 fit: [27.8 s]: Recall = 0.65083, Jaccard score = 0.2455, loss = 0.061239, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 71 fit: [27.8 s]: Recall = 0.65000, Jaccard score = 0.2451, loss = 0.061292, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 72 fit: [27.9 s]: Recall = 0.64322, Jaccard score = 0.2419, loss = 0.060784, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 73 fit: [27.8 s]: Recall = 0.65428, Jaccard score = 0.2471, loss = 0.059921, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 74 fit: [27.7 s]: Recall = 0.65294, Jaccard score = 0.2465, loss = 0.059073, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 75 fit: [27.9 s]: Recall = 0.65678, Jaccard score = 0.2483, loss = 0.057958, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 76 fit: [27.6 s]: Recall = 0.65358, Jaccard score = 0.2468, loss = 0.060981, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 77 fit: [27.6 s]: Recall = 0.64214, Jaccard score = 0.2414, loss = 0.057541, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 78 fit: [28.0 s]: Recall = 0.64974, Jaccard score = 0.2450, loss = 0.056910, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 79 fit: [27.7 s]: Recall = 0.65313, Jaccard score = 0.2466, loss = 0.057170, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 80 fit: [28.0 s]: Recall = 0.65013, Jaccard score = 0.2452, loss = 0.056145, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 81 fit: [28.0 s]: Recall = 0.65761, Jaccard score = 0.2487, loss = 0.054863, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 82 fit: [27.8 s]: Recall = 0.64725, Jaccard score = 0.2438, loss = 0.054947, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 83 fit: [27.6 s]: Recall = 0.64942, Jaccard score = 0.2448, loss = 0.054716, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 84 fit: [27.7 s]: Recall = 0.64789, Jaccard score = 0.2441, loss = 0.052895, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 85 fit: [27.8 s]: Recall = 0.64994, Jaccard score = 0.2451, loss = 0.052387, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 86 fit: [27.8 s]: Recall = 0.64520, Jaccard score = 0.2429, loss = 0.052620, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 87 fit: [27.7 s]: Recall = 0.64789, Jaccard score = 0.2441, loss = 0.051979, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 88 fit: [27.8 s]: Recall = 0.65467, Jaccard score = 0.2473, loss = 0.051952, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 89 fit: [27.6 s]: Recall = 0.65345, Jaccard score = 0.2467, loss = 0.050869, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 90 fit: [27.9 s]: Recall = 0.65742, Jaccard score = 0.2486, loss = 0.049963, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 91 fit: [27.8 s]: Recall = 0.64668, Jaccard score = 0.2436, loss = 0.050332, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 92 fit: [28.0 s]: Recall = 0.64904, Jaccard score = 0.2447, loss = 0.050026, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 93 fit: [27.8 s]: Recall = 0.65307, Jaccard score = 0.2466, loss = 0.049021, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 94 fit: [27.8 s]: Recall = 0.65882, Jaccard score = 0.2493, loss = 0.049291, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 95 fit: [27.9 s]: Recall = 0.65422, Jaccard score = 0.2471, loss = 0.048347, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 96 fit: [27.8 s]: Recall = 0.65320, Jaccard score = 0.2466, loss = 0.048895, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 97 fit: [27.7 s]: Recall = 0.65077, Jaccard score = 0.2455, loss = 0.048388, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 98 fit: [27.8 s]: Recall = 0.65185, Jaccard score = 0.2460, loss = 0.047670, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 99 fit: [27.8 s]: Recall = 0.65588, Jaccard score = 0.2479, loss = 0.048426, gradient norm = 1.0000, eval: [15.2 s]
# End. Best Iteration 94:  Recall = 0.6588, Jaccard score = 0.2493. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
# The average best performance after k-fold 1 is: Recall = 0.6588235294117647, Jaccard score = 0.24927424037158893
# 
# Performing k-fold 2
# Init: Recall = 0.0955, Jaccard score = 0.0302
# Iteration 0 fit: [29.3 s]: Recall = 0.42343, Jaccard score = 0.1496, loss = 0.437377, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 1 fit: [28.4 s]: Recall = 0.46542, Jaccard score = 0.1670, loss = 0.402412, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 2 fit: [28.5 s]: Recall = 0.49039, Jaccard score = 0.1775, loss = 0.380183, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 3 fit: [28.5 s]: Recall = 0.50535, Jaccard score = 0.1839, loss = 0.360679, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 4 fit: [28.1 s]: Recall = 0.52031, Jaccard score = 0.1904, loss = 0.343421, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 5 fit: [28.4 s]: Recall = 0.52600, Jaccard score = 0.1929, loss = 0.329005, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 6 fit: [28.3 s]: Recall = 0.54008, Jaccard score = 0.1991, loss = 0.315044, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 7 fit: [28.3 s]: Recall = 0.54672, Jaccard score = 0.2020, loss = 0.301891, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 8 fit: [28.3 s]: Recall = 0.55804, Jaccard score = 0.2071, loss = 0.289752, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 9 fit: [28.7 s]: Recall = 0.56455, Jaccard score = 0.2100, loss = 0.278386, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 10 fit: [28.3 s]: Recall = 0.57031, Jaccard score = 0.2126, loss = 0.267421, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 11 fit: [28.1 s]: Recall = 0.57500, Jaccard score = 0.2147, loss = 0.257057, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 12 fit: [28.1 s]: Recall = 0.57914, Jaccard score = 0.2166, loss = 0.247763, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 13 fit: [28.4 s]: Recall = 0.58746, Jaccard score = 0.2204, loss = 0.238061, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 14 fit: [28.2 s]: Recall = 0.58865, Jaccard score = 0.2209, loss = 0.229514, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 15 fit: [28.3 s]: Recall = 0.59078, Jaccard score = 0.2219, loss = 0.219434, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 16 fit: [28.1 s]: Recall = 0.59434, Jaccard score = 0.2236, loss = 0.211567, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [28.1 s]: Recall = 0.59171, Jaccard score = 0.2223, loss = 0.204622, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 18 fit: [28.1 s]: Recall = 0.59847, Jaccard score = 0.2255, loss = 0.196279, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 19 fit: [28.2 s]: Recall = 0.60066, Jaccard score = 0.2265, loss = 0.188877, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 20 fit: [28.2 s]: Recall = 0.60611, Jaccard score = 0.2290, loss = 0.182735, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 21 fit: [28.1 s]: Recall = 0.61080, Jaccard score = 0.2312, loss = 0.175852, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 22 fit: [28.2 s]: Recall = 0.61099, Jaccard score = 0.2313, loss = 0.170402, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 23 fit: [27.9 s]: Recall = 0.61055, Jaccard score = 0.2311, loss = 0.164853, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 24 fit: [28.0 s]: Recall = 0.61130, Jaccard score = 0.2314, loss = 0.158885, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 25 fit: [28.5 s]: Recall = 0.61831, Jaccard score = 0.2347, loss = 0.155060, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 26 fit: [28.1 s]: Recall = 0.61424, Jaccard score = 0.2328, loss = 0.148740, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 27 fit: [28.0 s]: Recall = 0.62351, Jaccard score = 0.2371, loss = 0.144347, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 28 fit: [27.9 s]: Recall = 0.62207, Jaccard score = 0.2364, loss = 0.140506, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 29 fit: [28.1 s]: Recall = 0.62332, Jaccard score = 0.2370, loss = 0.136418, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 30 fit: [28.0 s]: Recall = 0.62739, Jaccard score = 0.2390, loss = 0.133145, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 31 fit: [28.4 s]: Recall = 0.62933, Jaccard score = 0.2399, loss = 0.129485, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 32 fit: [28.5 s]: Recall = 0.63308, Jaccard score = 0.2416, loss = 0.125544, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 33 fit: [28.2 s]: Recall = 0.63152, Jaccard score = 0.2409, loss = 0.122351, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 34 fit: [28.0 s]: Recall = 0.63346, Jaccard score = 0.2418, loss = 0.118520, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 35 fit: [28.6 s]: Recall = 0.63077, Jaccard score = 0.2405, loss = 0.116494, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 36 fit: [28.4 s]: Recall = 0.63465, Jaccard score = 0.2424, loss = 0.112832, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 37 fit: [28.1 s]: Recall = 0.63496, Jaccard score = 0.2425, loss = 0.110975, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 38 fit: [28.2 s]: Recall = 0.63652, Jaccard score = 0.2433, loss = 0.108986, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 39 fit: [28.1 s]: Recall = 0.64028, Jaccard score = 0.2451, loss = 0.105634, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 40 fit: [28.5 s]: Recall = 0.63752, Jaccard score = 0.2438, loss = 0.104388, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 41 fit: [28.2 s]: Recall = 0.63959, Jaccard score = 0.2447, loss = 0.101067, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 42 fit: [28.3 s]: Recall = 0.64153, Jaccard score = 0.2457, loss = 0.099530, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 43 fit: [28.3 s]: Recall = 0.64266, Jaccard score = 0.2462, loss = 0.097367, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 44 fit: [28.4 s]: Recall = 0.63408, Jaccard score = 0.2421, loss = 0.095384, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 45 fit: [28.1 s]: Recall = 0.64072, Jaccard score = 0.2453, loss = 0.093221, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 46 fit: [28.5 s]: Recall = 0.64134, Jaccard score = 0.2456, loss = 0.091210, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 47 fit: [28.5 s]: Recall = 0.64391, Jaccard score = 0.2468, loss = 0.089492, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 48 fit: [28.1 s]: Recall = 0.63759, Jaccard score = 0.2438, loss = 0.088194, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 49 fit: [28.3 s]: Recall = 0.64566, Jaccard score = 0.2476, loss = 0.085687, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 50 fit: [28.2 s]: Recall = 0.64397, Jaccard score = 0.2468, loss = 0.084425, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 51 fit: [28.3 s]: Recall = 0.64553, Jaccard score = 0.2476, loss = 0.083106, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 52 fit: [28.0 s]: Recall = 0.64798, Jaccard score = 0.2487, loss = 0.081726, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 53 fit: [28.2 s]: Recall = 0.64247, Jaccard score = 0.2461, loss = 0.079973, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 54 fit: [27.9 s]: Recall = 0.64510, Jaccard score = 0.2474, loss = 0.079368, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 55 fit: [28.0 s]: Recall = 0.64866, Jaccard score = 0.2491, loss = 0.077687, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 56 fit: [28.1 s]: Recall = 0.64697, Jaccard score = 0.2483, loss = 0.075703, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 57 fit: [28.1 s]: Recall = 0.65186, Jaccard score = 0.2506, loss = 0.074977, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 58 fit: [28.2 s]: Recall = 0.64441, Jaccard score = 0.2470, loss = 0.074180, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 59 fit: [28.0 s]: Recall = 0.64729, Jaccard score = 0.2484, loss = 0.072562, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 60 fit: [28.2 s]: Recall = 0.65042, Jaccard score = 0.2499, loss = 0.071070, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 61 fit: [28.0 s]: Recall = 0.65129, Jaccard score = 0.2503, loss = 0.071524, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 62 fit: [28.3 s]: Recall = 0.65054, Jaccard score = 0.2500, loss = 0.069712, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [28.2 s]: Recall = 0.64910, Jaccard score = 0.2493, loss = 0.068828, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 64 fit: [27.9 s]: Recall = 0.64866, Jaccard score = 0.2491, loss = 0.067189, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 65 fit: [28.1 s]: Recall = 0.64848, Jaccard score = 0.2490, loss = 0.067136, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 66 fit: [28.4 s]: Recall = 0.64841, Jaccard score = 0.2490, loss = 0.065535, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 67 fit: [28.3 s]: Recall = 0.65517, Jaccard score = 0.2522, loss = 0.065312, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 68 fit: [28.0 s]: Recall = 0.64823, Jaccard score = 0.2489, loss = 0.064742, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 69 fit: [28.3 s]: Recall = 0.65273, Jaccard score = 0.2510, loss = 0.063212, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 70 fit: [28.4 s]: Recall = 0.65336, Jaccard score = 0.2513, loss = 0.062455, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 71 fit: [28.4 s]: Recall = 0.64597, Jaccard score = 0.2478, loss = 0.063117, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 72 fit: [28.1 s]: Recall = 0.64904, Jaccard score = 0.2493, loss = 0.060672, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 73 fit: [28.1 s]: Recall = 0.65461, Jaccard score = 0.2519, loss = 0.060583, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 74 fit: [28.1 s]: Recall = 0.65135, Jaccard score = 0.2504, loss = 0.060125, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 75 fit: [28.4 s]: Recall = 0.64747, Jaccard score = 0.2485, loss = 0.059837, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 76 fit: [28.1 s]: Recall = 0.64935, Jaccard score = 0.2494, loss = 0.059092, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 77 fit: [28.1 s]: Recall = 0.65135, Jaccard score = 0.2504, loss = 0.059058, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 78 fit: [28.0 s]: Recall = 0.65248, Jaccard score = 0.2509, loss = 0.058144, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 79 fit: [28.1 s]: Recall = 0.65042, Jaccard score = 0.2499, loss = 0.057512, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 80 fit: [28.2 s]: Recall = 0.65380, Jaccard score = 0.2515, loss = 0.055659, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 81 fit: [28.2 s]: Recall = 0.65123, Jaccard score = 0.2503, loss = 0.055683, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 82 fit: [28.0 s]: Recall = 0.65536, Jaccard score = 0.2523, loss = 0.055012, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 83 fit: [28.1 s]: Recall = 0.65104, Jaccard score = 0.2502, loss = 0.055162, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 84 fit: [28.5 s]: Recall = 0.65186, Jaccard score = 0.2506, loss = 0.054883, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 85 fit: [28.3 s]: Recall = 0.64860, Jaccard score = 0.2490, loss = 0.053801, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 86 fit: [28.3 s]: Recall = 0.64697, Jaccard score = 0.2483, loss = 0.052370, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 87 fit: [28.5 s]: Recall = 0.65317, Jaccard score = 0.2512, loss = 0.052085, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 88 fit: [28.4 s]: Recall = 0.65198, Jaccard score = 0.2507, loss = 0.053378, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 89 fit: [28.4 s]: Recall = 0.65680, Jaccard score = 0.2530, loss = 0.053352, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 90 fit: [28.0 s]: Recall = 0.65298, Jaccard score = 0.2511, loss = 0.050781, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 91 fit: [28.3 s]: Recall = 0.65179, Jaccard score = 0.2506, loss = 0.051039, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 92 fit: [28.4 s]: Recall = 0.65098, Jaccard score = 0.2502, loss = 0.052203, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 93 fit: [28.2 s]: Recall = 0.65786, Jaccard score = 0.2535, loss = 0.048764, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 94 fit: [28.6 s]: Recall = 0.65630, Jaccard score = 0.2527, loss = 0.049313, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 95 fit: [28.5 s]: Recall = 0.65455, Jaccard score = 0.2519, loss = 0.048841, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 96 fit: [28.2 s]: Recall = 0.64704, Jaccard score = 0.2483, loss = 0.049338, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 97 fit: [28.2 s]: Recall = 0.65674, Jaccard score = 0.2530, loss = 0.049677, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 98 fit: [28.2 s]: Recall = 0.65655, Jaccard score = 0.2529, loss = 0.047971, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 99 fit: [28.0 s]: Recall = 0.65386, Jaccard score = 0.2516, loss = 0.047321, gradient norm = 1.0000, eval: [15.4 s]
# End. Best Iteration 93:  Recall = 0.6579, Jaccard score = 0.2535. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
# The average best performance after k-fold 2 is: Recall = 0.6583434875921705, Jaccard score = 0.2513885128594868
# 
# Performing k-fold 3
# Init: Recall = 0.0953, Jaccard score = 0.0301
# Iteration 0 fit: [30.2 s]: Recall = 0.42899, Jaccard score = 0.1512, loss = 0.437288, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 1 fit: [28.4 s]: Recall = 0.46798, Jaccard score = 0.1672, loss = 0.401635, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 2 fit: [28.2 s]: Recall = 0.49159, Jaccard score = 0.1771, loss = 0.380198, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 3 fit: [28.2 s]: Recall = 0.51609, Jaccard score = 0.1876, loss = 0.361058, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 4 fit: [28.3 s]: Recall = 0.52510, Jaccard score = 0.1915, loss = 0.344678, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 5 fit: [28.1 s]: Recall = 0.53202, Jaccard score = 0.1945, loss = 0.329754, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 6 fit: [28.4 s]: Recall = 0.54367, Jaccard score = 0.1996, loss = 0.315527, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 7 fit: [28.3 s]: Recall = 0.55048, Jaccard score = 0.2026, loss = 0.303428, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 8 fit: [28.1 s]: Recall = 0.55684, Jaccard score = 0.2055, loss = 0.290402, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 9 fit: [28.1 s]: Recall = 0.56446, Jaccard score = 0.2088, loss = 0.279357, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 10 fit: [28.2 s]: Recall = 0.57290, Jaccard score = 0.2126, loss = 0.268192, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 11 fit: [28.1 s]: Recall = 0.57308, Jaccard score = 0.2127, loss = 0.258412, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 12 fit: [28.4 s]: Recall = 0.57497, Jaccard score = 0.2136, loss = 0.248064, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 13 fit: [28.7 s]: Recall = 0.58473, Jaccard score = 0.2180, loss = 0.237837, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 14 fit: [28.4 s]: Recall = 0.58776, Jaccard score = 0.2194, loss = 0.229772, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 15 fit: [28.4 s]: Recall = 0.59267, Jaccard score = 0.2216, loss = 0.221036, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 16 fit: [28.2 s]: Recall = 0.59588, Jaccard score = 0.2231, loss = 0.212705, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 17 fit: [28.4 s]: Recall = 0.59878, Jaccard score = 0.2244, loss = 0.204519, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 18 fit: [28.4 s]: Recall = 0.59645, Jaccard score = 0.2233, loss = 0.197424, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 19 fit: [28.3 s]: Recall = 0.60608, Jaccard score = 0.2278, loss = 0.190151, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 20 fit: [28.3 s]: Recall = 0.60016, Jaccard score = 0.2250, loss = 0.184390, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 21 fit: [28.3 s]: Recall = 0.60810, Jaccard score = 0.2287, loss = 0.177303, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 22 fit: [28.7 s]: Recall = 0.60948, Jaccard score = 0.2293, loss = 0.171402, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 23 fit: [28.2 s]: Recall = 0.60885, Jaccard score = 0.2290, loss = 0.165132, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 24 fit: [28.8 s]: Recall = 0.61503, Jaccard score = 0.2319, loss = 0.160430, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 25 fit: [28.3 s]: Recall = 0.61144, Jaccard score = 0.2302, loss = 0.155763, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 26 fit: [28.3 s]: Recall = 0.62025, Jaccard score = 0.2343, loss = 0.150155, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 27 fit: [28.4 s]: Recall = 0.61887, Jaccard score = 0.2337, loss = 0.145603, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 28 fit: [28.4 s]: Recall = 0.61899, Jaccard score = 0.2337, loss = 0.141744, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 29 fit: [28.3 s]: Recall = 0.62296, Jaccard score = 0.2356, loss = 0.137688, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 30 fit: [28.4 s]: Recall = 0.62561, Jaccard score = 0.2368, loss = 0.133296, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 31 fit: [28.5 s]: Recall = 0.62479, Jaccard score = 0.2365, loss = 0.129930, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 32 fit: [28.4 s]: Recall = 0.62624, Jaccard score = 0.2371, loss = 0.125900, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 33 fit: [28.3 s]: Recall = 0.62567, Jaccard score = 0.2369, loss = 0.122447, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 34 fit: [28.3 s]: Recall = 0.62321, Jaccard score = 0.2357, loss = 0.120117, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 35 fit: [28.3 s]: Recall = 0.63316, Jaccard score = 0.2404, loss = 0.116883, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 36 fit: [28.3 s]: Recall = 0.63165, Jaccard score = 0.2397, loss = 0.114055, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 37 fit: [28.1 s]: Recall = 0.62951, Jaccard score = 0.2387, loss = 0.112049, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 38 fit: [28.5 s]: Recall = 0.63121, Jaccard score = 0.2395, loss = 0.108571, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 39 fit: [28.3 s]: Recall = 0.63505, Jaccard score = 0.2413, loss = 0.106234, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 40 fit: [28.5 s]: Recall = 0.63323, Jaccard score = 0.2404, loss = 0.103863, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 41 fit: [28.6 s]: Recall = 0.63392, Jaccard score = 0.2407, loss = 0.101813, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 42 fit: [28.3 s]: Recall = 0.63833, Jaccard score = 0.2428, loss = 0.099382, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 43 fit: [28.5 s]: Recall = 0.63600, Jaccard score = 0.2417, loss = 0.096908, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 44 fit: [28.2 s]: Recall = 0.64122, Jaccard score = 0.2442, loss = 0.095011, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 45 fit: [28.4 s]: Recall = 0.63902, Jaccard score = 0.2431, loss = 0.093522, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 46 fit: [28.3 s]: Recall = 0.63946, Jaccard score = 0.2434, loss = 0.091148, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 47 fit: [28.2 s]: Recall = 0.64362, Jaccard score = 0.2453, loss = 0.089667, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 48 fit: [28.6 s]: Recall = 0.64500, Jaccard score = 0.2460, loss = 0.088656, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 49 fit: [28.5 s]: Recall = 0.64261, Jaccard score = 0.2448, loss = 0.086424, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 50 fit: [28.3 s]: Recall = 0.64507, Jaccard score = 0.2460, loss = 0.085282, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 51 fit: [27.9 s]: Recall = 0.64286, Jaccard score = 0.2450, loss = 0.083091, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 52 fit: [28.4 s]: Recall = 0.64066, Jaccard score = 0.2439, loss = 0.082076, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 53 fit: [28.3 s]: Recall = 0.64116, Jaccard score = 0.2442, loss = 0.080774, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 54 fit: [28.5 s]: Recall = 0.64160, Jaccard score = 0.2444, loss = 0.079104, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 55 fit: [28.3 s]: Recall = 0.64456, Jaccard score = 0.2458, loss = 0.077832, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 56 fit: [28.3 s]: Recall = 0.64746, Jaccard score = 0.2472, loss = 0.076846, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 57 fit: [28.2 s]: Recall = 0.64752, Jaccard score = 0.2472, loss = 0.076432, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 58 fit: [28.3 s]: Recall = 0.64570, Jaccard score = 0.2463, loss = 0.074457, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 59 fit: [28.3 s]: Recall = 0.64702, Jaccard score = 0.2469, loss = 0.072952, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 60 fit: [28.1 s]: Recall = 0.64771, Jaccard score = 0.2473, loss = 0.071749, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 61 fit: [28.4 s]: Recall = 0.64765, Jaccard score = 0.2472, loss = 0.071430, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 62 fit: [28.2 s]: Recall = 0.64973, Jaccard score = 0.2482, loss = 0.070361, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [28.4 s]: Recall = 0.64639, Jaccard score = 0.2466, loss = 0.069591, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 64 fit: [28.7 s]: Recall = 0.65124, Jaccard score = 0.2490, loss = 0.068641, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 65 fit: [28.3 s]: Recall = 0.65376, Jaccard score = 0.2502, loss = 0.067899, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 66 fit: [28.3 s]: Recall = 0.64790, Jaccard score = 0.2474, loss = 0.065813, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 67 fit: [28.1 s]: Recall = 0.64840, Jaccard score = 0.2476, loss = 0.065444, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 68 fit: [28.4 s]: Recall = 0.64305, Jaccard score = 0.2451, loss = 0.064717, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 69 fit: [28.3 s]: Recall = 0.64576, Jaccard score = 0.2463, loss = 0.063887, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 70 fit: [28.4 s]: Recall = 0.64821, Jaccard score = 0.2475, loss = 0.063201, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 71 fit: [28.5 s]: Recall = 0.65010, Jaccard score = 0.2484, loss = 0.062905, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 72 fit: [28.4 s]: Recall = 0.65080, Jaccard score = 0.2487, loss = 0.061812, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 73 fit: [28.2 s]: Recall = 0.65111, Jaccard score = 0.2489, loss = 0.061706, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 74 fit: [28.7 s]: Recall = 0.64658, Jaccard score = 0.2467, loss = 0.060274, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 75 fit: [28.1 s]: Recall = 0.64450, Jaccard score = 0.2457, loss = 0.059782, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 76 fit: [28.7 s]: Recall = 0.64765, Jaccard score = 0.2472, loss = 0.058600, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 77 fit: [28.3 s]: Recall = 0.64588, Jaccard score = 0.2464, loss = 0.058170, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 78 fit: [27.9 s]: Recall = 0.64721, Jaccard score = 0.2470, loss = 0.058005, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 79 fit: [28.4 s]: Recall = 0.65495, Jaccard score = 0.2507, loss = 0.057835, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 80 fit: [28.4 s]: Recall = 0.65054, Jaccard score = 0.2486, loss = 0.055953, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 81 fit: [28.5 s]: Recall = 0.64872, Jaccard score = 0.2478, loss = 0.055334, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 82 fit: [28.4 s]: Recall = 0.65262, Jaccard score = 0.2496, loss = 0.058197, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 83 fit: [28.2 s]: Recall = 0.64998, Jaccard score = 0.2484, loss = 0.055021, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 84 fit: [28.1 s]: Recall = 0.64601, Jaccard score = 0.2465, loss = 0.054928, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 85 fit: [28.2 s]: Recall = 0.64374, Jaccard score = 0.2454, loss = 0.053122, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 86 fit: [28.5 s]: Recall = 0.65596, Jaccard score = 0.2512, loss = 0.053685, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 87 fit: [28.5 s]: Recall = 0.65628, Jaccard score = 0.2514, loss = 0.053451, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 88 fit: [28.5 s]: Recall = 0.65212, Jaccard score = 0.2494, loss = 0.053232, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 89 fit: [28.2 s]: Recall = 0.65691, Jaccard score = 0.2517, loss = 0.051751, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 90 fit: [28.1 s]: Recall = 0.65810, Jaccard score = 0.2522, loss = 0.051683, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 91 fit: [28.1 s]: Recall = 0.64929, Jaccard score = 0.2480, loss = 0.051659, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 92 fit: [28.3 s]: Recall = 0.64796, Jaccard score = 0.2474, loss = 0.051333, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 93 fit: [29.0 s]: Recall = 0.65029, Jaccard score = 0.2485, loss = 0.051524, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 94 fit: [28.3 s]: Recall = 0.64796, Jaccard score = 0.2474, loss = 0.050126, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 95 fit: [28.2 s]: Recall = 0.64765, Jaccard score = 0.2472, loss = 0.049790, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 96 fit: [28.1 s]: Recall = 0.65313, Jaccard score = 0.2499, loss = 0.049697, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 97 fit: [28.5 s]: Recall = 0.64733, Jaccard score = 0.2471, loss = 0.049026, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 98 fit: [28.4 s]: Recall = 0.64696, Jaccard score = 0.2469, loss = 0.048637, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 99 fit: [28.1 s]: Recall = 0.65508, Jaccard score = 0.2508, loss = 0.048837, gradient norm = 1.0000, eval: [15.8 s]
# End. Best Iteration 90:  Recall = 0.6581, Jaccard score = 0.2522. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
# The average best performance after k-fold 3 is: Recall = 0.6582629569232351, Jaccard score = 0.25167193188757764
# 
# Performing k-fold 4
# Init: Recall = 0.0972, Jaccard score = 0.0308
# Iteration 0 fit: [29.6 s]: Recall = 0.43135, Jaccard score = 0.1529, loss = 0.437510, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 1 fit: [28.6 s]: Recall = 0.47309, Jaccard score = 0.1702, loss = 0.403410, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 2 fit: [28.4 s]: Recall = 0.49462, Jaccard score = 0.1793, loss = 0.380855, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 3 fit: [28.4 s]: Recall = 0.51389, Jaccard score = 0.1876, loss = 0.361493, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 4 fit: [28.3 s]: Recall = 0.52791, Jaccard score = 0.1937, loss = 0.344204, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 5 fit: [28.6 s]: Recall = 0.53667, Jaccard score = 0.1976, loss = 0.328824, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 6 fit: [28.5 s]: Recall = 0.54806, Jaccard score = 0.2026, loss = 0.315236, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 7 fit: [28.6 s]: Recall = 0.55688, Jaccard score = 0.2066, loss = 0.303132, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 8 fit: [29.3 s]: Recall = 0.56114, Jaccard score = 0.2085, loss = 0.290168, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 9 fit: [28.4 s]: Recall = 0.56896, Jaccard score = 0.2120, loss = 0.279114, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 10 fit: [28.3 s]: Recall = 0.57034, Jaccard score = 0.2126, loss = 0.268464, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 11 fit: [28.2 s]: Recall = 0.58173, Jaccard score = 0.2178, loss = 0.257804, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 12 fit: [28.2 s]: Recall = 0.58786, Jaccard score = 0.2206, loss = 0.247607, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 13 fit: [28.6 s]: Recall = 0.58824, Jaccard score = 0.2208, loss = 0.238120, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 14 fit: [28.2 s]: Recall = 0.59218, Jaccard score = 0.2226, loss = 0.229665, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 15 fit: [28.5 s]: Recall = 0.59537, Jaccard score = 0.2240, loss = 0.220178, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 16 fit: [28.4 s]: Recall = 0.59531, Jaccard score = 0.2240, loss = 0.212663, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [28.5 s]: Recall = 0.60063, Jaccard score = 0.2265, loss = 0.204563, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 18 fit: [28.9 s]: Recall = 0.60275, Jaccard score = 0.2274, loss = 0.196171, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 19 fit: [28.5 s]: Recall = 0.60895, Jaccard score = 0.2303, loss = 0.190137, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 20 fit: [28.5 s]: Recall = 0.61333, Jaccard score = 0.2324, loss = 0.183813, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 21 fit: [28.5 s]: Recall = 0.61521, Jaccard score = 0.2332, loss = 0.177799, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 22 fit: [28.4 s]: Recall = 0.61646, Jaccard score = 0.2338, loss = 0.169889, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 23 fit: [28.5 s]: Recall = 0.61909, Jaccard score = 0.2351, loss = 0.165615, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 24 fit: [28.1 s]: Recall = 0.62034, Jaccard score = 0.2356, loss = 0.160464, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 25 fit: [28.6 s]: Recall = 0.61727, Jaccard score = 0.2342, loss = 0.156149, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 26 fit: [28.4 s]: Recall = 0.62359, Jaccard score = 0.2372, loss = 0.149489, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.62334, Jaccard score = 0.2371, loss = 0.145343, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 28 fit: [28.6 s]: Recall = 0.62497, Jaccard score = 0.2378, loss = 0.141948, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 29 fit: [28.6 s]: Recall = 0.62441, Jaccard score = 0.2376, loss = 0.138058, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 30 fit: [28.4 s]: Recall = 0.62885, Jaccard score = 0.2397, loss = 0.133688, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 31 fit: [28.6 s]: Recall = 0.63605, Jaccard score = 0.2431, loss = 0.129179, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 32 fit: [28.5 s]: Recall = 0.63492, Jaccard score = 0.2425, loss = 0.126760, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 33 fit: [28.6 s]: Recall = 0.63317, Jaccard score = 0.2417, loss = 0.122990, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 34 fit: [28.3 s]: Recall = 0.63667, Jaccard score = 0.2434, loss = 0.120006, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 35 fit: [28.1 s]: Recall = 0.63680, Jaccard score = 0.2434, loss = 0.116677, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 36 fit: [28.4 s]: Recall = 0.63561, Jaccard score = 0.2429, loss = 0.113720, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 37 fit: [28.7 s]: Recall = 0.63642, Jaccard score = 0.2432, loss = 0.111547, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 38 fit: [28.6 s]: Recall = 0.64380, Jaccard score = 0.2468, loss = 0.108496, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 39 fit: [28.4 s]: Recall = 0.64412, Jaccard score = 0.2469, loss = 0.106054, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 40 fit: [28.8 s]: Recall = 0.64556, Jaccard score = 0.2476, loss = 0.104162, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 41 fit: [28.5 s]: Recall = 0.64374, Jaccard score = 0.2467, loss = 0.101685, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 42 fit: [29.2 s]: Recall = 0.64230, Jaccard score = 0.2460, loss = 0.099238, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 43 fit: [28.5 s]: Recall = 0.64869, Jaccard score = 0.2491, loss = 0.098161, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 44 fit: [28.3 s]: Recall = 0.64612, Jaccard score = 0.2479, loss = 0.095509, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 45 fit: [28.5 s]: Recall = 0.64656, Jaccard score = 0.2481, loss = 0.093329, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 46 fit: [28.6 s]: Recall = 0.64762, Jaccard score = 0.2486, loss = 0.091653, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 47 fit: [28.3 s]: Recall = 0.64650, Jaccard score = 0.2480, loss = 0.090439, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 48 fit: [28.3 s]: Recall = 0.64906, Jaccard score = 0.2493, loss = 0.088684, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 49 fit: [28.3 s]: Recall = 0.64919, Jaccard score = 0.2493, loss = 0.087753, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 50 fit: [28.7 s]: Recall = 0.64587, Jaccard score = 0.2477, loss = 0.085335, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 51 fit: [28.3 s]: Recall = 0.65131, Jaccard score = 0.2504, loss = 0.084014, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 52 fit: [28.2 s]: Recall = 0.65413, Jaccard score = 0.2517, loss = 0.082851, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 53 fit: [28.4 s]: Recall = 0.64969, Jaccard score = 0.2496, loss = 0.080545, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 54 fit: [28.7 s]: Recall = 0.64837, Jaccard score = 0.2489, loss = 0.079465, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 55 fit: [28.4 s]: Recall = 0.64906, Jaccard score = 0.2493, loss = 0.078182, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 56 fit: [28.6 s]: Recall = 0.65338, Jaccard score = 0.2514, loss = 0.077317, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 57 fit: [28.4 s]: Recall = 0.65125, Jaccard score = 0.2503, loss = 0.075274, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 58 fit: [28.4 s]: Recall = 0.65344, Jaccard score = 0.2514, loss = 0.074941, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 59 fit: [28.2 s]: Recall = 0.65000, Jaccard score = 0.2497, loss = 0.073077, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 60 fit: [28.1 s]: Recall = 0.65094, Jaccard score = 0.2502, loss = 0.072581, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 61 fit: [28.3 s]: Recall = 0.65832, Jaccard score = 0.2537, loss = 0.071709, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 62 fit: [28.4 s]: Recall = 0.65763, Jaccard score = 0.2534, loss = 0.070438, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 63 fit: [28.7 s]: Recall = 0.65300, Jaccard score = 0.2512, loss = 0.070327, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 64 fit: [28.8 s]: Recall = 0.66026, Jaccard score = 0.2547, loss = 0.068402, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 65 fit: [28.2 s]: Recall = 0.65369, Jaccard score = 0.2515, loss = 0.067375, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 66 fit: [28.5 s]: Recall = 0.65544, Jaccard score = 0.2523, loss = 0.065854, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 67 fit: [28.3 s]: Recall = 0.65532, Jaccard score = 0.2523, loss = 0.065964, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 68 fit: [28.7 s]: Recall = 0.65738, Jaccard score = 0.2533, loss = 0.065249, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 69 fit: [28.5 s]: Recall = 0.65238, Jaccard score = 0.2509, loss = 0.063841, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 70 fit: [28.3 s]: Recall = 0.65989, Jaccard score = 0.2545, loss = 0.062496, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 71 fit: [28.6 s]: Recall = 0.65225, Jaccard score = 0.2508, loss = 0.062964, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 72 fit: [28.4 s]: Recall = 0.65426, Jaccard score = 0.2518, loss = 0.061678, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 73 fit: [28.3 s]: Recall = 0.65294, Jaccard score = 0.2511, loss = 0.060854, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [28.4 s]: Recall = 0.65413, Jaccard score = 0.2517, loss = 0.060629, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 75 fit: [28.3 s]: Recall = 0.65300, Jaccard score = 0.2512, loss = 0.060125, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 76 fit: [28.7 s]: Recall = 0.65238, Jaccard score = 0.2509, loss = 0.058871, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 77 fit: [28.2 s]: Recall = 0.65632, Jaccard score = 0.2528, loss = 0.058308, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 78 fit: [28.7 s]: Recall = 0.65006, Jaccard score = 0.2498, loss = 0.058469, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 79 fit: [28.2 s]: Recall = 0.65119, Jaccard score = 0.2503, loss = 0.057800, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 80 fit: [28.3 s]: Recall = 0.65701, Jaccard score = 0.2531, loss = 0.056983, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 81 fit: [28.4 s]: Recall = 0.65882, Jaccard score = 0.2540, loss = 0.056445, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 82 fit: [28.5 s]: Recall = 0.65713, Jaccard score = 0.2532, loss = 0.056567, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 83 fit: [28.4 s]: Recall = 0.65144, Jaccard score = 0.2504, loss = 0.056152, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 84 fit: [28.7 s]: Recall = 0.65457, Jaccard score = 0.2519, loss = 0.055211, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 85 fit: [28.5 s]: Recall = 0.65476, Jaccard score = 0.2520, loss = 0.054427, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 86 fit: [28.4 s]: Recall = 0.66521, Jaccard score = 0.2571, loss = 0.054149, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 87 fit: [28.6 s]: Recall = 0.66058, Jaccard score = 0.2548, loss = 0.053708, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 88 fit: [28.5 s]: Recall = 0.65845, Jaccard score = 0.2538, loss = 0.052583, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 89 fit: [28.5 s]: Recall = 0.65770, Jaccard score = 0.2534, loss = 0.053201, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 90 fit: [28.8 s]: Recall = 0.65388, Jaccard score = 0.2516, loss = 0.052305, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 91 fit: [28.3 s]: Recall = 0.65225, Jaccard score = 0.2508, loss = 0.051392, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 92 fit: [28.6 s]: Recall = 0.65375, Jaccard score = 0.2515, loss = 0.050767, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 93 fit: [28.4 s]: Recall = 0.65432, Jaccard score = 0.2518, loss = 0.051537, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 94 fit: [28.3 s]: Recall = 0.65313, Jaccard score = 0.2512, loss = 0.050989, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 95 fit: [28.4 s]: Recall = 0.65720, Jaccard score = 0.2532, loss = 0.050070, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 96 fit: [28.8 s]: Recall = 0.64912, Jaccard score = 0.2493, loss = 0.049711, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 97 fit: [28.6 s]: Recall = 0.66202, Jaccard score = 0.2555, loss = 0.050549, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 98 fit: [28.1 s]: Recall = 0.65770, Jaccard score = 0.2534, loss = 0.048653, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 99 fit: [28.8 s]: Recall = 0.66001, Jaccard score = 0.2546, loss = 0.048585, gradient norm = 1.0000, eval: [15.7 s]
# End. Best Iteration 86:  Recall = 0.6652, Jaccard score = 0.2571. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
# The average best performance after k-fold 4 is: Recall = 0.6599988447262186, Jaccard score = 0.253022389060786
# 
# Performing k-fold 5
# Init: Recall = 0.0959, Jaccard score = 0.0303
# Iteration 0 fit: [29.6 s]: Recall = 0.42575, Jaccard score = 0.1502, loss = 0.436608, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 1 fit: [28.2 s]: Recall = 0.46920, Jaccard score = 0.1681, loss = 0.402473, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 2 fit: [28.1 s]: Recall = 0.49683, Jaccard score = 0.1798, loss = 0.381322, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 3 fit: [28.0 s]: Recall = 0.51843, Jaccard score = 0.1891, loss = 0.363028, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 4 fit: [28.1 s]: Recall = 0.52823, Jaccard score = 0.1933, loss = 0.346911, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 5 fit: [28.3 s]: Recall = 0.54204, Jaccard score = 0.1994, loss = 0.331690, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 6 fit: [28.4 s]: Recall = 0.55498, Jaccard score = 0.2051, loss = 0.316914, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 7 fit: [28.2 s]: Recall = 0.55975, Jaccard score = 0.2072, loss = 0.304630, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 8 fit: [28.3 s]: Recall = 0.56571, Jaccard score = 0.2099, loss = 0.291749, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 9 fit: [28.3 s]: Recall = 0.57162, Jaccard score = 0.2126, loss = 0.279753, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 10 fit: [28.2 s]: Recall = 0.57896, Jaccard score = 0.2159, loss = 0.269200, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 11 fit: [28.3 s]: Recall = 0.58455, Jaccard score = 0.2184, loss = 0.258468, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 12 fit: [28.6 s]: Recall = 0.58882, Jaccard score = 0.2204, loss = 0.247844, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 13 fit: [28.3 s]: Recall = 0.59479, Jaccard score = 0.2231, loss = 0.238373, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 14 fit: [28.2 s]: Recall = 0.59837, Jaccard score = 0.2248, loss = 0.229693, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 15 fit: [27.8 s]: Recall = 0.60320, Jaccard score = 0.2270, loss = 0.220975, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 16 fit: [28.3 s]: Recall = 0.60370, Jaccard score = 0.2272, loss = 0.213425, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 17 fit: [28.3 s]: Recall = 0.60389, Jaccard score = 0.2273, loss = 0.204843, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 18 fit: [28.1 s]: Recall = 0.60879, Jaccard score = 0.2296, loss = 0.197621, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 19 fit: [28.3 s]: Recall = 0.61224, Jaccard score = 0.2312, loss = 0.189485, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 20 fit: [28.4 s]: Recall = 0.61105, Jaccard score = 0.2306, loss = 0.183264, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 21 fit: [28.3 s]: Recall = 0.61356, Jaccard score = 0.2318, loss = 0.177157, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 22 fit: [28.1 s]: Recall = 0.61815, Jaccard score = 0.2339, loss = 0.171949, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 23 fit: [28.4 s]: Recall = 0.61231, Jaccard score = 0.2312, loss = 0.164753, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 24 fit: [28.0 s]: Recall = 0.61959, Jaccard score = 0.2346, loss = 0.161379, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 25 fit: [28.1 s]: Recall = 0.62166, Jaccard score = 0.2356, loss = 0.154531, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 26 fit: [27.9 s]: Recall = 0.62179, Jaccard score = 0.2356, loss = 0.150016, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.62267, Jaccard score = 0.2360, loss = 0.146248, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 28 fit: [28.4 s]: Recall = 0.62323, Jaccard score = 0.2363, loss = 0.141495, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 29 fit: [28.0 s]: Recall = 0.62549, Jaccard score = 0.2374, loss = 0.137314, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 30 fit: [28.3 s]: Recall = 0.63020, Jaccard score = 0.2396, loss = 0.133323, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 31 fit: [28.0 s]: Recall = 0.62549, Jaccard score = 0.2374, loss = 0.129927, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 32 fit: [28.2 s]: Recall = 0.63140, Jaccard score = 0.2401, loss = 0.126274, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 33 fit: [28.2 s]: Recall = 0.62694, Jaccard score = 0.2380, loss = 0.122458, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 34 fit: [28.1 s]: Recall = 0.63096, Jaccard score = 0.2399, loss = 0.119077, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 35 fit: [27.9 s]: Recall = 0.63152, Jaccard score = 0.2402, loss = 0.116874, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 36 fit: [28.4 s]: Recall = 0.63309, Jaccard score = 0.2409, loss = 0.114369, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 37 fit: [28.1 s]: Recall = 0.63786, Jaccard score = 0.2432, loss = 0.112495, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 38 fit: [28.0 s]: Recall = 0.63209, Jaccard score = 0.2405, loss = 0.108556, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 39 fit: [28.1 s]: Recall = 0.63366, Jaccard score = 0.2412, loss = 0.107240, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 40 fit: [28.3 s]: Recall = 0.63975, Jaccard score = 0.2441, loss = 0.104588, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 41 fit: [27.9 s]: Recall = 0.63925, Jaccard score = 0.2439, loss = 0.101723, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 42 fit: [27.9 s]: Recall = 0.64370, Jaccard score = 0.2460, loss = 0.099626, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 43 fit: [28.4 s]: Recall = 0.63969, Jaccard score = 0.2441, loss = 0.097054, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 44 fit: [28.3 s]: Recall = 0.64546, Jaccard score = 0.2468, loss = 0.095124, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 45 fit: [28.4 s]: Recall = 0.64075, Jaccard score = 0.2446, loss = 0.094194, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 46 fit: [28.2 s]: Recall = 0.63925, Jaccard score = 0.2439, loss = 0.091836, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 47 fit: [28.2 s]: Recall = 0.64383, Jaccard score = 0.2460, loss = 0.090398, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 48 fit: [28.6 s]: Recall = 0.64088, Jaccard score = 0.2446, loss = 0.088336, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 49 fit: [28.5 s]: Recall = 0.64352, Jaccard score = 0.2459, loss = 0.085943, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 50 fit: [28.6 s]: Recall = 0.64308, Jaccard score = 0.2457, loss = 0.084413, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 51 fit: [28.2 s]: Recall = 0.64440, Jaccard score = 0.2463, loss = 0.083189, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 52 fit: [28.3 s]: Recall = 0.64578, Jaccard score = 0.2470, loss = 0.082435, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 53 fit: [28.1 s]: Recall = 0.64634, Jaccard score = 0.2472, loss = 0.080664, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 54 fit: [28.5 s]: Recall = 0.64672, Jaccard score = 0.2474, loss = 0.078644, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 55 fit: [28.1 s]: Recall = 0.64414, Jaccard score = 0.2462, loss = 0.078363, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 56 fit: [28.6 s]: Recall = 0.64772, Jaccard score = 0.2479, loss = 0.076268, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 57 fit: [28.2 s]: Recall = 0.64785, Jaccard score = 0.2480, loss = 0.074685, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 58 fit: [28.0 s]: Recall = 0.64760, Jaccard score = 0.2478, loss = 0.073382, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 59 fit: [28.2 s]: Recall = 0.64998, Jaccard score = 0.2490, loss = 0.073029, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 60 fit: [28.3 s]: Recall = 0.64634, Jaccard score = 0.2472, loss = 0.071460, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 61 fit: [28.3 s]: Recall = 0.64892, Jaccard score = 0.2485, loss = 0.070329, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 62 fit: [28.2 s]: Recall = 0.64917, Jaccard score = 0.2486, loss = 0.069074, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 63 fit: [28.0 s]: Recall = 0.64917, Jaccard score = 0.2486, loss = 0.069296, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 64 fit: [28.3 s]: Recall = 0.64590, Jaccard score = 0.2470, loss = 0.068729, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 65 fit: [28.3 s]: Recall = 0.64779, Jaccard score = 0.2479, loss = 0.068058, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 66 fit: [28.0 s]: Recall = 0.64565, Jaccard score = 0.2469, loss = 0.066541, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 67 fit: [28.1 s]: Recall = 0.65093, Jaccard score = 0.2494, loss = 0.065378, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 68 fit: [28.4 s]: Recall = 0.65036, Jaccard score = 0.2492, loss = 0.064365, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 69 fit: [28.3 s]: Recall = 0.64948, Jaccard score = 0.2487, loss = 0.063806, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 70 fit: [28.0 s]: Recall = 0.64860, Jaccard score = 0.2483, loss = 0.063406, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 71 fit: [27.9 s]: Recall = 0.65501, Jaccard score = 0.2514, loss = 0.062214, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 72 fit: [28.3 s]: Recall = 0.65287, Jaccard score = 0.2504, loss = 0.061584, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 73 fit: [28.1 s]: Recall = 0.65237, Jaccard score = 0.2501, loss = 0.061292, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [28.3 s]: Recall = 0.64810, Jaccard score = 0.2481, loss = 0.059782, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 75 fit: [28.1 s]: Recall = 0.65237, Jaccard score = 0.2501, loss = 0.058653, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 76 fit: [28.6 s]: Recall = 0.65042, Jaccard score = 0.2492, loss = 0.058169, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 77 fit: [28.7 s]: Recall = 0.65250, Jaccard score = 0.2502, loss = 0.058200, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 78 fit: [28.5 s]: Recall = 0.64911, Jaccard score = 0.2486, loss = 0.056798, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 79 fit: [28.5 s]: Recall = 0.64320, Jaccard score = 0.2457, loss = 0.056354, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 80 fit: [28.3 s]: Recall = 0.64647, Jaccard score = 0.2473, loss = 0.056000, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 81 fit: [28.3 s]: Recall = 0.65344, Jaccard score = 0.2506, loss = 0.055695, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 82 fit: [28.0 s]: Recall = 0.65275, Jaccard score = 0.2503, loss = 0.054688, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 83 fit: [28.1 s]: Recall = 0.64917, Jaccard score = 0.2486, loss = 0.054597, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 84 fit: [28.3 s]: Recall = 0.64785, Jaccard score = 0.2480, loss = 0.054921, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 85 fit: [28.0 s]: Recall = 0.65080, Jaccard score = 0.2494, loss = 0.054703, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 86 fit: [28.4 s]: Recall = 0.65061, Jaccard score = 0.2493, loss = 0.051732, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 87 fit: [28.0 s]: Recall = 0.65193, Jaccard score = 0.2499, loss = 0.052959, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 88 fit: [28.6 s]: Recall = 0.65074, Jaccard score = 0.2493, loss = 0.052266, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 89 fit: [28.2 s]: Recall = 0.64571, Jaccard score = 0.2469, loss = 0.051654, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 90 fit: [28.7 s]: Recall = 0.65137, Jaccard score = 0.2496, loss = 0.050537, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 91 fit: [28.1 s]: Recall = 0.64527, Jaccard score = 0.2467, loss = 0.050615, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 92 fit: [28.4 s]: Recall = 0.65212, Jaccard score = 0.2500, loss = 0.050259, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 93 fit: [28.3 s]: Recall = 0.65570, Jaccard score = 0.2517, loss = 0.049518, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 94 fit: [28.4 s]: Recall = 0.65319, Jaccard score = 0.2505, loss = 0.050310, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 95 fit: [28.2 s]: Recall = 0.65394, Jaccard score = 0.2509, loss = 0.047991, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 96 fit: [28.2 s]: Recall = 0.64867, Jaccard score = 0.2483, loss = 0.048149, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 97 fit: [28.1 s]: Recall = 0.65821, Jaccard score = 0.2529, loss = 0.048558, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 98 fit: [28.3 s]: Recall = 0.65589, Jaccard score = 0.2518, loss = 0.048361, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 99 fit: [28.1 s]: Recall = 0.65658, Jaccard score = 0.2521, loss = 0.047950, gradient norm = 1.0000, eval: [15.9 s]
# End. Best Iteration 97:  Recall = 0.6582, Jaccard score = 0.2529. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569529273.h5
# The average best performance after k-fold 5 is: Recall = 0.6596411479944757, Jaccard score = 0.2530030522857159
