--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--early_stopping: "35"
--percentage: "0.0"
--test_dataset: "1"
--dataset_name_prepend: "cold_0.0_"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.0_', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.0, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1563971284.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1563971284.h5
# Load data done [1.5 s]. #user=20000, #item=2000, #train=143502, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0294, Jaccard score = 0.0225
# Iteration 0 fit: [23.2 s]: Recall = 0.1634, Jaccard score = 0.1392, loss = 0.4319, eval: [6.5 s]
# Iteration 1 fit: [23.4 s]: Recall = 0.1852, Jaccard score = 0.1608, loss = 0.3906, eval: [6.7 s]
# Iteration 2 fit: [22.8 s]: Recall = 0.1877, Jaccard score = 0.1633, loss = 0.3617, eval: [6.6 s]
# Iteration 3 fit: [22.9 s]: Recall = 0.1875, Jaccard score = 0.1631, loss = 0.3336, eval: [6.6 s]
# Iteration 4 fit: [22.9 s]: Recall = 0.1787, Jaccard score = 0.1542, loss = 0.3055, eval: [6.6 s]
# Iteration 5 fit: [23.2 s]: Recall = 0.1740, Jaccard score = 0.1496, loss = 0.2801, eval: [6.6 s]
# Iteration 6 fit: [23.1 s]: Recall = 0.1655, Jaccard score = 0.1413, loss = 0.2555, eval: [6.6 s]
# Iteration 7 fit: [23.2 s]: Recall = 0.1622, Jaccard score = 0.1381, loss = 0.2327, eval: [6.6 s]
# Iteration 8 fit: [23.0 s]: Recall = 0.1567, Jaccard score = 0.1327, loss = 0.2114, eval: [6.5 s]
# Iteration 9 fit: [22.7 s]: Recall = 0.1520, Jaccard score = 0.1283, loss = 0.1928, eval: [6.7 s]
# Iteration 10 fit: [23.1 s]: Recall = 0.1453, Jaccard score = 0.1220, loss = 0.1752, eval: [6.6 s]
# Iteration 11 fit: [23.0 s]: Recall = 0.1439, Jaccard score = 0.1206, loss = 0.1589, eval: [6.5 s]
# Iteration 12 fit: [23.1 s]: Recall = 0.1407, Jaccard score = 0.1176, loss = 0.1446, eval: [6.6 s]
# Iteration 13 fit: [23.0 s]: Recall = 0.1380, Jaccard score = 0.1151, loss = 0.1321, eval: [6.6 s]
# Iteration 14 fit: [23.0 s]: Recall = 0.1394, Jaccard score = 0.1164, loss = 0.1205, eval: [6.6 s]
# Iteration 15 fit: [22.8 s]: Recall = 0.1348, Jaccard score = 0.1122, loss = 0.1109, eval: [6.5 s]
# Iteration 16 fit: [23.2 s]: Recall = 0.1342, Jaccard score = 0.1116, loss = 0.1010, eval: [6.6 s]
# Iteration 17 fit: [23.1 s]: Recall = 0.1339, Jaccard score = 0.1113, loss = 0.0935, eval: [6.6 s]
# Iteration 18 fit: [23.0 s]: Recall = 0.1312, Jaccard score = 0.1088, loss = 0.0877, eval: [6.7 s]
# Iteration 19 fit: [23.1 s]: Recall = 0.1339, Jaccard score = 0.1113, loss = 0.0822, eval: [6.6 s]
# Iteration 20 fit: [23.0 s]: Recall = 0.1307, Jaccard score = 0.1084, loss = 0.0760, eval: [6.6 s]
# Iteration 21 fit: [23.1 s]: Recall = 0.1267, Jaccard score = 0.1047, loss = 0.0717, eval: [6.7 s]
# Iteration 22 fit: [22.8 s]: Recall = 0.1273, Jaccard score = 0.1052, loss = 0.0674, eval: [6.6 s]
# Iteration 23 fit: [23.3 s]: Recall = 0.1316, Jaccard score = 0.1092, loss = 0.0638, eval: [6.6 s]
# Iteration 24 fit: [23.3 s]: Recall = 0.1314, Jaccard score = 0.1089, loss = 0.0605, eval: [6.5 s]
# Iteration 25 fit: [22.9 s]: Recall = 0.1265, Jaccard score = 0.1045, loss = 0.0571, eval: [6.7 s]
# Iteration 26 fit: [23.0 s]: Recall = 0.1257, Jaccard score = 0.1038, loss = 0.0550, eval: [6.5 s]
# Iteration 27 fit: [23.5 s]: Recall = 0.1265, Jaccard score = 0.1045, loss = 0.0523, eval: [6.6 s]
# Iteration 28 fit: [23.0 s]: Recall = 0.1219, Jaccard score = 0.1003, loss = 0.0495, eval: [6.6 s]
# Iteration 29 fit: [23.2 s]: Recall = 0.1256, Jaccard score = 0.1037, loss = 0.0470, eval: [6.6 s]
# Iteration 30 fit: [22.7 s]: Recall = 0.1242, Jaccard score = 0.1024, loss = 0.0462, eval: [6.6 s]
# Iteration 31 fit: [22.9 s]: Recall = 0.1265, Jaccard score = 0.1045, loss = 0.0439, eval: [6.6 s]
# Iteration 32 fit: [23.0 s]: Recall = 0.1253, Jaccard score = 0.1034, loss = 0.0421, eval: [6.7 s]
# Iteration 33 fit: [22.8 s]: Recall = 0.1248, Jaccard score = 0.1029, loss = 0.0402, eval: [6.7 s]
# Iteration 34 fit: [22.7 s]: Recall = 0.1254, Jaccard score = 0.1035, loss = 0.0383, eval: [6.6 s]
# Iteration 35 fit: [23.0 s]: Recall = 0.1269, Jaccard score = 0.1048, loss = 0.0378, eval: [6.5 s]
# Iteration 36 fit: [23.1 s]: Recall = 0.1251, Jaccard score = 0.1032, loss = 0.0360, eval: [6.6 s]
# Iteration 37 fit: [23.1 s]: Recall = 0.1226, Jaccard score = 0.1009, loss = 0.0346, eval: [6.7 s]
# End. Best Iteration 2:  Recall = 0.1877, Jaccard score = 0.1633. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1563971284.h5
# Model test performed 
# Recall score: 0.051587301587301584     Jaccard score: 0.04033092037228542