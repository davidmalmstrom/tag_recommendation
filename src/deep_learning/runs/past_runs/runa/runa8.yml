--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "20"
--layers: "[128,64,32]"
--reg_layers: "[0,0,0]"
#--mf_pretrain: "Pretrain/ml-1m_GMF_8_1501651698.h5"
#--mlp_pretrain: "Pretrain/ml-1m_MLP_[64,32,16,8]_1501652038.h5"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=20, eval_recall=1, is_tag=1, layers='[128,64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0]', reg_mf=0, topk=3, verbose=1) 
# Load data done [2.7 s]. #user=17435, #item=986, #train=133152, #test=17435
# Init: Recall = 0.0013, Jaccard score = 0.0007
# Iteration 0 fit: [7.8 s]: Recall = 0.0258, Jaccard score = 0.0141, loss = 0.4593, val_loss = 0.0000, eval: [8.2 s]
# Iteration 1 fit: [7.1 s]: Recall = 0.0266, Jaccard score = 0.0145, loss = 0.4407, val_loss = 0.0000, eval: [8.2 s]
# Iteration 2 fit: [7.1 s]: Recall = 0.0281, Jaccard score = 0.0154, loss = 0.4377, val_loss = 0.0000, eval: [8.2 s]
# Iteration 3 fit: [7.1 s]: Recall = 0.0222, Jaccard score = 0.0121, loss = 0.4330, val_loss = 0.0000, eval: [8.2 s]
# Iteration 4 fit: [7.1 s]: Recall = 0.0237, Jaccard score = 0.0130, loss = 0.4269, val_loss = 0.0000, eval: [8.2 s]
# Iteration 5 fit: [7.1 s]: Recall = 0.0224, Jaccard score = 0.0122, loss = 0.4189, val_loss = 0.0000, eval: [8.2 s]
# Iteration 6 fit: [7.1 s]: Recall = 0.0195, Jaccard score = 0.0107, loss = 0.4074, val_loss = 0.0000, eval: [8.2 s]
# Iteration 7 fit: [7.1 s]: Recall = 0.0180, Jaccard score = 0.0098, loss = 0.3945, val_loss = 0.0000, eval: [8.2 s]
# Iteration 8 fit: [7.1 s]: Recall = 0.0186, Jaccard score = 0.0101, loss = 0.3801, val_loss = 0.0000, eval: [8.2 s]
# Iteration 9 fit: [7.6 s]: Recall = 0.0180, Jaccard score = 0.0098, loss = 0.3662, val_loss = 0.0000, eval: [8.6 s]
# Iteration 10 fit: [7.1 s]: Recall = 0.0192, Jaccard score = 0.0104, loss = 0.3517, val_loss = 0.0000, eval: [8.2 s]
# Iteration 11 fit: [7.1 s]: Recall = 0.0180, Jaccard score = 0.0098, loss = 0.3380, val_loss = 0.0000, eval: [8.3 s]
# Iteration 12 fit: [7.2 s]: Recall = 0.0211, Jaccard score = 0.0115, loss = 0.3243, val_loss = 0.0000, eval: [8.2 s]
# Iteration 13 fit: [7.1 s]: Recall = 0.0203, Jaccard score = 0.0111, loss = 0.3103, val_loss = 0.0000, eval: [8.1 s]
# Iteration 14 fit: [7.1 s]: Recall = 0.0251, Jaccard score = 0.0137, loss = 0.2981, val_loss = 0.0000, eval: [8.2 s]
# Iteration 15 fit: [7.1 s]: Recall = 0.0194, Jaccard score = 0.0106, loss = 0.2853, val_loss = 0.0000, eval: [8.2 s]
# Iteration 16 fit: [7.1 s]: Recall = 0.0220, Jaccard score = 0.0120, loss = 0.2732, val_loss = 0.0000, eval: [8.2 s]
# Iteration 17 fit: [7.1 s]: Recall = 0.0230, Jaccard score = 0.0125, loss = 0.2630, val_loss = 0.0000, eval: [8.2 s]
# Iteration 18 fit: [7.1 s]: Recall = 0.0211, Jaccard score = 0.0115, loss = 0.2523, val_loss = 0.0000, eval: [8.7 s]
# Iteration 19 fit: [7.1 s]: Recall = 0.0226, Jaccard score = 0.0123, loss = 0.2410, val_loss = 0.0000, eval: [8.2 s]
# End. Best Iteration 2:  Recall = 0.0281, Jaccard score = 0.0154. 
# The best NeuMF model is saved to Pretrain/_MLP_8_[128,64,32]_1559914069.h5
