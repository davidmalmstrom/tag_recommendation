--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "600"
--early_stopping: "150"
--lr: "0.001"
--layers: "[512,750,96]"
--reg_layers: "[0,0,0]"
--test_dataset: "1"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=150, epochs=600, eval_recall=1, is_tag=1, layers='[512,750,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0]', reg_mf=0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,96]_1569479962.h5
--weights_path: Pretrain/_MLP_8_[512,750,96]_1569479962.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_5 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# bn_user (BatchNormalization)    (None, 256)          1024        flatten_5[0][0]                  
# __________________________________________________________________________________________________
# flatten_6 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# dropout_9 (Dropout)             (None, 256)          0           bn_user[0][0]                    
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# bn_item (BatchNormalization)    (None, 256)          1024        flatten_6[0][0]                  
# __________________________________________________________________________________________________
# concatenate_5 (Concatenate)     (None, 1256)         0           dropout_9[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_10 (Dropout)            (None, 256)          0           bn_item[0][0]                    
# __________________________________________________________________________________________________
# concatenate_6 (Concatenate)     (None, 1512)         0           concatenate_5[0][0]              
#                                                                  dropout_10[0][0]                 
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_6[0][0]              
# __________________________________________________________________________________________________
# dropout_11 (Dropout)            (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 96)           72096       dropout_11[0][0]                 
# __________________________________________________________________________________________________
# dropout_12 (Dropout)            (None, 96)           0           layer2[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_12[0][0]                 
# ==================================================================================================
# Total params: 6,840,991
# Trainable params: 6,839,967
# Non-trainable params: 1,024
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0971, Jaccard score = 0.0305
# Iteration 0 fit: [34.5 s]: Recall = 0.44437, Jaccard score = 0.1565, loss = 0.435858, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 1 fit: [33.3 s]: Recall = 0.49189, Jaccard score = 0.1761, loss = 0.398003, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 2 fit: [33.2 s]: Recall = 0.51199, Jaccard score = 0.1847, loss = 0.375254, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 3 fit: [33.3 s]: Recall = 0.52730, Jaccard score = 0.1912, loss = 0.356200, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 4 fit: [33.2 s]: Recall = 0.54192, Jaccard score = 0.1976, loss = 0.339803, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 5 fit: [33.3 s]: Recall = 0.55038, Jaccard score = 0.2013, loss = 0.324759, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 6 fit: [33.3 s]: Recall = 0.55403, Jaccard score = 0.2029, loss = 0.310769, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 7 fit: [33.3 s]: Recall = 0.55929, Jaccard score = 0.2052, loss = 0.297372, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 8 fit: [33.2 s]: Recall = 0.56751, Jaccard score = 0.2089, loss = 0.285578, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 9 fit: [33.3 s]: Recall = 0.56683, Jaccard score = 0.2086, loss = 0.273830, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 10 fit: [33.2 s]: Recall = 0.57025, Jaccard score = 0.2101, loss = 0.262219, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 11 fit: [33.3 s]: Recall = 0.57311, Jaccard score = 0.2114, loss = 0.253491, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 12 fit: [33.2 s]: Recall = 0.57802, Jaccard score = 0.2136, loss = 0.243666, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 13 fit: [33.3 s]: Recall = 0.57665, Jaccard score = 0.2129, loss = 0.234981, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 14 fit: [33.1 s]: Recall = 0.58053, Jaccard score = 0.2147, loss = 0.226075, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 15 fit: [33.2 s]: Recall = 0.58533, Jaccard score = 0.2168, loss = 0.217316, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 16 fit: [33.2 s]: Recall = 0.58967, Jaccard score = 0.2188, loss = 0.209825, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 17 fit: [33.3 s]: Recall = 0.58750, Jaccard score = 0.2178, loss = 0.203358, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 18 fit: [33.2 s]: Recall = 0.59162, Jaccard score = 0.2197, loss = 0.196450, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 19 fit: [33.3 s]: Recall = 0.59824, Jaccard score = 0.2227, loss = 0.189998, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 20 fit: [33.2 s]: Recall = 0.59196, Jaccard score = 0.2198, loss = 0.183733, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 21 fit: [33.2 s]: Recall = 0.60098, Jaccard score = 0.2239, loss = 0.178955, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 22 fit: [33.2 s]: Recall = 0.60190, Jaccard score = 0.2244, loss = 0.173274, gradient norm = 1.0000, eval: [9.0 s]
# Iteration 23 fit: [33.3 s]: Recall = 0.60304, Jaccard score = 0.2249, loss = 0.166956, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 24 fit: [33.2 s]: Recall = 0.60601, Jaccard score = 0.2262, loss = 0.162845, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 25 fit: [33.3 s]: Recall = 0.60864, Jaccard score = 0.2274, loss = 0.158115, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 26 fit: [33.2 s]: Recall = 0.60921, Jaccard score = 0.2277, loss = 0.153882, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 27 fit: [33.3 s]: Recall = 0.61126, Jaccard score = 0.2286, loss = 0.149469, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 28 fit: [33.2 s]: Recall = 0.60829, Jaccard score = 0.2273, loss = 0.145054, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 29 fit: [33.2 s]: Recall = 0.61252, Jaccard score = 0.2292, loss = 0.141917, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 30 fit: [33.2 s]: Recall = 0.61458, Jaccard score = 0.2302, loss = 0.138142, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 31 fit: [33.3 s]: Recall = 0.61378, Jaccard score = 0.2298, loss = 0.134889, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 32 fit: [33.2 s]: Recall = 0.61675, Jaccard score = 0.2312, loss = 0.131858, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 33 fit: [33.3 s]: Recall = 0.62063, Jaccard score = 0.2330, loss = 0.128923, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 34 fit: [33.3 s]: Recall = 0.61937, Jaccard score = 0.2324, loss = 0.125261, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 35 fit: [33.2 s]: Recall = 0.61880, Jaccard score = 0.2321, loss = 0.121978, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 36 fit: [33.2 s]: Recall = 0.61926, Jaccard score = 0.2323, loss = 0.120039, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 37 fit: [33.3 s]: Recall = 0.62634, Jaccard score = 0.2356, loss = 0.116608, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 38 fit: [33.2 s]: Recall = 0.62509, Jaccard score = 0.2350, loss = 0.113975, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 39 fit: [33.3 s]: Recall = 0.62623, Jaccard score = 0.2356, loss = 0.112440, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 40 fit: [33.2 s]: Recall = 0.62680, Jaccard score = 0.2358, loss = 0.109844, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 41 fit: [33.2 s]: Recall = 0.63023, Jaccard score = 0.2374, loss = 0.108031, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 42 fit: [33.2 s]: Recall = 0.63411, Jaccard score = 0.2392, loss = 0.105993, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 43 fit: [33.3 s]: Recall = 0.62463, Jaccard score = 0.2348, loss = 0.103088, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 44 fit: [33.2 s]: Recall = 0.63103, Jaccard score = 0.2378, loss = 0.101830, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 45 fit: [33.3 s]: Recall = 0.62988, Jaccard score = 0.2373, loss = 0.099428, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 46 fit: [33.2 s]: Recall = 0.62874, Jaccard score = 0.2367, loss = 0.097749, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 47 fit: [33.2 s]: Recall = 0.63045, Jaccard score = 0.2375, loss = 0.095398, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 48 fit: [33.2 s]: Recall = 0.63537, Jaccard score = 0.2398, loss = 0.094022, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 49 fit: [33.3 s]: Recall = 0.63560, Jaccard score = 0.2399, loss = 0.092091, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 50 fit: [33.2 s]: Recall = 0.63525, Jaccard score = 0.2398, loss = 0.090773, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 51 fit: [33.3 s]: Recall = 0.63605, Jaccard score = 0.2401, loss = 0.089403, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 52 fit: [33.2 s]: Recall = 0.63651, Jaccard score = 0.2404, loss = 0.087721, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 53 fit: [33.3 s]: Recall = 0.64428, Jaccard score = 0.2440, loss = 0.086308, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 54 fit: [33.2 s]: Recall = 0.63491, Jaccard score = 0.2396, loss = 0.085002, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 55 fit: [33.2 s]: Recall = 0.63525, Jaccard score = 0.2398, loss = 0.083416, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 56 fit: [33.2 s]: Recall = 0.63468, Jaccard score = 0.2395, loss = 0.082146, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 57 fit: [33.2 s]: Recall = 0.63822, Jaccard score = 0.2412, loss = 0.081617, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 58 fit: [33.2 s]: Recall = 0.63925, Jaccard score = 0.2416, loss = 0.079178, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 59 fit: [33.2 s]: Recall = 0.63891, Jaccard score = 0.2415, loss = 0.078473, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 60 fit: [33.2 s]: Recall = 0.64645, Jaccard score = 0.2450, loss = 0.076831, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 61 fit: [33.3 s]: Recall = 0.64256, Jaccard score = 0.2432, loss = 0.076630, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 62 fit: [33.2 s]: Recall = 0.63982, Jaccard score = 0.2419, loss = 0.075424, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 63 fit: [33.3 s]: Recall = 0.64188, Jaccard score = 0.2429, loss = 0.074211, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 64 fit: [33.2 s]: Recall = 0.64313, Jaccard score = 0.2435, loss = 0.072671, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 65 fit: [33.2 s]: Recall = 0.64096, Jaccard score = 0.2424, loss = 0.072220, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 66 fit: [33.2 s]: Recall = 0.64188, Jaccard score = 0.2429, loss = 0.070670, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 67 fit: [33.2 s]: Recall = 0.64302, Jaccard score = 0.2434, loss = 0.070290, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 68 fit: [33.2 s]: Recall = 0.64508, Jaccard score = 0.2444, loss = 0.068822, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 69 fit: [33.3 s]: Recall = 0.64188, Jaccard score = 0.2429, loss = 0.067916, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 70 fit: [33.2 s]: Recall = 0.64051, Jaccard score = 0.2422, loss = 0.067262, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 71 fit: [33.2 s]: Recall = 0.64074, Jaccard score = 0.2423, loss = 0.066461, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 72 fit: [33.2 s]: Recall = 0.64108, Jaccard score = 0.2425, loss = 0.065492, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 73 fit: [33.2 s]: Recall = 0.64233, Jaccard score = 0.2431, loss = 0.064789, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 74 fit: [33.2 s]: Recall = 0.63994, Jaccard score = 0.2420, loss = 0.063985, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 75 fit: [33.3 s]: Recall = 0.64485, Jaccard score = 0.2443, loss = 0.062713, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 76 fit: [33.2 s]: Recall = 0.64336, Jaccard score = 0.2436, loss = 0.062906, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 77 fit: [33.2 s]: Recall = 0.64782, Jaccard score = 0.2457, loss = 0.061849, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 78 fit: [33.2 s]: Recall = 0.64553, Jaccard score = 0.2446, loss = 0.061138, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 79 fit: [33.2 s]: Recall = 0.64805, Jaccard score = 0.2458, loss = 0.060361, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 80 fit: [33.2 s]: Recall = 0.64565, Jaccard score = 0.2447, loss = 0.059997, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 81 fit: [33.2 s]: Recall = 0.64485, Jaccard score = 0.2443, loss = 0.059036, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 82 fit: [33.2 s]: Recall = 0.64793, Jaccard score = 0.2457, loss = 0.057929, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 83 fit: [33.2 s]: Recall = 0.64405, Jaccard score = 0.2439, loss = 0.057256, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 84 fit: [33.2 s]: Recall = 0.65319, Jaccard score = 0.2482, loss = 0.056860, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 85 fit: [33.3 s]: Recall = 0.64770, Jaccard score = 0.2456, loss = 0.056211, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 86 fit: [33.2 s]: Recall = 0.64690, Jaccard score = 0.2452, loss = 0.055858, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 87 fit: [33.2 s]: Recall = 0.64531, Jaccard score = 0.2445, loss = 0.055429, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 88 fit: [33.2 s]: Recall = 0.65159, Jaccard score = 0.2475, loss = 0.054809, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 89 fit: [33.3 s]: Recall = 0.64588, Jaccard score = 0.2448, loss = 0.054108, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 90 fit: [33.2 s]: Recall = 0.64702, Jaccard score = 0.2453, loss = 0.052840, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 91 fit: [33.3 s]: Recall = 0.64154, Jaccard score = 0.2427, loss = 0.052515, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 92 fit: [33.2 s]: Recall = 0.64885, Jaccard score = 0.2462, loss = 0.052456, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 93 fit: [33.2 s]: Recall = 0.64588, Jaccard score = 0.2448, loss = 0.052306, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 94 fit: [33.1 s]: Recall = 0.64256, Jaccard score = 0.2432, loss = 0.051130, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 95 fit: [33.2 s]: Recall = 0.64245, Jaccard score = 0.2431, loss = 0.050957, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 96 fit: [33.2 s]: Recall = 0.64759, Jaccard score = 0.2456, loss = 0.049937, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 97 fit: [33.3 s]: Recall = 0.64725, Jaccard score = 0.2454, loss = 0.050037, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 98 fit: [33.2 s]: Recall = 0.64668, Jaccard score = 0.2451, loss = 0.049317, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 99 fit: [33.2 s]: Recall = 0.64622, Jaccard score = 0.2449, loss = 0.049050, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 100 fit: [33.2 s]: Recall = 0.64828, Jaccard score = 0.2459, loss = 0.048083, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 101 fit: [33.2 s]: Recall = 0.64508, Jaccard score = 0.2444, loss = 0.048491, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 102 fit: [33.2 s]: Recall = 0.64919, Jaccard score = 0.2463, loss = 0.047369, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 103 fit: [33.3 s]: Recall = 0.64531, Jaccard score = 0.2445, loss = 0.046865, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 104 fit: [33.2 s]: Recall = 0.65125, Jaccard score = 0.2473, loss = 0.047318, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 105 fit: [33.2 s]: Recall = 0.64245, Jaccard score = 0.2431, loss = 0.046502, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 106 fit: [33.2 s]: Recall = 0.64508, Jaccard score = 0.2444, loss = 0.046424, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 107 fit: [33.2 s]: Recall = 0.64074, Jaccard score = 0.2423, loss = 0.045824, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 108 fit: [33.2 s]: Recall = 0.64119, Jaccard score = 0.2426, loss = 0.045047, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 109 fit: [33.3 s]: Recall = 0.64588, Jaccard score = 0.2448, loss = 0.044742, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 110 fit: [33.2 s]: Recall = 0.64679, Jaccard score = 0.2452, loss = 0.044619, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 111 fit: [33.2 s]: Recall = 0.63651, Jaccard score = 0.2404, loss = 0.044430, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 112 fit: [33.2 s]: Recall = 0.64816, Jaccard score = 0.2458, loss = 0.043547, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 113 fit: [33.2 s]: Recall = 0.65045, Jaccard score = 0.2469, loss = 0.042862, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 114 fit: [33.2 s]: Recall = 0.64919, Jaccard score = 0.2463, loss = 0.043324, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 115 fit: [33.2 s]: Recall = 0.63799, Jaccard score = 0.2411, loss = 0.042534, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 116 fit: [33.2 s]: Recall = 0.64713, Jaccard score = 0.2454, loss = 0.042713, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 117 fit: [33.3 s]: Recall = 0.64622, Jaccard score = 0.2449, loss = 0.042109, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 118 fit: [33.2 s]: Recall = 0.64965, Jaccard score = 0.2465, loss = 0.041912, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 119 fit: [33.2 s]: Recall = 0.64211, Jaccard score = 0.2430, loss = 0.040739, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 120 fit: [33.2 s]: Recall = 0.64531, Jaccard score = 0.2445, loss = 0.041017, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 121 fit: [33.2 s]: Recall = 0.64382, Jaccard score = 0.2438, loss = 0.040592, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 122 fit: [33.2 s]: Recall = 0.64062, Jaccard score = 0.2423, loss = 0.040950, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 123 fit: [33.3 s]: Recall = 0.64108, Jaccard score = 0.2425, loss = 0.039681, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 124 fit: [33.2 s]: Recall = 0.64496, Jaccard score = 0.2443, loss = 0.040233, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 125 fit: [33.3 s]: Recall = 0.64610, Jaccard score = 0.2449, loss = 0.039599, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 126 fit: [33.2 s]: Recall = 0.65067, Jaccard score = 0.2470, loss = 0.039063, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 127 fit: [33.3 s]: Recall = 0.64656, Jaccard score = 0.2451, loss = 0.039142, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 128 fit: [33.3 s]: Recall = 0.64451, Jaccard score = 0.2441, loss = 0.038400, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 129 fit: [33.4 s]: Recall = 0.64325, Jaccard score = 0.2435, loss = 0.038707, gradient norm = 1.0000, eval: [9.6 s]
# Iteration 130 fit: [33.3 s]: Recall = 0.64382, Jaccard score = 0.2438, loss = 0.037847, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 131 fit: [33.5 s]: Recall = 0.64028, Jaccard score = 0.2421, loss = 0.038091, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 132 fit: [33.3 s]: Recall = 0.64462, Jaccard score = 0.2442, loss = 0.037980, gradient norm = 1.0000, eval: [9.0 s]
# Iteration 133 fit: [33.4 s]: Recall = 0.64782, Jaccard score = 0.2457, loss = 0.037791, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 134 fit: [33.2 s]: Recall = 0.64553, Jaccard score = 0.2446, loss = 0.037410, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 135 fit: [33.5 s]: Recall = 0.64816, Jaccard score = 0.2458, loss = 0.036661, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 136 fit: [33.2 s]: Recall = 0.64336, Jaccard score = 0.2436, loss = 0.037520, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 137 fit: [33.2 s]: Recall = 0.64485, Jaccard score = 0.2443, loss = 0.036200, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 138 fit: [33.5 s]: Recall = 0.64748, Jaccard score = 0.2455, loss = 0.036101, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 139 fit: [33.3 s]: Recall = 0.65239, Jaccard score = 0.2478, loss = 0.036066, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 140 fit: [33.2 s]: Recall = 0.64108, Jaccard score = 0.2425, loss = 0.035917, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 141 fit: [33.3 s]: Recall = 0.64839, Jaccard score = 0.2459, loss = 0.035789, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 142 fit: [36.3 s]: Recall = 0.64531, Jaccard score = 0.2445, loss = 0.035386, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 143 fit: [33.3 s]: Recall = 0.64839, Jaccard score = 0.2459, loss = 0.035478, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 144 fit: [33.1 s]: Recall = 0.64759, Jaccard score = 0.2456, loss = 0.034559, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 145 fit: [33.2 s]: Recall = 0.64165, Jaccard score = 0.2428, loss = 0.034626, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 146 fit: [33.1 s]: Recall = 0.63982, Jaccard score = 0.2419, loss = 0.034509, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 147 fit: [33.2 s]: Recall = 0.64051, Jaccard score = 0.2422, loss = 0.034438, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 148 fit: [33.1 s]: Recall = 0.64508, Jaccard score = 0.2444, loss = 0.033930, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 149 fit: [33.2 s]: Recall = 0.64816, Jaccard score = 0.2458, loss = 0.033870, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 150 fit: [33.2 s]: Recall = 0.64428, Jaccard score = 0.2440, loss = 0.033752, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 151 fit: [33.3 s]: Recall = 0.64885, Jaccard score = 0.2462, loss = 0.033310, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 152 fit: [33.2 s]: Recall = 0.63879, Jaccard score = 0.2414, loss = 0.033167, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 153 fit: [33.3 s]: Recall = 0.64348, Jaccard score = 0.2436, loss = 0.033329, gradient norm = 1.0000, eval: [9.4 s]
# Iteration 154 fit: [34.3 s]: Recall = 0.64074, Jaccard score = 0.2423, loss = 0.032929, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 155 fit: [33.2 s]: Recall = 0.63754, Jaccard score = 0.2408, loss = 0.032460, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 156 fit: [33.1 s]: Recall = 0.64645, Jaccard score = 0.2450, loss = 0.032529, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 157 fit: [33.2 s]: Recall = 0.64348, Jaccard score = 0.2436, loss = 0.032644, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 158 fit: [33.1 s]: Recall = 0.64725, Jaccard score = 0.2454, loss = 0.031942, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 159 fit: [33.2 s]: Recall = 0.64576, Jaccard score = 0.2447, loss = 0.031902, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 160 fit: [33.1 s]: Recall = 0.64896, Jaccard score = 0.2462, loss = 0.031691, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 161 fit: [33.2 s]: Recall = 0.64702, Jaccard score = 0.2453, loss = 0.031701, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 162 fit: [33.2 s]: Recall = 0.64588, Jaccard score = 0.2448, loss = 0.031313, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 163 fit: [33.3 s]: Recall = 0.64531, Jaccard score = 0.2445, loss = 0.031453, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 164 fit: [33.1 s]: Recall = 0.64622, Jaccard score = 0.2449, loss = 0.031677, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 165 fit: [33.3 s]: Recall = 0.64542, Jaccard score = 0.2445, loss = 0.031284, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 166 fit: [33.3 s]: Recall = 0.64313, Jaccard score = 0.2435, loss = 0.030602, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 167 fit: [33.3 s]: Recall = 0.63582, Jaccard score = 0.2400, loss = 0.030360, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 168 fit: [33.2 s]: Recall = 0.65056, Jaccard score = 0.2470, loss = 0.030517, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 169 fit: [33.2 s]: Recall = 0.64336, Jaccard score = 0.2436, loss = 0.030659, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 170 fit: [33.1 s]: Recall = 0.64885, Jaccard score = 0.2462, loss = 0.029709, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 171 fit: [33.3 s]: Recall = 0.65307, Jaccard score = 0.2482, loss = 0.029706, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 172 fit: [33.1 s]: Recall = 0.64416, Jaccard score = 0.2440, loss = 0.029900, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 173 fit: [33.2 s]: Recall = 0.64531, Jaccard score = 0.2445, loss = 0.029826, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 174 fit: [33.2 s]: Recall = 0.65136, Jaccard score = 0.2474, loss = 0.029549, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 175 fit: [33.2 s]: Recall = 0.64039, Jaccard score = 0.2422, loss = 0.029027, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 176 fit: [33.2 s]: Recall = 0.64850, Jaccard score = 0.2460, loss = 0.029348, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 177 fit: [33.3 s]: Recall = 0.64074, Jaccard score = 0.2423, loss = 0.029049, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 178 fit: [33.3 s]: Recall = 0.64862, Jaccard score = 0.2461, loss = 0.029025, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 179 fit: [33.3 s]: Recall = 0.64256, Jaccard score = 0.2432, loss = 0.029248, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 180 fit: [33.2 s]: Recall = 0.64176, Jaccard score = 0.2428, loss = 0.029283, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 181 fit: [33.2 s]: Recall = 0.64348, Jaccard score = 0.2436, loss = 0.028962, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 182 fit: [33.2 s]: Recall = 0.64211, Jaccard score = 0.2430, loss = 0.028669, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 183 fit: [33.2 s]: Recall = 0.63685, Jaccard score = 0.2405, loss = 0.028324, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 184 fit: [33.1 s]: Recall = 0.64645, Jaccard score = 0.2450, loss = 0.028478, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 185 fit: [33.2 s]: Recall = 0.64690, Jaccard score = 0.2452, loss = 0.028476, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 186 fit: [33.2 s]: Recall = 0.64393, Jaccard score = 0.2438, loss = 0.027892, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 187 fit: [33.3 s]: Recall = 0.64473, Jaccard score = 0.2442, loss = 0.027811, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 188 fit: [33.1 s]: Recall = 0.64565, Jaccard score = 0.2447, loss = 0.028744, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 189 fit: [33.3 s]: Recall = 0.63434, Jaccard score = 0.2393, loss = 0.027720, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 190 fit: [33.2 s]: Recall = 0.64702, Jaccard score = 0.2453, loss = 0.027879, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 191 fit: [33.2 s]: Recall = 0.64965, Jaccard score = 0.2465, loss = 0.028045, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 192 fit: [33.2 s]: Recall = 0.64622, Jaccard score = 0.2449, loss = 0.027593, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 193 fit: [33.2 s]: Recall = 0.63331, Jaccard score = 0.2389, loss = 0.027603, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 194 fit: [33.2 s]: Recall = 0.64233, Jaccard score = 0.2431, loss = 0.027519, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 195 fit: [33.3 s]: Recall = 0.64039, Jaccard score = 0.2422, loss = 0.027190, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 196 fit: [33.2 s]: Recall = 0.64256, Jaccard score = 0.2432, loss = 0.026966, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 197 fit: [33.2 s]: Recall = 0.64039, Jaccard score = 0.2422, loss = 0.026566, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 198 fit: [33.2 s]: Recall = 0.63765, Jaccard score = 0.2409, loss = 0.026679, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 199 fit: [33.2 s]: Recall = 0.64336, Jaccard score = 0.2436, loss = 0.026477, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 200 fit: [33.1 s]: Recall = 0.65033, Jaccard score = 0.2469, loss = 0.026781, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 201 fit: [33.2 s]: Recall = 0.64074, Jaccard score = 0.2423, loss = 0.026484, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 202 fit: [33.2 s]: Recall = 0.64085, Jaccard score = 0.2424, loss = 0.025936, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 203 fit: [33.3 s]: Recall = 0.64759, Jaccard score = 0.2456, loss = 0.026631, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 204 fit: [33.2 s]: Recall = 0.63891, Jaccard score = 0.2415, loss = 0.026381, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 205 fit: [33.3 s]: Recall = 0.64039, Jaccard score = 0.2422, loss = 0.026093, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 206 fit: [33.2 s]: Recall = 0.64359, Jaccard score = 0.2437, loss = 0.025939, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 207 fit: [33.2 s]: Recall = 0.64016, Jaccard score = 0.2421, loss = 0.025545, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 208 fit: [33.2 s]: Recall = 0.65045, Jaccard score = 0.2469, loss = 0.026155, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 209 fit: [33.2 s]: Recall = 0.64679, Jaccard score = 0.2452, loss = 0.025671, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 210 fit: [33.2 s]: Recall = 0.64165, Jaccard score = 0.2428, loss = 0.025547, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 211 fit: [33.3 s]: Recall = 0.62966, Jaccard score = 0.2372, loss = 0.025538, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 212 fit: [33.2 s]: Recall = 0.64245, Jaccard score = 0.2431, loss = 0.025606, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 213 fit: [33.2 s]: Recall = 0.64633, Jaccard score = 0.2450, loss = 0.025032, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 214 fit: [33.2 s]: Recall = 0.63822, Jaccard score = 0.2412, loss = 0.025808, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 215 fit: [33.2 s]: Recall = 0.64553, Jaccard score = 0.2446, loss = 0.025242, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 216 fit: [33.2 s]: Recall = 0.64131, Jaccard score = 0.2426, loss = 0.025299, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 217 fit: [33.3 s]: Recall = 0.63251, Jaccard score = 0.2385, loss = 0.024548, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 218 fit: [33.2 s]: Recall = 0.64451, Jaccard score = 0.2441, loss = 0.024664, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 219 fit: [33.2 s]: Recall = 0.63971, Jaccard score = 0.2419, loss = 0.025191, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 220 fit: [33.2 s]: Recall = 0.63468, Jaccard score = 0.2395, loss = 0.024307, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 221 fit: [33.3 s]: Recall = 0.64085, Jaccard score = 0.2424, loss = 0.024850, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 222 fit: [33.2 s]: Recall = 0.64096, Jaccard score = 0.2424, loss = 0.024268, gradient norm = 1.0000, eval: [9.0 s]
# Iteration 223 fit: [33.2 s]: Recall = 0.64416, Jaccard score = 0.2440, loss = 0.024075, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 224 fit: [33.2 s]: Recall = 0.64016, Jaccard score = 0.2421, loss = 0.024099, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 225 fit: [33.2 s]: Recall = 0.64176, Jaccard score = 0.2428, loss = 0.024239, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 226 fit: [33.2 s]: Recall = 0.64519, Jaccard score = 0.2444, loss = 0.024222, gradient norm = 1.0000, eval: [8.9 s]
# Iteration 227 fit: [33.2 s]: Recall = 0.64451, Jaccard score = 0.2441, loss = 0.024037, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 228 fit: [33.2 s]: Recall = 0.64713, Jaccard score = 0.2454, loss = 0.024246, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 229 fit: [33.2 s]: Recall = 0.63662, Jaccard score = 0.2404, loss = 0.023527, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 230 fit: [33.2 s]: Recall = 0.64302, Jaccard score = 0.2434, loss = 0.023504, gradient norm = 1.0000, eval: [8.7 s]
# Iteration 231 fit: [33.2 s]: Recall = 0.64222, Jaccard score = 0.2430, loss = 0.023978, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 232 fit: [33.1 s]: Recall = 0.65010, Jaccard score = 0.2468, loss = 0.022946, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 233 fit: [33.2 s]: Recall = 0.63822, Jaccard score = 0.2412, loss = 0.023173, gradient norm = 1.0000, eval: [8.8 s]
# Iteration 234 fit: [33.2 s]: Recall = 0.63799, Jaccard score = 0.2411, loss = 0.023742, gradient norm = 1.0000, eval: [8.9 s]
# End. Best Iteration 84:  Recall = 0.6532, Jaccard score = 0.2482. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,96]_1569479962.h5
# Model test performed 
# Recall score: 0.3058469091720598     Jaccard score: 0.10453453338926814