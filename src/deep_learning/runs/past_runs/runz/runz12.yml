--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "600"
--early_stopping: "150"
--lr: "0.0001"
--layers: "[512,750,350,96]"
--reg_layers: "[0,0,0,0]"
--test_dataset: "1"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=0, epochs=600, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.0001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569384904.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569384904.h5
# Load data done [2.0 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_6 (Dropout)             (None, 256)          0           flatten_3[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 1256)         0           dropout_6[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_7 (Dropout)             (None, 256)          0           flatten_4[0][0]                  
# __________________________________________________________________________________________________
# concatenate_4 (Concatenate)     (None, 1512)         0           concatenate_3[0][0]              
#                                                                  dropout_7[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_4[0][0]              
# __________________________________________________________________________________________________
# dropout_8 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_8[0][0]                  
# __________________________________________________________________________________________________
# dropout_9 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_9[0][0]                  
# __________________________________________________________________________________________________
# dropout_10 (Dropout)            (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_10[0][0]                 
# ==================================================================================================
# Total params: 7,063,393
# Trainable params: 7,063,393
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0972, Jaccard score = 0.0305
# Iteration 0 fit: [32.7 s]: Recall = 0.37948, Jaccard score = 0.1306, loss = 0.477656, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 1 fit: [32.0 s]: Recall = 0.39936, Jaccard score = 0.1384, loss = 0.442378, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 2 fit: [32.0 s]: Recall = 0.40656, Jaccard score = 0.1413, loss = 0.429853, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 3 fit: [32.2 s]: Recall = 0.41661, Jaccard score = 0.1453, loss = 0.421774, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 4 fit: [32.3 s]: Recall = 0.43489, Jaccard score = 0.1526, loss = 0.414214, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 5 fit: [32.1 s]: Recall = 0.44951, Jaccard score = 0.1585, loss = 0.406714, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 6 fit: [31.8 s]: Recall = 0.46196, Jaccard score = 0.1637, loss = 0.399260, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 7 fit: [32.0 s]: Recall = 0.47453, Jaccard score = 0.1689, loss = 0.391478, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 8 fit: [32.4 s]: Recall = 0.48401, Jaccard score = 0.1728, loss = 0.385259, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 9 fit: [32.2 s]: Recall = 0.49052, Jaccard score = 0.1756, loss = 0.378729, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 10 fit: [31.9 s]: Recall = 0.49829, Jaccard score = 0.1788, loss = 0.373380, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 11 fit: [31.9 s]: Recall = 0.49851, Jaccard score = 0.1789, loss = 0.367463, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 12 fit: [32.0 s]: Recall = 0.50800, Jaccard score = 0.1830, loss = 0.362685, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 13 fit: [32.1 s]: Recall = 0.51085, Jaccard score = 0.1842, loss = 0.359316, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 14 fit: [32.0 s]: Recall = 0.51234, Jaccard score = 0.1848, loss = 0.354459, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 15 fit: [32.1 s]: Recall = 0.51279, Jaccard score = 0.1850, loss = 0.350208, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 16 fit: [31.9 s]: Recall = 0.52239, Jaccard score = 0.1891, loss = 0.346388, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 17 fit: [32.1 s]: Recall = 0.51976, Jaccard score = 0.1880, loss = 0.342251, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 18 fit: [31.9 s]: Recall = 0.52376, Jaccard score = 0.1897, loss = 0.338380, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 19 fit: [32.0 s]: Recall = 0.52250, Jaccard score = 0.1892, loss = 0.334801, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 20 fit: [31.9 s]: Recall = 0.52559, Jaccard score = 0.1905, loss = 0.332089, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 21 fit: [31.7 s]: Recall = 0.52330, Jaccard score = 0.1895, loss = 0.328888, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 22 fit: [32.3 s]: Recall = 0.52810, Jaccard score = 0.1916, loss = 0.325827, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 23 fit: [32.1 s]: Recall = 0.52662, Jaccard score = 0.1909, loss = 0.323179, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 24 fit: [32.2 s]: Recall = 0.53050, Jaccard score = 0.1926, loss = 0.320025, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 25 fit: [32.2 s]: Recall = 0.53244, Jaccard score = 0.1935, loss = 0.317105, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 26 fit: [32.2 s]: Recall = 0.52867, Jaccard score = 0.1918, loss = 0.314227, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 27 fit: [31.8 s]: Recall = 0.52810, Jaccard score = 0.1916, loss = 0.311606, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 28 fit: [32.0 s]: Recall = 0.53096, Jaccard score = 0.1928, loss = 0.308826, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 29 fit: [31.8 s]: Recall = 0.53496, Jaccard score = 0.1945, loss = 0.306017, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 30 fit: [32.1 s]: Recall = 0.53655, Jaccard score = 0.1952, loss = 0.304528, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 31 fit: [32.1 s]: Recall = 0.53279, Jaccard score = 0.1936, loss = 0.301291, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 32 fit: [32.3 s]: Recall = 0.53667, Jaccard score = 0.1953, loss = 0.298466, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 33 fit: [32.0 s]: Recall = 0.53610, Jaccard score = 0.1950, loss = 0.296753, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 34 fit: [32.0 s]: Recall = 0.53541, Jaccard score = 0.1947, loss = 0.295318, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 35 fit: [32.3 s]: Recall = 0.53587, Jaccard score = 0.1949, loss = 0.291910, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 36 fit: [31.9 s]: Recall = 0.54158, Jaccard score = 0.1974, loss = 0.290464, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 37 fit: [32.2 s]: Recall = 0.53735, Jaccard score = 0.1956, loss = 0.288031, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 38 fit: [32.1 s]: Recall = 0.53678, Jaccard score = 0.1953, loss = 0.286499, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 39 fit: [32.5 s]: Recall = 0.53735, Jaccard score = 0.1956, loss = 0.283549, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 40 fit: [31.9 s]: Recall = 0.53998, Jaccard score = 0.1967, loss = 0.281491, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 41 fit: [31.9 s]: Recall = 0.53644, Jaccard score = 0.1952, loss = 0.279441, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 42 fit: [32.0 s]: Recall = 0.54078, Jaccard score = 0.1971, loss = 0.277798, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 43 fit: [32.1 s]: Recall = 0.54204, Jaccard score = 0.1976, loss = 0.275264, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 44 fit: [31.9 s]: Recall = 0.54387, Jaccard score = 0.1984, loss = 0.273169, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 45 fit: [32.0 s]: Recall = 0.54204, Jaccard score = 0.1976, loss = 0.271798, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 46 fit: [32.1 s]: Recall = 0.54786, Jaccard score = 0.2002, loss = 0.270519, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 47 fit: [32.1 s]: Recall = 0.53952, Jaccard score = 0.1965, loss = 0.268709, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 48 fit: [32.1 s]: Recall = 0.54318, Jaccard score = 0.1981, loss = 0.266904, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 49 fit: [32.1 s]: Recall = 0.54478, Jaccard score = 0.1988, loss = 0.265323, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 50 fit: [32.1 s]: Recall = 0.54147, Jaccard score = 0.1974, loss = 0.263850, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 51 fit: [31.9 s]: Recall = 0.54489, Jaccard score = 0.1989, loss = 0.260974, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 52 fit: [32.1 s]: Recall = 0.54546, Jaccard score = 0.1991, loss = 0.260066, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 53 fit: [32.0 s]: Recall = 0.54489, Jaccard score = 0.1989, loss = 0.258892, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 54 fit: [32.3 s]: Recall = 0.54935, Jaccard score = 0.2008, loss = 0.256554, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 55 fit: [31.8 s]: Recall = 0.55026, Jaccard score = 0.2012, loss = 0.254781, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 56 fit: [32.3 s]: Recall = 0.55061, Jaccard score = 0.2014, loss = 0.253601, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 57 fit: [31.9 s]: Recall = 0.54866, Jaccard score = 0.2005, loss = 0.252668, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 58 fit: [32.4 s]: Recall = 0.54923, Jaccard score = 0.2008, loss = 0.250429, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 59 fit: [34.0 s]: Recall = 0.55198, Jaccard score = 0.2020, loss = 0.249213, gradient norm = 1.0000, eval: [10.0 s]
# Iteration 60 fit: [32.0 s]: Recall = 0.54832, Jaccard score = 0.2004, loss = 0.246758, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 61 fit: [32.0 s]: Recall = 0.55278, Jaccard score = 0.2023, loss = 0.245704, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 62 fit: [31.9 s]: Recall = 0.54649, Jaccard score = 0.1996, loss = 0.244117, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 63 fit: [31.9 s]: Recall = 0.54798, Jaccard score = 0.2002, loss = 0.243493, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 64 fit: [32.0 s]: Recall = 0.54992, Jaccard score = 0.2011, loss = 0.242253, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 65 fit: [32.2 s]: Recall = 0.54741, Jaccard score = 0.2000, loss = 0.241086, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 66 fit: [32.1 s]: Recall = 0.55106, Jaccard score = 0.2016, loss = 0.239220, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 67 fit: [32.2 s]: Recall = 0.54661, Jaccard score = 0.1996, loss = 0.237153, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 68 fit: [32.3 s]: Recall = 0.55220, Jaccard score = 0.2021, loss = 0.236207, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 69 fit: [32.3 s]: Recall = 0.55575, Jaccard score = 0.2037, loss = 0.235303, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 70 fit: [32.1 s]: Recall = 0.54684, Jaccard score = 0.1997, loss = 0.234297, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 71 fit: [32.3 s]: Recall = 0.55312, Jaccard score = 0.2025, loss = 0.232657, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 72 fit: [32.2 s]: Recall = 0.55118, Jaccard score = 0.2016, loss = 0.230785, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 73 fit: [32.1 s]: Recall = 0.55243, Jaccard score = 0.2022, loss = 0.229841, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 74 fit: [31.9 s]: Recall = 0.55460, Jaccard score = 0.2031, loss = 0.228068, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 75 fit: [32.3 s]: Recall = 0.55563, Jaccard score = 0.2036, loss = 0.227289, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 76 fit: [32.7 s]: Recall = 0.55438, Jaccard score = 0.2030, loss = 0.225734, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 77 fit: [32.0 s]: Recall = 0.55460, Jaccard score = 0.2031, loss = 0.225142, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 78 fit: [32.0 s]: Recall = 0.55712, Jaccard score = 0.2043, loss = 0.223206, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 79 fit: [32.0 s]: Recall = 0.55186, Jaccard score = 0.2019, loss = 0.222198, gradient norm = 1.0000, eval: [8.0 s]
# Iteration 80 fit: [32.0 s]: Recall = 0.55860, Jaccard score = 0.2049, loss = 0.221486, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 81 fit: [32.1 s]: Recall = 0.55872, Jaccard score = 0.2050, loss = 0.219578, gradient norm = 1.0000, eval: [8.0 s]
# Iteration 82 fit: [31.9 s]: Recall = 0.55872, Jaccard score = 0.2050, loss = 0.218874, gradient norm = 1.0000, eval: [8.0 s]
# Iteration 83 fit: [32.1 s]: Recall = 0.55849, Jaccard score = 0.2049, loss = 0.218085, gradient norm = 1.0000, eval: [8.0 s]
# Iteration 84 fit: [32.1 s]: Recall = 0.55906, Jaccard score = 0.2051, loss = 0.216124, gradient norm = 1.0000, eval: [8.0 s]
# Iteration 85 fit: [32.1 s]: Recall = 0.56454, Jaccard score = 0.2075, loss = 0.215893, gradient norm = 1.0000, eval: [8.0 s]
# Iteration 86 fit: [32.0 s]: Recall = 0.56329, Jaccard score = 0.2070, loss = 0.215063, gradient norm = 1.0000, eval: [7.9 s]
# Iteration 87 fit: [31.9 s]: Recall = 0.56191, Jaccard score = 0.2064, loss = 0.213547, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 88 fit: [32.3 s]: Recall = 0.56180, Jaccard score = 0.2063, loss = 0.211943, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 89 fit: [32.0 s]: Recall = 0.56066, Jaccard score = 0.2058, loss = 0.211052, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 90 fit: [32.1 s]: Recall = 0.56306, Jaccard score = 0.2069, loss = 0.210002, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 91 fit: [32.1 s]: Recall = 0.56294, Jaccard score = 0.2068, loss = 0.208728, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 92 fit: [32.4 s]: Recall = 0.55986, Jaccard score = 0.2055, loss = 0.207994, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 93 fit: [32.0 s]: Recall = 0.56340, Jaccard score = 0.2070, loss = 0.207111, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 94 fit: [32.1 s]: Recall = 0.56340, Jaccard score = 0.2070, loss = 0.205750, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 95 fit: [32.1 s]: Recall = 0.55757, Jaccard score = 0.2045, loss = 0.204593, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 96 fit: [32.1 s]: Recall = 0.55997, Jaccard score = 0.2055, loss = 0.204353, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 97 fit: [32.1 s]: Recall = 0.56032, Jaccard score = 0.2057, loss = 0.202393, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 98 fit: [32.2 s]: Recall = 0.55906, Jaccard score = 0.2051, loss = 0.202433, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 99 fit: [32.3 s]: Recall = 0.56785, Jaccard score = 0.2090, loss = 0.202021, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 100 fit: [32.1 s]: Recall = 0.56431, Jaccard score = 0.2074, loss = 0.199344, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 101 fit: [32.2 s]: Recall = 0.56271, Jaccard score = 0.2067, loss = 0.198795, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 102 fit: [31.9 s]: Recall = 0.55997, Jaccard score = 0.2055, loss = 0.198494, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 103 fit: [32.1 s]: Recall = 0.56157, Jaccard score = 0.2062, loss = 0.196933, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 104 fit: [32.3 s]: Recall = 0.56397, Jaccard score = 0.2073, loss = 0.196924, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 105 fit: [32.0 s]: Recall = 0.56271, Jaccard score = 0.2067, loss = 0.195211, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 106 fit: [31.9 s]: Recall = 0.56420, Jaccard score = 0.2074, loss = 0.194944, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 107 fit: [32.1 s]: Recall = 0.56214, Jaccard score = 0.2065, loss = 0.194063, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 108 fit: [32.4 s]: Recall = 0.57037, Jaccard score = 0.2101, loss = 0.192249, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 109 fit: [32.3 s]: Recall = 0.56797, Jaccard score = 0.2091, loss = 0.191992, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 110 fit: [32.2 s]: Recall = 0.56397, Jaccard score = 0.2073, loss = 0.190730, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 111 fit: [32.0 s]: Recall = 0.56374, Jaccard score = 0.2072, loss = 0.189601, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 112 fit: [32.0 s]: Recall = 0.56728, Jaccard score = 0.2088, loss = 0.189218, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 113 fit: [32.1 s]: Recall = 0.56214, Jaccard score = 0.2065, loss = 0.188683, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 114 fit: [32.1 s]: Recall = 0.56500, Jaccard score = 0.2077, loss = 0.186421, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 115 fit: [31.9 s]: Recall = 0.56591, Jaccard score = 0.2082, loss = 0.185555, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 116 fit: [32.1 s]: Recall = 0.56660, Jaccard score = 0.2085, loss = 0.185147, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 117 fit: [32.2 s]: Recall = 0.57151, Jaccard score = 0.2106, loss = 0.185175, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 118 fit: [32.3 s]: Recall = 0.56763, Jaccard score = 0.2089, loss = 0.183939, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 119 fit: [32.1 s]: Recall = 0.57060, Jaccard score = 0.2102, loss = 0.183787, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 120 fit: [32.2 s]: Recall = 0.57117, Jaccard score = 0.2105, loss = 0.182626, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 121 fit: [32.1 s]: Recall = 0.57014, Jaccard score = 0.2100, loss = 0.181359, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 122 fit: [31.9 s]: Recall = 0.57003, Jaccard score = 0.2100, loss = 0.180793, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 123 fit: [32.1 s]: Recall = 0.57117, Jaccard score = 0.2105, loss = 0.179960, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 124 fit: [32.1 s]: Recall = 0.56980, Jaccard score = 0.2099, loss = 0.178965, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 125 fit: [32.0 s]: Recall = 0.57071, Jaccard score = 0.2103, loss = 0.178632, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 126 fit: [32.3 s]: Recall = 0.57060, Jaccard score = 0.2102, loss = 0.177781, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 127 fit: [32.0 s]: Recall = 0.57162, Jaccard score = 0.2107, loss = 0.175986, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 128 fit: [32.2 s]: Recall = 0.57220, Jaccard score = 0.2109, loss = 0.175929, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 129 fit: [32.2 s]: Recall = 0.57437, Jaccard score = 0.2119, loss = 0.175100, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 130 fit: [32.0 s]: Recall = 0.57220, Jaccard score = 0.2109, loss = 0.174073, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 131 fit: [32.2 s]: Recall = 0.57254, Jaccard score = 0.2111, loss = 0.174200, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 132 fit: [32.2 s]: Recall = 0.57471, Jaccard score = 0.2121, loss = 0.172627, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 133 fit: [32.0 s]: Recall = 0.56991, Jaccard score = 0.2099, loss = 0.172696, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 134 fit: [32.2 s]: Recall = 0.57494, Jaccard score = 0.2122, loss = 0.171868, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 135 fit: [32.0 s]: Recall = 0.57985, Jaccard score = 0.2144, loss = 0.170811, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 136 fit: [32.1 s]: Recall = 0.57642, Jaccard score = 0.2128, loss = 0.169573, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 137 fit: [32.1 s]: Recall = 0.57814, Jaccard score = 0.2136, loss = 0.168782, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 138 fit: [32.2 s]: Recall = 0.57277, Jaccard score = 0.2112, loss = 0.168575, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 139 fit: [32.1 s]: Recall = 0.57825, Jaccard score = 0.2137, loss = 0.167187, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 140 fit: [32.3 s]: Recall = 0.58008, Jaccard score = 0.2145, loss = 0.166879, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 141 fit: [32.0 s]: Recall = 0.57871, Jaccard score = 0.2139, loss = 0.166638, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 142 fit: [32.2 s]: Recall = 0.57676, Jaccard score = 0.2130, loss = 0.166068, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 143 fit: [32.2 s]: Recall = 0.58179, Jaccard score = 0.2152, loss = 0.164413, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 144 fit: [32.0 s]: Recall = 0.58248, Jaccard score = 0.2156, loss = 0.164578, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 145 fit: [32.3 s]: Recall = 0.58133, Jaccard score = 0.2150, loss = 0.164386, gradient norm = 1.0000, eval: [8.3 s]
# Iteration 146 fit: [32.2 s]: Recall = 0.58556, Jaccard score = 0.2169, loss = 0.162354, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 147 fit: [31.9 s]: Recall = 0.58293, Jaccard score = 0.2158, loss = 0.162026, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 148 fit: [32.6 s]: Recall = 0.58396, Jaccard score = 0.2162, loss = 0.160928, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 149 fit: [32.1 s]: Recall = 0.58328, Jaccard score = 0.2159, loss = 0.161178, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 150 fit: [32.0 s]: Recall = 0.58453, Jaccard score = 0.2165, loss = 0.160980, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 151 fit: [32.0 s]: Recall = 0.58202, Jaccard score = 0.2154, loss = 0.159668, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 152 fit: [32.4 s]: Recall = 0.58785, Jaccard score = 0.2180, loss = 0.158967, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 153 fit: [32.3 s]: Recall = 0.58556, Jaccard score = 0.2169, loss = 0.158115, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 154 fit: [31.9 s]: Recall = 0.58282, Jaccard score = 0.2157, loss = 0.158282, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 155 fit: [32.2 s]: Recall = 0.58248, Jaccard score = 0.2156, loss = 0.156452, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 156 fit: [32.4 s]: Recall = 0.58385, Jaccard score = 0.2162, loss = 0.157318, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 157 fit: [32.1 s]: Recall = 0.58271, Jaccard score = 0.2157, loss = 0.155036, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 158 fit: [31.8 s]: Recall = 0.58488, Jaccard score = 0.2166, loss = 0.154712, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 159 fit: [32.1 s]: Recall = 0.58442, Jaccard score = 0.2164, loss = 0.154574, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 160 fit: [32.3 s]: Recall = 0.58647, Jaccard score = 0.2174, loss = 0.153755, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 161 fit: [31.9 s]: Recall = 0.58944, Jaccard score = 0.2187, loss = 0.153115, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 162 fit: [32.1 s]: Recall = 0.58887, Jaccard score = 0.2184, loss = 0.152077, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 163 fit: [32.2 s]: Recall = 0.58636, Jaccard score = 0.2173, loss = 0.152596, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 164 fit: [32.0 s]: Recall = 0.58762, Jaccard score = 0.2179, loss = 0.151143, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 165 fit: [31.9 s]: Recall = 0.58865, Jaccard score = 0.2183, loss = 0.151373, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 166 fit: [31.8 s]: Recall = 0.58830, Jaccard score = 0.2182, loss = 0.150461, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 167 fit: [32.1 s]: Recall = 0.58625, Jaccard score = 0.2173, loss = 0.149212, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 168 fit: [32.4 s]: Recall = 0.58613, Jaccard score = 0.2172, loss = 0.149394, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 169 fit: [32.2 s]: Recall = 0.59070, Jaccard score = 0.2193, loss = 0.148880, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 170 fit: [32.0 s]: Recall = 0.59082, Jaccard score = 0.2193, loss = 0.147390, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 171 fit: [32.1 s]: Recall = 0.59024, Jaccard score = 0.2191, loss = 0.146902, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 172 fit: [32.4 s]: Recall = 0.59047, Jaccard score = 0.2192, loss = 0.147436, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 173 fit: [32.0 s]: Recall = 0.59002, Jaccard score = 0.2190, loss = 0.146263, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 174 fit: [32.2 s]: Recall = 0.58807, Jaccard score = 0.2181, loss = 0.146169, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 175 fit: [32.2 s]: Recall = 0.59116, Jaccard score = 0.2195, loss = 0.145022, gradient norm = 1.0000, eval: [8.2 s]
# Iteration 176 fit: [32.0 s]: Recall = 0.58990, Jaccard score = 0.2189, loss = 0.144697, gradient norm = 1.0000, eval: [8.1 s]
# Iteration 177 fit: [32.1 s]: Recall = 0.58773, Jaccard score = 0.2179, loss = 0.143743, gradient norm = 1.0000, eval: [8.1 s]
