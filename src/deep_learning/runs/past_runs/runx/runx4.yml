--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"
# Med batchnorm och allt
# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1568039383.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1568039383.h5
# Load data done [1.6 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0266, Jaccard score = 0.0160
# Iteration 0 fit: [33.1 s]: Recall = 0.2387, Jaccard score = 0.1650, loss = 0.4199, gradient norm = 0.2325, eval: [8.5 s]
# Iteration 1 fit: [32.1 s]: Recall = 0.2643, Jaccard score = 0.1860, loss = 0.3775, gradient norm = 0.1777, eval: [8.5 s]
# Iteration 2 fit: [32.1 s]: Recall = 0.2772, Jaccard score = 0.1969, loss = 0.3566, gradient norm = 0.1667, eval: [8.5 s]
# Iteration 3 fit: [31.8 s]: Recall = 0.2816, Jaccard score = 0.2006, loss = 0.3370, gradient norm = 0.1662, eval: [8.4 s]
# Iteration 4 fit: [32.4 s]: Recall = 0.2905, Jaccard score = 0.2083, loss = 0.3171, gradient norm = 0.1682, eval: [8.5 s]
# Iteration 5 fit: [31.9 s]: Recall = 0.2980, Jaccard score = 0.2148, loss = 0.2992, gradient norm = 0.1716, eval: [8.7 s]
# Iteration 6 fit: [32.0 s]: Recall = 0.3003, Jaccard score = 0.2168, loss = 0.2834, gradient norm = 0.1769, eval: [8.5 s]
# Iteration 7 fit: [32.1 s]: Recall = 0.3073, Jaccard score = 0.2230, loss = 0.2682, gradient norm = 0.1814, eval: [8.5 s]
# Iteration 8 fit: [32.0 s]: Recall = 0.3037, Jaccard score = 0.2198, loss = 0.2536, gradient norm = 0.1883, eval: [8.5 s]
# Iteration 9 fit: [32.0 s]: Recall = 0.3057, Jaccard score = 0.2216, loss = 0.2406, gradient norm = 0.1944, eval: [8.4 s]
# Iteration 10 fit: [32.0 s]: Recall = 0.3131, Jaccard score = 0.2282, loss = 0.2267, gradient norm = 0.2006, eval: [8.5 s]
# Iteration 11 fit: [32.2 s]: Recall = 0.3035, Jaccard score = 0.2196, loss = 0.2137, gradient norm = 0.2083, eval: [8.4 s]
# Iteration 12 fit: [32.0 s]: Recall = 0.3138, Jaccard score = 0.2288, loss = 0.2008, gradient norm = 0.2135, eval: [8.5 s]
# Iteration 13 fit: [31.8 s]: Recall = 0.3113, Jaccard score = 0.2265, loss = 0.1887, gradient norm = 0.2197, eval: [8.4 s]
# Iteration 14 fit: [31.8 s]: Recall = 0.3178, Jaccard score = 0.2324, loss = 0.1784, gradient norm = 0.2249, eval: [8.5 s]
# Iteration 15 fit: [32.1 s]: Recall = 0.3175, Jaccard score = 0.2321, loss = 0.1662, gradient norm = 0.2286, eval: [8.6 s]
# Iteration 16 fit: [32.3 s]: Recall = 0.3159, Jaccard score = 0.2306, loss = 0.1555, gradient norm = 0.2328, eval: [8.8 s]
# Iteration 17 fit: [32.3 s]: Recall = 0.3154, Jaccard score = 0.2302, loss = 0.1464, gradient norm = 0.2355, eval: [8.5 s]
# Iteration 18 fit: [32.1 s]: Recall = 0.3175, Jaccard score = 0.2321, loss = 0.1367, gradient norm = 0.2374, eval: [8.6 s]
# Iteration 19 fit: [31.8 s]: Recall = 0.3162, Jaccard score = 0.2309, loss = 0.1277, gradient norm = 0.2378, eval: [8.5 s]
# Iteration 20 fit: [32.0 s]: Recall = 0.3225, Jaccard score = 0.2366, loss = 0.1193, gradient norm = 0.2393, eval: [8.6 s]
# Iteration 21 fit: [32.1 s]: Recall = 0.3181, Jaccard score = 0.2327, loss = 0.1115, gradient norm = 0.2395, eval: [8.5 s]
# Iteration 22 fit: [32.0 s]: Recall = 0.3227, Jaccard score = 0.2368, loss = 0.1050, gradient norm = 0.2389, eval: [8.6 s]
# Iteration 23 fit: [32.0 s]: Recall = 0.3231, Jaccard score = 0.2371, loss = 0.0988, gradient norm = 0.2384, eval: [8.4 s]
# Iteration 24 fit: [32.0 s]: Recall = 0.3263, Jaccard score = 0.2400, loss = 0.0930, gradient norm = 0.2372, eval: [8.4 s]
# Iteration 25 fit: [31.7 s]: Recall = 0.3224, Jaccard score = 0.2365, loss = 0.0879, gradient norm = 0.2352, eval: [8.6 s]
# Iteration 26 fit: [31.9 s]: Recall = 0.3201, Jaccard score = 0.2344, loss = 0.0830, gradient norm = 0.2328, eval: [8.6 s]
# Iteration 27 fit: [32.0 s]: Recall = 0.3204, Jaccard score = 0.2347, loss = 0.0791, gradient norm = 0.2315, eval: [8.6 s]
# Iteration 28 fit: [31.8 s]: Recall = 0.3247, Jaccard score = 0.2386, loss = 0.0751, gradient norm = 0.2293, eval: [8.6 s]
# Iteration 29 fit: [32.2 s]: Recall = 0.3255, Jaccard score = 0.2393, loss = 0.0716, gradient norm = 0.2258, eval: [8.5 s]
# Iteration 30 fit: [32.1 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0683, gradient norm = 0.2244, eval: [8.5 s]
# Iteration 31 fit: [32.1 s]: Recall = 0.3275, Jaccard score = 0.2412, loss = 0.0650, gradient norm = 0.2203, eval: [8.6 s]
# Iteration 32 fit: [32.1 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0627, gradient norm = 0.2196, eval: [8.4 s]
# Iteration 33 fit: [32.0 s]: Recall = 0.3350, Jaccard score = 0.2481, loss = 0.0597, gradient norm = 0.2149, eval: [8.4 s]
# Iteration 34 fit: [31.9 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0571, gradient norm = 0.2119, eval: [8.6 s]
# Iteration 35 fit: [32.1 s]: Recall = 0.3293, Jaccard score = 0.2429, loss = 0.0552, gradient norm = 0.2106, eval: [8.6 s]
# Iteration 36 fit: [31.8 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0531, gradient norm = 0.2083, eval: [8.5 s]
# Iteration 37 fit: [31.9 s]: Recall = 0.3289, Jaccard score = 0.2424, loss = 0.0505, gradient norm = 0.2045, eval: [8.6 s]
# Iteration 38 fit: [32.3 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0493, gradient norm = 0.2033, eval: [8.4 s]
# Iteration 39 fit: [32.1 s]: Recall = 0.3334, Jaccard score = 0.2466, loss = 0.0477, gradient norm = 0.2002, eval: [8.6 s]
# Iteration 40 fit: [32.1 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0465, gradient norm = 0.1984, eval: [8.5 s]
# Iteration 41 fit: [31.9 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0446, gradient norm = 0.1958, eval: [8.5 s]
# Iteration 42 fit: [32.2 s]: Recall = 0.3297, Jaccard score = 0.2432, loss = 0.0432, gradient norm = 0.1938, eval: [8.6 s]
# Iteration 43 fit: [32.2 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0421, gradient norm = 0.1912, eval: [8.5 s]
# Iteration 44 fit: [32.1 s]: Recall = 0.3339, Jaccard score = 0.2471, loss = 0.0407, gradient norm = 0.1883, eval: [8.6 s]
# Iteration 45 fit: [32.2 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0397, gradient norm = 0.1866, eval: [8.7 s]
# Iteration 46 fit: [32.3 s]: Recall = 0.3301, Jaccard score = 0.2436, loss = 0.0385, gradient norm = 0.1842, eval: [8.6 s]
# Iteration 47 fit: [32.2 s]: Recall = 0.3325, Jaccard score = 0.2458, loss = 0.0376, gradient norm = 0.1834, eval: [8.6 s]
# Iteration 48 fit: [32.2 s]: Recall = 0.3336, Jaccard score = 0.2467, loss = 0.0364, gradient norm = 0.1814, eval: [8.6 s]
# Iteration 49 fit: [32.4 s]: Recall = 0.3368, Jaccard score = 0.2497, loss = 0.0353, gradient norm = 0.1789, eval: [8.6 s]
# Iteration 50 fit: [32.2 s]: Recall = 0.3317, Jaccard score = 0.2451, loss = 0.0348, gradient norm = 0.1784, eval: [8.6 s]
# Iteration 51 fit: [31.9 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0338, gradient norm = 0.1762, eval: [8.6 s]
# Iteration 52 fit: [32.3 s]: Recall = 0.3306, Jaccard score = 0.2440, loss = 0.0333, gradient norm = 0.1743, eval: [8.5 s]
# Iteration 53 fit: [32.2 s]: Recall = 0.3315, Jaccard score = 0.2449, loss = 0.0319, gradient norm = 0.1731, eval: [8.5 s]
# Iteration 54 fit: [32.1 s]: Recall = 0.3352, Jaccard score = 0.2482, loss = 0.0313, gradient norm = 0.1705, eval: [8.5 s]
# Iteration 55 fit: [32.0 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0309, gradient norm = 0.1696, eval: [8.5 s]
# Iteration 56 fit: [32.2 s]: Recall = 0.3297, Jaccard score = 0.2432, loss = 0.0296, gradient norm = 0.1668, eval: [8.4 s]
# Iteration 57 fit: [32.2 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0293, gradient norm = 0.1671, eval: [8.4 s]
# Iteration 58 fit: [32.2 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0296, gradient norm = 0.1680, eval: [8.5 s]
# Iteration 59 fit: [32.3 s]: Recall = 0.3289, Jaccard score = 0.2424, loss = 0.0284, gradient norm = 0.1635, eval: [8.4 s]
# Iteration 60 fit: [32.2 s]: Recall = 0.3321, Jaccard score = 0.2454, loss = 0.0285, gradient norm = 0.1649, eval: [8.5 s]
# Iteration 61 fit: [32.3 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0274, gradient norm = 0.1613, eval: [8.4 s]
# Iteration 62 fit: [32.1 s]: Recall = 0.3341, Jaccard score = 0.2473, loss = 0.0268, gradient norm = 0.1596, eval: [8.7 s]
# Iteration 63 fit: [32.2 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0264, gradient norm = 0.1587, eval: [8.5 s]
# Iteration 64 fit: [32.1 s]: Recall = 0.3297, Jaccard score = 0.2432, loss = 0.0257, gradient norm = 0.1579, eval: [8.4 s]
# Iteration 65 fit: [32.4 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0258, gradient norm = 0.1576, eval: [8.6 s]
# Iteration 66 fit: [32.5 s]: Recall = 0.3329, Jaccard score = 0.2461, loss = 0.0254, gradient norm = 0.1569, eval: [8.4 s]
# Iteration 67 fit: [32.2 s]: Recall = 0.3332, Jaccard score = 0.2464, loss = 0.0249, gradient norm = 0.1555, eval: [8.6 s]
# Iteration 68 fit: [32.2 s]: Recall = 0.3364, Jaccard score = 0.2494, loss = 0.0243, gradient norm = 0.1535, eval: [8.4 s]
# Iteration 69 fit: [32.3 s]: Recall = 0.3326, Jaccard score = 0.2459, loss = 0.0239, gradient norm = 0.1522, eval: [8.7 s]
# Iteration 70 fit: [32.3 s]: Recall = 0.3365, Jaccard score = 0.2495, loss = 0.0236, gradient norm = 0.1520, eval: [8.4 s]
# Iteration 71 fit: [32.3 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0231, gradient norm = 0.1489, eval: [8.5 s]
# Iteration 72 fit: [32.4 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0227, gradient norm = 0.1491, eval: [8.4 s]
# Iteration 73 fit: [32.1 s]: Recall = 0.3363, Jaccard score = 0.2493, loss = 0.0232, gradient norm = 0.1519, eval: [8.4 s]
# Iteration 74 fit: [32.3 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0222, gradient norm = 0.1474, eval: [8.4 s]
# Iteration 75 fit: [32.1 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0220, gradient norm = 0.1478, eval: [8.5 s]
# Iteration 76 fit: [32.1 s]: Recall = 0.3349, Jaccard score = 0.2480, loss = 0.0218, gradient norm = 0.1453, eval: [8.4 s]
# Iteration 77 fit: [32.2 s]: Recall = 0.3366, Jaccard score = 0.2496, loss = 0.0214, gradient norm = 0.1457, eval: [8.5 s]
# Iteration 78 fit: [32.2 s]: Recall = 0.3332, Jaccard score = 0.2464, loss = 0.0211, gradient norm = 0.1440, eval: [8.4 s]
# Iteration 79 fit: [32.8 s]: Recall = 0.3315, Jaccard score = 0.2449, loss = 0.0209, gradient norm = 0.1435, eval: [8.5 s]
# Iteration 80 fit: [32.2 s]: Recall = 0.3380, Jaccard score = 0.2509, loss = 0.0202, gradient norm = 0.1417, eval: [8.4 s]
# Iteration 81 fit: [32.4 s]: Recall = 0.3330, Jaccard score = 0.2462, loss = 0.0207, gradient norm = 0.1437, eval: [8.5 s]
# Iteration 82 fit: [32.4 s]: Recall = 0.3325, Jaccard score = 0.2458, loss = 0.0200, gradient norm = 0.1419, eval: [8.7 s]
# Iteration 83 fit: [32.4 s]: Recall = 0.3301, Jaccard score = 0.2436, loss = 0.0205, gradient norm = 0.1432, eval: [8.6 s]
# Iteration 84 fit: [32.5 s]: Recall = 0.3352, Jaccard score = 0.2482, loss = 0.0195, gradient norm = 0.1399, eval: [8.6 s]
# Iteration 85 fit: [32.4 s]: Recall = 0.3326, Jaccard score = 0.2459, loss = 0.0199, gradient norm = 0.1409, eval: [8.6 s]
# Iteration 86 fit: [32.4 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0195, gradient norm = 0.1401, eval: [8.6 s]
# Iteration 87 fit: [32.6 s]: Recall = 0.3331, Jaccard score = 0.2463, loss = 0.0188, gradient norm = 0.1367, eval: [8.6 s]
# Iteration 88 fit: [32.4 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0192, gradient norm = 0.1376, eval: [8.6 s]
# Iteration 89 fit: [32.4 s]: Recall = 0.3349, Jaccard score = 0.2480, loss = 0.0188, gradient norm = 0.1377, eval: [8.6 s]
# Iteration 90 fit: [32.5 s]: Recall = 0.3370, Jaccard score = 0.2499, loss = 0.0187, gradient norm = 0.1373, eval: [8.6 s]
# Iteration 91 fit: [32.4 s]: Recall = 0.3371, Jaccard score = 0.2500, loss = 0.0191, gradient norm = 0.1371, eval: [8.6 s]
# Iteration 92 fit: [32.7 s]: Recall = 0.3320, Jaccard score = 0.2453, loss = 0.0185, gradient norm = 0.1348, eval: [8.7 s]
# Iteration 93 fit: [32.5 s]: Recall = 0.3362, Jaccard score = 0.2492, loss = 0.0178, gradient norm = 0.1328, eval: [8.6 s]
# Iteration 94 fit: [32.5 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0177, gradient norm = 0.1335, eval: [8.7 s]
# Iteration 95 fit: [32.5 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0180, gradient norm = 0.1342, eval: [8.6 s]
# Iteration 96 fit: [32.8 s]: Recall = 0.3285, Jaccard score = 0.2421, loss = 0.0177, gradient norm = 0.1335, eval: [8.7 s]
# Iteration 97 fit: [32.7 s]: Recall = 0.3350, Jaccard score = 0.2481, loss = 0.0175, gradient norm = 0.1317, eval: [8.6 s]
# Iteration 98 fit: [32.5 s]: Recall = 0.3346, Jaccard score = 0.2477, loss = 0.0174, gradient norm = 0.1304, eval: [8.6 s]
# Iteration 99 fit: [32.7 s]: Recall = 0.3365, Jaccard score = 0.2495, loss = 0.0173, gradient norm = 0.1319, eval: [8.6 s]
# Iteration 100 fit: [32.5 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0170, gradient norm = 0.1308, eval: [8.6 s]
# Iteration 101 fit: [32.4 s]: Recall = 0.3393, Jaccard score = 0.2520, loss = 0.0167, gradient norm = 0.1302, eval: [8.6 s]
# Iteration 102 fit: [32.2 s]: Recall = 0.3325, Jaccard score = 0.2458, loss = 0.0165, gradient norm = 0.1293, eval: [8.5 s]
# Iteration 103 fit: [32.6 s]: Recall = 0.3361, Jaccard score = 0.2491, loss = 0.0165, gradient norm = 0.1287, eval: [8.4 s]
# Iteration 104 fit: [32.6 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0166, gradient norm = 0.1286, eval: [8.4 s]
# Iteration 105 fit: [32.0 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0169, gradient norm = 0.1303, eval: [8.4 s]
# Iteration 106 fit: [32.4 s]: Recall = 0.3312, Jaccard score = 0.2445, loss = 0.0163, gradient norm = 0.1290, eval: [8.4 s]
# Iteration 107 fit: [32.5 s]: Recall = 0.3394, Jaccard score = 0.2521, loss = 0.0159, gradient norm = 0.1271, eval: [8.4 s]
# Iteration 108 fit: [32.6 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0158, gradient norm = 0.1263, eval: [8.7 s]
# Iteration 109 fit: [32.0 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0157, gradient norm = 0.1265, eval: [8.6 s]
# Iteration 110 fit: [32.5 s]: Recall = 0.3382, Jaccard score = 0.2511, loss = 0.0158, gradient norm = 0.1278, eval: [8.6 s]
# Iteration 111 fit: [32.0 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0156, gradient norm = 0.1255, eval: [8.7 s]
# Iteration 112 fit: [32.5 s]: Recall = 0.3366, Jaccard score = 0.2496, loss = 0.0156, gradient norm = 0.1269, eval: [8.6 s]
# Iteration 113 fit: [32.0 s]: Recall = 0.3344, Jaccard score = 0.2475, loss = 0.0156, gradient norm = 0.1265, eval: [8.6 s]
# Iteration 114 fit: [32.5 s]: Recall = 0.3348, Jaccard score = 0.2479, loss = 0.0159, gradient norm = 0.1282, eval: [8.6 s]
# Iteration 115 fit: [32.0 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0152, gradient norm = 0.1248, eval: [8.6 s]
# Iteration 116 fit: [32.5 s]: Recall = 0.3378, Jaccard score = 0.2507, loss = 0.0158, gradient norm = 0.1278, eval: [8.6 s]
# Iteration 117 fit: [32.1 s]: Recall = 0.3340, Jaccard score = 0.2472, loss = 0.0154, gradient norm = 0.1252, eval: [8.6 s]
# Iteration 118 fit: [32.6 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0150, gradient norm = 0.1238, eval: [8.5 s]
# Iteration 119 fit: [32.0 s]: Recall = 0.3350, Jaccard score = 0.2481, loss = 0.0154, gradient norm = 0.1251, eval: [8.6 s]
# Iteration 120 fit: [32.6 s]: Recall = 0.3356, Jaccard score = 0.2486, loss = 0.0149, gradient norm = 0.1233, eval: [8.5 s]
# Iteration 121 fit: [32.0 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0146, gradient norm = 0.1217, eval: [8.6 s]
# Iteration 122 fit: [32.5 s]: Recall = 0.3340, Jaccard score = 0.2472, loss = 0.0150, gradient norm = 0.1242, eval: [8.5 s]
# Iteration 123 fit: [32.0 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0144, gradient norm = 0.1222, eval: [8.6 s]
# Iteration 124 fit: [32.9 s]: Recall = 0.3347, Jaccard score = 0.2478, loss = 0.0146, gradient norm = 0.1211, eval: [8.6 s]
# Iteration 125 fit: [32.0 s]: Recall = 0.3393, Jaccard score = 0.2520, loss = 0.0146, gradient norm = 0.1212, eval: [8.6 s]
# Iteration 126 fit: [32.5 s]: Recall = 0.3369, Jaccard score = 0.2498, loss = 0.0148, gradient norm = 0.1231, eval: [8.5 s]
# Iteration 127 fit: [32.0 s]: Recall = 0.3300, Jaccard score = 0.2435, loss = 0.0145, gradient norm = 0.1225, eval: [8.6 s]
# Iteration 128 fit: [32.5 s]: Recall = 0.3296, Jaccard score = 0.2431, loss = 0.0140, gradient norm = 0.1211, eval: [8.5 s]
# Iteration 129 fit: [32.1 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0141, gradient norm = 0.1200, eval: [8.6 s]
# Iteration 130 fit: [32.7 s]: Recall = 0.3285, Jaccard score = 0.2421, loss = 0.0136, gradient norm = 0.1175, eval: [8.5 s]
# Iteration 131 fit: [32.1 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0140, gradient norm = 0.1199, eval: [8.6 s]
# Iteration 132 fit: [32.6 s]: Recall = 0.3358, Jaccard score = 0.2489, loss = 0.0144, gradient norm = 0.1222, eval: [8.5 s]
# Iteration 133 fit: [32.6 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0142, gradient norm = 0.1194, eval: [8.6 s]
# Iteration 134 fit: [32.1 s]: Recall = 0.3313, Jaccard score = 0.2446, loss = 0.0137, gradient norm = 0.1182, eval: [8.6 s]
# Iteration 135 fit: [32.6 s]: Recall = 0.3310, Jaccard score = 0.2444, loss = 0.0140, gradient norm = 0.1198, eval: [8.6 s]
# Iteration 136 fit: [32.1 s]: Recall = 0.3344, Jaccard score = 0.2475, loss = 0.0135, gradient norm = 0.1179, eval: [8.5 s]
# Iteration 137 fit: [32.6 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0139, gradient norm = 0.1199, eval: [8.6 s]
# Iteration 138 fit: [32.1 s]: Recall = 0.3341, Jaccard score = 0.2473, loss = 0.0140, gradient norm = 0.1187, eval: [8.5 s]
# Iteration 139 fit: [32.6 s]: Recall = 0.3282, Jaccard score = 0.2418, loss = 0.0134, gradient norm = 0.1173, eval: [8.6 s]
# Iteration 140 fit: [32.1 s]: Recall = 0.3326, Jaccard score = 0.2459, loss = 0.0135, gradient norm = 0.1180, eval: [8.5 s]
# Iteration 141 fit: [32.6 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0139, gradient norm = 0.1196, eval: [8.6 s]
# Iteration 142 fit: [32.1 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0132, gradient norm = 0.1161, eval: [8.5 s]
# Iteration 143 fit: [32.6 s]: Recall = 0.3324, Jaccard score = 0.2457, loss = 0.0134, gradient norm = 0.1174, eval: [8.6 s]
# Iteration 144 fit: [32.1 s]: Recall = 0.3329, Jaccard score = 0.2461, loss = 0.0136, gradient norm = 0.1176, eval: [8.5 s]
# Iteration 145 fit: [32.6 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0134, gradient norm = 0.1160, eval: [8.6 s]
# Iteration 146 fit: [32.1 s]: Recall = 0.3320, Jaccard score = 0.2453, loss = 0.0134, gradient norm = 0.1171, eval: [8.5 s]
# Iteration 147 fit: [32.6 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0132, gradient norm = 0.1164, eval: [8.6 s]
# Iteration 148 fit: [32.2 s]: Recall = 0.3339, Jaccard score = 0.2471, loss = 0.0129, gradient norm = 0.1153, eval: [8.4 s]
# Iteration 149 fit: [32.7 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0134, gradient norm = 0.1159, eval: [8.6 s]
# Iteration 150 fit: [32.1 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0128, gradient norm = 0.1137, eval: [8.5 s]
# Iteration 151 fit: [32.6 s]: Recall = 0.3336, Jaccard score = 0.2467, loss = 0.0128, gradient norm = 0.1135, eval: [8.5 s]
# Iteration 152 fit: [32.2 s]: Recall = 0.3348, Jaccard score = 0.2479, loss = 0.0128, gradient norm = 0.1140, eval: [8.5 s]
# End. Best Iteration 107:  Recall = 0.3394, Jaccard score = 0.2521. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1568039383.h5
# Model test performed 
# Recall score: 0.12831957152421333     Jaccard score: 0.08326093252244425