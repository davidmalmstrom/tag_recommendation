--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"

#original mlp utan fast eval kopia 1


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1568140049.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1568140049.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           flatten_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_2[0][0]              
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          layer1[0][0]                     
# ==================================================================================================
# Total params: 5,777,345
# Trainable params: 5,777,345
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0019, Jaccard score = 0.0012
# Iteration 0 fit: [25.7 s]: Recall = 0.0438, Jaccard score = 0.0267, loss = 0.4274, gradient norm = 1.0000, eval: [33.3 s]
# Iteration 1 fit: [26.6 s]: Recall = 0.0623, Jaccard score = 0.0384, loss = 0.3857, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 2 fit: [25.6 s]: Recall = 0.0699, Jaccard score = 0.0433, loss = 0.3566, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 3 fit: [25.6 s]: Recall = 0.0735, Jaccard score = 0.0456, loss = 0.3291, gradient norm = 1.0000, eval: [33.1 s]
# Iteration 4 fit: [25.7 s]: Recall = 0.0768, Jaccard score = 0.0477, loss = 0.3017, gradient norm = 1.0000, eval: [35.0 s]
# Iteration 5 fit: [26.0 s]: Recall = 0.0817, Jaccard score = 0.0509, loss = 0.2762, gradient norm = 1.0000, eval: [33.0 s]
# Iteration 6 fit: [26.1 s]: Recall = 0.0795, Jaccard score = 0.0495, loss = 0.2515, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 7 fit: [25.7 s]: Recall = 0.0833, Jaccard score = 0.0520, loss = 0.2288, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 8 fit: [25.7 s]: Recall = 0.0867, Jaccard score = 0.0542, loss = 0.2074, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 9 fit: [25.8 s]: Recall = 0.0822, Jaccard score = 0.0513, loss = 0.1886, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 10 fit: [25.8 s]: Recall = 0.0830, Jaccard score = 0.0518, loss = 0.1700, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 11 fit: [25.8 s]: Recall = 0.0844, Jaccard score = 0.0527, loss = 0.1542, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 12 fit: [25.8 s]: Recall = 0.0852, Jaccard score = 0.0533, loss = 0.1401, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 13 fit: [25.6 s]: Recall = 0.0846, Jaccard score = 0.0529, loss = 0.1275, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 14 fit: [25.7 s]: Recall = 0.0830, Jaccard score = 0.0518, loss = 0.1158, gradient norm = 1.0000, eval: [35.0 s]
# Iteration 15 fit: [25.7 s]: Recall = 0.0872, Jaccard score = 0.0545, loss = 0.1062, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 16 fit: [25.9 s]: Recall = 0.0867, Jaccard score = 0.0542, loss = 0.0972, gradient norm = 1.0000, eval: [33.5 s]
# Iteration 17 fit: [25.9 s]: Recall = 0.0848, Jaccard score = 0.0530, loss = 0.0900, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 18 fit: [25.7 s]: Recall = 0.0897, Jaccard score = 0.0562, loss = 0.0828, gradient norm = 1.0000, eval: [32.9 s]
# Iteration 19 fit: [25.5 s]: Recall = 0.0872, Jaccard score = 0.0545, loss = 0.0771, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 20 fit: [25.4 s]: Recall = 0.0896, Jaccard score = 0.0561, loss = 0.0720, gradient norm = 1.0000, eval: [33.3 s]
# Iteration 21 fit: [25.7 s]: Recall = 0.0921, Jaccard score = 0.0578, loss = 0.0673, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 22 fit: [25.6 s]: Recall = 0.0898, Jaccard score = 0.0563, loss = 0.0637, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 23 fit: [25.5 s]: Recall = 0.0915, Jaccard score = 0.0574, loss = 0.0597, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 24 fit: [26.0 s]: Recall = 0.0931, Jaccard score = 0.0585, loss = 0.0561, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 25 fit: [25.5 s]: Recall = 0.0969, Jaccard score = 0.0610, loss = 0.0535, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 26 fit: [25.7 s]: Recall = 0.0941, Jaccard score = 0.0592, loss = 0.0500, gradient norm = 1.0000, eval: [33.1 s]
# Iteration 27 fit: [25.9 s]: Recall = 0.0945, Jaccard score = 0.0594, loss = 0.0488, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 28 fit: [26.0 s]: Recall = 0.0933, Jaccard score = 0.0586, loss = 0.0455, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 29 fit: [26.0 s]: Recall = 0.0961, Jaccard score = 0.0604, loss = 0.0438, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 30 fit: [25.7 s]: Recall = 0.1004, Jaccard score = 0.0634, loss = 0.0410, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 31 fit: [25.8 s]: Recall = 0.0987, Jaccard score = 0.0622, loss = 0.0392, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 32 fit: [25.9 s]: Recall = 0.1013, Jaccard score = 0.0640, loss = 0.0388, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 33 fit: [25.5 s]: Recall = 0.1005, Jaccard score = 0.0634, loss = 0.0363, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 34 fit: [25.9 s]: Recall = 0.1020, Jaccard score = 0.0644, loss = 0.0358, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 35 fit: [25.8 s]: Recall = 0.1011, Jaccard score = 0.0638, loss = 0.0344, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 36 fit: [25.6 s]: Recall = 0.1037, Jaccard score = 0.0656, loss = 0.0328, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 37 fit: [25.5 s]: Recall = 0.1026, Jaccard score = 0.0648, loss = 0.0324, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 38 fit: [25.7 s]: Recall = 0.1034, Jaccard score = 0.0653, loss = 0.0312, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 39 fit: [25.9 s]: Recall = 0.1032, Jaccard score = 0.0652, loss = 0.0298, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 40 fit: [25.6 s]: Recall = 0.1048, Jaccard score = 0.0663, loss = 0.0285, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 41 fit: [26.1 s]: Recall = 0.1045, Jaccard score = 0.0661, loss = 0.0278, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 42 fit: [25.6 s]: Recall = 0.1069, Jaccard score = 0.0677, loss = 0.0271, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 43 fit: [25.9 s]: Recall = 0.1082, Jaccard score = 0.0686, loss = 0.0263, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 44 fit: [25.6 s]: Recall = 0.1086, Jaccard score = 0.0689, loss = 0.0252, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 45 fit: [25.7 s]: Recall = 0.1074, Jaccard score = 0.0680, loss = 0.0243, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 46 fit: [25.5 s]: Recall = 0.1102, Jaccard score = 0.0700, loss = 0.0240, gradient norm = 1.0000, eval: [33.3 s]
# Iteration 47 fit: [25.6 s]: Recall = 0.1117, Jaccard score = 0.0710, loss = 0.0239, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 48 fit: [25.8 s]: Recall = 0.1113, Jaccard score = 0.0707, loss = 0.0230, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 49 fit: [26.0 s]: Recall = 0.1107, Jaccard score = 0.0703, loss = 0.0220, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 50 fit: [25.1 s]: Recall = 0.1116, Jaccard score = 0.0709, loss = 0.0216, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 51 fit: [25.8 s]: Recall = 0.1109, Jaccard score = 0.0704, loss = 0.0210, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 52 fit: [25.6 s]: Recall = 0.1134, Jaccard score = 0.0722, loss = 0.0202, gradient norm = 1.0000, eval: [33.0 s]
# Iteration 53 fit: [25.6 s]: Recall = 0.1130, Jaccard score = 0.0718, loss = 0.0202, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 54 fit: [25.8 s]: Recall = 0.1141, Jaccard score = 0.0726, loss = 0.0201, gradient norm = 1.0000, eval: [33.3 s]
# Iteration 55 fit: [25.8 s]: Recall = 0.1115, Jaccard score = 0.0708, loss = 0.0190, gradient norm = 1.0000, eval: [33.1 s]
# Iteration 56 fit: [25.9 s]: Recall = 0.1134, Jaccard score = 0.0722, loss = 0.0193, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 57 fit: [25.5 s]: Recall = 0.1138, Jaccard score = 0.0724, loss = 0.0188, gradient norm = 1.0000, eval: [35.4 s]
# Iteration 58 fit: [25.7 s]: Recall = 0.1149, Jaccard score = 0.0732, loss = 0.0182, gradient norm = 1.0000, eval: [35.3 s]
# Iteration 59 fit: [25.6 s]: Recall = 0.1141, Jaccard score = 0.0726, loss = 0.0182, gradient norm = 1.0000, eval: [35.0 s]
# Iteration 60 fit: [25.3 s]: Recall = 0.1126, Jaccard score = 0.0716, loss = 0.0169, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 61 fit: [25.6 s]: Recall = 0.1148, Jaccard score = 0.0731, loss = 0.0178, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 62 fit: [25.6 s]: Recall = 0.1162, Jaccard score = 0.0740, loss = 0.0172, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 63 fit: [25.8 s]: Recall = 0.1137, Jaccard score = 0.0723, loss = 0.0166, gradient norm = 1.0000, eval: [35.0 s]
# Iteration 64 fit: [26.0 s]: Recall = 0.1155, Jaccard score = 0.0736, loss = 0.0165, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 65 fit: [25.4 s]: Recall = 0.1137, Jaccard score = 0.0723, loss = 0.0156, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 66 fit: [25.7 s]: Recall = 0.1171, Jaccard score = 0.0747, loss = 0.0159, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 67 fit: [25.9 s]: Recall = 0.1129, Jaccard score = 0.0718, loss = 0.0158, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 68 fit: [25.6 s]: Recall = 0.1167, Jaccard score = 0.0744, loss = 0.0154, gradient norm = 1.0000, eval: [33.5 s]
# Iteration 69 fit: [25.9 s]: Recall = 0.1174, Jaccard score = 0.0749, loss = 0.0150, gradient norm = 1.0000, eval: [33.1 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.1174, Jaccard score = 0.0749, loss = 0.0151, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 71 fit: [25.5 s]: Recall = 0.1174, Jaccard score = 0.0749, loss = 0.0148, gradient norm = 1.0000, eval: [35.9 s]
# Iteration 72 fit: [25.9 s]: Recall = 0.1187, Jaccard score = 0.0758, loss = 0.0148, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 73 fit: [25.7 s]: Recall = 0.1156, Jaccard score = 0.0736, loss = 0.0139, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 74 fit: [25.2 s]: Recall = 0.1148, Jaccard score = 0.0731, loss = 0.0143, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 75 fit: [25.6 s]: Recall = 0.1163, Jaccard score = 0.0741, loss = 0.0138, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 76 fit: [26.0 s]: Recall = 0.1177, Jaccard score = 0.0751, loss = 0.0138, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 77 fit: [25.7 s]: Recall = 0.1188, Jaccard score = 0.0758, loss = 0.0137, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 78 fit: [25.7 s]: Recall = 0.1164, Jaccard score = 0.0742, loss = 0.0134, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 79 fit: [25.7 s]: Recall = 0.1179, Jaccard score = 0.0752, loss = 0.0132, gradient norm = 1.0000, eval: [35.3 s]
# Iteration 80 fit: [25.9 s]: Recall = 0.1175, Jaccard score = 0.0750, loss = 0.0131, gradient norm = 1.0000, eval: [33.3 s]
# Iteration 81 fit: [25.8 s]: Recall = 0.1185, Jaccard score = 0.0756, loss = 0.0129, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 82 fit: [25.9 s]: Recall = 0.1178, Jaccard score = 0.0751, loss = 0.0131, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 83 fit: [25.5 s]: Recall = 0.1169, Jaccard score = 0.0745, loss = 0.0126, gradient norm = 1.0000, eval: [35.5 s]
# Iteration 84 fit: [26.0 s]: Recall = 0.1166, Jaccard score = 0.0743, loss = 0.0131, gradient norm = 1.0000, eval: [35.3 s]
# Iteration 85 fit: [25.6 s]: Recall = 0.1156, Jaccard score = 0.0736, loss = 0.0122, gradient norm = 1.0000, eval: [33.1 s]
# Iteration 86 fit: [25.9 s]: Recall = 0.1175, Jaccard score = 0.0750, loss = 0.0122, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 87 fit: [25.7 s]: Recall = 0.1181, Jaccard score = 0.0754, loss = 0.0122, gradient norm = 1.0000, eval: [33.2 s]
# Iteration 88 fit: [25.7 s]: Recall = 0.1185, Jaccard score = 0.0756, loss = 0.0122, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 89 fit: [25.6 s]: Recall = 0.1132, Jaccard score = 0.0720, loss = 0.0120, gradient norm = 1.0000, eval: [33.3 s]
# Iteration 90 fit: [25.7 s]: Recall = 0.1171, Jaccard score = 0.0747, loss = 0.0121, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 91 fit: [25.9 s]: Recall = 0.1174, Jaccard score = 0.0749, loss = 0.0117, gradient norm = 1.0000, eval: [33.0 s]
# Iteration 92 fit: [25.5 s]: Recall = 0.1177, Jaccard score = 0.0751, loss = 0.0117, gradient norm = 1.0000, eval: [33.1 s]
# Iteration 93 fit: [25.6 s]: Recall = 0.1162, Jaccard score = 0.0740, loss = 0.0114, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 94 fit: [25.7 s]: Recall = 0.1189, Jaccard score = 0.0759, loss = 0.0117, gradient norm = 1.0000, eval: [35.4 s]
# Iteration 95 fit: [25.7 s]: Recall = 0.1210, Jaccard score = 0.0773, loss = 0.0110, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 96 fit: [25.6 s]: Recall = 0.1175, Jaccard score = 0.0750, loss = 0.0112, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 97 fit: [25.6 s]: Recall = 0.1187, Jaccard score = 0.0758, loss = 0.0111, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 98 fit: [25.7 s]: Recall = 0.1199, Jaccard score = 0.0766, loss = 0.0111, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 99 fit: [25.6 s]: Recall = 0.1198, Jaccard score = 0.0765, loss = 0.0110, gradient norm = 1.0000, eval: [35.3 s]
# Iteration 100 fit: [25.8 s]: Recall = 0.1231, Jaccard score = 0.0788, loss = 0.0105, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 101 fit: [25.7 s]: Recall = 0.1213, Jaccard score = 0.0776, loss = 0.0105, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 102 fit: [25.8 s]: Recall = 0.1220, Jaccard score = 0.0780, loss = 0.0104, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 103 fit: [25.5 s]: Recall = 0.1203, Jaccard score = 0.0769, loss = 0.0106, gradient norm = 1.0000, eval: [33.4 s]
# Iteration 104 fit: [25.5 s]: Recall = 0.1212, Jaccard score = 0.0775, loss = 0.0104, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 105 fit: [25.8 s]: Recall = 0.1238, Jaccard score = 0.0793, loss = 0.0106, gradient norm = 1.0000, eval: [34.7 s]
# Iteration 106 fit: [25.7 s]: Recall = 0.1237, Jaccard score = 0.0792, loss = 0.0102, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 107 fit: [25.7 s]: Recall = 0.1239, Jaccard score = 0.0794, loss = 0.0104, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 108 fit: [25.6 s]: Recall = 0.1245, Jaccard score = 0.0798, loss = 0.0103, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 109 fit: [25.6 s]: Recall = 0.1235, Jaccard score = 0.0791, loss = 0.0102, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 110 fit: [25.6 s]: Recall = 0.1250, Jaccard score = 0.0801, loss = 0.0104, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 111 fit: [25.7 s]: Recall = 0.1211, Jaccard score = 0.0774, loss = 0.0097, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 112 fit: [25.7 s]: Recall = 0.1235, Jaccard score = 0.0791, loss = 0.0099, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 113 fit: [25.6 s]: Recall = 0.1227, Jaccard score = 0.0785, loss = 0.0098, gradient norm = 1.0000, eval: [35.6 s]
# Iteration 114 fit: [25.8 s]: Recall = 0.1236, Jaccard score = 0.0791, loss = 0.0094, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 115 fit: [25.8 s]: Recall = 0.1234, Jaccard score = 0.0790, loss = 0.0098, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 116 fit: [25.8 s]: Recall = 0.1258, Jaccard score = 0.0806, loss = 0.0094, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 117 fit: [25.8 s]: Recall = 0.1253, Jaccard score = 0.0803, loss = 0.0095, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 118 fit: [25.7 s]: Recall = 0.1226, Jaccard score = 0.0784, loss = 0.0093, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 119 fit: [25.5 s]: Recall = 0.1210, Jaccard score = 0.0773, loss = 0.0096, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 120 fit: [25.5 s]: Recall = 0.1217, Jaccard score = 0.0778, loss = 0.0095, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 121 fit: [25.7 s]: Recall = 0.1233, Jaccard score = 0.0789, loss = 0.0093, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 122 fit: [25.7 s]: Recall = 0.1207, Jaccard score = 0.0772, loss = 0.0095, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 123 fit: [25.7 s]: Recall = 0.1255, Jaccard score = 0.0805, loss = 0.0098, gradient norm = 1.0000, eval: [34.7 s]
# Iteration 124 fit: [25.5 s]: Recall = 0.1249, Jaccard score = 0.0800, loss = 0.0091, gradient norm = 1.0000, eval: [35.6 s]
# Iteration 125 fit: [25.6 s]: Recall = 0.1252, Jaccard score = 0.0802, loss = 0.0092, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 126 fit: [25.7 s]: Recall = 0.1223, Jaccard score = 0.0783, loss = 0.0092, gradient norm = 1.0000, eval: [34.6 s]
# Iteration 127 fit: [25.6 s]: Recall = 0.1284, Jaccard score = 0.0825, loss = 0.0089, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 128 fit: [25.8 s]: Recall = 0.1275, Jaccard score = 0.0818, loss = 0.0089, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 129 fit: [25.8 s]: Recall = 0.1251, Jaccard score = 0.0802, loss = 0.0086, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 130 fit: [25.6 s]: Recall = 0.1226, Jaccard score = 0.0784, loss = 0.0088, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 131 fit: [25.8 s]: Recall = 0.1241, Jaccard score = 0.0795, loss = 0.0089, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 132 fit: [25.7 s]: Recall = 0.1270, Jaccard score = 0.0815, loss = 0.0088, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 133 fit: [25.6 s]: Recall = 0.1265, Jaccard score = 0.0811, loss = 0.0084, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 134 fit: [25.7 s]: Recall = 0.1261, Jaccard score = 0.0809, loss = 0.0086, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 135 fit: [25.5 s]: Recall = 0.1292, Jaccard score = 0.0830, loss = 0.0087, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 136 fit: [25.8 s]: Recall = 0.1262, Jaccard score = 0.0810, loss = 0.0085, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 137 fit: [25.6 s]: Recall = 0.1258, Jaccard score = 0.0806, loss = 0.0084, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 138 fit: [25.4 s]: Recall = 0.1284, Jaccard score = 0.0825, loss = 0.0085, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 139 fit: [26.0 s]: Recall = 0.1267, Jaccard score = 0.0813, loss = 0.0083, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 140 fit: [25.7 s]: Recall = 0.1277, Jaccard score = 0.0820, loss = 0.0081, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 141 fit: [25.7 s]: Recall = 0.1268, Jaccard score = 0.0814, loss = 0.0085, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 142 fit: [25.7 s]: Recall = 0.1290, Jaccard score = 0.0829, loss = 0.0087, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 143 fit: [25.7 s]: Recall = 0.1267, Jaccard score = 0.0813, loss = 0.0084, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 144 fit: [25.6 s]: Recall = 0.1255, Jaccard score = 0.0805, loss = 0.0081, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 145 fit: [25.7 s]: Recall = 0.1242, Jaccard score = 0.0795, loss = 0.0082, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 146 fit: [25.7 s]: Recall = 0.1235, Jaccard score = 0.0791, loss = 0.0083, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 147 fit: [25.8 s]: Recall = 0.1273, Jaccard score = 0.0817, loss = 0.0082, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 148 fit: [25.6 s]: Recall = 0.1242, Jaccard score = 0.0795, loss = 0.0079, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 149 fit: [25.7 s]: Recall = 0.1252, Jaccard score = 0.0802, loss = 0.0079, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 150 fit: [25.8 s]: Recall = 0.1274, Jaccard score = 0.0818, loss = 0.0078, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 151 fit: [25.6 s]: Recall = 0.1239, Jaccard score = 0.0794, loss = 0.0077, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 152 fit: [25.6 s]: Recall = 0.1244, Jaccard score = 0.0797, loss = 0.0081, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 153 fit: [25.8 s]: Recall = 0.1259, Jaccard score = 0.0807, loss = 0.0078, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 154 fit: [25.7 s]: Recall = 0.1259, Jaccard score = 0.0807, loss = 0.0078, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 155 fit: [25.7 s]: Recall = 0.1260, Jaccard score = 0.0808, loss = 0.0076, gradient norm = 1.0000, eval: [35.9 s]
# Iteration 156 fit: [25.7 s]: Recall = 0.1250, Jaccard score = 0.0801, loss = 0.0078, gradient norm = 1.0000, eval: [35.8 s]
# Iteration 157 fit: [25.4 s]: Recall = 0.1231, Jaccard score = 0.0788, loss = 0.0073, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 158 fit: [25.5 s]: Recall = 0.1279, Jaccard score = 0.0821, loss = 0.0076, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 159 fit: [25.6 s]: Recall = 0.1266, Jaccard score = 0.0812, loss = 0.0075, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 160 fit: [25.7 s]: Recall = 0.1257, Jaccard score = 0.0806, loss = 0.0077, gradient norm = 1.0000, eval: [35.0 s]
# Iteration 161 fit: [25.7 s]: Recall = 0.1286, Jaccard score = 0.0826, loss = 0.0075, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 162 fit: [25.7 s]: Recall = 0.1291, Jaccard score = 0.0829, loss = 0.0074, gradient norm = 1.0000, eval: [35.8 s]
# Iteration 163 fit: [25.6 s]: Recall = 0.1293, Jaccard score = 0.0831, loss = 0.0073, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 164 fit: [25.7 s]: Recall = 0.1281, Jaccard score = 0.0822, loss = 0.0071, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 165 fit: [25.7 s]: Recall = 0.1257, Jaccard score = 0.0806, loss = 0.0073, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 166 fit: [25.7 s]: Recall = 0.1257, Jaccard score = 0.0806, loss = 0.0073, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 167 fit: [25.8 s]: Recall = 0.1333, Jaccard score = 0.0859, loss = 0.0071, gradient norm = 1.0000, eval: [35.7 s]
# Iteration 168 fit: [25.8 s]: Recall = 0.1257, Jaccard score = 0.0806, loss = 0.0072, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 169 fit: [25.6 s]: Recall = 0.1257, Jaccard score = 0.0806, loss = 0.0071, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 170 fit: [25.8 s]: Recall = 0.1268, Jaccard score = 0.0814, loss = 0.0070, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 171 fit: [25.7 s]: Recall = 0.1244, Jaccard score = 0.0797, loss = 0.0071, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 172 fit: [25.5 s]: Recall = 0.1300, Jaccard score = 0.0836, loss = 0.0071, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 173 fit: [25.6 s]: Recall = 0.1294, Jaccard score = 0.0832, loss = 0.0068, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 174 fit: [25.6 s]: Recall = 0.1271, Jaccard score = 0.0816, loss = 0.0070, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 175 fit: [25.6 s]: Recall = 0.1273, Jaccard score = 0.0817, loss = 0.0072, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 176 fit: [25.5 s]: Recall = 0.1262, Jaccard score = 0.0810, loss = 0.0069, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 177 fit: [25.6 s]: Recall = 0.1266, Jaccard score = 0.0812, loss = 0.0070, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 178 fit: [25.7 s]: Recall = 0.1273, Jaccard score = 0.0817, loss = 0.0066, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 179 fit: [25.5 s]: Recall = 0.1289, Jaccard score = 0.0828, loss = 0.0071, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 180 fit: [25.7 s]: Recall = 0.1297, Jaccard score = 0.0833, loss = 0.0069, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 181 fit: [25.6 s]: Recall = 0.1287, Jaccard score = 0.0827, loss = 0.0071, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 182 fit: [25.7 s]: Recall = 0.1348, Jaccard score = 0.0869, loss = 0.0065, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 183 fit: [25.5 s]: Recall = 0.1294, Jaccard score = 0.0832, loss = 0.0067, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 184 fit: [25.6 s]: Recall = 0.1291, Jaccard score = 0.0829, loss = 0.0067, gradient norm = 1.0000, eval: [35.6 s]
# Iteration 185 fit: [25.1 s]: Recall = 0.1299, Jaccard score = 0.0835, loss = 0.0067, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 186 fit: [25.8 s]: Recall = 0.1321, Jaccard score = 0.0850, loss = 0.0067, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 187 fit: [25.6 s]: Recall = 0.1279, Jaccard score = 0.0821, loss = 0.0065, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 188 fit: [25.5 s]: Recall = 0.1290, Jaccard score = 0.0829, loss = 0.0065, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 189 fit: [25.6 s]: Recall = 0.1284, Jaccard score = 0.0825, loss = 0.0070, gradient norm = 1.0000, eval: [34.2 s]
# Iteration 190 fit: [25.6 s]: Recall = 0.1327, Jaccard score = 0.0855, loss = 0.0064, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 191 fit: [25.7 s]: Recall = 0.1319, Jaccard score = 0.0849, loss = 0.0066, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 192 fit: [25.7 s]: Recall = 0.1295, Jaccard score = 0.0833, loss = 0.0065, gradient norm = 1.0000, eval: [35.0 s]
# Iteration 193 fit: [25.7 s]: Recall = 0.1321, Jaccard score = 0.0850, loss = 0.0065, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 194 fit: [25.5 s]: Recall = 0.1306, Jaccard score = 0.0840, loss = 0.0068, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 195 fit: [25.6 s]: Recall = 0.1309, Jaccard score = 0.0842, loss = 0.0064, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 196 fit: [25.5 s]: Recall = 0.1298, Jaccard score = 0.0834, loss = 0.0061, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 197 fit: [25.7 s]: Recall = 0.1305, Jaccard score = 0.0839, loss = 0.0061, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 198 fit: [25.3 s]: Recall = 0.1322, Jaccard score = 0.0851, loss = 0.0062, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 199 fit: [25.5 s]: Recall = 0.1331, Jaccard score = 0.0857, loss = 0.0063, gradient norm = 1.0000, eval: [35.7 s]
# Iteration 200 fit: [25.3 s]: Recall = 0.1308, Jaccard score = 0.0841, loss = 0.0062, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 201 fit: [25.6 s]: Recall = 0.1321, Jaccard score = 0.0850, loss = 0.0062, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 202 fit: [25.7 s]: Recall = 0.1297, Jaccard score = 0.0833, loss = 0.0065, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 203 fit: [25.8 s]: Recall = 0.1311, Jaccard score = 0.0844, loss = 0.0060, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 204 fit: [25.8 s]: Recall = 0.1363, Jaccard score = 0.0880, loss = 0.0063, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 205 fit: [25.5 s]: Recall = 0.1316, Jaccard score = 0.0847, loss = 0.0062, gradient norm = 1.0000, eval: [35.7 s]
# Iteration 206 fit: [25.5 s]: Recall = 0.1294, Jaccard score = 0.0832, loss = 0.0058, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 207 fit: [25.3 s]: Recall = 0.1316, Jaccard score = 0.0847, loss = 0.0062, gradient norm = 1.0000, eval: [34.6 s]
# Iteration 208 fit: [25.7 s]: Recall = 0.1300, Jaccard score = 0.0836, loss = 0.0065, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 209 fit: [25.6 s]: Recall = 0.1337, Jaccard score = 0.0861, loss = 0.0061, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 210 fit: [25.7 s]: Recall = 0.1298, Jaccard score = 0.0834, loss = 0.0061, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 211 fit: [25.6 s]: Recall = 0.1319, Jaccard score = 0.0849, loss = 0.0061, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 212 fit: [25.7 s]: Recall = 0.1322, Jaccard score = 0.0851, loss = 0.0060, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 213 fit: [25.6 s]: Recall = 0.1329, Jaccard score = 0.0856, loss = 0.0060, gradient norm = 1.0000, eval: [35.4 s]
# Iteration 214 fit: [25.6 s]: Recall = 0.1301, Jaccard score = 0.0837, loss = 0.0060, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 215 fit: [25.6 s]: Recall = 0.1347, Jaccard score = 0.0869, loss = 0.0058, gradient norm = 1.0000, eval: [35.2 s]
# Iteration 216 fit: [25.7 s]: Recall = 0.1367, Jaccard score = 0.0883, loss = 0.0060, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 217 fit: [26.7 s]: Recall = 0.1327, Jaccard score = 0.0855, loss = 0.0058, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 218 fit: [25.7 s]: Recall = 0.1331, Jaccard score = 0.0857, loss = 0.0058, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 219 fit: [25.8 s]: Recall = 0.1363, Jaccard score = 0.0880, loss = 0.0058, gradient norm = 1.0000, eval: [34.3 s]
# Iteration 220 fit: [25.6 s]: Recall = 0.1332, Jaccard score = 0.0858, loss = 0.0059, gradient norm = 1.0000, eval: [35.9 s]
# Iteration 221 fit: [25.5 s]: Recall = 0.1378, Jaccard score = 0.0890, loss = 0.0056, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 222 fit: [25.5 s]: Recall = 0.1321, Jaccard score = 0.0850, loss = 0.0057, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 223 fit: [25.5 s]: Recall = 0.1331, Jaccard score = 0.0857, loss = 0.0060, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 224 fit: [25.7 s]: Recall = 0.1330, Jaccard score = 0.0857, loss = 0.0059, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 225 fit: [25.8 s]: Recall = 0.1350, Jaccard score = 0.0871, loss = 0.0057, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 226 fit: [25.6 s]: Recall = 0.1318, Jaccard score = 0.0849, loss = 0.0054, gradient norm = 1.0000, eval: [35.8 s]
# Iteration 227 fit: [25.6 s]: Recall = 0.1345, Jaccard score = 0.0867, loss = 0.0055, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 228 fit: [25.6 s]: Recall = 0.1334, Jaccard score = 0.0860, loss = 0.0052, gradient norm = 1.0000, eval: [35.9 s]
# Iteration 229 fit: [25.6 s]: Recall = 0.1325, Jaccard score = 0.0853, loss = 0.0056, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 230 fit: [25.6 s]: Recall = 0.1332, Jaccard score = 0.0858, loss = 0.0055, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 231 fit: [25.6 s]: Recall = 0.1315, Jaccard score = 0.0846, loss = 0.0055, gradient norm = 1.0000, eval: [33.6 s]
# Iteration 232 fit: [25.7 s]: Recall = 0.1335, Jaccard score = 0.0861, loss = 0.0055, gradient norm = 1.0000, eval: [35.5 s]
# Iteration 233 fit: [25.7 s]: Recall = 0.1340, Jaccard score = 0.0864, loss = 0.0057, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 234 fit: [25.6 s]: Recall = 0.1342, Jaccard score = 0.0865, loss = 0.0055, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 235 fit: [25.8 s]: Recall = 0.1306, Jaccard score = 0.0840, loss = 0.0053, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 236 fit: [25.8 s]: Recall = 0.1330, Jaccard score = 0.0857, loss = 0.0055, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 237 fit: [25.7 s]: Recall = 0.1329, Jaccard score = 0.0856, loss = 0.0056, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 238 fit: [25.7 s]: Recall = 0.1294, Jaccard score = 0.0832, loss = 0.0054, gradient norm = 1.0000, eval: [34.0 s]
# Iteration 239 fit: [25.6 s]: Recall = 0.1332, Jaccard score = 0.0858, loss = 0.0054, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 240 fit: [25.6 s]: Recall = 0.1362, Jaccard score = 0.0879, loss = 0.0054, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 241 fit: [25.7 s]: Recall = 0.1358, Jaccard score = 0.0877, loss = 0.0056, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 242 fit: [25.8 s]: Recall = 0.1341, Jaccard score = 0.0865, loss = 0.0055, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 243 fit: [25.8 s]: Recall = 0.1345, Jaccard score = 0.0867, loss = 0.0053, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 244 fit: [25.5 s]: Recall = 0.1331, Jaccard score = 0.0857, loss = 0.0053, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 245 fit: [25.8 s]: Recall = 0.1349, Jaccard score = 0.0870, loss = 0.0053, gradient norm = 1.0000, eval: [34.9 s]
# Iteration 246 fit: [25.6 s]: Recall = 0.1331, Jaccard score = 0.0857, loss = 0.0052, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 247 fit: [25.7 s]: Recall = 0.1342, Jaccard score = 0.0865, loss = 0.0051, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 248 fit: [25.7 s]: Recall = 0.1319, Jaccard score = 0.0849, loss = 0.0051, gradient norm = 1.0000, eval: [35.5 s]
# Iteration 249 fit: [25.5 s]: Recall = 0.1321, Jaccard score = 0.0850, loss = 0.0053, gradient norm = 1.0000, eval: [35.5 s]
# Iteration 250 fit: [25.6 s]: Recall = 0.1340, Jaccard score = 0.0864, loss = 0.0051, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 251 fit: [25.6 s]: Recall = 0.1338, Jaccard score = 0.0862, loss = 0.0050, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 252 fit: [25.7 s]: Recall = 0.1342, Jaccard score = 0.0865, loss = 0.0050, gradient norm = 1.0000, eval: [34.1 s]
# Iteration 253 fit: [25.2 s]: Recall = 0.1311, Jaccard score = 0.0844, loss = 0.0051, gradient norm = 1.0000, eval: [33.8 s]
# Iteration 254 fit: [25.6 s]: Recall = 0.1323, Jaccard score = 0.0852, loss = 0.0050, gradient norm = 1.0000, eval: [34.4 s]
# Iteration 255 fit: [25.6 s]: Recall = 0.1342, Jaccard score = 0.0865, loss = 0.0049, gradient norm = 1.0000, eval: [33.7 s]
# Iteration 256 fit: [25.7 s]: Recall = 0.1322, Jaccard score = 0.0851, loss = 0.0050, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 257 fit: [25.7 s]: Recall = 0.1317, Jaccard score = 0.0848, loss = 0.0050, gradient norm = 1.0000, eval: [34.6 s]
# Iteration 258 fit: [25.6 s]: Recall = 0.1351, Jaccard score = 0.0872, loss = 0.0052, gradient norm = 1.0000, eval: [33.9 s]
# Iteration 259 fit: [25.9 s]: Recall = 0.1372, Jaccard score = 0.0886, loss = 0.0050, gradient norm = 1.0000, eval: [34.7 s]
# Iteration 260 fit: [25.7 s]: Recall = 0.1367, Jaccard score = 0.0883, loss = 0.0050, gradient norm = 1.0000, eval: [33.5 s]
# Iteration 261 fit: [25.6 s]: Recall = 0.1323, Jaccard score = 0.0852, loss = 0.0051, gradient norm = 1.0000, eval: [34.8 s]
# Iteration 262 fit: [25.7 s]: Recall = 0.1372, Jaccard score = 0.0886, loss = 0.0050, gradient norm = 1.0000, eval: [35.3 s]
# Iteration 263 fit: [25.7 s]: Recall = 0.1364, Jaccard score = 0.0881, loss = 0.0050, gradient norm = 1.0000, eval: [34.5 s]
# Iteration 264 fit: [25.6 s]: Recall = 0.1306, Jaccard score = 0.0840, loss = 0.0048, gradient norm = 1.0000, eval: [35.1 s]
# Iteration 265 fit: [25.6 s]: Recall = 0.1330, Jaccard score = 0.0857, loss = 0.0047, gradient norm = 1.0000, eval: [35.6 s]
# Iteration 266 fit: [25.2 s]: Recall = 0.1354, Jaccard score = 0.0873, loss = 0.0048, gradient norm = 1.0000, eval: [33.8 s]
# End. Best Iteration 221:  Recall = 0.1378, Jaccard score = 0.0890. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1568140049.h5
# Model test performed 
# Recall score: 0.13300602544074983     Jaccard score: 0.08656499636891794