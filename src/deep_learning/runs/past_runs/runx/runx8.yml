--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"

# test med original MLP igen, för att se om det är någon skillnad

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1568128298.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1568128298.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           flatten_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_2[0][0]              
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          layer1[0][0]                     
# ==================================================================================================
# Total params: 5,777,345
# Trainable params: 5,777,345
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0263, Jaccard score = 0.0158
# Iteration 0 fit: [26.0 s]: Recall = 0.2152, Jaccard score = 0.1464, loss = 0.4290, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 1 fit: [25.9 s]: Recall = 0.2504, Jaccard score = 0.1745, loss = 0.3895, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 2 fit: [25.7 s]: Recall = 0.2650, Jaccard score = 0.1866, loss = 0.3605, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 3 fit: [25.7 s]: Recall = 0.2737, Jaccard score = 0.1939, loss = 0.3325, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 4 fit: [25.8 s]: Recall = 0.2769, Jaccard score = 0.1966, loss = 0.3051, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 5 fit: [25.9 s]: Recall = 0.2830, Jaccard score = 0.2018, loss = 0.2787, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 6 fit: [25.8 s]: Recall = 0.2812, Jaccard score = 0.2003, loss = 0.2536, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 7 fit: [25.8 s]: Recall = 0.2812, Jaccard score = 0.2003, loss = 0.2301, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 8 fit: [25.8 s]: Recall = 0.2847, Jaccard score = 0.2032, loss = 0.2082, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 9 fit: [26.1 s]: Recall = 0.2842, Jaccard score = 0.2028, loss = 0.1884, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 10 fit: [26.1 s]: Recall = 0.2795, Jaccard score = 0.1988, loss = 0.1703, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 11 fit: [25.9 s]: Recall = 0.2832, Jaccard score = 0.2020, loss = 0.1545, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 12 fit: [25.9 s]: Recall = 0.2793, Jaccard score = 0.1986, loss = 0.1400, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 13 fit: [25.9 s]: Recall = 0.2858, Jaccard score = 0.2042, loss = 0.1267, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 14 fit: [25.7 s]: Recall = 0.2812, Jaccard score = 0.2003, loss = 0.1156, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 15 fit: [26.0 s]: Recall = 0.2827, Jaccard score = 0.2016, loss = 0.1055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 16 fit: [26.0 s]: Recall = 0.2856, Jaccard score = 0.2040, loss = 0.0968, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 17 fit: [25.9 s]: Recall = 0.2868, Jaccard score = 0.2051, loss = 0.0898, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 18 fit: [25.7 s]: Recall = 0.2848, Jaccard score = 0.2033, loss = 0.0821, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 19 fit: [25.8 s]: Recall = 0.2910, Jaccard score = 0.2087, loss = 0.0764, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 20 fit: [26.1 s]: Recall = 0.2930, Jaccard score = 0.2104, loss = 0.0713, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 21 fit: [25.7 s]: Recall = 0.2914, Jaccard score = 0.2090, loss = 0.0671, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 22 fit: [25.6 s]: Recall = 0.2923, Jaccard score = 0.2098, loss = 0.0629, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 23 fit: [26.1 s]: Recall = 0.2984, Jaccard score = 0.2151, loss = 0.0593, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 24 fit: [25.7 s]: Recall = 0.2956, Jaccard score = 0.2127, loss = 0.0562, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 25 fit: [25.8 s]: Recall = 0.2962, Jaccard score = 0.2132, loss = 0.0530, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 26 fit: [25.7 s]: Recall = 0.2918, Jaccard score = 0.2093, loss = 0.0505, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 27 fit: [26.3 s]: Recall = 0.2961, Jaccard score = 0.2131, loss = 0.0481, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 28 fit: [25.6 s]: Recall = 0.2947, Jaccard score = 0.2119, loss = 0.0463, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 29 fit: [25.7 s]: Recall = 0.3071, Jaccard score = 0.2228, loss = 0.0440, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 30 fit: [25.8 s]: Recall = 0.2996, Jaccard score = 0.2162, loss = 0.0414, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 31 fit: [25.6 s]: Recall = 0.2986, Jaccard score = 0.2153, loss = 0.0401, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 32 fit: [25.9 s]: Recall = 0.3076, Jaccard score = 0.2233, loss = 0.0383, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 33 fit: [25.9 s]: Recall = 0.3019, Jaccard score = 0.2182, loss = 0.0367, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 34 fit: [26.0 s]: Recall = 0.3033, Jaccard score = 0.2194, loss = 0.0361, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 35 fit: [25.9 s]: Recall = 0.3059, Jaccard score = 0.2218, loss = 0.0338, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 36 fit: [26.2 s]: Recall = 0.3007, Jaccard score = 0.2171, loss = 0.0329, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 37 fit: [25.9 s]: Recall = 0.3031, Jaccard score = 0.2192, loss = 0.0322, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 38 fit: [25.7 s]: Recall = 0.3043, Jaccard score = 0.2203, loss = 0.0304, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 39 fit: [26.1 s]: Recall = 0.3044, Jaccard score = 0.2204, loss = 0.0293, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 40 fit: [26.0 s]: Recall = 0.3005, Jaccard score = 0.2170, loss = 0.0289, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 41 fit: [25.8 s]: Recall = 0.3074, Jaccard score = 0.2231, loss = 0.0276, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 42 fit: [26.0 s]: Recall = 0.3100, Jaccard score = 0.2254, loss = 0.0272, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 43 fit: [25.6 s]: Recall = 0.3081, Jaccard score = 0.2237, loss = 0.0267, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 44 fit: [25.7 s]: Recall = 0.3059, Jaccard score = 0.2218, loss = 0.0262, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 45 fit: [25.7 s]: Recall = 0.3075, Jaccard score = 0.2232, loss = 0.0253, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 46 fit: [25.6 s]: Recall = 0.3121, Jaccard score = 0.2273, loss = 0.0241, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 47 fit: [25.7 s]: Recall = 0.3097, Jaccard score = 0.2251, loss = 0.0236, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 48 fit: [25.8 s]: Recall = 0.3146, Jaccard score = 0.2295, loss = 0.0233, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 49 fit: [25.7 s]: Recall = 0.3107, Jaccard score = 0.2260, loss = 0.0223, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 50 fit: [25.8 s]: Recall = 0.3106, Jaccard score = 0.2259, loss = 0.0224, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 51 fit: [25.8 s]: Recall = 0.3113, Jaccard score = 0.2265, loss = 0.0219, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 52 fit: [25.5 s]: Recall = 0.3154, Jaccard score = 0.2302, loss = 0.0211, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 53 fit: [25.8 s]: Recall = 0.3108, Jaccard score = 0.2261, loss = 0.0212, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 54 fit: [25.8 s]: Recall = 0.3153, Jaccard score = 0.2301, loss = 0.0203, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 55 fit: [26.0 s]: Recall = 0.3097, Jaccard score = 0.2251, loss = 0.0205, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 56 fit: [26.2 s]: Recall = 0.3071, Jaccard score = 0.2228, loss = 0.0193, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 57 fit: [26.0 s]: Recall = 0.3133, Jaccard score = 0.2284, loss = 0.0192, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 58 fit: [25.6 s]: Recall = 0.3128, Jaccard score = 0.2279, loss = 0.0190, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 59 fit: [25.8 s]: Recall = 0.3084, Jaccard score = 0.2240, loss = 0.0181, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 60 fit: [25.7 s]: Recall = 0.3117, Jaccard score = 0.2269, loss = 0.0180, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 61 fit: [25.7 s]: Recall = 0.3143, Jaccard score = 0.2292, loss = 0.0176, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 62 fit: [25.8 s]: Recall = 0.3121, Jaccard score = 0.2273, loss = 0.0174, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 63 fit: [25.8 s]: Recall = 0.3125, Jaccard score = 0.2277, loss = 0.0169, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 64 fit: [25.6 s]: Recall = 0.3156, Jaccard score = 0.2304, loss = 0.0167, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 65 fit: [25.8 s]: Recall = 0.3176, Jaccard score = 0.2322, loss = 0.0169, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 66 fit: [25.9 s]: Recall = 0.3162, Jaccard score = 0.2309, loss = 0.0165, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 67 fit: [25.6 s]: Recall = 0.3121, Jaccard score = 0.2273, loss = 0.0161, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 68 fit: [25.8 s]: Recall = 0.3155, Jaccard score = 0.2303, loss = 0.0159, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 69 fit: [25.7 s]: Recall = 0.3096, Jaccard score = 0.2250, loss = 0.0159, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.3141, Jaccard score = 0.2291, loss = 0.0157, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 71 fit: [26.5 s]: Recall = 0.3177, Jaccard score = 0.2323, loss = 0.0156, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 72 fit: [25.9 s]: Recall = 0.3169, Jaccard score = 0.2316, loss = 0.0153, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 73 fit: [25.8 s]: Recall = 0.3162, Jaccard score = 0.2309, loss = 0.0151, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 74 fit: [25.9 s]: Recall = 0.3180, Jaccard score = 0.2326, loss = 0.0149, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 75 fit: [25.9 s]: Recall = 0.3161, Jaccard score = 0.2308, loss = 0.0145, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 76 fit: [25.7 s]: Recall = 0.3161, Jaccard score = 0.2308, loss = 0.0146, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 77 fit: [25.8 s]: Recall = 0.3171, Jaccard score = 0.2318, loss = 0.0138, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 78 fit: [26.0 s]: Recall = 0.3157, Jaccard score = 0.2305, loss = 0.0142, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 79 fit: [25.7 s]: Recall = 0.3194, Jaccard score = 0.2338, loss = 0.0141, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 80 fit: [25.8 s]: Recall = 0.3224, Jaccard score = 0.2365, loss = 0.0139, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 81 fit: [25.8 s]: Recall = 0.3178, Jaccard score = 0.2324, loss = 0.0136, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 82 fit: [25.8 s]: Recall = 0.3149, Jaccard score = 0.2298, loss = 0.0134, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 83 fit: [25.7 s]: Recall = 0.3196, Jaccard score = 0.2340, loss = 0.0131, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 84 fit: [26.0 s]: Recall = 0.3143, Jaccard score = 0.2292, loss = 0.0136, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 85 fit: [26.0 s]: Recall = 0.3159, Jaccard score = 0.2306, loss = 0.0127, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 86 fit: [25.8 s]: Recall = 0.3180, Jaccard score = 0.2326, loss = 0.0127, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 87 fit: [25.9 s]: Recall = 0.3173, Jaccard score = 0.2320, loss = 0.0128, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 88 fit: [25.6 s]: Recall = 0.3153, Jaccard score = 0.2301, loss = 0.0126, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 89 fit: [26.0 s]: Recall = 0.3147, Jaccard score = 0.2296, loss = 0.0124, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 90 fit: [25.6 s]: Recall = 0.3218, Jaccard score = 0.2360, loss = 0.0120, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 91 fit: [25.9 s]: Recall = 0.3177, Jaccard score = 0.2323, loss = 0.0123, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 92 fit: [25.7 s]: Recall = 0.3156, Jaccard score = 0.2304, loss = 0.0119, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 93 fit: [25.8 s]: Recall = 0.3196, Jaccard score = 0.2340, loss = 0.0118, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 94 fit: [25.8 s]: Recall = 0.3187, Jaccard score = 0.2332, loss = 0.0118, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 95 fit: [25.8 s]: Recall = 0.3169, Jaccard score = 0.2316, loss = 0.0120, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 96 fit: [26.0 s]: Recall = 0.3187, Jaccard score = 0.2332, loss = 0.0117, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 97 fit: [25.5 s]: Recall = 0.3152, Jaccard score = 0.2300, loss = 0.0116, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 98 fit: [26.2 s]: Recall = 0.3189, Jaccard score = 0.2334, loss = 0.0113, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 99 fit: [25.9 s]: Recall = 0.3266, Jaccard score = 0.2404, loss = 0.0115, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 100 fit: [26.0 s]: Recall = 0.3229, Jaccard score = 0.2370, loss = 0.0112, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 101 fit: [25.9 s]: Recall = 0.3216, Jaccard score = 0.2358, loss = 0.0113, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 102 fit: [26.0 s]: Recall = 0.3202, Jaccard score = 0.2345, loss = 0.0112, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 103 fit: [25.7 s]: Recall = 0.3237, Jaccard score = 0.2378, loss = 0.0109, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 104 fit: [26.0 s]: Recall = 0.3210, Jaccard score = 0.2353, loss = 0.0115, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 105 fit: [25.9 s]: Recall = 0.3176, Jaccard score = 0.2322, loss = 0.0112, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 106 fit: [25.9 s]: Recall = 0.3208, Jaccard score = 0.2351, loss = 0.0107, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 107 fit: [25.8 s]: Recall = 0.3233, Jaccard score = 0.2373, loss = 0.0107, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 108 fit: [26.1 s]: Recall = 0.3208, Jaccard score = 0.2351, loss = 0.0107, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 109 fit: [25.8 s]: Recall = 0.3191, Jaccard score = 0.2335, loss = 0.0108, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 110 fit: [25.7 s]: Recall = 0.3248, Jaccard score = 0.2387, loss = 0.0107, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 111 fit: [25.8 s]: Recall = 0.3192, Jaccard score = 0.2336, loss = 0.0105, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 112 fit: [25.9 s]: Recall = 0.3184, Jaccard score = 0.2329, loss = 0.0109, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 113 fit: [25.9 s]: Recall = 0.3173, Jaccard score = 0.2320, loss = 0.0105, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 114 fit: [25.8 s]: Recall = 0.3217, Jaccard score = 0.2359, loss = 0.0101, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 115 fit: [25.9 s]: Recall = 0.3204, Jaccard score = 0.2347, loss = 0.0102, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 116 fit: [25.8 s]: Recall = 0.3161, Jaccard score = 0.2308, loss = 0.0102, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 117 fit: [25.8 s]: Recall = 0.3179, Jaccard score = 0.2325, loss = 0.0105, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 118 fit: [25.6 s]: Recall = 0.3197, Jaccard score = 0.2341, loss = 0.0101, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 119 fit: [25.8 s]: Recall = 0.3191, Jaccard score = 0.2335, loss = 0.0101, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 120 fit: [26.0 s]: Recall = 0.3212, Jaccard score = 0.2355, loss = 0.0101, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 121 fit: [25.8 s]: Recall = 0.3255, Jaccard score = 0.2393, loss = 0.0095, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 122 fit: [25.7 s]: Recall = 0.3135, Jaccard score = 0.2285, loss = 0.0097, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 123 fit: [25.7 s]: Recall = 0.3205, Jaccard score = 0.2349, loss = 0.0099, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 124 fit: [25.9 s]: Recall = 0.3200, Jaccard score = 0.2343, loss = 0.0097, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 125 fit: [25.8 s]: Recall = 0.3210, Jaccard score = 0.2353, loss = 0.0101, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 126 fit: [26.1 s]: Recall = 0.3200, Jaccard score = 0.2343, loss = 0.0093, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 127 fit: [25.9 s]: Recall = 0.3217, Jaccard score = 0.2359, loss = 0.0098, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 128 fit: [25.7 s]: Recall = 0.3221, Jaccard score = 0.2363, loss = 0.0094, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 129 fit: [25.9 s]: Recall = 0.3208, Jaccard score = 0.2351, loss = 0.0093, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 130 fit: [25.5 s]: Recall = 0.3231, Jaccard score = 0.2371, loss = 0.0094, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 131 fit: [26.0 s]: Recall = 0.3229, Jaccard score = 0.2370, loss = 0.0094, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 132 fit: [25.7 s]: Recall = 0.3282, Jaccard score = 0.2418, loss = 0.0098, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 133 fit: [25.7 s]: Recall = 0.3244, Jaccard score = 0.2384, loss = 0.0093, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 134 fit: [25.6 s]: Recall = 0.3219, Jaccard score = 0.2361, loss = 0.0096, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 135 fit: [26.0 s]: Recall = 0.3256, Jaccard score = 0.2394, loss = 0.0096, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 136 fit: [26.1 s]: Recall = 0.3204, Jaccard score = 0.2347, loss = 0.0089, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 137 fit: [25.9 s]: Recall = 0.3217, Jaccard score = 0.2359, loss = 0.0090, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 138 fit: [25.9 s]: Recall = 0.3239, Jaccard score = 0.2379, loss = 0.0091, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 139 fit: [26.0 s]: Recall = 0.3258, Jaccard score = 0.2396, loss = 0.0091, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 140 fit: [26.3 s]: Recall = 0.3258, Jaccard score = 0.2396, loss = 0.0090, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 141 fit: [25.8 s]: Recall = 0.3241, Jaccard score = 0.2381, loss = 0.0090, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 142 fit: [25.8 s]: Recall = 0.3210, Jaccard score = 0.2353, loss = 0.0090, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 143 fit: [26.0 s]: Recall = 0.3236, Jaccard score = 0.2376, loss = 0.0086, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 144 fit: [25.7 s]: Recall = 0.3245, Jaccard score = 0.2385, loss = 0.0088, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 145 fit: [25.8 s]: Recall = 0.3250, Jaccard score = 0.2389, loss = 0.0088, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 146 fit: [26.1 s]: Recall = 0.3251, Jaccard score = 0.2390, loss = 0.0088, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 147 fit: [25.7 s]: Recall = 0.3247, Jaccard score = 0.2386, loss = 0.0087, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 148 fit: [26.2 s]: Recall = 0.3234, Jaccard score = 0.2374, loss = 0.0087, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 149 fit: [25.6 s]: Recall = 0.3196, Jaccard score = 0.2340, loss = 0.0087, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 150 fit: [25.6 s]: Recall = 0.3249, Jaccard score = 0.2388, loss = 0.0086, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 151 fit: [25.8 s]: Recall = 0.3248, Jaccard score = 0.2387, loss = 0.0084, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 152 fit: [25.8 s]: Recall = 0.3269, Jaccard score = 0.2407, loss = 0.0085, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 153 fit: [26.0 s]: Recall = 0.3223, Jaccard score = 0.2364, loss = 0.0084, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 154 fit: [25.9 s]: Recall = 0.3236, Jaccard score = 0.2376, loss = 0.0083, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 155 fit: [26.1 s]: Recall = 0.3219, Jaccard score = 0.2361, loss = 0.0083, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 156 fit: [26.1 s]: Recall = 0.3249, Jaccard score = 0.2388, loss = 0.0087, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 157 fit: [25.8 s]: Recall = 0.3224, Jaccard score = 0.2365, loss = 0.0084, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 158 fit: [25.6 s]: Recall = 0.3208, Jaccard score = 0.2351, loss = 0.0082, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 159 fit: [26.1 s]: Recall = 0.3248, Jaccard score = 0.2387, loss = 0.0085, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 160 fit: [26.1 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0082, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 161 fit: [26.0 s]: Recall = 0.3237, Jaccard score = 0.2378, loss = 0.0080, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 162 fit: [25.6 s]: Recall = 0.3217, Jaccard score = 0.2359, loss = 0.0082, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 163 fit: [25.9 s]: Recall = 0.3219, Jaccard score = 0.2361, loss = 0.0080, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 164 fit: [25.8 s]: Recall = 0.3263, Jaccard score = 0.2400, loss = 0.0081, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 165 fit: [25.6 s]: Recall = 0.3274, Jaccard score = 0.2411, loss = 0.0081, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 166 fit: [25.8 s]: Recall = 0.3249, Jaccard score = 0.2388, loss = 0.0078, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 167 fit: [26.0 s]: Recall = 0.3226, Jaccard score = 0.2367, loss = 0.0079, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 168 fit: [25.8 s]: Recall = 0.3264, Jaccard score = 0.2401, loss = 0.0079, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 169 fit: [26.2 s]: Recall = 0.3282, Jaccard score = 0.2418, loss = 0.0078, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 170 fit: [26.2 s]: Recall = 0.3234, Jaccard score = 0.2374, loss = 0.0078, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 171 fit: [25.9 s]: Recall = 0.3225, Jaccard score = 0.2366, loss = 0.0078, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 172 fit: [25.9 s]: Recall = 0.3233, Jaccard score = 0.2373, loss = 0.0078, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 173 fit: [26.0 s]: Recall = 0.3273, Jaccard score = 0.2410, loss = 0.0077, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 174 fit: [25.8 s]: Recall = 0.3250, Jaccard score = 0.2389, loss = 0.0080, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 175 fit: [25.7 s]: Recall = 0.3213, Jaccard score = 0.2356, loss = 0.0073, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 176 fit: [26.3 s]: Recall = 0.3204, Jaccard score = 0.2347, loss = 0.0080, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 177 fit: [25.9 s]: Recall = 0.3245, Jaccard score = 0.2385, loss = 0.0075, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 178 fit: [26.1 s]: Recall = 0.3242, Jaccard score = 0.2382, loss = 0.0076, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 179 fit: [25.9 s]: Recall = 0.3215, Jaccard score = 0.2357, loss = 0.0078, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 180 fit: [25.8 s]: Recall = 0.3248, Jaccard score = 0.2387, loss = 0.0079, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 181 fit: [25.9 s]: Recall = 0.3266, Jaccard score = 0.2404, loss = 0.0075, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 182 fit: [25.7 s]: Recall = 0.3226, Jaccard score = 0.2367, loss = 0.0074, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 183 fit: [25.7 s]: Recall = 0.3256, Jaccard score = 0.2394, loss = 0.0074, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 184 fit: [26.2 s]: Recall = 0.3243, Jaccard score = 0.2383, loss = 0.0074, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 185 fit: [26.1 s]: Recall = 0.3276, Jaccard score = 0.2413, loss = 0.0072, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 186 fit: [26.0 s]: Recall = 0.3220, Jaccard score = 0.2362, loss = 0.0074, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 187 fit: [25.9 s]: Recall = 0.3221, Jaccard score = 0.2363, loss = 0.0072, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 188 fit: [25.9 s]: Recall = 0.3277, Jaccard score = 0.2414, loss = 0.0070, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 189 fit: [25.9 s]: Recall = 0.3257, Jaccard score = 0.2395, loss = 0.0073, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 190 fit: [25.9 s]: Recall = 0.3252, Jaccard score = 0.2391, loss = 0.0074, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 191 fit: [26.0 s]: Recall = 0.3268, Jaccard score = 0.2406, loss = 0.0071, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 192 fit: [25.6 s]: Recall = 0.3264, Jaccard score = 0.2401, loss = 0.0073, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 193 fit: [25.7 s]: Recall = 0.3263, Jaccard score = 0.2400, loss = 0.0073, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 194 fit: [25.6 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0072, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 195 fit: [26.1 s]: Recall = 0.3234, Jaccard score = 0.2374, loss = 0.0072, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 196 fit: [26.0 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0072, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 197 fit: [25.8 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0069, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 198 fit: [25.8 s]: Recall = 0.3300, Jaccard score = 0.2435, loss = 0.0071, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 199 fit: [25.7 s]: Recall = 0.3235, Jaccard score = 0.2375, loss = 0.0072, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 200 fit: [26.2 s]: Recall = 0.3276, Jaccard score = 0.2413, loss = 0.0071, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 201 fit: [25.7 s]: Recall = 0.3285, Jaccard score = 0.2421, loss = 0.0069, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 202 fit: [25.7 s]: Recall = 0.3288, Jaccard score = 0.2423, loss = 0.0070, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 203 fit: [25.8 s]: Recall = 0.3257, Jaccard score = 0.2395, loss = 0.0068, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 204 fit: [27.3 s]: Recall = 0.3273, Jaccard score = 0.2410, loss = 0.0069, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 205 fit: [25.7 s]: Recall = 0.3248, Jaccard score = 0.2387, loss = 0.0069, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 206 fit: [26.2 s]: Recall = 0.3324, Jaccard score = 0.2457, loss = 0.0068, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 207 fit: [25.8 s]: Recall = 0.3282, Jaccard score = 0.2418, loss = 0.0071, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 208 fit: [26.2 s]: Recall = 0.3281, Jaccard score = 0.2417, loss = 0.0065, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 209 fit: [25.9 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0070, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 210 fit: [25.9 s]: Recall = 0.3288, Jaccard score = 0.2423, loss = 0.0069, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 211 fit: [25.8 s]: Recall = 0.3290, Jaccard score = 0.2425, loss = 0.0064, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 212 fit: [25.7 s]: Recall = 0.3263, Jaccard score = 0.2400, loss = 0.0069, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 213 fit: [26.3 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0069, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 214 fit: [25.8 s]: Recall = 0.3274, Jaccard score = 0.2411, loss = 0.0066, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 215 fit: [25.7 s]: Recall = 0.3250, Jaccard score = 0.2389, loss = 0.0063, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 216 fit: [25.8 s]: Recall = 0.3236, Jaccard score = 0.2376, loss = 0.0066, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 217 fit: [25.6 s]: Recall = 0.3265, Jaccard score = 0.2402, loss = 0.0068, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 218 fit: [25.8 s]: Recall = 0.3260, Jaccard score = 0.2398, loss = 0.0063, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 219 fit: [25.9 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0063, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 220 fit: [25.6 s]: Recall = 0.3265, Jaccard score = 0.2402, loss = 0.0067, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 221 fit: [26.1 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0065, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 222 fit: [25.6 s]: Recall = 0.3231, Jaccard score = 0.2371, loss = 0.0064, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 223 fit: [25.8 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0065, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 224 fit: [26.1 s]: Recall = 0.3289, Jaccard score = 0.2424, loss = 0.0064, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 225 fit: [25.7 s]: Recall = 0.3296, Jaccard score = 0.2431, loss = 0.0064, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 226 fit: [26.0 s]: Recall = 0.3257, Jaccard score = 0.2395, loss = 0.0064, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 227 fit: [25.8 s]: Recall = 0.3243, Jaccard score = 0.2383, loss = 0.0065, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 228 fit: [26.0 s]: Recall = 0.3250, Jaccard score = 0.2389, loss = 0.0063, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 229 fit: [25.7 s]: Recall = 0.3232, Jaccard score = 0.2372, loss = 0.0063, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 230 fit: [25.8 s]: Recall = 0.3325, Jaccard score = 0.2458, loss = 0.0064, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 231 fit: [26.1 s]: Recall = 0.3256, Jaccard score = 0.2394, loss = 0.0063, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 232 fit: [26.0 s]: Recall = 0.3302, Jaccard score = 0.2437, loss = 0.0064, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 233 fit: [25.7 s]: Recall = 0.3277, Jaccard score = 0.2414, loss = 0.0066, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 234 fit: [26.4 s]: Recall = 0.3292, Jaccard score = 0.2428, loss = 0.0062, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 235 fit: [25.8 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0062, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 236 fit: [25.7 s]: Recall = 0.3271, Jaccard score = 0.2408, loss = 0.0063, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 237 fit: [25.7 s]: Recall = 0.3245, Jaccard score = 0.2385, loss = 0.0063, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 238 fit: [25.9 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0060, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 239 fit: [26.0 s]: Recall = 0.3300, Jaccard score = 0.2435, loss = 0.0062, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 240 fit: [25.6 s]: Recall = 0.3274, Jaccard score = 0.2411, loss = 0.0061, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 241 fit: [25.7 s]: Recall = 0.3273, Jaccard score = 0.2410, loss = 0.0062, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 242 fit: [25.8 s]: Recall = 0.3259, Jaccard score = 0.2397, loss = 0.0058, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 243 fit: [25.8 s]: Recall = 0.3259, Jaccard score = 0.2397, loss = 0.0062, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 244 fit: [25.8 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0062, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 245 fit: [25.9 s]: Recall = 0.3313, Jaccard score = 0.2446, loss = 0.0058, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 246 fit: [26.1 s]: Recall = 0.3323, Jaccard score = 0.2456, loss = 0.0059, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 247 fit: [25.9 s]: Recall = 0.3290, Jaccard score = 0.2425, loss = 0.0061, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 248 fit: [25.8 s]: Recall = 0.3280, Jaccard score = 0.2416, loss = 0.0058, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 249 fit: [25.9 s]: Recall = 0.3322, Jaccard score = 0.2455, loss = 0.0059, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 250 fit: [25.6 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0057, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 251 fit: [25.8 s]: Recall = 0.3236, Jaccard score = 0.2376, loss = 0.0060, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 252 fit: [26.1 s]: Recall = 0.3340, Jaccard score = 0.2472, loss = 0.0056, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 253 fit: [25.6 s]: Recall = 0.3244, Jaccard score = 0.2384, loss = 0.0058, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 254 fit: [26.3 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0059, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 255 fit: [25.7 s]: Recall = 0.3349, Jaccard score = 0.2480, loss = 0.0058, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 256 fit: [26.2 s]: Recall = 0.3299, Jaccard score = 0.2434, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 257 fit: [26.1 s]: Recall = 0.3277, Jaccard score = 0.2414, loss = 0.0058, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 258 fit: [26.2 s]: Recall = 0.3276, Jaccard score = 0.2413, loss = 0.0059, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 259 fit: [25.7 s]: Recall = 0.3281, Jaccard score = 0.2417, loss = 0.0056, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 260 fit: [26.1 s]: Recall = 0.3308, Jaccard score = 0.2442, loss = 0.0056, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 261 fit: [26.0 s]: Recall = 0.3315, Jaccard score = 0.2449, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 262 fit: [25.9 s]: Recall = 0.3276, Jaccard score = 0.2413, loss = 0.0056, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 263 fit: [25.7 s]: Recall = 0.3317, Jaccard score = 0.2451, loss = 0.0056, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 264 fit: [26.1 s]: Recall = 0.3291, Jaccard score = 0.2427, loss = 0.0057, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 265 fit: [26.2 s]: Recall = 0.3296, Jaccard score = 0.2431, loss = 0.0060, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 266 fit: [25.8 s]: Recall = 0.3267, Jaccard score = 0.2405, loss = 0.0054, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 267 fit: [25.7 s]: Recall = 0.3289, Jaccard score = 0.2424, loss = 0.0056, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 268 fit: [25.9 s]: Recall = 0.3313, Jaccard score = 0.2446, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 269 fit: [25.7 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0054, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 270 fit: [25.8 s]: Recall = 0.3339, Jaccard score = 0.2471, loss = 0.0056, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 271 fit: [26.2 s]: Recall = 0.3299, Jaccard score = 0.2434, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 272 fit: [26.1 s]: Recall = 0.3290, Jaccard score = 0.2425, loss = 0.0056, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 273 fit: [25.8 s]: Recall = 0.3260, Jaccard score = 0.2398, loss = 0.0056, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 274 fit: [25.8 s]: Recall = 0.3282, Jaccard score = 0.2418, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 275 fit: [25.7 s]: Recall = 0.3332, Jaccard score = 0.2464, loss = 0.0053, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 276 fit: [26.2 s]: Recall = 0.3263, Jaccard score = 0.2400, loss = 0.0055, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 277 fit: [25.8 s]: Recall = 0.3257, Jaccard score = 0.2395, loss = 0.0052, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 278 fit: [25.8 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0053, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 279 fit: [26.3 s]: Recall = 0.3326, Jaccard score = 0.2459, loss = 0.0054, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 280 fit: [25.7 s]: Recall = 0.3293, Jaccard score = 0.2429, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 281 fit: [26.3 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0052, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 282 fit: [25.9 s]: Recall = 0.3263, Jaccard score = 0.2400, loss = 0.0054, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 283 fit: [25.9 s]: Recall = 0.3296, Jaccard score = 0.2431, loss = 0.0055, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 284 fit: [26.1 s]: Recall = 0.3276, Jaccard score = 0.2413, loss = 0.0050, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 285 fit: [26.2 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0052, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 286 fit: [26.2 s]: Recall = 0.3252, Jaccard score = 0.2391, loss = 0.0056, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 287 fit: [26.2 s]: Recall = 0.3249, Jaccard score = 0.2388, loss = 0.0052, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 288 fit: [25.5 s]: Recall = 0.3342, Jaccard score = 0.2474, loss = 0.0050, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 289 fit: [26.2 s]: Recall = 0.3288, Jaccard score = 0.2423, loss = 0.0051, gradient norm = 1.0000, eval: [7.6 s]
# Iteration 290 fit: [25.7 s]: Recall = 0.3356, Jaccard score = 0.2486, loss = 0.0052, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 291 fit: [25.7 s]: Recall = 0.3281, Jaccard score = 0.2417, loss = 0.0053, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 292 fit: [25.7 s]: Recall = 0.3330, Jaccard score = 0.2462, loss = 0.0053, gradient norm = 1.0000, eval: [7.3 s]
# Iteration 293 fit: [25.7 s]: Recall = 0.3314, Jaccard score = 0.2447, loss = 0.0050, gradient norm = 1.0000, eval: [7.5 s]
# Iteration 294 fit: [26.0 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0054, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 295 fit: [26.2 s]: Recall = 0.3308, Jaccard score = 0.2442, loss = 0.0052, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 296 fit: [25.7 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0051, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 297 fit: [25.9 s]: Recall = 0.3322, Jaccard score = 0.2455, loss = 0.0050, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 298 fit: [26.0 s]: Recall = 0.3293, Jaccard score = 0.2429, loss = 0.0052, gradient norm = 1.0000, eval: [7.4 s]
# Iteration 299 fit: [25.9 s]: Recall = 0.3302, Jaccard score = 0.2437, loss = 0.0053, gradient norm = 1.0000, eval: [7.5 s]
# End. Best Iteration 290:  Recall = 0.3356, Jaccard score = 0.2486. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1568128298.h5
# Model test performed 
# Recall score: 0.13166703860745368     Jaccard score: 0.08561892323320273