--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[128,128,128,128]"
--reg_layers: "[0,0,0,0]"
--num_k_folds: "5"
--early_stopping: "35"

# Runs med _ är reruns med early stopping implementerat, så att allt kan jämföras med senare körningar

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[128,128,128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
--weights_path: Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
# Load data done [8.8 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0283, Jaccard score = 0.0170
# Iteration 0 fit: [14.1 s]: Recall = 0.2387, Jaccard score = 0.1644, loss = 0.4281, eval: [13.6 s]
# Iteration 1 fit: [13.6 s]: Recall = 0.2584, Jaccard score = 0.1804, loss = 0.3850, eval: [13.8 s]
# Iteration 2 fit: [13.6 s]: Recall = 0.2664, Jaccard score = 0.1871, loss = 0.3660, eval: [13.9 s]
# Iteration 3 fit: [13.5 s]: Recall = 0.2717, Jaccard score = 0.1915, loss = 0.3500, eval: [13.8 s]
# Iteration 4 fit: [13.5 s]: Recall = 0.2687, Jaccard score = 0.1890, loss = 0.3352, eval: [13.9 s]
# Iteration 5 fit: [13.6 s]: Recall = 0.2673, Jaccard score = 0.1878, loss = 0.3205, eval: [13.6 s]
# Iteration 6 fit: [13.6 s]: Recall = 0.2733, Jaccard score = 0.1929, loss = 0.3051, eval: [14.1 s]
# Iteration 7 fit: [13.7 s]: Recall = 0.2646, Jaccard score = 0.1855, loss = 0.2895, eval: [13.8 s]
# Iteration 8 fit: [13.5 s]: Recall = 0.2614, Jaccard score = 0.1829, loss = 0.2744, eval: [13.6 s]
# Iteration 9 fit: [13.6 s]: Recall = 0.2551, Jaccard score = 0.1777, loss = 0.2596, eval: [13.7 s]
# Iteration 10 fit: [13.5 s]: Recall = 0.2535, Jaccard score = 0.1764, loss = 0.2453, eval: [13.6 s]
# Iteration 11 fit: [13.6 s]: Recall = 0.2568, Jaccard score = 0.1791, loss = 0.2309, eval: [13.6 s]
# Iteration 12 fit: [13.5 s]: Recall = 0.2536, Jaccard score = 0.1765, loss = 0.2189, eval: [13.8 s]
# Iteration 13 fit: [13.8 s]: Recall = 0.2486, Jaccard score = 0.1724, loss = 0.2056, eval: [13.8 s]
# Iteration 14 fit: [13.5 s]: Recall = 0.2445, Jaccard score = 0.1691, loss = 0.1945, eval: [13.6 s]
# Iteration 15 fit: [13.5 s]: Recall = 0.2448, Jaccard score = 0.1693, loss = 0.1828, eval: [13.8 s]
# Iteration 16 fit: [13.5 s]: Recall = 0.2443, Jaccard score = 0.1689, loss = 0.1735, eval: [13.6 s]
# Iteration 17 fit: [13.5 s]: Recall = 0.2449, Jaccard score = 0.1694, loss = 0.1645, eval: [13.8 s]
# Iteration 18 fit: [13.5 s]: Recall = 0.2408, Jaccard score = 0.1661, loss = 0.1555, eval: [13.9 s]
# Iteration 19 fit: [13.7 s]: Recall = 0.2402, Jaccard score = 0.1656, loss = 0.1474, eval: [13.8 s]
# Iteration 20 fit: [13.5 s]: Recall = 0.2382, Jaccard score = 0.1640, loss = 0.1412, eval: [13.8 s]
# Iteration 21 fit: [13.5 s]: Recall = 0.2355, Jaccard score = 0.1618, loss = 0.1347, eval: [13.9 s]
# Iteration 22 fit: [13.5 s]: Recall = 0.2332, Jaccard score = 0.1600, loss = 0.1292, eval: [13.6 s]
# Iteration 23 fit: [13.6 s]: Recall = 0.2389, Jaccard score = 0.1646, loss = 0.1233, eval: [13.9 s]
# Iteration 24 fit: [13.6 s]: Recall = 0.2387, Jaccard score = 0.1644, loss = 0.1188, eval: [13.9 s]
# Iteration 25 fit: [13.5 s]: Recall = 0.2331, Jaccard score = 0.1600, loss = 0.1146, eval: [13.6 s]
# Iteration 26 fit: [13.6 s]: Recall = 0.2346, Jaccard score = 0.1611, loss = 0.1095, eval: [13.9 s]
# Iteration 27 fit: [13.5 s]: Recall = 0.2361, Jaccard score = 0.1624, loss = 0.1063, eval: [13.9 s]
# Iteration 28 fit: [13.6 s]: Recall = 0.2411, Jaccard score = 0.1664, loss = 0.1023, eval: [13.9 s]
# Iteration 29 fit: [13.6 s]: Recall = 0.2345, Jaccard score = 0.1610, loss = 0.0994, eval: [13.9 s]
# Iteration 30 fit: [13.6 s]: Recall = 0.2341, Jaccard score = 0.1607, loss = 0.0960, eval: [13.6 s]
# Iteration 31 fit: [13.6 s]: Recall = 0.2361, Jaccard score = 0.1624, loss = 0.0933, eval: [13.8 s]
# Iteration 32 fit: [13.5 s]: Recall = 0.2366, Jaccard score = 0.1628, loss = 0.0901, eval: [13.6 s]
# Iteration 33 fit: [13.6 s]: Recall = 0.2354, Jaccard score = 0.1618, loss = 0.0873, eval: [13.5 s]
# Iteration 34 fit: [13.6 s]: Recall = 0.2324, Jaccard score = 0.1593, loss = 0.0852, eval: [13.9 s]
# Iteration 35 fit: [13.6 s]: Recall = 0.2386, Jaccard score = 0.1643, loss = 0.0827, eval: [13.9 s]
# Iteration 36 fit: [13.5 s]: Recall = 0.2385, Jaccard score = 0.1642, loss = 0.0803, eval: [13.9 s]
# Iteration 37 fit: [13.5 s]: Recall = 0.2389, Jaccard score = 0.1646, loss = 0.0782, eval: [13.6 s]
# Iteration 38 fit: [13.5 s]: Recall = 0.2342, Jaccard score = 0.1608, loss = 0.0764, eval: [13.8 s]
# Iteration 39 fit: [13.5 s]: Recall = 0.2360, Jaccard score = 0.1622, loss = 0.0736, eval: [13.7 s]
# Iteration 40 fit: [13.5 s]: Recall = 0.2332, Jaccard score = 0.1601, loss = 0.0722, eval: [13.8 s]
# Iteration 41 fit: [13.6 s]: Recall = 0.2343, Jaccard score = 0.1609, loss = 0.0717, eval: [13.6 s]
# End. Best Iteration 6:  Recall = 0.2733, Jaccard score = 0.1929. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
# The average best performance after k-fold 1 is: Recall = 0.2733375959079284, Jaccard score = 0.19287164448454772
# 
# Performing k-fold 2
# Init: Recall = 0.0256, Jaccard score = 0.0155
# Iteration 0 fit: [14.1 s]: Recall = 0.2364, Jaccard score = 0.1642, loss = 0.4271, eval: [14.2 s]
# Iteration 1 fit: [14.0 s]: Recall = 0.2488, Jaccard score = 0.1743, loss = 0.3847, eval: [14.1 s]
# Iteration 2 fit: [13.9 s]: Recall = 0.2589, Jaccard score = 0.1827, loss = 0.3658, eval: [13.9 s]
# Iteration 3 fit: [14.0 s]: Recall = 0.2616, Jaccard score = 0.1850, loss = 0.3507, eval: [14.1 s]
# Iteration 4 fit: [13.9 s]: Recall = 0.2603, Jaccard score = 0.1839, loss = 0.3360, eval: [13.9 s]
# Iteration 5 fit: [14.0 s]: Recall = 0.2566, Jaccard score = 0.1808, loss = 0.3217, eval: [14.1 s]
# Iteration 6 fit: [14.0 s]: Recall = 0.2572, Jaccard score = 0.1813, loss = 0.3065, eval: [14.1 s]
# Iteration 7 fit: [14.0 s]: Recall = 0.2538, Jaccard score = 0.1784, loss = 0.2911, eval: [14.1 s]
# Iteration 8 fit: [14.1 s]: Recall = 0.2540, Jaccard score = 0.1786, loss = 0.2761, eval: [13.9 s]
# Iteration 9 fit: [14.0 s]: Recall = 0.2546, Jaccard score = 0.1791, loss = 0.2616, eval: [14.1 s]
# Iteration 10 fit: [13.7 s]: Recall = 0.2490, Jaccard score = 0.1745, loss = 0.2472, eval: [13.8 s]
# Iteration 11 fit: [14.1 s]: Recall = 0.2448, Jaccard score = 0.1711, loss = 0.2341, eval: [14.1 s]
# Iteration 12 fit: [14.0 s]: Recall = 0.2441, Jaccard score = 0.1705, loss = 0.2213, eval: [14.1 s]
# Iteration 13 fit: [14.0 s]: Recall = 0.2434, Jaccard score = 0.1700, loss = 0.2085, eval: [14.1 s]
# Iteration 14 fit: [13.9 s]: Recall = 0.2388, Jaccard score = 0.1662, loss = 0.1976, eval: [13.8 s]
# Iteration 15 fit: [14.0 s]: Recall = 0.2385, Jaccard score = 0.1659, loss = 0.1858, eval: [14.1 s]
# Iteration 16 fit: [13.9 s]: Recall = 0.2388, Jaccard score = 0.1662, loss = 0.1759, eval: [13.9 s]
# Iteration 17 fit: [14.0 s]: Recall = 0.2336, Jaccard score = 0.1620, loss = 0.1677, eval: [14.0 s]
# Iteration 18 fit: [13.9 s]: Recall = 0.2338, Jaccard score = 0.1621, loss = 0.1578, eval: [13.9 s]
# Iteration 19 fit: [14.0 s]: Recall = 0.2351, Jaccard score = 0.1632, loss = 0.1510, eval: [14.0 s]
# Iteration 20 fit: [13.9 s]: Recall = 0.2307, Jaccard score = 0.1596, loss = 0.1430, eval: [13.9 s]
# Iteration 21 fit: [14.0 s]: Recall = 0.2354, Jaccard score = 0.1634, loss = 0.1372, eval: [14.1 s]
# Iteration 22 fit: [14.0 s]: Recall = 0.2312, Jaccard score = 0.1601, loss = 0.1301, eval: [13.9 s]
# Iteration 23 fit: [14.0 s]: Recall = 0.2217, Jaccard score = 0.1525, loss = 0.1249, eval: [14.0 s]
# Iteration 24 fit: [14.0 s]: Recall = 0.2283, Jaccard score = 0.1577, loss = 0.1201, eval: [14.1 s]
# Iteration 25 fit: [14.0 s]: Recall = 0.2296, Jaccard score = 0.1587, loss = 0.1157, eval: [14.0 s]
# Iteration 26 fit: [13.9 s]: Recall = 0.2332, Jaccard score = 0.1616, loss = 0.1108, eval: [13.8 s]
# Iteration 27 fit: [14.1 s]: Recall = 0.2349, Jaccard score = 0.1630, loss = 0.1068, eval: [14.0 s]
# Iteration 28 fit: [13.9 s]: Recall = 0.2317, Jaccard score = 0.1604, loss = 0.1028, eval: [13.9 s]
# Iteration 29 fit: [14.1 s]: Recall = 0.2294, Jaccard score = 0.1586, loss = 0.0995, eval: [14.1 s]
# Iteration 30 fit: [13.6 s]: Recall = 0.2345, Jaccard score = 0.1627, loss = 0.0967, eval: [14.0 s]
# Iteration 31 fit: [14.0 s]: Recall = 0.2270, Jaccard score = 0.1567, loss = 0.0927, eval: [14.1 s]
# Iteration 32 fit: [14.0 s]: Recall = 0.2330, Jaccard score = 0.1615, loss = 0.0908, eval: [14.0 s]
# Iteration 33 fit: [14.0 s]: Recall = 0.2268, Jaccard score = 0.1565, loss = 0.0883, eval: [14.2 s]
# Iteration 34 fit: [13.9 s]: Recall = 0.2285, Jaccard score = 0.1579, loss = 0.0852, eval: [13.8 s]
# Iteration 35 fit: [14.0 s]: Recall = 0.2304, Jaccard score = 0.1594, loss = 0.0835, eval: [13.9 s]
# Iteration 36 fit: [13.9 s]: Recall = 0.2316, Jaccard score = 0.1603, loss = 0.0816, eval: [13.9 s]
# Iteration 37 fit: [14.1 s]: Recall = 0.2249, Jaccard score = 0.1550, loss = 0.0784, eval: [14.1 s]
# Iteration 38 fit: [13.9 s]: Recall = 0.2254, Jaccard score = 0.1554, loss = 0.0764, eval: [13.8 s]
# End. Best Iteration 3:  Recall = 0.2616, Jaccard score = 0.1850. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
# The average best performance after k-fold 2 is: Recall = 0.2674654685841663, Jaccard score = 0.18891779047095653
# 
# Performing k-fold 3
# Init: Recall = 0.0261, Jaccard score = 0.0158
# Iteration 0 fit: [14.3 s]: Recall = 0.2335, Jaccard score = 0.1614, loss = 0.4281, eval: [14.1 s]
# Iteration 1 fit: [13.6 s]: Recall = 0.2528, Jaccard score = 0.1772, loss = 0.3852, eval: [14.0 s]
# Iteration 2 fit: [13.6 s]: Recall = 0.2598, Jaccard score = 0.1829, loss = 0.3666, eval: [14.2 s]
# Iteration 3 fit: [13.7 s]: Recall = 0.2648, Jaccard score = 0.1871, loss = 0.3509, eval: [14.0 s]
# Iteration 4 fit: [13.7 s]: Recall = 0.2637, Jaccard score = 0.1862, loss = 0.3365, eval: [14.2 s]
# Iteration 5 fit: [13.7 s]: Recall = 0.2622, Jaccard score = 0.1849, loss = 0.3213, eval: [14.0 s]
# Iteration 6 fit: [13.7 s]: Recall = 0.2642, Jaccard score = 0.1866, loss = 0.3059, eval: [14.2 s]
# Iteration 7 fit: [13.7 s]: Recall = 0.2578, Jaccard score = 0.1812, loss = 0.2911, eval: [14.0 s]
# Iteration 8 fit: [13.7 s]: Recall = 0.2549, Jaccard score = 0.1789, loss = 0.2756, eval: [14.2 s]
# Iteration 9 fit: [13.7 s]: Recall = 0.2525, Jaccard score = 0.1768, loss = 0.2607, eval: [14.0 s]
# Iteration 10 fit: [13.7 s]: Recall = 0.2494, Jaccard score = 0.1743, loss = 0.2465, eval: [14.2 s]
# Iteration 11 fit: [13.7 s]: Recall = 0.2476, Jaccard score = 0.1728, loss = 0.2330, eval: [14.0 s]
# Iteration 12 fit: [13.7 s]: Recall = 0.2399, Jaccard score = 0.1666, loss = 0.2197, eval: [14.2 s]
# Iteration 13 fit: [13.7 s]: Recall = 0.2389, Jaccard score = 0.1657, loss = 0.2066, eval: [14.0 s]
# Iteration 14 fit: [13.7 s]: Recall = 0.2370, Jaccard score = 0.1643, loss = 0.1963, eval: [14.2 s]
# Iteration 15 fit: [13.7 s]: Recall = 0.2342, Jaccard score = 0.1620, loss = 0.1854, eval: [14.0 s]
# Iteration 16 fit: [13.7 s]: Recall = 0.2358, Jaccard score = 0.1633, loss = 0.1756, eval: [14.2 s]
# Iteration 17 fit: [13.6 s]: Recall = 0.2309, Jaccard score = 0.1593, loss = 0.1652, eval: [14.0 s]
# Iteration 18 fit: [13.7 s]: Recall = 0.2389, Jaccard score = 0.1658, loss = 0.1578, eval: [14.2 s]
# Iteration 19 fit: [13.7 s]: Recall = 0.2358, Jaccard score = 0.1633, loss = 0.1493, eval: [14.1 s]
# Iteration 20 fit: [13.7 s]: Recall = 0.2299, Jaccard score = 0.1585, loss = 0.1429, eval: [14.2 s]
# Iteration 21 fit: [13.6 s]: Recall = 0.2299, Jaccard score = 0.1585, loss = 0.1368, eval: [14.0 s]
# Iteration 22 fit: [13.7 s]: Recall = 0.2333, Jaccard score = 0.1613, loss = 0.1307, eval: [14.2 s]
# Iteration 23 fit: [13.7 s]: Recall = 0.2327, Jaccard score = 0.1608, loss = 0.1246, eval: [14.0 s]
# Iteration 24 fit: [13.7 s]: Recall = 0.2277, Jaccard score = 0.1567, loss = 0.1203, eval: [14.2 s]
# Iteration 25 fit: [13.6 s]: Recall = 0.2244, Jaccard score = 0.1542, loss = 0.1160, eval: [13.9 s]
# Iteration 26 fit: [13.7 s]: Recall = 0.2309, Jaccard score = 0.1594, loss = 0.1118, eval: [14.2 s]
# Iteration 27 fit: [13.7 s]: Recall = 0.2264, Jaccard score = 0.1557, loss = 0.1074, eval: [13.9 s]
# Iteration 28 fit: [13.7 s]: Recall = 0.2262, Jaccard score = 0.1556, loss = 0.1032, eval: [14.2 s]
# Iteration 29 fit: [13.7 s]: Recall = 0.2252, Jaccard score = 0.1548, loss = 0.1000, eval: [14.0 s]
# Iteration 30 fit: [13.7 s]: Recall = 0.2270, Jaccard score = 0.1562, loss = 0.0972, eval: [14.2 s]
# Iteration 31 fit: [13.6 s]: Recall = 0.2298, Jaccard score = 0.1584, loss = 0.0936, eval: [14.0 s]
# Iteration 32 fit: [13.7 s]: Recall = 0.2263, Jaccard score = 0.1557, loss = 0.0909, eval: [14.2 s]
# Iteration 33 fit: [13.7 s]: Recall = 0.2279, Jaccard score = 0.1569, loss = 0.0888, eval: [14.0 s]
# Iteration 34 fit: [13.7 s]: Recall = 0.2234, Jaccard score = 0.1533, loss = 0.0868, eval: [14.2 s]
# Iteration 35 fit: [13.7 s]: Recall = 0.2268, Jaccard score = 0.1561, loss = 0.0846, eval: [13.9 s]
# Iteration 36 fit: [13.7 s]: Recall = 0.2285, Jaccard score = 0.1574, loss = 0.0818, eval: [14.2 s]
# Iteration 37 fit: [13.7 s]: Recall = 0.2315, Jaccard score = 0.1598, loss = 0.0801, eval: [13.9 s]
# Iteration 38 fit: [13.7 s]: Recall = 0.2277, Jaccard score = 0.1567, loss = 0.0770, eval: [14.2 s]
# End. Best Iteration 3:  Recall = 0.2648, Jaccard score = 0.1871. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
# The average best performance after k-fold 3 is: Recall = 0.26658203395041574, Jaccard score = 0.18831356005589503
# 
# Performing k-fold 4
# Init: Recall = 0.0255, Jaccard score = 0.0155
# Iteration 0 fit: [14.4 s]: Recall = 0.2407, Jaccard score = 0.1677, loss = 0.4278, eval: [14.4 s]
# Iteration 1 fit: [14.2 s]: Recall = 0.2615, Jaccard score = 0.1849, loss = 0.3850, eval: [14.1 s]
# Iteration 2 fit: [14.2 s]: Recall = 0.2675, Jaccard score = 0.1899, loss = 0.3660, eval: [14.4 s]
# Iteration 3 fit: [14.2 s]: Recall = 0.2711, Jaccard score = 0.1930, loss = 0.3503, eval: [14.4 s]
# Iteration 4 fit: [14.2 s]: Recall = 0.2710, Jaccard score = 0.1929, loss = 0.3354, eval: [14.4 s]
# Iteration 5 fit: [14.2 s]: Recall = 0.2688, Jaccard score = 0.1910, loss = 0.3200, eval: [14.4 s]
# Iteration 6 fit: [14.2 s]: Recall = 0.2730, Jaccard score = 0.1946, loss = 0.3046, eval: [14.4 s]
# Iteration 7 fit: [14.1 s]: Recall = 0.2668, Jaccard score = 0.1894, loss = 0.2898, eval: [14.5 s]
# Iteration 8 fit: [14.2 s]: Recall = 0.2655, Jaccard score = 0.1882, loss = 0.2744, eval: [14.4 s]
# Iteration 9 fit: [14.1 s]: Recall = 0.2643, Jaccard score = 0.1873, loss = 0.2603, eval: [14.4 s]
# Iteration 10 fit: [14.2 s]: Recall = 0.2606, Jaccard score = 0.1841, loss = 0.2455, eval: [14.5 s]
# Iteration 11 fit: [14.1 s]: Recall = 0.2576, Jaccard score = 0.1817, loss = 0.2314, eval: [14.4 s]
# Iteration 12 fit: [14.2 s]: Recall = 0.2541, Jaccard score = 0.1787, loss = 0.2186, eval: [14.3 s]
# Iteration 13 fit: [14.1 s]: Recall = 0.2549, Jaccard score = 0.1794, loss = 0.2061, eval: [14.3 s]
# Iteration 14 fit: [13.9 s]: Recall = 0.2451, Jaccard score = 0.1713, loss = 0.1952, eval: [14.4 s]
# Iteration 15 fit: [13.9 s]: Recall = 0.2415, Jaccard score = 0.1684, loss = 0.1846, eval: [14.3 s]
# Iteration 16 fit: [14.2 s]: Recall = 0.2423, Jaccard score = 0.1690, loss = 0.1736, eval: [14.4 s]
# Iteration 17 fit: [14.1 s]: Recall = 0.2417, Jaccard score = 0.1685, loss = 0.1653, eval: [14.4 s]
# Iteration 18 fit: [14.2 s]: Recall = 0.2417, Jaccard score = 0.1685, loss = 0.1565, eval: [14.3 s]
# Iteration 19 fit: [14.2 s]: Recall = 0.2382, Jaccard score = 0.1657, loss = 0.1492, eval: [14.3 s]
# Iteration 20 fit: [14.2 s]: Recall = 0.2419, Jaccard score = 0.1687, loss = 0.1427, eval: [14.2 s]
# Iteration 21 fit: [14.2 s]: Recall = 0.2416, Jaccard score = 0.1685, loss = 0.1359, eval: [14.3 s]
# Iteration 22 fit: [14.2 s]: Recall = 0.2391, Jaccard score = 0.1664, loss = 0.1289, eval: [14.1 s]
# Iteration 23 fit: [14.2 s]: Recall = 0.2437, Jaccard score = 0.1702, loss = 0.1238, eval: [14.2 s]
# Iteration 24 fit: [14.2 s]: Recall = 0.2360, Jaccard score = 0.1639, loss = 0.1190, eval: [14.1 s]
# Iteration 25 fit: [14.2 s]: Recall = 0.2399, Jaccard score = 0.1670, loss = 0.1154, eval: [14.2 s]
# Iteration 26 fit: [14.2 s]: Recall = 0.2338, Jaccard score = 0.1621, loss = 0.1100, eval: [14.3 s]
# Iteration 27 fit: [14.2 s]: Recall = 0.2414, Jaccard score = 0.1683, loss = 0.1055, eval: [14.2 s]
# Iteration 28 fit: [14.2 s]: Recall = 0.2358, Jaccard score = 0.1637, loss = 0.1025, eval: [14.3 s]
# Iteration 29 fit: [14.2 s]: Recall = 0.2342, Jaccard score = 0.1624, loss = 0.0995, eval: [14.3 s]
# Iteration 30 fit: [14.2 s]: Recall = 0.2341, Jaccard score = 0.1624, loss = 0.0967, eval: [14.3 s]
# Iteration 31 fit: [14.2 s]: Recall = 0.2399, Jaccard score = 0.1671, loss = 0.0935, eval: [14.3 s]
# Iteration 32 fit: [14.2 s]: Recall = 0.2325, Jaccard score = 0.1611, loss = 0.0904, eval: [14.2 s]
# Iteration 33 fit: [14.2 s]: Recall = 0.2351, Jaccard score = 0.1632, loss = 0.0880, eval: [14.2 s]
# Iteration 34 fit: [14.2 s]: Recall = 0.2397, Jaccard score = 0.1669, loss = 0.0857, eval: [14.4 s]
# Iteration 35 fit: [14.2 s]: Recall = 0.2403, Jaccard score = 0.1674, loss = 0.0834, eval: [14.3 s]
# Iteration 36 fit: [14.2 s]: Recall = 0.2364, Jaccard score = 0.1642, loss = 0.0813, eval: [14.3 s]
# Iteration 37 fit: [14.2 s]: Recall = 0.2362, Jaccard score = 0.1641, loss = 0.0788, eval: [14.2 s]
# Iteration 38 fit: [14.2 s]: Recall = 0.2375, Jaccard score = 0.1652, loss = 0.0770, eval: [14.3 s]
# Iteration 39 fit: [13.8 s]: Recall = 0.2407, Jaccard score = 0.1677, loss = 0.0753, eval: [14.4 s]
# Iteration 40 fit: [14.2 s]: Recall = 0.2433, Jaccard score = 0.1698, loss = 0.0735, eval: [14.3 s]
# Iteration 41 fit: [14.2 s]: Recall = 0.2388, Jaccard score = 0.1662, loss = 0.0710, eval: [14.3 s]
# End. Best Iteration 6:  Recall = 0.2730, Jaccard score = 0.1946. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
# The average best performance after k-fold 4 is: Recall = 0.26819372195843133, Jaccard score = 0.18989243907881292
# 
# Performing k-fold 5
# Init: Recall = 0.0256, Jaccard score = 0.0155
# Iteration 0 fit: [14.9 s]: Recall = 0.2349, Jaccard score = 0.1628, loss = 0.4275, eval: [14.6 s]
# Iteration 1 fit: [14.4 s]: Recall = 0.2565, Jaccard score = 0.1804, loss = 0.3850, eval: [14.3 s]
# Iteration 2 fit: [14.3 s]: Recall = 0.2644, Jaccard score = 0.1870, loss = 0.3658, eval: [14.2 s]
# Iteration 3 fit: [14.3 s]: Recall = 0.2662, Jaccard score = 0.1885, loss = 0.3503, eval: [14.3 s]
# Iteration 4 fit: [14.3 s]: Recall = 0.2687, Jaccard score = 0.1906, loss = 0.3353, eval: [14.2 s]
# Iteration 5 fit: [14.4 s]: Recall = 0.2676, Jaccard score = 0.1897, loss = 0.3202, eval: [14.3 s]
# Iteration 6 fit: [14.3 s]: Recall = 0.2687, Jaccard score = 0.1906, loss = 0.3052, eval: [14.2 s]
# Iteration 7 fit: [14.3 s]: Recall = 0.2667, Jaccard score = 0.1889, loss = 0.2891, eval: [14.2 s]
# Iteration 8 fit: [14.3 s]: Recall = 0.2590, Jaccard score = 0.1825, loss = 0.2747, eval: [14.2 s]
# Iteration 9 fit: [14.3 s]: Recall = 0.2595, Jaccard score = 0.1829, loss = 0.2588, eval: [14.3 s]
# Iteration 10 fit: [14.3 s]: Recall = 0.2588, Jaccard score = 0.1823, loss = 0.2448, eval: [14.3 s]
# Iteration 11 fit: [14.3 s]: Recall = 0.2525, Jaccard score = 0.1771, loss = 0.2315, eval: [14.3 s]
# Iteration 12 fit: [14.3 s]: Recall = 0.2497, Jaccard score = 0.1748, loss = 0.2185, eval: [14.3 s]
# Iteration 13 fit: [14.3 s]: Recall = 0.2494, Jaccard score = 0.1746, loss = 0.2059, eval: [14.2 s]
# Iteration 14 fit: [14.3 s]: Recall = 0.2473, Jaccard score = 0.1729, loss = 0.1946, eval: [14.3 s]
# Iteration 15 fit: [14.3 s]: Recall = 0.2468, Jaccard score = 0.1725, loss = 0.1834, eval: [14.2 s]
# Iteration 16 fit: [14.3 s]: Recall = 0.2443, Jaccard score = 0.1704, loss = 0.1743, eval: [14.3 s]
# Iteration 17 fit: [14.3 s]: Recall = 0.2488, Jaccard score = 0.1741, loss = 0.1641, eval: [14.3 s]
# Iteration 18 fit: [14.3 s]: Recall = 0.2457, Jaccard score = 0.1715, loss = 0.1557, eval: [14.3 s]
# Iteration 19 fit: [14.3 s]: Recall = 0.2410, Jaccard score = 0.1677, loss = 0.1482, eval: [14.2 s]
# Iteration 20 fit: [14.3 s]: Recall = 0.2352, Jaccard score = 0.1630, loss = 0.1418, eval: [14.3 s]
# Iteration 21 fit: [14.3 s]: Recall = 0.2360, Jaccard score = 0.1637, loss = 0.1349, eval: [14.4 s]
# Iteration 22 fit: [14.3 s]: Recall = 0.2366, Jaccard score = 0.1641, loss = 0.1293, eval: [14.3 s]
# Iteration 23 fit: [14.3 s]: Recall = 0.2365, Jaccard score = 0.1641, loss = 0.1242, eval: [14.3 s]
# Iteration 24 fit: [14.3 s]: Recall = 0.2394, Jaccard score = 0.1664, loss = 0.1189, eval: [14.3 s]
# Iteration 25 fit: [14.3 s]: Recall = 0.2372, Jaccard score = 0.1646, loss = 0.1150, eval: [14.3 s]
# Iteration 26 fit: [14.3 s]: Recall = 0.2386, Jaccard score = 0.1658, loss = 0.1111, eval: [14.3 s]
# Iteration 27 fit: [14.3 s]: Recall = 0.2356, Jaccard score = 0.1633, loss = 0.1062, eval: [14.2 s]
# Iteration 28 fit: [14.3 s]: Recall = 0.2359, Jaccard score = 0.1635, loss = 0.1032, eval: [14.3 s]
# Iteration 29 fit: [14.3 s]: Recall = 0.2340, Jaccard score = 0.1621, loss = 0.1000, eval: [14.2 s]
# Iteration 30 fit: [14.3 s]: Recall = 0.2419, Jaccard score = 0.1685, loss = 0.0966, eval: [14.3 s]
# Iteration 31 fit: [14.3 s]: Recall = 0.2360, Jaccard score = 0.1637, loss = 0.0934, eval: [14.3 s]
# Iteration 32 fit: [14.3 s]: Recall = 0.2377, Jaccard score = 0.1650, loss = 0.0905, eval: [14.3 s]
# Iteration 33 fit: [14.3 s]: Recall = 0.2354, Jaccard score = 0.1632, loss = 0.0885, eval: [14.3 s]
# Iteration 34 fit: [14.3 s]: Recall = 0.2373, Jaccard score = 0.1647, loss = 0.0856, eval: [14.2 s]
# Iteration 35 fit: [14.3 s]: Recall = 0.2360, Jaccard score = 0.1636, loss = 0.0838, eval: [14.3 s]
# Iteration 36 fit: [14.3 s]: Recall = 0.2318, Jaccard score = 0.1603, loss = 0.0810, eval: [14.2 s]
# Iteration 37 fit: [14.3 s]: Recall = 0.2360, Jaccard score = 0.1637, loss = 0.0790, eval: [14.3 s]
# Iteration 38 fit: [14.3 s]: Recall = 0.2360, Jaccard score = 0.1636, loss = 0.0769, eval: [14.2 s]
# Iteration 39 fit: [14.3 s]: Recall = 0.2370, Jaccard score = 0.1645, loss = 0.0751, eval: [14.3 s]
# End. Best Iteration 4:  Recall = 0.2687, Jaccard score = 0.1906. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128,128,128]_1564070191.h5
# The average best performance after k-fold 5 is: Recall = 0.26829438102043424, Jaccard score = 0.19004101176380772
