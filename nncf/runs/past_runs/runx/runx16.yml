--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "200"
--num_factors: "94"
--early_stopping: "145"
--test_dataset: "1"

# -||-

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=145, epochs=200, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1568220670.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1568220670.h5
# Load data done [1.8 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 94)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 94)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# multiply_2 (Multiply)           (None, 94)           0           flatten_3[0][0]                  
#                                                                  flatten_4[0][0]                  
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            95          multiply_2[0][0]                 
# ==================================================================================================
# Total params: 2,068,095
# Trainable params: 2,068,095
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0299, Jaccard score = 0.0181
# Iteration 0 fit: [10.8 s]: Recall = 0.0000, Jaccard score = 1.0000, loss = 0.5375, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 1 fit: [10.4 s]: Recall = 1.0000, Jaccard score = 1.0000, loss = 0.5008, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 2 fit: [10.3 s]: Recall = 2.0000, Jaccard score = 1.0000, loss = 0.4996, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 3 fit: [10.3 s]: Recall = 3.0000, Jaccard score = 1.0000, loss = 0.4954, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 4 fit: [10.4 s]: Recall = 4.0000, Jaccard score = 1.0000, loss = 0.4856, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 5 fit: [10.4 s]: Recall = 5.0000, Jaccard score = 1.0000, loss = 0.4687, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 6 fit: [10.5 s]: Recall = 6.0000, Jaccard score = 1.0000, loss = 0.4442, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 7 fit: [10.5 s]: Recall = 7.0000, Jaccard score = 1.0000, loss = 0.4131, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 8 fit: [10.6 s]: Recall = 8.0000, Jaccard score = 1.0000, loss = 0.3771, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 9 fit: [10.6 s]: Recall = 9.0000, Jaccard score = 1.0000, loss = 0.3386, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 10 fit: [10.6 s]: Recall = 10.0000, Jaccard score = 1.0000, loss = 0.3007, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 11 fit: [10.5 s]: Recall = 11.0000, Jaccard score = 1.0000, loss = 0.2656, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 12 fit: [10.6 s]: Recall = 12.0000, Jaccard score = 1.0000, loss = 0.2327, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 13 fit: [10.6 s]: Recall = 13.0000, Jaccard score = 1.0000, loss = 0.2037, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 14 fit: [10.6 s]: Recall = 14.0000, Jaccard score = 1.0000, loss = 0.1768, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 15 fit: [10.5 s]: Recall = 15.0000, Jaccard score = 1.0000, loss = 0.1542, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 16 fit: [10.5 s]: Recall = 16.0000, Jaccard score = 1.0000, loss = 0.1336, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 17 fit: [10.6 s]: Recall = 17.0000, Jaccard score = 1.0000, loss = 0.1153, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 18 fit: [10.6 s]: Recall = 18.0000, Jaccard score = 1.0000, loss = 0.0997, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 19 fit: [10.4 s]: Recall = 19.0000, Jaccard score = 1.0000, loss = 0.0854, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 20 fit: [10.5 s]: Recall = 20.0000, Jaccard score = 1.0000, loss = 0.0738, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 21 fit: [10.6 s]: Recall = 21.0000, Jaccard score = 1.0000, loss = 0.0637, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 22 fit: [10.5 s]: Recall = 22.0000, Jaccard score = 1.0000, loss = 0.0550, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 23 fit: [10.4 s]: Recall = 23.0000, Jaccard score = 1.0000, loss = 0.0480, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 24 fit: [10.4 s]: Recall = 24.0000, Jaccard score = 1.0000, loss = 0.0416, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 25 fit: [10.4 s]: Recall = 25.0000, Jaccard score = 1.0000, loss = 0.0361, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 26 fit: [10.4 s]: Recall = 26.0000, Jaccard score = 1.0000, loss = 0.0319, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 27 fit: [10.4 s]: Recall = 27.0000, Jaccard score = 1.0000, loss = 0.0280, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 28 fit: [10.4 s]: Recall = 28.0000, Jaccard score = 1.0000, loss = 0.0245, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 29 fit: [10.4 s]: Recall = 29.0000, Jaccard score = 1.0000, loss = 0.0225, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 30 fit: [10.4 s]: Recall = 30.0000, Jaccard score = 1.0000, loss = 0.0197, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 31 fit: [10.4 s]: Recall = 31.0000, Jaccard score = 1.0000, loss = 0.0181, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 32 fit: [10.4 s]: Recall = 32.0000, Jaccard score = 1.0000, loss = 0.0163, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 33 fit: [10.4 s]: Recall = 33.0000, Jaccard score = 1.0000, loss = 0.0148, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 34 fit: [10.3 s]: Recall = 34.0000, Jaccard score = 1.0000, loss = 0.0136, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 35 fit: [10.3 s]: Recall = 35.0000, Jaccard score = 1.0000, loss = 0.0124, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 36 fit: [10.4 s]: Recall = 36.0000, Jaccard score = 1.0000, loss = 0.0114, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 37 fit: [10.4 s]: Recall = 37.0000, Jaccard score = 1.0000, loss = 0.0104, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 38 fit: [10.4 s]: Recall = 38.0000, Jaccard score = 1.0000, loss = 0.0097, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 39 fit: [10.5 s]: Recall = 39.0000, Jaccard score = 1.0000, loss = 0.0091, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 40 fit: [10.6 s]: Recall = 40.0000, Jaccard score = 1.0000, loss = 0.0083, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 41 fit: [10.6 s]: Recall = 41.0000, Jaccard score = 1.0000, loss = 0.0080, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 42 fit: [10.5 s]: Recall = 42.0000, Jaccard score = 1.0000, loss = 0.0074, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 43 fit: [10.5 s]: Recall = 43.0000, Jaccard score = 1.0000, loss = 0.0068, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 44 fit: [10.6 s]: Recall = 44.0000, Jaccard score = 1.0000, loss = 0.0067, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 45 fit: [10.6 s]: Recall = 45.0000, Jaccard score = 1.0000, loss = 0.0061, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 46 fit: [10.5 s]: Recall = 46.0000, Jaccard score = 1.0000, loss = 0.0061, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 47 fit: [10.5 s]: Recall = 47.0000, Jaccard score = 1.0000, loss = 0.0057, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 48 fit: [10.5 s]: Recall = 48.0000, Jaccard score = 1.0000, loss = 0.0054, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 49 fit: [10.6 s]: Recall = 49.0000, Jaccard score = 1.0000, loss = 0.0054, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 50 fit: [10.5 s]: Recall = 50.0000, Jaccard score = 1.0000, loss = 0.0050, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 51 fit: [10.4 s]: Recall = 51.0000, Jaccard score = 1.0000, loss = 0.0047, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 52 fit: [10.5 s]: Recall = 52.0000, Jaccard score = 1.0000, loss = 0.0047, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 53 fit: [10.5 s]: Recall = 53.0000, Jaccard score = 1.0000, loss = 0.0042, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 54 fit: [10.5 s]: Recall = 54.0000, Jaccard score = 1.0000, loss = 0.0042, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 55 fit: [10.4 s]: Recall = 55.0000, Jaccard score = 1.0000, loss = 0.0039, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 56 fit: [10.5 s]: Recall = 56.0000, Jaccard score = 1.0000, loss = 0.0039, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 57 fit: [10.4 s]: Recall = 57.0000, Jaccard score = 1.0000, loss = 0.0040, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 58 fit: [10.4 s]: Recall = 58.0000, Jaccard score = 1.0000, loss = 0.0037, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 59 fit: [10.4 s]: Recall = 59.0000, Jaccard score = 1.0000, loss = 0.0037, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 60 fit: [10.4 s]: Recall = 60.0000, Jaccard score = 1.0000, loss = 0.0036, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 61 fit: [10.4 s]: Recall = 61.0000, Jaccard score = 1.0000, loss = 0.0035, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 62 fit: [10.3 s]: Recall = 62.0000, Jaccard score = 1.0000, loss = 0.0033, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 63 fit: [10.4 s]: Recall = 63.0000, Jaccard score = 1.0000, loss = 0.0032, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 64 fit: [10.4 s]: Recall = 64.0000, Jaccard score = 1.0000, loss = 0.0030, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 65 fit: [10.4 s]: Recall = 65.0000, Jaccard score = 1.0000, loss = 0.0032, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 66 fit: [10.7 s]: Recall = 66.0000, Jaccard score = 1.0000, loss = 0.0031, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 67 fit: [10.4 s]: Recall = 67.0000, Jaccard score = 1.0000, loss = 0.0030, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 68 fit: [10.4 s]: Recall = 68.0000, Jaccard score = 1.0000, loss = 0.0030, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 69 fit: [10.5 s]: Recall = 69.0000, Jaccard score = 1.0000, loss = 0.0031, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 70 fit: [10.4 s]: Recall = 70.0000, Jaccard score = 1.0000, loss = 0.0028, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 71 fit: [10.5 s]: Recall = 71.0000, Jaccard score = 1.0000, loss = 0.0029, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 72 fit: [10.6 s]: Recall = 72.0000, Jaccard score = 1.0000, loss = 0.0028, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 73 fit: [10.6 s]: Recall = 73.0000, Jaccard score = 1.0000, loss = 0.0028, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 74 fit: [10.5 s]: Recall = 74.0000, Jaccard score = 1.0000, loss = 0.0026, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 75 fit: [10.5 s]: Recall = 75.0000, Jaccard score = 1.0000, loss = 0.0027, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 76 fit: [10.6 s]: Recall = 76.0000, Jaccard score = 1.0000, loss = 0.0026, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 77 fit: [10.6 s]: Recall = 77.0000, Jaccard score = 1.0000, loss = 0.0026, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 78 fit: [10.5 s]: Recall = 78.0000, Jaccard score = 1.0000, loss = 0.0026, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 79 fit: [10.5 s]: Recall = 79.0000, Jaccard score = 1.0000, loss = 0.0025, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 80 fit: [10.6 s]: Recall = 80.0000, Jaccard score = 1.0000, loss = 0.0025, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 81 fit: [10.6 s]: Recall = 81.0000, Jaccard score = 1.0000, loss = 0.0025, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 82 fit: [10.5 s]: Recall = 82.0000, Jaccard score = 1.0000, loss = 0.0025, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 83 fit: [10.4 s]: Recall = 83.0000, Jaccard score = 1.0000, loss = 0.0025, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 84 fit: [10.5 s]: Recall = 84.0000, Jaccard score = 1.0000, loss = 0.0023, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 85 fit: [10.7 s]: Recall = 85.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 86 fit: [10.4 s]: Recall = 86.0000, Jaccard score = 1.0000, loss = 0.0025, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 87 fit: [10.4 s]: Recall = 87.0000, Jaccard score = 1.0000, loss = 0.0026, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 88 fit: [10.4 s]: Recall = 88.0000, Jaccard score = 1.0000, loss = 0.0024, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 89 fit: [10.4 s]: Recall = 89.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 90 fit: [10.4 s]: Recall = 90.0000, Jaccard score = 1.0000, loss = 0.0023, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 91 fit: [10.4 s]: Recall = 91.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 92 fit: [10.4 s]: Recall = 92.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 93 fit: [10.4 s]: Recall = 93.0000, Jaccard score = 1.0000, loss = 0.0023, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 94 fit: [10.3 s]: Recall = 94.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 95 fit: [10.3 s]: Recall = 95.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 96 fit: [10.4 s]: Recall = 96.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 97 fit: [10.4 s]: Recall = 97.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 98 fit: [10.3 s]: Recall = 98.0000, Jaccard score = 1.0000, loss = 0.0024, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 99 fit: [10.4 s]: Recall = 99.0000, Jaccard score = 1.0000, loss = 0.0024, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 100 fit: [10.5 s]: Recall = 100.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 101 fit: [10.5 s]: Recall = 101.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 102 fit: [10.4 s]: Recall = 102.0000, Jaccard score = 1.0000, loss = 0.0024, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 103 fit: [10.5 s]: Recall = 103.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 104 fit: [10.6 s]: Recall = 104.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 105 fit: [10.6 s]: Recall = 105.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 106 fit: [10.5 s]: Recall = 106.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 107 fit: [10.5 s]: Recall = 107.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 108 fit: [10.6 s]: Recall = 108.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 109 fit: [10.5 s]: Recall = 109.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 110 fit: [10.5 s]: Recall = 110.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 111 fit: [10.5 s]: Recall = 111.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 112 fit: [10.6 s]: Recall = 112.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 113 fit: [10.5 s]: Recall = 113.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 114 fit: [10.5 s]: Recall = 114.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 115 fit: [10.5 s]: Recall = 115.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 116 fit: [10.5 s]: Recall = 116.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 117 fit: [10.5 s]: Recall = 117.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 118 fit: [10.4 s]: Recall = 118.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 119 fit: [10.4 s]: Recall = 119.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 120 fit: [10.4 s]: Recall = 120.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 121 fit: [10.4 s]: Recall = 121.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 122 fit: [10.3 s]: Recall = 122.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 123 fit: [10.4 s]: Recall = 123.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 124 fit: [10.4 s]: Recall = 124.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 125 fit: [10.3 s]: Recall = 125.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 126 fit: [10.3 s]: Recall = 126.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 127 fit: [10.4 s]: Recall = 127.0000, Jaccard score = 1.0000, loss = 0.0019, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 128 fit: [10.4 s]: Recall = 128.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 129 fit: [10.3 s]: Recall = 129.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 130 fit: [10.4 s]: Recall = 130.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 131 fit: [10.4 s]: Recall = 131.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 132 fit: [10.5 s]: Recall = 132.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 133 fit: [10.4 s]: Recall = 133.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 134 fit: [10.5 s]: Recall = 134.0000, Jaccard score = 1.0000, loss = 0.0019, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 135 fit: [10.6 s]: Recall = 135.0000, Jaccard score = 1.0000, loss = 0.0019, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 136 fit: [10.6 s]: Recall = 136.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 137 fit: [10.4 s]: Recall = 137.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 138 fit: [10.5 s]: Recall = 138.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 139 fit: [10.6 s]: Recall = 139.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 140 fit: [10.6 s]: Recall = 140.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 141 fit: [10.5 s]: Recall = 141.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 142 fit: [10.5 s]: Recall = 142.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 143 fit: [10.5 s]: Recall = 143.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 144 fit: [10.6 s]: Recall = 144.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 145 fit: [10.4 s]: Recall = 145.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 146 fit: [10.4 s]: Recall = 146.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 147 fit: [10.6 s]: Recall = 147.0000, Jaccard score = 1.0000, loss = 0.0019, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 148 fit: [10.5 s]: Recall = 148.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 149 fit: [10.4 s]: Recall = 149.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 150 fit: [10.4 s]: Recall = 150.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 151 fit: [10.4 s]: Recall = 151.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 152 fit: [10.4 s]: Recall = 152.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 153 fit: [10.4 s]: Recall = 153.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 154 fit: [10.3 s]: Recall = 154.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 155 fit: [10.4 s]: Recall = 155.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 156 fit: [10.4 s]: Recall = 156.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 157 fit: [10.3 s]: Recall = 157.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 158 fit: [10.4 s]: Recall = 158.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 159 fit: [10.4 s]: Recall = 159.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 160 fit: [10.3 s]: Recall = 160.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 161 fit: [10.3 s]: Recall = 161.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 162 fit: [10.4 s]: Recall = 162.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 163 fit: [10.5 s]: Recall = 163.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 164 fit: [10.5 s]: Recall = 164.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 165 fit: [10.4 s]: Recall = 165.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 166 fit: [10.5 s]: Recall = 166.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 167 fit: [10.6 s]: Recall = 167.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 168 fit: [10.5 s]: Recall = 168.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 169 fit: [10.5 s]: Recall = 169.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 170 fit: [10.6 s]: Recall = 170.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 171 fit: [10.6 s]: Recall = 171.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 172 fit: [10.6 s]: Recall = 172.0000, Jaccard score = 1.0000, loss = 0.0020, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 173 fit: [10.5 s]: Recall = 173.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 174 fit: [10.6 s]: Recall = 174.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 175 fit: [10.6 s]: Recall = 175.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 176 fit: [10.6 s]: Recall = 176.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 177 fit: [10.4 s]: Recall = 177.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 178 fit: [10.5 s]: Recall = 178.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 179 fit: [10.5 s]: Recall = 179.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 180 fit: [10.5 s]: Recall = 180.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 181 fit: [10.4 s]: Recall = 181.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 182 fit: [10.4 s]: Recall = 182.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 183 fit: [10.4 s]: Recall = 183.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 184 fit: [10.4 s]: Recall = 184.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 185 fit: [10.3 s]: Recall = 185.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 186 fit: [10.4 s]: Recall = 186.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 187 fit: [10.4 s]: Recall = 187.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 188 fit: [10.4 s]: Recall = 188.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 189 fit: [10.3 s]: Recall = 189.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 190 fit: [10.4 s]: Recall = 190.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 191 fit: [10.3 s]: Recall = 191.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 192 fit: [10.3 s]: Recall = 192.0000, Jaccard score = 1.0000, loss = 0.0023, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 193 fit: [10.4 s]: Recall = 193.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 194 fit: [10.4 s]: Recall = 194.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 195 fit: [10.5 s]: Recall = 195.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 196 fit: [10.3 s]: Recall = 196.0000, Jaccard score = 1.0000, loss = 0.0021, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 197 fit: [10.5 s]: Recall = 197.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 198 fit: [10.6 s]: Recall = 198.0000, Jaccard score = 1.0000, loss = 0.0022, gradient norm = 1.0000, eval: [0.0 s]
# Iteration 199 fit: [10.6 s]: Recall = 199.0000, Jaccard score = 1.0000, loss = 0.0023, gradient norm = 1.0000, eval: [0.0 s]
# End. Best Iteration 199:  Recall = 199.0000, Jaccard score = 1.0000. 
# The best NeuMF model has been saved to Pretrain/_GMF_94_[64,32,16,8]_1568220670.h5
# Model test performed 
# Recall score: 0.14840437402365544     Jaccard score: 0.09756455399061033