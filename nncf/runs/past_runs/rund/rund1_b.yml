--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "90"
--layers: "[1024, 1024]"
--reg_layers: "[0, 0]"
#--mf_pretrain: "Pretrain/ml-1m_GMF_8_1501651698.h5"
#--mlp_pretrain: "Pretrain/ml-1m_MLP_[64,32,16,8]_1501652038.h5"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=90, eval_recall=1, is_tag=1, layers='[1024, 1024]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0, 0]', reg_mf=0, topk=3, verbose=1) 
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0028, Jaccard score = 0.0015
# Iteration 0 fit: [26.6 s]: Recall = 0.0264, Jaccard score = 0.0144, loss = 0.4564, val_loss = 0.0000, eval: [8.3 s]
# Iteration 1 fit: [26.0 s]: Recall = 0.0270, Jaccard score = 0.0148, loss = 0.4470, val_loss = 0.0000, eval: [8.0 s]
# Iteration 2 fit: [25.8 s]: Recall = 0.0260, Jaccard score = 0.0142, loss = 0.4437, val_loss = 0.0000, eval: [8.3 s]
# Iteration 3 fit: [25.8 s]: Recall = 0.0281, Jaccard score = 0.0154, loss = 0.4332, val_loss = 0.0000, eval: [8.0 s]
# Iteration 4 fit: [26.0 s]: Recall = 0.0370, Jaccard score = 0.0204, loss = 0.4071, val_loss = 0.0000, eval: [8.3 s]
# Iteration 5 fit: [25.9 s]: Recall = 0.0446, Jaccard score = 0.0246, loss = 0.3586, val_loss = 0.0000, eval: [8.4 s]
# Iteration 6 fit: [25.9 s]: Recall = 0.0537, Jaccard score = 0.0298, loss = 0.2948, val_loss = 0.0000, eval: [8.5 s]
# Iteration 7 fit: [26.0 s]: Recall = 0.0520, Jaccard score = 0.0289, loss = 0.2320, val_loss = 0.0000, eval: [8.0 s]
# Iteration 8 fit: [25.8 s]: Recall = 0.0539, Jaccard score = 0.0299, loss = 0.1806, val_loss = 0.0000, eval: [8.5 s]
# Iteration 9 fit: [25.9 s]: Recall = 0.0526, Jaccard score = 0.0292, loss = 0.1438, val_loss = 0.0000, eval: [8.0 s]
# Iteration 10 fit: [25.8 s]: Recall = 0.0605, Jaccard score = 0.0338, loss = 0.1189, val_loss = 0.0000, eval: [8.4 s]
# Iteration 11 fit: [25.8 s]: Recall = 0.0662, Jaccard score = 0.0370, loss = 0.1009, val_loss = 0.0000, eval: [7.9 s]
# Iteration 12 fit: [25.8 s]: Recall = 0.0681, Jaccard score = 0.0382, loss = 0.0881, val_loss = 0.0000, eval: [8.3 s]
# Iteration 13 fit: [25.8 s]: Recall = 0.0725, Jaccard score = 0.0407, loss = 0.0772, val_loss = 0.0000, eval: [8.2 s]
# Iteration 14 fit: [25.8 s]: Recall = 0.0755, Jaccard score = 0.0425, loss = 0.0684, val_loss = 0.0000, eval: [8.7 s]
# Iteration 15 fit: [25.8 s]: Recall = 0.0731, Jaccard score = 0.0410, loss = 0.0630, val_loss = 0.0000, eval: [8.2 s]
# Iteration 16 fit: [25.9 s]: Recall = 0.0816, Jaccard score = 0.0460, loss = 0.0560, val_loss = 0.0000, eval: [8.7 s]
# Iteration 17 fit: [25.8 s]: Recall = 0.0820, Jaccard score = 0.0463, loss = 0.0513, val_loss = 0.0000, eval: [7.9 s]
# Iteration 18 fit: [25.9 s]: Recall = 0.0827, Jaccard score = 0.0467, loss = 0.0472, val_loss = 0.0000, eval: [8.4 s]
# Iteration 19 fit: [25.9 s]: Recall = 0.0791, Jaccard score = 0.0446, loss = 0.0442, val_loss = 0.0000, eval: [8.0 s]
# Iteration 20 fit: [25.9 s]: Recall = 0.0854, Jaccard score = 0.0483, loss = 0.0411, val_loss = 0.0000, eval: [8.2 s]
# Iteration 21 fit: [25.9 s]: Recall = 0.0856, Jaccard score = 0.0484, loss = 0.0382, val_loss = 0.0000, eval: [8.0 s]
# Iteration 22 fit: [25.9 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0355, val_loss = 0.0000, eval: [8.3 s]
# Iteration 23 fit: [25.9 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0341, val_loss = 0.0000, eval: [8.1 s]
# Iteration 24 fit: [25.8 s]: Recall = 0.0816, Jaccard score = 0.0460, loss = 0.0315, val_loss = 0.0000, eval: [8.8 s]
# Iteration 25 fit: [25.9 s]: Recall = 0.0875, Jaccard score = 0.0495, loss = 0.0300, val_loss = 0.0000, eval: [8.0 s]
# Iteration 26 fit: [25.9 s]: Recall = 0.0928, Jaccard score = 0.0527, loss = 0.0281, val_loss = 0.0000, eval: [8.8 s]
# Iteration 27 fit: [25.9 s]: Recall = 0.0905, Jaccard score = 0.0513, loss = 0.0270, val_loss = 0.0000, eval: [8.0 s]
# Iteration 28 fit: [25.8 s]: Recall = 0.0930, Jaccard score = 0.0528, loss = 0.0247, val_loss = 0.0000, eval: [8.5 s]
# Iteration 29 fit: [25.7 s]: Recall = 0.0894, Jaccard score = 0.0507, loss = 0.0246, val_loss = 0.0000, eval: [8.4 s]
# Iteration 30 fit: [25.9 s]: Recall = 0.0964, Jaccard score = 0.0549, loss = 0.0233, val_loss = 0.0000, eval: [8.4 s]
# Iteration 31 fit: [25.9 s]: Recall = 0.0939, Jaccard score = 0.0534, loss = 0.0224, val_loss = 0.0000, eval: [7.9 s]
# Iteration 32 fit: [25.9 s]: Recall = 0.0936, Jaccard score = 0.0531, loss = 0.0208, val_loss = 0.0000, eval: [8.3 s]
# Iteration 33 fit: [25.9 s]: Recall = 0.1008, Jaccard score = 0.0575, loss = 0.0198, val_loss = 0.0000, eval: [8.0 s]
# Iteration 34 fit: [25.9 s]: Recall = 0.0966, Jaccard score = 0.0550, loss = 0.0199, val_loss = 0.0000, eval: [8.3 s]
# Iteration 35 fit: [25.8 s]: Recall = 0.0962, Jaccard score = 0.0547, loss = 0.0188, val_loss = 0.0000, eval: [8.0 s]
# Iteration 36 fit: [25.8 s]: Recall = 0.0953, Jaccard score = 0.0542, loss = 0.0187, val_loss = 0.0000, eval: [8.8 s]
# Iteration 37 fit: [26.0 s]: Recall = 0.0979, Jaccard score = 0.0558, loss = 0.0171, val_loss = 0.0000, eval: [8.3 s]
# Iteration 38 fit: [25.8 s]: Recall = 0.1004, Jaccard score = 0.0573, loss = 0.0164, val_loss = 0.0000, eval: [8.6 s]
# Iteration 39 fit: [25.9 s]: Recall = 0.0976, Jaccard score = 0.0555, loss = 0.0167, val_loss = 0.0000, eval: [7.9 s]
# Iteration 40 fit: [25.8 s]: Recall = 0.1004, Jaccard score = 0.0573, loss = 0.0153, val_loss = 0.0000, eval: [8.8 s]
# Iteration 41 fit: [26.0 s]: Recall = 0.0991, Jaccard score = 0.0565, loss = 0.0153, val_loss = 0.0000, eval: [8.5 s]
# Iteration 42 fit: [25.7 s]: Recall = 0.1000, Jaccard score = 0.0570, loss = 0.0147, val_loss = 0.0000, eval: [8.4 s]
# Iteration 43 fit: [25.7 s]: Recall = 0.1004, Jaccard score = 0.0573, loss = 0.0148, val_loss = 0.0000, eval: [8.6 s]
# Iteration 44 fit: [25.8 s]: Recall = 0.0939, Jaccard score = 0.0534, loss = 0.0138, val_loss = 0.0000, eval: [8.7 s]
# Iteration 45 fit: [25.9 s]: Recall = 0.0972, Jaccard score = 0.0553, loss = 0.0135, val_loss = 0.0000, eval: [8.4 s]
# Iteration 46 fit: [25.9 s]: Recall = 0.1032, Jaccard score = 0.0590, loss = 0.0136, val_loss = 0.0000, eval: [8.3 s]
# Iteration 47 fit: [26.0 s]: Recall = 0.0985, Jaccard score = 0.0561, loss = 0.0129, val_loss = 0.0000, eval: [7.9 s]
# Iteration 48 fit: [25.9 s]: Recall = 0.0972, Jaccard score = 0.0553, loss = 0.0122, val_loss = 0.0000, eval: [8.3 s]
# Iteration 49 fit: [25.9 s]: Recall = 0.0972, Jaccard score = 0.0553, loss = 0.0120, val_loss = 0.0000, eval: [8.3 s]
# Iteration 50 fit: [25.9 s]: Recall = 0.0951, Jaccard score = 0.0541, loss = 0.0119, val_loss = 0.0000, eval: [8.4 s]
# Iteration 51 fit: [25.9 s]: Recall = 0.1012, Jaccard score = 0.0577, loss = 0.0115, val_loss = 0.0000, eval: [8.2 s]
# Iteration 52 fit: [25.9 s]: Recall = 0.0974, Jaccard score = 0.0554, loss = 0.0114, val_loss = 0.0000, eval: [8.2 s]
# Iteration 53 fit: [25.9 s]: Recall = 0.0953, Jaccard score = 0.0542, loss = 0.0108, val_loss = 0.0000, eval: [8.0 s]
# Iteration 54 fit: [25.8 s]: Recall = 0.0989, Jaccard score = 0.0563, loss = 0.0104, val_loss = 0.0000, eval: [8.4 s]
# Iteration 55 fit: [25.9 s]: Recall = 0.1025, Jaccard score = 0.0585, loss = 0.0111, val_loss = 0.0000, eval: [7.9 s]
# Iteration 56 fit: [25.8 s]: Recall = 0.0977, Jaccard score = 0.0557, loss = 0.0100, val_loss = 0.0000, eval: [8.2 s]
# Iteration 57 fit: [25.9 s]: Recall = 0.0955, Jaccard score = 0.0543, loss = 0.0100, val_loss = 0.0000, eval: [7.9 s]
# Iteration 58 fit: [25.8 s]: Recall = 0.0962, Jaccard score = 0.0547, loss = 0.0101, val_loss = 0.0000, eval: [8.3 s]
# Iteration 59 fit: [25.9 s]: Recall = 0.0960, Jaccard score = 0.0546, loss = 0.0106, val_loss = 0.0000, eval: [8.2 s]
# Iteration 60 fit: [25.9 s]: Recall = 0.0960, Jaccard score = 0.0546, loss = 0.0093, val_loss = 0.0000, eval: [8.4 s]
# Iteration 61 fit: [26.1 s]: Recall = 0.0941, Jaccard score = 0.0535, loss = 0.0094, val_loss = 0.0000, eval: [8.0 s]
# Iteration 62 fit: [25.9 s]: Recall = 0.0983, Jaccard score = 0.0560, loss = 0.0093, val_loss = 0.0000, eval: [8.1 s]
# Iteration 63 fit: [25.9 s]: Recall = 0.0962, Jaccard score = 0.0547, loss = 0.0090, val_loss = 0.0000, eval: [8.2 s]
# Iteration 64 fit: [25.9 s]: Recall = 0.0960, Jaccard score = 0.0546, loss = 0.0091, val_loss = 0.0000, eval: [8.5 s]
# Iteration 65 fit: [26.0 s]: Recall = 0.0920, Jaccard score = 0.0522, loss = 0.0090, val_loss = 0.0000, eval: [7.9 s]
# Iteration 66 fit: [25.9 s]: Recall = 0.0970, Jaccard score = 0.0552, loss = 0.0084, val_loss = 0.0000, eval: [8.8 s]
# Iteration 67 fit: [26.0 s]: Recall = 0.0939, Jaccard score = 0.0534, loss = 0.0089, val_loss = 0.0000, eval: [7.9 s]
# Iteration 68 fit: [25.9 s]: Recall = 0.0977, Jaccard score = 0.0557, loss = 0.0084, val_loss = 0.0000, eval: [8.3 s]
# Iteration 69 fit: [26.0 s]: Recall = 0.0998, Jaccard score = 0.0569, loss = 0.0084, val_loss = 0.0000, eval: [8.0 s]
# Iteration 70 fit: [25.9 s]: Recall = 0.0951, Jaccard score = 0.0541, loss = 0.0086, val_loss = 0.0000, eval: [8.3 s]
# Iteration 71 fit: [25.8 s]: Recall = 0.0960, Jaccard score = 0.0546, loss = 0.0084, val_loss = 0.0000, eval: [8.1 s]
# Iteration 72 fit: [25.8 s]: Recall = 0.0941, Jaccard score = 0.0535, loss = 0.0077, val_loss = 0.0000, eval: [8.5 s]
# Iteration 73 fit: [26.0 s]: Recall = 0.0932, Jaccard score = 0.0529, loss = 0.0075, val_loss = 0.0000, eval: [11.7 s]
# Iteration 74 fit: [26.3 s]: Recall = 0.0924, Jaccard score = 0.0525, loss = 0.0079, val_loss = 0.0000, eval: [8.5 s]
# Iteration 75 fit: [25.8 s]: Recall = 0.0985, Jaccard score = 0.0561, loss = 0.0081, val_loss = 0.0000, eval: [8.3 s]
# Iteration 76 fit: [26.0 s]: Recall = 0.0964, Jaccard score = 0.0549, loss = 0.0074, val_loss = 0.0000, eval: [8.8 s]
# Iteration 77 fit: [25.9 s]: Recall = 0.0913, Jaccard score = 0.0518, loss = 0.0081, val_loss = 0.0000, eval: [8.4 s]
# Iteration 78 fit: [25.9 s]: Recall = 0.0985, Jaccard score = 0.0561, loss = 0.0075, val_loss = 0.0000, eval: [8.2 s]
# Iteration 79 fit: [25.9 s]: Recall = 0.0958, Jaccard score = 0.0545, loss = 0.0075, val_loss = 0.0000, eval: [8.7 s]
# Iteration 80 fit: [25.8 s]: Recall = 0.0949, Jaccard score = 0.0539, loss = 0.0074, val_loss = 0.0000, eval: [8.6 s]
# Iteration 81 fit: [25.9 s]: Recall = 0.0945, Jaccard score = 0.0537, loss = 0.0075, val_loss = 0.0000, eval: [8.0 s]
# Iteration 82 fit: [25.9 s]: Recall = 0.0972, Jaccard score = 0.0553, loss = 0.0072, val_loss = 0.0000, eval: [8.3 s]
# Iteration 83 fit: [25.9 s]: Recall = 0.0976, Jaccard score = 0.0555, loss = 0.0075, val_loss = 0.0000, eval: [7.9 s]
# Iteration 84 fit: [25.9 s]: Recall = 0.0970, Jaccard score = 0.0552, loss = 0.0074, val_loss = 0.0000, eval: [8.6 s]
# Iteration 85 fit: [26.0 s]: Recall = 0.0930, Jaccard score = 0.0528, loss = 0.0071, val_loss = 0.0000, eval: [7.9 s]
# Iteration 86 fit: [26.0 s]: Recall = 0.0919, Jaccard score = 0.0521, loss = 0.0069, val_loss = 0.0000, eval: [8.3 s]
# Iteration 87 fit: [25.9 s]: Recall = 0.0932, Jaccard score = 0.0529, loss = 0.0068, val_loss = 0.0000, eval: [8.3 s]
# Iteration 88 fit: [25.9 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0068, val_loss = 0.0000, eval: [8.3 s]
# Iteration 89 fit: [25.9 s]: Recall = 0.0955, Jaccard score = 0.0543, loss = 0.0070, val_loss = 0.0000, eval: [8.0 s]
# End. Best Iteration 46:  Recall = 0.1032, Jaccard score = 0.0590. 
# The best NeuMF model is saved to Pretrain/_MLP_8_[1024, 1024]_1560159980.h5
