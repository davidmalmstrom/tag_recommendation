--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "20"
--layers: "[256,256]"
--reg_layers: "[0,0]"
#--mf_pretrain: "Pretrain/ml-1m_GMF_8_1501651698.h5"
#--mlp_pretrain: "Pretrain/ml-1m_MLP_[64,32,16,8]_1501652038.h5"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=20, eval_recall=1, is_tag=1, layers='[256,256]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# Load data done [2.6 s]. #user=17422, #item=986, #train=133102, #test=17422
# Init: Recall = 0.0023, Jaccard score = 0.0012
# Iteration 0 fit: [9.4 s]: Recall = 0.0289, Jaccard score = 0.0158, loss = 0.4538, val_loss = 0.0000, eval: [7.0 s]
# Iteration 1 fit: [9.0 s]: Recall = 0.0239, Jaccard score = 0.0131, loss = 0.4416, val_loss = 0.0000, eval: [7.0 s]
# Iteration 2 fit: [9.0 s]: Recall = 0.0220, Jaccard score = 0.0120, loss = 0.4385, val_loss = 0.0000, eval: [7.0 s]
# Iteration 3 fit: [9.0 s]: Recall = 0.0266, Jaccard score = 0.0145, loss = 0.4331, val_loss = 0.0000, eval: [7.0 s]
# Iteration 4 fit: [9.0 s]: Recall = 0.0245, Jaccard score = 0.0134, loss = 0.4226, val_loss = 0.0000, eval: [7.0 s]
# Iteration 5 fit: [9.0 s]: Recall = 0.0249, Jaccard score = 0.0136, loss = 0.4020, val_loss = 0.0000, eval: [7.0 s]
# Iteration 6 fit: [9.0 s]: Recall = 0.0308, Jaccard score = 0.0169, loss = 0.3743, val_loss = 0.0000, eval: [7.0 s]
# Iteration 7 fit: [9.0 s]: Recall = 0.0340, Jaccard score = 0.0187, loss = 0.3461, val_loss = 0.0000, eval: [7.0 s]
# Iteration 8 fit: [9.0 s]: Recall = 0.0372, Jaccard score = 0.0205, loss = 0.3194, val_loss = 0.0000, eval: [7.0 s]
# Iteration 9 fit: [9.0 s]: Recall = 0.0388, Jaccard score = 0.0213, loss = 0.2943, val_loss = 0.0000, eval: [7.0 s]
# Iteration 10 fit: [9.0 s]: Recall = 0.0465, Jaccard score = 0.0257, loss = 0.2713, val_loss = 0.0000, eval: [7.0 s]
# Iteration 11 fit: [9.0 s]: Recall = 0.0469, Jaccard score = 0.0260, loss = 0.2496, val_loss = 0.0000, eval: [7.0 s]
# Iteration 12 fit: [9.0 s]: Recall = 0.0519, Jaccard score = 0.0288, loss = 0.2302, val_loss = 0.0000, eval: [7.0 s]
# Iteration 13 fit: [9.0 s]: Recall = 0.0538, Jaccard score = 0.0298, loss = 0.2117, val_loss = 0.0000, eval: [7.0 s]
# Iteration 14 fit: [9.0 s]: Recall = 0.0578, Jaccard score = 0.0321, loss = 0.1940, val_loss = 0.0000, eval: [7.4 s]
# Iteration 15 fit: [9.0 s]: Recall = 0.0636, Jaccard score = 0.0355, loss = 0.1782, val_loss = 0.0000, eval: [7.0 s]
# Iteration 16 fit: [9.0 s]: Recall = 0.0587, Jaccard score = 0.0327, loss = 0.1639, val_loss = 0.0000, eval: [7.0 s]
# Iteration 17 fit: [9.0 s]: Recall = 0.0625, Jaccard score = 0.0349, loss = 0.1502, val_loss = 0.0000, eval: [7.0 s]
# Iteration 18 fit: [9.0 s]: Recall = 0.0625, Jaccard score = 0.0349, loss = 0.1386, val_loss = 0.0000, eval: [7.1 s]
# Iteration 19 fit: [9.0 s]: Recall = 0.0669, Jaccard score = 0.0374, loss = 0.1286, val_loss = 0.0000, eval: [7.0 s]
# End. Best Iteration 19:  Recall = 0.0669, Jaccard score = 0.0374. 
# The best NeuMF model is saved to Pretrain/_MLP_8_[256,256]_1559911112.h5