--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "20"
--layers: "[64,54,44,34]"
#--mf_pretrain: "Pretrain/ml-1m_GMF_8_1501651698.h5"
#--mlp_pretrain: "Pretrain/ml-1m_MLP_[64,32,16,8]_1501652038.h5"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=20, eval_recall=1, is_tag=1, layers='[64,54,44,34]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# Load data done [2.7 s]. #user=17435, #item=986, #train=133152, #test=17435
# Init: Recall = 0.0025, Jaccard score = 0.0013
# Iteration 0 fit: [7.0 s]: Recall = 0.0283, Jaccard score = 0.0155, loss = 0.4607, val_loss = 0.0000, eval: [7.9 s]
# Iteration 1 fit: [6.4 s]: Recall = 0.0256, Jaccard score = 0.0140, loss = 0.4414, val_loss = 0.0000, eval: [7.8 s]
# Iteration 2 fit: [6.4 s]: Recall = 0.0287, Jaccard score = 0.0157, loss = 0.4393, val_loss = 0.0000, eval: [8.1 s]
# Iteration 3 fit: [6.5 s]: Recall = 0.0258, Jaccard score = 0.0141, loss = 0.4373, val_loss = 0.0000, eval: [7.9 s]
# Iteration 4 fit: [6.4 s]: Recall = 0.0264, Jaccard score = 0.0144, loss = 0.4336, val_loss = 0.0000, eval: [7.8 s]
# Iteration 5 fit: [6.4 s]: Recall = 0.0260, Jaccard score = 0.0142, loss = 0.4295, val_loss = 0.0000, eval: [7.9 s]
# Iteration 6 fit: [6.4 s]: Recall = 0.0266, Jaccard score = 0.0145, loss = 0.4239, val_loss = 0.0000, eval: [7.8 s]
# Iteration 7 fit: [6.5 s]: Recall = 0.0260, Jaccard score = 0.0142, loss = 0.4170, val_loss = 0.0000, eval: [8.3 s]
# Iteration 8 fit: [6.4 s]: Recall = 0.0256, Jaccard score = 0.0140, loss = 0.4093, val_loss = 0.0000, eval: [8.5 s]
# Iteration 9 fit: [6.4 s]: Recall = 0.0235, Jaccard score = 0.0129, loss = 0.4009, val_loss = 0.0000, eval: [7.8 s]
# Iteration 10 fit: [6.4 s]: Recall = 0.0207, Jaccard score = 0.0113, loss = 0.3923, val_loss = 0.0000, eval: [7.9 s]
# Iteration 11 fit: [6.4 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.3832, val_loss = 0.0000, eval: [7.8 s]
# Iteration 12 fit: [6.4 s]: Recall = 0.0220, Jaccard score = 0.0120, loss = 0.3738, val_loss = 0.0000, eval: [8.1 s]
# Iteration 13 fit: [6.4 s]: Recall = 0.0226, Jaccard score = 0.0123, loss = 0.3649, val_loss = 0.0000, eval: [7.9 s]
# Iteration 14 fit: [6.4 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.3547, val_loss = 0.0000, eval: [7.8 s]
# Iteration 15 fit: [6.4 s]: Recall = 0.0235, Jaccard score = 0.0129, loss = 0.3462, val_loss = 0.0000, eval: [8.3 s]
# Iteration 16 fit: [6.4 s]: Recall = 0.0203, Jaccard score = 0.0111, loss = 0.3370, val_loss = 0.0000, eval: [8.1 s]
# Iteration 17 fit: [6.4 s]: Recall = 0.0203, Jaccard score = 0.0111, loss = 0.3290, val_loss = 0.0000, eval: [8.0 s]
# Iteration 18 fit: [6.4 s]: Recall = 0.0207, Jaccard score = 0.0113, loss = 0.3190, val_loss = 0.0000, eval: [7.9 s]
# Iteration 19 fit: [6.4 s]: Recall = 0.0239, Jaccard score = 0.0131, loss = 0.3116, val_loss = 0.0000, eval: [7.8 s]
# End. Best Iteration 2:  Recall = 0.0287, Jaccard score = 0.0157. 
# The best NeuMF model is saved to Pretrain/_MLP_8_[64,54,44,34]_1559913187.h5
