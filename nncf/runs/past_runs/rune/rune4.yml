--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "1"
--epochs: "40"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=1, dataset='', epochs=40, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_8_[64,32,16,8]_1560175356.h5
# Load data done [19.5 s]. #user=90728, #item=985, #train=676679, #test=90728
# Init: Recall = 0.0025, Jaccard score = 0.0013
# Iteration 0 fit: [29.0 s]: Recall = 0.0029, Jaccard score = 0.0015, loss = 0.5095, val_loss = 0.0000, eval: [6.3 s]
# Iteration 1 fit: [28.7 s]: Recall = 0.0025, Jaccard score = 0.0013, loss = 0.5004, val_loss = 0.0000, eval: [6.3 s]
# Iteration 2 fit: [28.7 s]: Recall = 0.0034, Jaccard score = 0.0019, loss = 0.5003, val_loss = 0.0000, eval: [6.3 s]
# Iteration 3 fit: [28.8 s]: Recall = 0.0048, Jaccard score = 0.0026, loss = 0.4997, val_loss = 0.0000, eval: [6.3 s]
# Iteration 4 fit: [28.8 s]: Recall = 0.0105, Jaccard score = 0.0057, loss = 0.4972, val_loss = 0.0000, eval: [6.3 s]
# Iteration 5 fit: [29.0 s]: Recall = 0.0147, Jaccard score = 0.0080, loss = 0.4901, val_loss = 0.0000, eval: [6.3 s]
# Iteration 6 fit: [28.8 s]: Recall = 0.0190, Jaccard score = 0.0103, loss = 0.4767, val_loss = 0.0000, eval: [6.4 s]
# Iteration 7 fit: [30.0 s]: Recall = 0.0218, Jaccard score = 0.0119, loss = 0.4590, val_loss = 0.0000, eval: [8.2 s]
# Iteration 8 fit: [32.1 s]: Recall = 0.0268, Jaccard score = 0.0146, loss = 0.4405, val_loss = 0.0000, eval: [6.4 s]
# Iteration 9 fit: [29.0 s]: Recall = 0.0304, Jaccard score = 0.0166, loss = 0.4231, val_loss = 0.0000, eval: [6.3 s]
# Iteration 10 fit: [28.8 s]: Recall = 0.0325, Jaccard score = 0.0178, loss = 0.4082, val_loss = 0.0000, eval: [6.3 s]
# Iteration 11 fit: [28.8 s]: Recall = 0.0350, Jaccard score = 0.0192, loss = 0.3946, val_loss = 0.0000, eval: [6.3 s]
# Iteration 12 fit: [28.8 s]: Recall = 0.0358, Jaccard score = 0.0196, loss = 0.3829, val_loss = 0.0000, eval: [6.3 s]
# Iteration 13 fit: [28.8 s]: Recall = 0.0406, Jaccard score = 0.0223, loss = 0.3724, val_loss = 0.0000, eval: [6.3 s]
# Iteration 14 fit: [28.8 s]: Recall = 0.0431, Jaccard score = 0.0237, loss = 0.3629, val_loss = 0.0000, eval: [6.3 s]
# Iteration 15 fit: [28.8 s]: Recall = 0.0467, Jaccard score = 0.0257, loss = 0.3546, val_loss = 0.0000, eval: [6.3 s]
# Iteration 16 fit: [28.7 s]: Recall = 0.0494, Jaccard score = 0.0273, loss = 0.3464, val_loss = 0.0000, eval: [6.3 s]
# Iteration 17 fit: [28.8 s]: Recall = 0.0530, Jaccard score = 0.0293, loss = 0.3394, val_loss = 0.0000, eval: [6.3 s]
# Iteration 18 fit: [28.8 s]: Recall = 0.0551, Jaccard score = 0.0305, loss = 0.3325, val_loss = 0.0000, eval: [6.4 s]
# Iteration 19 fit: [28.8 s]: Recall = 0.0590, Jaccard score = 0.0327, loss = 0.3266, val_loss = 0.0000, eval: [6.3 s]
# Iteration 20 fit: [28.8 s]: Recall = 0.0620, Jaccard score = 0.0345, loss = 0.3209, val_loss = 0.0000, eval: [6.3 s]
# Iteration 21 fit: [28.7 s]: Recall = 0.0657, Jaccard score = 0.0366, loss = 0.3157, val_loss = 0.0000, eval: [6.4 s]
# Iteration 22 fit: [28.8 s]: Recall = 0.0685, Jaccard score = 0.0382, loss = 0.3113, val_loss = 0.0000, eval: [6.4 s]
# Iteration 23 fit: [28.8 s]: Recall = 0.0729, Jaccard score = 0.0408, loss = 0.3071, val_loss = 0.0000, eval: [6.3 s]
# Iteration 24 fit: [28.8 s]: Recall = 0.0735, Jaccard score = 0.0411, loss = 0.3031, val_loss = 0.0000, eval: [6.3 s]
# Iteration 25 fit: [28.8 s]: Recall = 0.0751, Jaccard score = 0.0420, loss = 0.2994, val_loss = 0.0000, eval: [6.3 s]
# Iteration 26 fit: [28.8 s]: Recall = 0.0785, Jaccard score = 0.0440, loss = 0.2961, val_loss = 0.0000, eval: [6.3 s]
# Iteration 27 fit: [28.8 s]: Recall = 0.0779, Jaccard score = 0.0437, loss = 0.2929, val_loss = 0.0000, eval: [6.3 s]
# Iteration 28 fit: [28.8 s]: Recall = 0.0802, Jaccard score = 0.0450, loss = 0.2905, val_loss = 0.0000, eval: [6.3 s]
# Iteration 29 fit: [28.8 s]: Recall = 0.0779, Jaccard score = 0.0437, loss = 0.2875, val_loss = 0.0000, eval: [6.3 s]
# Iteration 30 fit: [28.8 s]: Recall = 0.0812, Jaccard score = 0.0456, loss = 0.2855, val_loss = 0.0000, eval: [6.4 s]
# Iteration 31 fit: [28.8 s]: Recall = 0.0860, Jaccard score = 0.0484, loss = 0.2833, val_loss = 0.0000, eval: [6.3 s]
# Iteration 32 fit: [28.8 s]: Recall = 0.0854, Jaccard score = 0.0481, loss = 0.2811, val_loss = 0.0000, eval: [6.3 s]
# Iteration 33 fit: [28.8 s]: Recall = 0.0862, Jaccard score = 0.0485, loss = 0.2792, val_loss = 0.0000, eval: [6.3 s]
# Iteration 34 fit: [28.8 s]: Recall = 0.0875, Jaccard score = 0.0493, loss = 0.2778, val_loss = 0.0000, eval: [6.3 s]
# Iteration 35 fit: [28.8 s]: Recall = 0.0881, Jaccard score = 0.0497, loss = 0.2761, val_loss = 0.0000, eval: [6.3 s]
# Iteration 36 fit: [28.7 s]: Recall = 0.0881, Jaccard score = 0.0497, loss = 0.2748, val_loss = 0.0000, eval: [6.3 s]
# Iteration 37 fit: [28.8 s]: Recall = 0.0904, Jaccard score = 0.0510, loss = 0.2734, val_loss = 0.0000, eval: [6.3 s]
# Iteration 38 fit: [28.7 s]: Recall = 0.0890, Jaccard score = 0.0502, loss = 0.2721, val_loss = 0.0000, eval: [6.3 s]
# Iteration 39 fit: [28.8 s]: Recall = 0.0925, Jaccard score = 0.0523, loss = 0.2707, val_loss = 0.0000, eval: [6.3 s]
# End. Best Iteration 39:  Recall = 0.0925, Jaccard score = 0.0523. 
# The best NeuMF model has been saved to Pretrain/_GMF_8_[64,32,16,8]_1560175356.h5
