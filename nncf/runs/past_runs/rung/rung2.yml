--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "100"
--num_factors: "80"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=80, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_80_[64,32,16,8]_1560845774.h5
# Load data done [2.6 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0030, Jaccard score = 0.0016
# Iteration 0 fit: [7.0 s]: Recall = 0.0038, Jaccard score = 0.0021, loss = 0.5468, val_loss = 0.0000, eval: [6.3 s]
# Iteration 1 fit: [6.7 s]: Recall = 0.0028, Jaccard score = 0.0015, loss = 0.5007, val_loss = 0.0000, eval: [6.2 s]
# Iteration 2 fit: [6.7 s]: Recall = 0.0044, Jaccard score = 0.0024, loss = 0.4999, val_loss = 0.0000, eval: [6.3 s]
# Iteration 3 fit: [6.7 s]: Recall = 0.0030, Jaccard score = 0.0016, loss = 0.4968, val_loss = 0.0000, eval: [6.3 s]
# Iteration 4 fit: [6.7 s]: Recall = 0.0032, Jaccard score = 0.0017, loss = 0.4898, val_loss = 0.0000, eval: [6.3 s]
# Iteration 5 fit: [6.7 s]: Recall = 0.0049, Jaccard score = 0.0027, loss = 0.4777, val_loss = 0.0000, eval: [6.3 s]
# Iteration 6 fit: [6.7 s]: Recall = 0.0057, Jaccard score = 0.0031, loss = 0.4603, val_loss = 0.0000, eval: [6.3 s]
# Iteration 7 fit: [6.7 s]: Recall = 0.0063, Jaccard score = 0.0034, loss = 0.4379, val_loss = 0.0000, eval: [6.3 s]
# Iteration 8 fit: [6.7 s]: Recall = 0.0082, Jaccard score = 0.0044, loss = 0.4108, val_loss = 0.0000, eval: [6.3 s]
# Iteration 9 fit: [6.7 s]: Recall = 0.0116, Jaccard score = 0.0063, loss = 0.3807, val_loss = 0.0000, eval: [6.3 s]
# Iteration 10 fit: [6.7 s]: Recall = 0.0140, Jaccard score = 0.0076, loss = 0.3492, val_loss = 0.0000, eval: [6.3 s]
# Iteration 11 fit: [6.7 s]: Recall = 0.0165, Jaccard score = 0.0090, loss = 0.3177, val_loss = 0.0000, eval: [6.3 s]
# Iteration 12 fit: [6.7 s]: Recall = 0.0186, Jaccard score = 0.0101, loss = 0.2880, val_loss = 0.0000, eval: [6.3 s]
# Iteration 13 fit: [6.7 s]: Recall = 0.0213, Jaccard score = 0.0116, loss = 0.2606, val_loss = 0.0000, eval: [6.3 s]
# Iteration 14 fit: [6.7 s]: Recall = 0.0220, Jaccard score = 0.0120, loss = 0.2346, val_loss = 0.0000, eval: [6.3 s]
# Iteration 15 fit: [6.7 s]: Recall = 0.0243, Jaccard score = 0.0133, loss = 0.2115, val_loss = 0.0000, eval: [6.3 s]
# Iteration 16 fit: [6.7 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.1904, val_loss = 0.0000, eval: [6.3 s]
# Iteration 17 fit: [6.7 s]: Recall = 0.0268, Jaccard score = 0.0146, loss = 0.1696, val_loss = 0.0000, eval: [6.3 s]
# Iteration 18 fit: [6.7 s]: Recall = 0.0281, Jaccard score = 0.0154, loss = 0.1525, val_loss = 0.0000, eval: [6.3 s]
# Iteration 19 fit: [6.7 s]: Recall = 0.0306, Jaccard score = 0.0168, loss = 0.1355, val_loss = 0.0000, eval: [6.3 s]
# Iteration 20 fit: [6.7 s]: Recall = 0.0325, Jaccard score = 0.0178, loss = 0.1210, val_loss = 0.0000, eval: [6.3 s]
# Iteration 21 fit: [6.7 s]: Recall = 0.0326, Jaccard score = 0.0179, loss = 0.1079, val_loss = 0.0000, eval: [6.3 s]
# Iteration 22 fit: [6.7 s]: Recall = 0.0342, Jaccard score = 0.0188, loss = 0.0964, val_loss = 0.0000, eval: [6.3 s]
# Iteration 23 fit: [6.7 s]: Recall = 0.0368, Jaccard score = 0.0203, loss = 0.0852, val_loss = 0.0000, eval: [6.3 s]
# Iteration 24 fit: [6.7 s]: Recall = 0.0383, Jaccard score = 0.0211, loss = 0.0759, val_loss = 0.0000, eval: [6.3 s]
# Iteration 25 fit: [6.7 s]: Recall = 0.0423, Jaccard score = 0.0234, loss = 0.0682, val_loss = 0.0000, eval: [6.3 s]
# Iteration 26 fit: [6.7 s]: Recall = 0.0435, Jaccard score = 0.0240, loss = 0.0606, val_loss = 0.0000, eval: [6.3 s]
# Iteration 27 fit: [6.7 s]: Recall = 0.0457, Jaccard score = 0.0253, loss = 0.0534, val_loss = 0.0000, eval: [6.3 s]
# Iteration 28 fit: [6.7 s]: Recall = 0.0469, Jaccard score = 0.0259, loss = 0.0481, val_loss = 0.0000, eval: [6.3 s]
# Iteration 29 fit: [6.7 s]: Recall = 0.0501, Jaccard score = 0.0278, loss = 0.0431, val_loss = 0.0000, eval: [6.3 s]
# Iteration 30 fit: [6.7 s]: Recall = 0.0537, Jaccard score = 0.0298, loss = 0.0398, val_loss = 0.0000, eval: [6.3 s]
# Iteration 31 fit: [6.7 s]: Recall = 0.0541, Jaccard score = 0.0301, loss = 0.0349, val_loss = 0.0000, eval: [6.4 s]
# Iteration 32 fit: [6.7 s]: Recall = 0.0596, Jaccard score = 0.0332, loss = 0.0319, val_loss = 0.0000, eval: [6.3 s]
# Iteration 33 fit: [6.7 s]: Recall = 0.0607, Jaccard score = 0.0339, loss = 0.0294, val_loss = 0.0000, eval: [6.3 s]
# Iteration 34 fit: [6.7 s]: Recall = 0.0630, Jaccard score = 0.0352, loss = 0.0270, val_loss = 0.0000, eval: [6.3 s]
# Iteration 35 fit: [6.7 s]: Recall = 0.0659, Jaccard score = 0.0368, loss = 0.0244, val_loss = 0.0000, eval: [6.3 s]
# Iteration 36 fit: [6.7 s]: Recall = 0.0670, Jaccard score = 0.0375, loss = 0.0224, val_loss = 0.0000, eval: [6.4 s]
# Iteration 37 fit: [6.7 s]: Recall = 0.0706, Jaccard score = 0.0396, loss = 0.0208, val_loss = 0.0000, eval: [6.2 s]
# Iteration 38 fit: [6.7 s]: Recall = 0.0733, Jaccard score = 0.0411, loss = 0.0194, val_loss = 0.0000, eval: [6.2 s]
# Iteration 39 fit: [6.7 s]: Recall = 0.0738, Jaccard score = 0.0415, loss = 0.0180, val_loss = 0.0000, eval: [6.2 s]
# Iteration 40 fit: [6.7 s]: Recall = 0.0772, Jaccard score = 0.0435, loss = 0.0162, val_loss = 0.0000, eval: [6.2 s]
# Iteration 41 fit: [6.7 s]: Recall = 0.0776, Jaccard score = 0.0437, loss = 0.0152, val_loss = 0.0000, eval: [6.3 s]
# Iteration 42 fit: [6.7 s]: Recall = 0.0818, Jaccard score = 0.0462, loss = 0.0141, val_loss = 0.0000, eval: [6.2 s]
# Iteration 43 fit: [6.7 s]: Recall = 0.0835, Jaccard score = 0.0472, loss = 0.0132, val_loss = 0.0000, eval: [6.3 s]
# Iteration 44 fit: [6.7 s]: Recall = 0.0856, Jaccard score = 0.0484, loss = 0.0126, val_loss = 0.0000, eval: [6.2 s]
# Iteration 45 fit: [6.7 s]: Recall = 0.0860, Jaccard score = 0.0486, loss = 0.0117, val_loss = 0.0000, eval: [6.3 s]
# Iteration 46 fit: [6.7 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0116, val_loss = 0.0000, eval: [6.2 s]
# Iteration 47 fit: [6.7 s]: Recall = 0.0898, Jaccard score = 0.0509, loss = 0.0106, val_loss = 0.0000, eval: [6.2 s]
# Iteration 48 fit: [6.7 s]: Recall = 0.0907, Jaccard score = 0.0514, loss = 0.0095, val_loss = 0.0000, eval: [6.3 s]
# Iteration 49 fit: [6.7 s]: Recall = 0.0915, Jaccard score = 0.0519, loss = 0.0095, val_loss = 0.0000, eval: [6.3 s]
# Iteration 50 fit: [6.7 s]: Recall = 0.0941, Jaccard score = 0.0535, loss = 0.0087, val_loss = 0.0000, eval: [6.3 s]
# Iteration 51 fit: [6.7 s]: Recall = 0.0974, Jaccard score = 0.0554, loss = 0.0084, val_loss = 0.0000, eval: [6.3 s]
# Iteration 52 fit: [6.7 s]: Recall = 0.0972, Jaccard score = 0.0553, loss = 0.0083, val_loss = 0.0000, eval: [6.3 s]
# Iteration 53 fit: [6.7 s]: Recall = 0.0993, Jaccard score = 0.0566, loss = 0.0078, val_loss = 0.0000, eval: [6.3 s]
# Iteration 54 fit: [6.7 s]: Recall = 0.1002, Jaccard score = 0.0571, loss = 0.0070, val_loss = 0.0000, eval: [6.3 s]
# Iteration 55 fit: [6.6 s]: Recall = 0.1031, Jaccard score = 0.0589, loss = 0.0070, val_loss = 0.0000, eval: [6.2 s]
# Iteration 56 fit: [6.7 s]: Recall = 0.1034, Jaccard score = 0.0591, loss = 0.0066, val_loss = 0.0000, eval: [6.3 s]
# Iteration 57 fit: [6.7 s]: Recall = 0.1040, Jaccard score = 0.0594, loss = 0.0060, val_loss = 0.0000, eval: [6.2 s]
# Iteration 58 fit: [6.7 s]: Recall = 0.1036, Jaccard score = 0.0592, loss = 0.0062, val_loss = 0.0000, eval: [6.3 s]
# Iteration 59 fit: [6.7 s]: Recall = 0.1067, Jaccard score = 0.0610, loss = 0.0059, val_loss = 0.0000, eval: [6.3 s]
# Iteration 60 fit: [6.7 s]: Recall = 0.1084, Jaccard score = 0.0621, loss = 0.0055, val_loss = 0.0000, eval: [6.3 s]
# Iteration 61 fit: [6.7 s]: Recall = 0.1074, Jaccard score = 0.0615, loss = 0.0054, val_loss = 0.0000, eval: [6.3 s]
# Iteration 62 fit: [6.7 s]: Recall = 0.1097, Jaccard score = 0.0629, loss = 0.0051, val_loss = 0.0000, eval: [6.3 s]
# Iteration 63 fit: [6.7 s]: Recall = 0.1093, Jaccard score = 0.0627, loss = 0.0050, val_loss = 0.0000, eval: [6.3 s]
# Iteration 64 fit: [6.7 s]: Recall = 0.1122, Jaccard score = 0.0644, loss = 0.0048, val_loss = 0.0000, eval: [6.3 s]
# Iteration 65 fit: [6.7 s]: Recall = 0.1127, Jaccard score = 0.0647, loss = 0.0047, val_loss = 0.0000, eval: [6.3 s]
# Iteration 66 fit: [6.7 s]: Recall = 0.1095, Jaccard score = 0.0628, loss = 0.0046, val_loss = 0.0000, eval: [6.2 s]
# Iteration 67 fit: [6.7 s]: Recall = 0.1129, Jaccard score = 0.0649, loss = 0.0047, val_loss = 0.0000, eval: [6.3 s]
# Iteration 68 fit: [6.7 s]: Recall = 0.1146, Jaccard score = 0.0659, loss = 0.0043, val_loss = 0.0000, eval: [6.3 s]
# Iteration 69 fit: [6.7 s]: Recall = 0.1165, Jaccard score = 0.0671, loss = 0.0042, val_loss = 0.0000, eval: [6.3 s]
# Iteration 70 fit: [6.7 s]: Recall = 0.1179, Jaccard score = 0.0679, loss = 0.0038, val_loss = 0.0000, eval: [6.3 s]
# Iteration 71 fit: [6.7 s]: Recall = 0.1201, Jaccard score = 0.0693, loss = 0.0036, val_loss = 0.0000, eval: [6.2 s]
# Iteration 72 fit: [6.7 s]: Recall = 0.1179, Jaccard score = 0.0679, loss = 0.0037, val_loss = 0.0000, eval: [6.2 s]
# Iteration 73 fit: [6.7 s]: Recall = 0.1190, Jaccard score = 0.0686, loss = 0.0038, val_loss = 0.0000, eval: [6.2 s]
# Iteration 74 fit: [6.7 s]: Recall = 0.1209, Jaccard score = 0.0698, loss = 0.0034, val_loss = 0.0000, eval: [6.3 s]
# Iteration 75 fit: [6.7 s]: Recall = 0.1201, Jaccard score = 0.0693, loss = 0.0034, val_loss = 0.0000, eval: [6.2 s]
# Iteration 76 fit: [6.7 s]: Recall = 0.1224, Jaccard score = 0.0707, loss = 0.0035, val_loss = 0.0000, eval: [6.3 s]
# Iteration 77 fit: [6.7 s]: Recall = 0.1239, Jaccard score = 0.0716, loss = 0.0033, val_loss = 0.0000, eval: [6.3 s]
# Iteration 78 fit: [6.7 s]: Recall = 0.1237, Jaccard score = 0.0715, loss = 0.0033, val_loss = 0.0000, eval: [6.3 s]
# Iteration 79 fit: [6.7 s]: Recall = 0.1249, Jaccard score = 0.0722, loss = 0.0034, val_loss = 0.0000, eval: [6.2 s]
# Iteration 80 fit: [6.7 s]: Recall = 0.1245, Jaccard score = 0.0720, loss = 0.0030, val_loss = 0.0000, eval: [6.3 s]
# Iteration 81 fit: [6.7 s]: Recall = 0.1249, Jaccard score = 0.0722, loss = 0.0031, val_loss = 0.0000, eval: [6.3 s]
# Iteration 82 fit: [6.7 s]: Recall = 0.1253, Jaccard score = 0.0725, loss = 0.0029, val_loss = 0.0000, eval: [6.3 s]
# Iteration 83 fit: [6.7 s]: Recall = 0.1264, Jaccard score = 0.0732, loss = 0.0027, val_loss = 0.0000, eval: [6.2 s]
# Iteration 84 fit: [6.7 s]: Recall = 0.1268, Jaccard score = 0.0734, loss = 0.0030, val_loss = 0.0000, eval: [6.3 s]
# Iteration 85 fit: [6.7 s]: Recall = 0.1289, Jaccard score = 0.0747, loss = 0.0027, val_loss = 0.0000, eval: [6.3 s]
# Iteration 86 fit: [6.7 s]: Recall = 0.1273, Jaccard score = 0.0738, loss = 0.0029, val_loss = 0.0000, eval: [6.3 s]
# Iteration 87 fit: [6.7 s]: Recall = 0.1268, Jaccard score = 0.0734, loss = 0.0026, val_loss = 0.0000, eval: [6.3 s]
# Iteration 88 fit: [6.7 s]: Recall = 0.1289, Jaccard score = 0.0747, loss = 0.0028, val_loss = 0.0000, eval: [6.2 s]
# Iteration 89 fit: [6.7 s]: Recall = 0.1291, Jaccard score = 0.0748, loss = 0.0026, val_loss = 0.0000, eval: [6.3 s]
# Iteration 90 fit: [6.7 s]: Recall = 0.1291, Jaccard score = 0.0748, loss = 0.0027, val_loss = 0.0000, eval: [6.3 s]
# Iteration 91 fit: [6.7 s]: Recall = 0.1304, Jaccard score = 0.0756, loss = 0.0025, val_loss = 0.0000, eval: [6.2 s]
# Iteration 92 fit: [6.7 s]: Recall = 0.1302, Jaccard score = 0.0755, loss = 0.0024, val_loss = 0.0000, eval: [6.3 s]
# Iteration 93 fit: [6.7 s]: Recall = 0.1298, Jaccard score = 0.0753, loss = 0.0025, val_loss = 0.0000, eval: [6.3 s]
# Iteration 94 fit: [6.7 s]: Recall = 0.1306, Jaccard score = 0.0758, loss = 0.0024, val_loss = 0.0000, eval: [6.2 s]
# Iteration 95 fit: [6.7 s]: Recall = 0.1315, Jaccard score = 0.0764, loss = 0.0024, val_loss = 0.0000, eval: [6.3 s]
# Iteration 96 fit: [6.7 s]: Recall = 0.1308, Jaccard score = 0.0759, loss = 0.0025, val_loss = 0.0000, eval: [6.3 s]
# Iteration 97 fit: [6.7 s]: Recall = 0.1294, Jaccard score = 0.0751, loss = 0.0022, val_loss = 0.0000, eval: [6.2 s]
# Iteration 98 fit: [6.7 s]: Recall = 0.1313, Jaccard score = 0.0762, loss = 0.0023, val_loss = 0.0000, eval: [6.3 s]
# Iteration 99 fit: [6.7 s]: Recall = 0.1319, Jaccard score = 0.0766, loss = 0.0024, val_loss = 0.0000, eval: [6.3 s]
# End. Best Iteration 99:  Recall = 0.1319, Jaccard score = 0.0766. 
# The best NeuMF model has been saved to Pretrain/_GMF_80_[64,32,16,8]_1560845774.h5
