--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "100"
--layers: "[128,128]"
--reg_layers: "[0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560954420.h5
# --weights_path: Pretrain/_MLP_8_[128,128]_1560954420.h5
# Load data done [2.1 s]. #user=17063, #item=985, #train=129463, #test=17063
# Init: Recall = 0.0017, Jaccard score = 0.0009
# Iteration 0 fit: [6.8 s]: Recall = 0.0231, Jaccard score = 0.0125, loss = 0.4557, val_loss = 0.0000, eval: [7.1 s]
# Iteration 1 fit: [6.8 s]: Recall = 0.0244, Jaccard score = 0.0132, loss = 0.4379, val_loss = 0.0000, eval: [8.1 s]
# Iteration 2 fit: [6.4 s]: Recall = 0.0240, Jaccard score = 0.0130, loss = 0.4354, val_loss = 0.0000, eval: [9.5 s]
# Iteration 3 fit: [7.2 s]: Recall = 0.0236, Jaccard score = 0.0128, loss = 0.4327, val_loss = 0.0000, eval: [7.1 s]
# Iteration 4 fit: [6.4 s]: Recall = 0.0234, Jaccard score = 0.0127, loss = 0.4279, val_loss = 0.0000, eval: [7.1 s]
# Iteration 5 fit: [6.4 s]: Recall = 0.0233, Jaccard score = 0.0126, loss = 0.4201, val_loss = 0.0000, eval: [7.1 s]
# Iteration 6 fit: [6.4 s]: Recall = 0.0205, Jaccard score = 0.0111, loss = 0.4100, val_loss = 0.0000, eval: [7.1 s]
# Iteration 7 fit: [6.4 s]: Recall = 0.0217, Jaccard score = 0.0117, loss = 0.3971, val_loss = 0.0000, eval: [7.1 s]
# Iteration 8 fit: [6.4 s]: Recall = 0.0203, Jaccard score = 0.0110, loss = 0.3828, val_loss = 0.0000, eval: [7.1 s]
# Iteration 9 fit: [6.4 s]: Recall = 0.0219, Jaccard score = 0.0118, loss = 0.3675, val_loss = 0.0000, eval: [7.2 s]
# Iteration 10 fit: [6.4 s]: Recall = 0.0225, Jaccard score = 0.0122, loss = 0.3518, val_loss = 0.0000, eval: [7.6 s]
# Iteration 11 fit: [6.4 s]: Recall = 0.0240, Jaccard score = 0.0130, loss = 0.3351, val_loss = 0.0000, eval: [7.1 s]
# Iteration 12 fit: [6.5 s]: Recall = 0.0223, Jaccard score = 0.0120, loss = 0.3195, val_loss = 0.0000, eval: [9.2 s]
# Iteration 13 fit: [7.5 s]: Recall = 0.0252, Jaccard score = 0.0136, loss = 0.3048, val_loss = 0.0000, eval: [7.1 s]
# Iteration 14 fit: [6.4 s]: Recall = 0.0264, Jaccard score = 0.0143, loss = 0.2903, val_loss = 0.0000, eval: [7.1 s]
# Iteration 15 fit: [6.5 s]: Recall = 0.0273, Jaccard score = 0.0148, loss = 0.2757, val_loss = 0.0000, eval: [7.1 s]
# Iteration 16 fit: [6.4 s]: Recall = 0.0269, Jaccard score = 0.0146, loss = 0.2624, val_loss = 0.0000, eval: [7.1 s]
# Iteration 17 fit: [6.4 s]: Recall = 0.0283, Jaccard score = 0.0153, loss = 0.2499, val_loss = 0.0000, eval: [7.1 s]
# Iteration 18 fit: [6.3 s]: Recall = 0.0304, Jaccard score = 0.0165, loss = 0.2375, val_loss = 0.0000, eval: [7.1 s]
# Iteration 19 fit: [6.4 s]: Recall = 0.0312, Jaccard score = 0.0169, loss = 0.2250, val_loss = 0.0000, eval: [7.3 s]
# Iteration 20 fit: [6.3 s]: Recall = 0.0293, Jaccard score = 0.0159, loss = 0.2137, val_loss = 0.0000, eval: [7.1 s]
# Iteration 21 fit: [6.4 s]: Recall = 0.0353, Jaccard score = 0.0192, loss = 0.2034, val_loss = 0.0000, eval: [7.1 s]
# Iteration 22 fit: [6.3 s]: Recall = 0.0329, Jaccard score = 0.0179, loss = 0.1936, val_loss = 0.0000, eval: [7.1 s]
# Iteration 23 fit: [6.5 s]: Recall = 0.0353, Jaccard score = 0.0192, loss = 0.1838, val_loss = 0.0000, eval: [7.0 s]
# Iteration 24 fit: [6.3 s]: Recall = 0.0393, Jaccard score = 0.0215, loss = 0.1748, val_loss = 0.0000, eval: [7.5 s]
# Iteration 25 fit: [6.4 s]: Recall = 0.0372, Jaccard score = 0.0203, loss = 0.1668, val_loss = 0.0000, eval: [7.1 s]
# Iteration 26 fit: [6.4 s]: Recall = 0.0395, Jaccard score = 0.0216, loss = 0.1583, val_loss = 0.0000, eval: [7.1 s]
# Iteration 27 fit: [6.4 s]: Recall = 0.0395, Jaccard score = 0.0216, loss = 0.1506, val_loss = 0.0000, eval: [7.1 s]
# Iteration 28 fit: [6.4 s]: Recall = 0.0424, Jaccard score = 0.0232, loss = 0.1436, val_loss = 0.0000, eval: [7.0 s]
# Iteration 29 fit: [6.4 s]: Recall = 0.0417, Jaccard score = 0.0228, loss = 0.1362, val_loss = 0.0000, eval: [7.1 s]
# Iteration 30 fit: [6.4 s]: Recall = 0.0417, Jaccard score = 0.0228, loss = 0.1315, val_loss = 0.0000, eval: [7.1 s]
# Iteration 31 fit: [6.3 s]: Recall = 0.0432, Jaccard score = 0.0236, loss = 0.1246, val_loss = 0.0000, eval: [7.0 s]
# Iteration 32 fit: [6.3 s]: Recall = 0.0444, Jaccard score = 0.0243, loss = 0.1183, val_loss = 0.0000, eval: [7.1 s]
# Iteration 33 fit: [6.4 s]: Recall = 0.0419, Jaccard score = 0.0229, loss = 0.1137, val_loss = 0.0000, eval: [7.2 s]
# Iteration 34 fit: [6.3 s]: Recall = 0.0467, Jaccard score = 0.0256, loss = 0.1085, val_loss = 0.0000, eval: [7.0 s]
# Iteration 35 fit: [6.4 s]: Recall = 0.0442, Jaccard score = 0.0242, loss = 0.1044, val_loss = 0.0000, eval: [7.0 s]
# Iteration 36 fit: [6.3 s]: Recall = 0.0434, Jaccard score = 0.0237, loss = 0.0999, val_loss = 0.0000, eval: [7.0 s]
# Iteration 37 fit: [6.5 s]: Recall = 0.0453, Jaccard score = 0.0248, loss = 0.0957, val_loss = 0.0000, eval: [7.1 s]
# Iteration 38 fit: [6.3 s]: Recall = 0.0459, Jaccard score = 0.0252, loss = 0.0919, val_loss = 0.0000, eval: [7.3 s]
# Iteration 39 fit: [6.4 s]: Recall = 0.0457, Jaccard score = 0.0250, loss = 0.0883, val_loss = 0.0000, eval: [7.0 s]
# Iteration 40 fit: [6.3 s]: Recall = 0.0461, Jaccard score = 0.0253, loss = 0.0851, val_loss = 0.0000, eval: [7.0 s]
# Iteration 41 fit: [6.4 s]: Recall = 0.0450, Jaccard score = 0.0246, loss = 0.0814, val_loss = 0.0000, eval: [7.0 s]
# Iteration 42 fit: [6.4 s]: Recall = 0.0502, Jaccard score = 0.0276, loss = 0.0788, val_loss = 0.0000, eval: [7.2 s]
# Iteration 43 fit: [6.4 s]: Recall = 0.0498, Jaccard score = 0.0273, loss = 0.0773, val_loss = 0.0000, eval: [7.1 s]
# Iteration 44 fit: [6.4 s]: Recall = 0.0502, Jaccard score = 0.0276, loss = 0.0733, val_loss = 0.0000, eval: [7.2 s]
# Iteration 45 fit: [6.4 s]: Recall = 0.0504, Jaccard score = 0.0277, loss = 0.0708, val_loss = 0.0000, eval: [7.1 s]
# Iteration 46 fit: [6.3 s]: Recall = 0.0496, Jaccard score = 0.0272, loss = 0.0685, val_loss = 0.0000, eval: [7.1 s]
# Iteration 47 fit: [6.3 s]: Recall = 0.0479, Jaccard score = 0.0262, loss = 0.0661, val_loss = 0.0000, eval: [7.1 s]
# Iteration 48 fit: [6.3 s]: Recall = 0.0492, Jaccard score = 0.0270, loss = 0.0642, val_loss = 0.0000, eval: [7.0 s]
# Iteration 49 fit: [6.3 s]: Recall = 0.0517, Jaccard score = 0.0284, loss = 0.0619, val_loss = 0.0000, eval: [7.0 s]
# Iteration 50 fit: [6.3 s]: Recall = 0.0525, Jaccard score = 0.0289, loss = 0.0594, val_loss = 0.0000, eval: [7.2 s]
# Iteration 51 fit: [6.3 s]: Recall = 0.0516, Jaccard score = 0.0283, loss = 0.0581, val_loss = 0.0000, eval: [7.1 s]
# Iteration 52 fit: [6.4 s]: Recall = 0.0537, Jaccard score = 0.0295, loss = 0.0577, val_loss = 0.0000, eval: [7.4 s]
# Iteration 53 fit: [6.4 s]: Recall = 0.0486, Jaccard score = 0.0267, loss = 0.0557, val_loss = 0.0000, eval: [7.1 s]
# Iteration 54 fit: [6.4 s]: Recall = 0.0506, Jaccard score = 0.0278, loss = 0.0530, val_loss = 0.0000, eval: [7.3 s]
# Iteration 55 fit: [6.4 s]: Recall = 0.0523, Jaccard score = 0.0288, loss = 0.0526, val_loss = 0.0000, eval: [7.7 s]
# Iteration 56 fit: [7.0 s]: Recall = 0.0492, Jaccard score = 0.0270, loss = 0.0511, val_loss = 0.0000, eval: [7.0 s]
# Iteration 57 fit: [6.4 s]: Recall = 0.0519, Jaccard score = 0.0285, loss = 0.0498, val_loss = 0.0000, eval: [7.6 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560955233.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1560955233.h5
# <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'Data//dev_tag_dataset{}.pkl'


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560955233.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1560955233.h5
# <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'Data//dev_tag_dataset{}.pkl'


# Launched by terminal.


# Launched by terminal.
# <class 'NameError'>: name 'parse_known_args' is not defined


# Launched by terminal.
# <class 'NameError'>: name 'parse_known_args' is not defined


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560955426.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1560955426.h5
# <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'Data/dev_tag_dataset{}.pkl'


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560955426.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1560955426.h5
# <class 'FileNotFoundError'>: [Errno 2] No such file or directory: 'Data/dev_tag_dataset{}.pkl'


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560955449.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1560955449.h5
# Load data done [2.0 s]. #user=18000, #item=985, #train=135566, #test=18000
# Init: Recall = 0.0019, Jaccard score = 0.0011
# Iteration 0 fit: [7.2 s]: Recall = 0.0277, Jaccard score = 0.0158, loss = 0.4538, val_loss = 0.0000, eval: [7.0 s]
# Iteration 1 fit: [6.7 s]: Recall = 0.0235, Jaccard score = 0.0134, loss = 0.4384, val_loss = 0.0000, eval: [7.0 s]
# Iteration 2 fit: [6.7 s]: Recall = 0.0235, Jaccard score = 0.0134, loss = 0.4359, val_loss = 0.0000, eval: [7.0 s]
# Iteration 3 fit: [6.7 s]: Recall = 0.0239, Jaccard score = 0.0136, loss = 0.4323, val_loss = 0.0000, eval: [7.0 s]
# Iteration 4 fit: [6.7 s]: Recall = 0.0211, Jaccard score = 0.0120, loss = 0.4264, val_loss = 0.0000, eval: [7.0 s]
# Iteration 5 fit: [6.7 s]: Recall = 0.0225, Jaccard score = 0.0128, loss = 0.4186, val_loss = 0.0000, eval: [7.0 s]
# Iteration 6 fit: [6.7 s]: Recall = 0.0161, Jaccard score = 0.0091, loss = 0.4065, val_loss = 0.0000, eval: [7.0 s]
# Iteration 7 fit: [6.7 s]: Recall = 0.0202, Jaccard score = 0.0115, loss = 0.3921, val_loss = 0.0000, eval: [7.1 s]
# Iteration 8 fit: [6.7 s]: Recall = 0.0216, Jaccard score = 0.0123, loss = 0.3760, val_loss = 0.0000, eval: [7.0 s]
# Iteration 9 fit: [6.8 s]: Recall = 0.0226, Jaccard score = 0.0129, loss = 0.3604, val_loss = 0.0000, eval: [7.0 s]
# Iteration 10 fit: [6.7 s]: Recall = 0.0213, Jaccard score = 0.0121, loss = 0.3437, val_loss = 0.0000, eval: [7.0 s]
# Iteration 11 fit: [6.7 s]: Recall = 0.0256, Jaccard score = 0.0146, loss = 0.3271, val_loss = 0.0000, eval: [7.0 s]
# Iteration 12 fit: [6.7 s]: Recall = 0.0270, Jaccard score = 0.0154, loss = 0.3112, val_loss = 0.0000, eval: [7.0 s]
# Iteration 13 fit: [6.7 s]: Recall = 0.0277, Jaccard score = 0.0158, loss = 0.2949, val_loss = 0.0000, eval: [7.0 s]
# Iteration 14 fit: [6.7 s]: Recall = 0.0311, Jaccard score = 0.0178, loss = 0.2806, val_loss = 0.0000, eval: [7.0 s]
# Iteration 15 fit: [6.7 s]: Recall = 0.0302, Jaccard score = 0.0173, loss = 0.2666, val_loss = 0.0000, eval: [7.0 s]
# Iteration 16 fit: [6.7 s]: Recall = 0.0313, Jaccard score = 0.0179, loss = 0.2537, val_loss = 0.0000, eval: [7.0 s]
# Iteration 17 fit: [6.7 s]: Recall = 0.0328, Jaccard score = 0.0188, loss = 0.2405, val_loss = 0.0000, eval: [7.0 s]
# Iteration 18 fit: [6.7 s]: Recall = 0.0327, Jaccard score = 0.0187, loss = 0.2288, val_loss = 0.0000, eval: [7.0 s]
# Iteration 19 fit: [6.7 s]: Recall = 0.0373, Jaccard score = 0.0214, loss = 0.2168, val_loss = 0.0000, eval: [7.0 s]
# Iteration 20 fit: [6.7 s]: Recall = 0.0410, Jaccard score = 0.0236, loss = 0.2059, val_loss = 0.0000, eval: [7.0 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560955848.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1560955848.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0032, Jaccard score = 0.0018
# Iteration 0 fit: [7.0 s]: Recall = 0.0248, Jaccard score = 0.0143, loss = 0.4573, val_loss = 0.0000, eval: [7.0 s]
# Iteration 1 fit: [6.5 s]: Recall = 0.0233, Jaccard score = 0.0134, loss = 0.4413, val_loss = 0.0000, eval: [7.0 s]
# Iteration 2 fit: [6.5 s]: Recall = 0.0272, Jaccard score = 0.0157, loss = 0.4382, val_loss = 0.0000, eval: [7.0 s]
# Iteration 3 fit: [6.5 s]: Recall = 0.0257, Jaccard score = 0.0148, loss = 0.4354, val_loss = 0.0000, eval: [7.0 s]
# Iteration 4 fit: [6.5 s]: Recall = 0.0213, Jaccard score = 0.0122, loss = 0.4300, val_loss = 0.0000, eval: [7.0 s]
# Iteration 5 fit: [6.5 s]: Recall = 0.0216, Jaccard score = 0.0124, loss = 0.4219, val_loss = 0.0000, eval: [7.0 s]
# Iteration 6 fit: [6.5 s]: Recall = 0.0233, Jaccard score = 0.0134, loss = 0.4099, val_loss = 0.0000, eval: [7.0 s]
# Iteration 7 fit: [6.5 s]: Recall = 0.0243, Jaccard score = 0.0140, loss = 0.3960, val_loss = 0.0000, eval: [7.0 s]
# Iteration 8 fit: [6.5 s]: Recall = 0.0265, Jaccard score = 0.0153, loss = 0.3795, val_loss = 0.0000, eval: [7.0 s]
# Iteration 9 fit: [6.5 s]: Recall = 0.0330, Jaccard score = 0.0190, loss = 0.3626, val_loss = 0.0000, eval: [7.0 s]
# Iteration 10 fit: [6.6 s]: Recall = 0.0335, Jaccard score = 0.0193, loss = 0.3450, val_loss = 0.0000, eval: [7.0 s]
# Iteration 11 fit: [6.5 s]: Recall = 0.0308, Jaccard score = 0.0177, loss = 0.3288, val_loss = 0.0000, eval: [7.0 s]
# Iteration 12 fit: [6.5 s]: Recall = 0.0350, Jaccard score = 0.0202, loss = 0.3123, val_loss = 0.0000, eval: [7.0 s]
# Iteration 13 fit: [6.6 s]: Recall = 0.0378, Jaccard score = 0.0219, loss = 0.2971, val_loss = 0.0000, eval: [7.0 s]
# Iteration 14 fit: [6.5 s]: Recall = 0.0396, Jaccard score = 0.0230, loss = 0.2823, val_loss = 0.0000, eval: [7.0 s]
# Iteration 15 fit: [6.5 s]: Recall = 0.0393, Jaccard score = 0.0228, loss = 0.2685, val_loss = 0.0000, eval: [7.0 s]
# Iteration 16 fit: [6.5 s]: Recall = 0.0441, Jaccard score = 0.0256, loss = 0.2544, val_loss = 0.0000, eval: [7.0 s]
# Iteration 17 fit: [6.5 s]: Recall = 0.0463, Jaccard score = 0.0269, loss = 0.2430, val_loss = 0.0000, eval: [7.0 s]
# Iteration 18 fit: [6.5 s]: Recall = 0.0505, Jaccard score = 0.0295, loss = 0.2307, val_loss = 0.0000, eval: [7.0 s]
# Iteration 19 fit: [6.5 s]: Recall = 0.0515, Jaccard score = 0.0301, loss = 0.2200, val_loss = 0.0000, eval: [7.0 s]
# Iteration 20 fit: [6.5 s]: Recall = 0.0497, Jaccard score = 0.0289, loss = 0.2093, val_loss = 0.0000, eval: [7.0 s]
# Iteration 21 fit: [6.5 s]: Recall = 0.0520, Jaccard score = 0.0304, loss = 0.1985, val_loss = 0.0000, eval: [7.0 s]
# Iteration 22 fit: [6.6 s]: Recall = 0.0515, Jaccard score = 0.0301, loss = 0.1888, val_loss = 0.0000, eval: [7.0 s]
# Iteration 23 fit: [6.6 s]: Recall = 0.0532, Jaccard score = 0.0311, loss = 0.1805, val_loss = 0.0000, eval: [7.0 s]
# Iteration 24 fit: [6.6 s]: Recall = 0.0546, Jaccard score = 0.0319, loss = 0.1718, val_loss = 0.0000, eval: [7.0 s]
# Iteration 25 fit: [6.6 s]: Recall = 0.0573, Jaccard score = 0.0336, loss = 0.1628, val_loss = 0.0000, eval: [7.0 s]
# Iteration 26 fit: [6.6 s]: Recall = 0.0587, Jaccard score = 0.0344, loss = 0.1557, val_loss = 0.0000, eval: [7.0 s]
# Iteration 27 fit: [6.5 s]: Recall = 0.0578, Jaccard score = 0.0339, loss = 0.1480, val_loss = 0.0000, eval: [7.0 s]
# Iteration 28 fit: [6.5 s]: Recall = 0.0580, Jaccard score = 0.0340, loss = 0.1415, val_loss = 0.0000, eval: [7.0 s]
# Iteration 29 fit: [6.5 s]: Recall = 0.0587, Jaccard score = 0.0344, loss = 0.1366, val_loss = 0.0000, eval: [7.0 s]
# Iteration 30 fit: [6.5 s]: Recall = 0.0578, Jaccard score = 0.0339, loss = 0.1293, val_loss = 0.0000, eval: [7.1 s]
# Iteration 31 fit: [6.5 s]: Recall = 0.0628, Jaccard score = 0.0369, loss = 0.1235, val_loss = 0.0000, eval: [7.0 s]
# Iteration 32 fit: [6.6 s]: Recall = 0.0651, Jaccard score = 0.0383, loss = 0.1173, val_loss = 0.0000, eval: [7.0 s]
# Iteration 33 fit: [6.5 s]: Recall = 0.0612, Jaccard score = 0.0359, loss = 0.1131, val_loss = 0.0000, eval: [7.0 s]
# Iteration 34 fit: [6.5 s]: Recall = 0.0614, Jaccard score = 0.0360, loss = 0.1082, val_loss = 0.0000, eval: [7.0 s]
# Iteration 35 fit: [6.5 s]: Recall = 0.0614, Jaccard score = 0.0360, loss = 0.1034, val_loss = 0.0000, eval: [7.0 s]
# Iteration 36 fit: [6.6 s]: Recall = 0.0600, Jaccard score = 0.0352, loss = 0.0993, val_loss = 0.0000, eval: [7.0 s]
# Iteration 37 fit: [6.5 s]: Recall = 0.0628, Jaccard score = 0.0369, loss = 0.0948, val_loss = 0.0000, eval: [7.1 s]
# Iteration 38 fit: [6.5 s]: Recall = 0.0628, Jaccard score = 0.0369, loss = 0.0916, val_loss = 0.0000, eval: [7.0 s]
# Iteration 39 fit: [6.5 s]: Recall = 0.0662, Jaccard score = 0.0389, loss = 0.0874, val_loss = 0.0000, eval: [7.1 s]
# Iteration 40 fit: [6.6 s]: Recall = 0.0651, Jaccard score = 0.0383, loss = 0.0840, val_loss = 0.0000, eval: [7.1 s]
# Iteration 41 fit: [6.6 s]: Recall = 0.0670, Jaccard score = 0.0395, loss = 0.0809, val_loss = 0.0000, eval: [7.0 s]
# Iteration 42 fit: [6.5 s]: Recall = 0.0658, Jaccard score = 0.0387, loss = 0.0785, val_loss = 0.0000, eval: [7.0 s]
# Iteration 43 fit: [6.5 s]: Recall = 0.0679, Jaccard score = 0.0400, loss = 0.0750, val_loss = 0.0000, eval: [7.0 s]
# Iteration 44 fit: [6.6 s]: Recall = 0.0713, Jaccard score = 0.0421, loss = 0.0723, val_loss = 0.0000, eval: [7.0 s]
# Iteration 45 fit: [6.5 s]: Recall = 0.0670, Jaccard score = 0.0395, loss = 0.0714, val_loss = 0.0000, eval: [7.0 s]
# Iteration 46 fit: [6.5 s]: Recall = 0.0674, Jaccard score = 0.0397, loss = 0.0684, val_loss = 0.0000, eval: [7.0 s]
# Iteration 47 fit: [6.5 s]: Recall = 0.0670, Jaccard score = 0.0395, loss = 0.0657, val_loss = 0.0000, eval: [7.0 s]
# Iteration 48 fit: [6.5 s]: Recall = 0.0721, Jaccard score = 0.0426, loss = 0.0641, val_loss = 0.0000, eval: [7.0 s]
# Iteration 49 fit: [6.5 s]: Recall = 0.0714, Jaccard score = 0.0422, loss = 0.0617, val_loss = 0.0000, eval: [7.0 s]
# Iteration 50 fit: [6.5 s]: Recall = 0.0694, Jaccard score = 0.0409, loss = 0.0599, val_loss = 0.0000, eval: [7.0 s]
# Iteration 51 fit: [6.5 s]: Recall = 0.0726, Jaccard score = 0.0429, loss = 0.0578, val_loss = 0.0000, eval: [7.0 s]
# Iteration 52 fit: [6.5 s]: Recall = 0.0728, Jaccard score = 0.0430, loss = 0.0571, val_loss = 0.0000, eval: [7.0 s]
# Iteration 53 fit: [6.6 s]: Recall = 0.0701, Jaccard score = 0.0413, loss = 0.0555, val_loss = 0.0000, eval: [7.0 s]
# Iteration 54 fit: [6.5 s]: Recall = 0.0704, Jaccard score = 0.0415, loss = 0.0543, val_loss = 0.0000, eval: [7.0 s]
# Iteration 55 fit: [6.6 s]: Recall = 0.0718, Jaccard score = 0.0424, loss = 0.0518, val_loss = 0.0000, eval: [7.0 s]
# Iteration 56 fit: [6.5 s]: Recall = 0.0738, Jaccard score = 0.0436, loss = 0.0514, val_loss = 0.0000, eval: [7.2 s]
# Iteration 57 fit: [6.5 s]: Recall = 0.0711, Jaccard score = 0.0420, loss = 0.0497, val_loss = 0.0000, eval: [7.4 s]
# Iteration 58 fit: [6.5 s]: Recall = 0.0743, Jaccard score = 0.0440, loss = 0.0468, val_loss = 0.0000, eval: [7.0 s]
# Iteration 59 fit: [6.6 s]: Recall = 0.0718, Jaccard score = 0.0424, loss = 0.0474, val_loss = 0.0000, eval: [7.0 s]
# Iteration 60 fit: [6.5 s]: Recall = 0.0718, Jaccard score = 0.0424, loss = 0.0446, val_loss = 0.0000, eval: [7.4 s]
# Iteration 61 fit: [6.5 s]: Recall = 0.0742, Jaccard score = 0.0438, loss = 0.0454, val_loss = 0.0000, eval: [8.0 s]
# Iteration 62 fit: [6.5 s]: Recall = 0.0716, Jaccard score = 0.0423, loss = 0.0440, val_loss = 0.0000, eval: [7.1 s]
# Iteration 63 fit: [7.9 s]: Recall = 0.0740, Jaccard score = 0.0437, loss = 0.0423, val_loss = 0.0000, eval: [7.6 s]
# Iteration 64 fit: [6.6 s]: Recall = 0.0721, Jaccard score = 0.0426, loss = 0.0426, val_loss = 0.0000, eval: [7.0 s]
# Iteration 65 fit: [6.5 s]: Recall = 0.0730, Jaccard score = 0.0431, loss = 0.0420, val_loss = 0.0000, eval: [7.1 s]
# Iteration 66 fit: [6.6 s]: Recall = 0.0743, Jaccard score = 0.0440, loss = 0.0409, val_loss = 0.0000, eval: [7.0 s]
# Iteration 67 fit: [6.5 s]: Recall = 0.0742, Jaccard score = 0.0438, loss = 0.0393, val_loss = 0.0000, eval: [7.0 s]
# Iteration 68 fit: [6.5 s]: Recall = 0.0750, Jaccard score = 0.0444, loss = 0.0382, val_loss = 0.0000, eval: [7.3 s]
# Iteration 69 fit: [6.7 s]: Recall = 0.0738, Jaccard score = 0.0436, loss = 0.0376, val_loss = 0.0000, eval: [7.3 s]
# Iteration 70 fit: [6.5 s]: Recall = 0.0743, Jaccard score = 0.0440, loss = 0.0368, val_loss = 0.0000, eval: [7.0 s]
# Iteration 71 fit: [6.6 s]: Recall = 0.0798, Jaccard score = 0.0473, loss = 0.0361, val_loss = 0.0000, eval: [7.2 s]
# Iteration 72 fit: [6.5 s]: Recall = 0.0742, Jaccard score = 0.0438, loss = 0.0359, val_loss = 0.0000, eval: [7.0 s]
# Iteration 73 fit: [6.5 s]: Recall = 0.0760, Jaccard score = 0.0450, loss = 0.0349, val_loss = 0.0000, eval: [7.4 s]
# Iteration 74 fit: [6.6 s]: Recall = 0.0767, Jaccard score = 0.0454, loss = 0.0345, val_loss = 0.0000, eval: [7.1 s]
# Iteration 75 fit: [6.6 s]: Recall = 0.0754, Jaccard score = 0.0446, loss = 0.0335, val_loss = 0.0000, eval: [7.0 s]
# Iteration 76 fit: [6.5 s]: Recall = 0.0748, Jaccard score = 0.0443, loss = 0.0331, val_loss = 0.0000, eval: [7.1 s]
# Iteration 77 fit: [6.6 s]: Recall = 0.0767, Jaccard score = 0.0454, loss = 0.0326, val_loss = 0.0000, eval: [7.0 s]
# Iteration 78 fit: [7.4 s]: Recall = 0.0777, Jaccard score = 0.0461, loss = 0.0321, val_loss = 0.0000, eval: [9.2 s]
# Iteration 79 fit: [8.0 s]: Recall = 0.0760, Jaccard score = 0.0450, loss = 0.0321, val_loss = 0.0000, eval: [7.0 s]
# Iteration 80 fit: [6.5 s]: Recall = 0.0733, Jaccard score = 0.0433, loss = 0.0315, val_loss = 0.0000, eval: [7.0 s]
# Iteration 81 fit: [6.5 s]: Recall = 0.0742, Jaccard score = 0.0438, loss = 0.0311, val_loss = 0.0000, eval: [7.0 s]
# Iteration 82 fit: [6.5 s]: Recall = 0.0755, Jaccard score = 0.0447, loss = 0.0299, val_loss = 0.0000, eval: [7.0 s]
# Iteration 83 fit: [6.6 s]: Recall = 0.0737, Jaccard score = 0.0435, loss = 0.0298, val_loss = 0.0000, eval: [7.0 s]
# Iteration 84 fit: [6.5 s]: Recall = 0.0782, Jaccard score = 0.0464, loss = 0.0298, val_loss = 0.0000, eval: [7.0 s]
# Iteration 85 fit: [6.5 s]: Recall = 0.0777, Jaccard score = 0.0461, loss = 0.0290, val_loss = 0.0000, eval: [7.0 s]
# Iteration 86 fit: [6.5 s]: Recall = 0.0788, Jaccard score = 0.0467, loss = 0.0284, val_loss = 0.0000, eval: [7.0 s]
# Iteration 87 fit: [6.6 s]: Recall = 0.0747, Jaccard score = 0.0442, loss = 0.0279, val_loss = 0.0000, eval: [7.0 s]
# Iteration 88 fit: [6.6 s]: Recall = 0.0750, Jaccard score = 0.0444, loss = 0.0274, val_loss = 0.0000, eval: [7.0 s]
# Iteration 89 fit: [6.5 s]: Recall = 0.0771, Jaccard score = 0.0456, loss = 0.0281, val_loss = 0.0000, eval: [7.0 s]
# Iteration 90 fit: [6.6 s]: Recall = 0.0755, Jaccard score = 0.0447, loss = 0.0268, val_loss = 0.0000, eval: [7.1 s]
# Iteration 91 fit: [6.5 s]: Recall = 0.0798, Jaccard score = 0.0473, loss = 0.0272, val_loss = 0.0000, eval: [7.0 s]
# Iteration 92 fit: [6.6 s]: Recall = 0.0767, Jaccard score = 0.0454, loss = 0.0260, val_loss = 0.0000, eval: [7.0 s]
# Iteration 93 fit: [6.6 s]: Recall = 0.0771, Jaccard score = 0.0456, loss = 0.0265, val_loss = 0.0000, eval: [7.0 s]
# Iteration 94 fit: [6.5 s]: Recall = 0.0781, Jaccard score = 0.0463, loss = 0.0261, val_loss = 0.0000, eval: [7.0 s]
# Iteration 95 fit: [6.5 s]: Recall = 0.0782, Jaccard score = 0.0464, loss = 0.0257, val_loss = 0.0000, eval: [7.0 s]
# Iteration 96 fit: [6.5 s]: Recall = 0.0793, Jaccard score = 0.0470, loss = 0.0261, val_loss = 0.0000, eval: [7.0 s]
# Iteration 97 fit: [6.5 s]: Recall = 0.0757, Jaccard score = 0.0448, loss = 0.0260, val_loss = 0.0000, eval: [7.0 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560957207.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1560957207.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0036, Jaccard score = 0.0019
# Iteration 0 fit: [8.3 s]: Recall = 0.0288, Jaccard score = 0.0158, loss = 0.4586, val_loss = 0.0000, eval: [7.3 s]
# Iteration 1 fit: [6.6 s]: Recall = 0.0283, Jaccard score = 0.0155, loss = 0.4416, val_loss = 0.0000, eval: [7.0 s]
# Iteration 2 fit: [6.5 s]: Recall = 0.0213, Jaccard score = 0.0116, loss = 0.4386, val_loss = 0.0000, eval: [7.0 s]
# Iteration 3 fit: [6.6 s]: Recall = 0.0247, Jaccard score = 0.0135, loss = 0.4354, val_loss = 0.0000, eval: [7.0 s]
# Iteration 4 fit: [6.6 s]: Recall = 0.0266, Jaccard score = 0.0145, loss = 0.4303, val_loss = 0.0000, eval: [7.0 s]
# Iteration 5 fit: [6.5 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.4224, val_loss = 0.0000, eval: [7.1 s]
# Iteration 6 fit: [6.6 s]: Recall = 0.0241, Jaccard score = 0.0132, loss = 0.4104, val_loss = 0.0000, eval: [7.0 s]
# Iteration 7 fit: [6.5 s]: Recall = 0.0249, Jaccard score = 0.0136, loss = 0.3960, val_loss = 0.0000, eval: [7.0 s]
# Iteration 8 fit: [6.6 s]: Recall = 0.0277, Jaccard score = 0.0152, loss = 0.3799, val_loss = 0.0000, eval: [7.0 s]
# Iteration 9 fit: [6.6 s]: Recall = 0.0292, Jaccard score = 0.0160, loss = 0.3639, val_loss = 0.0000, eval: [7.1 s]
# Iteration 10 fit: [6.5 s]: Recall = 0.0323, Jaccard score = 0.0177, loss = 0.3469, val_loss = 0.0000, eval: [7.0 s]
# Iteration 11 fit: [6.6 s]: Recall = 0.0332, Jaccard score = 0.0182, loss = 0.3295, val_loss = 0.0000, eval: [7.0 s]
# Iteration 12 fit: [6.6 s]: Recall = 0.0399, Jaccard score = 0.0220, loss = 0.3133, val_loss = 0.0000, eval: [7.0 s]
# Iteration 13 fit: [6.6 s]: Recall = 0.0389, Jaccard score = 0.0214, loss = 0.2978, val_loss = 0.0000, eval: [7.0 s]
# Iteration 14 fit: [6.6 s]: Recall = 0.0440, Jaccard score = 0.0243, loss = 0.2830, val_loss = 0.0000, eval: [7.0 s]
# Iteration 15 fit: [6.6 s]: Recall = 0.0442, Jaccard score = 0.0244, loss = 0.2692, val_loss = 0.0000, eval: [7.0 s]
# Iteration 16 fit: [6.6 s]: Recall = 0.0474, Jaccard score = 0.0263, loss = 0.2551, val_loss = 0.0000, eval: [7.0 s]
# Iteration 17 fit: [6.6 s]: Recall = 0.0499, Jaccard score = 0.0277, loss = 0.2422, val_loss = 0.0000, eval: [7.0 s]
# Iteration 18 fit: [6.6 s]: Recall = 0.0484, Jaccard score = 0.0268, loss = 0.2304, val_loss = 0.0000, eval: [7.0 s]
# Iteration 19 fit: [6.6 s]: Recall = 0.0478, Jaccard score = 0.0265, loss = 0.2194, val_loss = 0.0000, eval: [7.0 s]
# Iteration 20 fit: [6.6 s]: Recall = 0.0501, Jaccard score = 0.0278, loss = 0.2084, val_loss = 0.0000, eval: [7.1 s]
# Iteration 21 fit: [6.5 s]: Recall = 0.0516, Jaccard score = 0.0286, loss = 0.1983, val_loss = 0.0000, eval: [7.1 s]
# Iteration 22 fit: [6.5 s]: Recall = 0.0548, Jaccard score = 0.0305, loss = 0.1877, val_loss = 0.0000, eval: [7.0 s]
# Iteration 23 fit: [6.7 s]: Recall = 0.0528, Jaccard score = 0.0293, loss = 0.1787, val_loss = 0.0000, eval: [7.0 s]
# Iteration 24 fit: [6.5 s]: Recall = 0.0571, Jaccard score = 0.0318, loss = 0.1708, val_loss = 0.0000, eval: [7.4 s]
# Iteration 25 fit: [6.5 s]: Recall = 0.0560, Jaccard score = 0.0311, loss = 0.1627, val_loss = 0.0000, eval: [7.0 s]
# Iteration 26 fit: [6.5 s]: Recall = 0.0573, Jaccard score = 0.0319, loss = 0.1552, val_loss = 0.0000, eval: [7.0 s]
# Iteration 27 fit: [6.6 s]: Recall = 0.0560, Jaccard score = 0.0311, loss = 0.1476, val_loss = 0.0000, eval: [7.1 s]
# Iteration 28 fit: [6.6 s]: Recall = 0.0628, Jaccard score = 0.0351, loss = 0.1414, val_loss = 0.0000, eval: [7.0 s]
# Iteration 29 fit: [6.6 s]: Recall = 0.0617, Jaccard score = 0.0344, loss = 0.1344, val_loss = 0.0000, eval: [7.0 s]
# Iteration 30 fit: [6.6 s]: Recall = 0.0660, Jaccard score = 0.0369, loss = 0.1279, val_loss = 0.0000, eval: [7.0 s]
# Iteration 31 fit: [6.5 s]: Recall = 0.0653, Jaccard score = 0.0365, loss = 0.1232, val_loss = 0.0000, eval: [7.1 s]
# Iteration 32 fit: [6.6 s]: Recall = 0.0611, Jaccard score = 0.0341, loss = 0.1173, val_loss = 0.0000, eval: [7.0 s]
# Iteration 33 fit: [6.5 s]: Recall = 0.0659, Jaccard score = 0.0368, loss = 0.1122, val_loss = 0.0000, eval: [7.0 s]
# Iteration 34 fit: [6.5 s]: Recall = 0.0647, Jaccard score = 0.0362, loss = 0.1086, val_loss = 0.0000, eval: [7.0 s]
# Iteration 35 fit: [6.5 s]: Recall = 0.0636, Jaccard score = 0.0355, loss = 0.1032, val_loss = 0.0000, eval: [7.1 s]
# Iteration 36 fit: [6.6 s]: Recall = 0.0657, Jaccard score = 0.0367, loss = 0.0994, val_loss = 0.0000, eval: [7.0 s]
# Iteration 37 fit: [6.6 s]: Recall = 0.0641, Jaccard score = 0.0358, loss = 0.0953, val_loss = 0.0000, eval: [7.0 s]
# Iteration 38 fit: [6.6 s]: Recall = 0.0645, Jaccard score = 0.0361, loss = 0.0920, val_loss = 0.0000, eval: [7.0 s]
# Iteration 39 fit: [6.5 s]: Recall = 0.0672, Jaccard score = 0.0376, loss = 0.0883, val_loss = 0.0000, eval: [7.0 s]
# Iteration 40 fit: [6.6 s]: Recall = 0.0676, Jaccard score = 0.0378, loss = 0.0852, val_loss = 0.0000, eval: [7.0 s]
# Iteration 41 fit: [6.5 s]: Recall = 0.0670, Jaccard score = 0.0375, loss = 0.0813, val_loss = 0.0000, eval: [7.0 s]
# Iteration 42 fit: [6.6 s]: Recall = 0.0679, Jaccard score = 0.0380, loss = 0.0792, val_loss = 0.0000, eval: [7.0 s]
# Iteration 43 fit: [6.5 s]: Recall = 0.0666, Jaccard score = 0.0373, loss = 0.0757, val_loss = 0.0000, eval: [7.0 s]
# Iteration 44 fit: [6.5 s]: Recall = 0.0660, Jaccard score = 0.0369, loss = 0.0741, val_loss = 0.0000, eval: [7.0 s]
# Iteration 45 fit: [6.5 s]: Recall = 0.0681, Jaccard score = 0.0382, loss = 0.0701, val_loss = 0.0000, eval: [7.0 s]
# Iteration 46 fit: [6.6 s]: Recall = 0.0678, Jaccard score = 0.0379, loss = 0.0688, val_loss = 0.0000, eval: [7.0 s]
# Iteration 47 fit: [6.5 s]: Recall = 0.0723, Jaccard score = 0.0406, loss = 0.0669, val_loss = 0.0000, eval: [7.2 s]
# Iteration 48 fit: [6.6 s]: Recall = 0.0687, Jaccard score = 0.0385, loss = 0.0650, val_loss = 0.0000, eval: [7.0 s]
# Iteration 49 fit: [6.5 s]: Recall = 0.0702, Jaccard score = 0.0394, loss = 0.0626, val_loss = 0.0000, eval: [7.0 s]
# Iteration 50 fit: [6.5 s]: Recall = 0.0716, Jaccard score = 0.0401, loss = 0.0606, val_loss = 0.0000, eval: [7.0 s]
# Iteration 51 fit: [6.6 s]: Recall = 0.0695, Jaccard score = 0.0389, loss = 0.0589, val_loss = 0.0000, eval: [7.0 s]
# Iteration 52 fit: [6.5 s]: Recall = 0.0729, Jaccard score = 0.0409, loss = 0.0577, val_loss = 0.0000, eval: [7.0 s]
# Iteration 53 fit: [6.5 s]: Recall = 0.0721, Jaccard score = 0.0405, loss = 0.0559, val_loss = 0.0000, eval: [7.0 s]
# Iteration 54 fit: [6.6 s]: Recall = 0.0725, Jaccard score = 0.0407, loss = 0.0540, val_loss = 0.0000, eval: [7.0 s]
# Iteration 55 fit: [6.6 s]: Recall = 0.0738, Jaccard score = 0.0415, loss = 0.0528, val_loss = 0.0000, eval: [7.0 s]
# Iteration 56 fit: [6.6 s]: Recall = 0.0719, Jaccard score = 0.0404, loss = 0.0516, val_loss = 0.0000, eval: [7.0 s]
# Iteration 57 fit: [6.6 s]: Recall = 0.0752, Jaccard score = 0.0422, loss = 0.0505, val_loss = 0.0000, eval: [7.0 s]
# Iteration 58 fit: [6.6 s]: Recall = 0.0763, Jaccard score = 0.0429, loss = 0.0486, val_loss = 0.0000, eval: [7.0 s]
# Iteration 59 fit: [6.5 s]: Recall = 0.0757, Jaccard score = 0.0426, loss = 0.0480, val_loss = 0.0000, eval: [7.0 s]
# Iteration 60 fit: [6.6 s]: Recall = 0.0750, Jaccard score = 0.0421, loss = 0.0468, val_loss = 0.0000, eval: [7.0 s]
# Iteration 61 fit: [6.5 s]: Recall = 0.0778, Jaccard score = 0.0438, loss = 0.0459, val_loss = 0.0000, eval: [7.0 s]
# Iteration 62 fit: [6.5 s]: Recall = 0.0752, Jaccard score = 0.0422, loss = 0.0442, val_loss = 0.0000, eval: [7.0 s]
# Iteration 63 fit: [6.6 s]: Recall = 0.0772, Jaccard score = 0.0435, loss = 0.0436, val_loss = 0.0000, eval: [7.0 s]
# Iteration 64 fit: [6.5 s]: Recall = 0.0793, Jaccard score = 0.0447, loss = 0.0424, val_loss = 0.0000, eval: [7.0 s]
# Iteration 65 fit: [6.6 s]: Recall = 0.0837, Jaccard score = 0.0473, loss = 0.0416, val_loss = 0.0000, eval: [7.0 s]
# Iteration 66 fit: [6.6 s]: Recall = 0.0778, Jaccard score = 0.0438, loss = 0.0407, val_loss = 0.0000, eval: [7.0 s]
# Iteration 67 fit: [6.5 s]: Recall = 0.0774, Jaccard score = 0.0436, loss = 0.0398, val_loss = 0.0000, eval: [7.0 s]
# Iteration 68 fit: [6.6 s]: Recall = 0.0803, Jaccard score = 0.0453, loss = 0.0389, val_loss = 0.0000, eval: [7.0 s]
# Iteration 69 fit: [6.6 s]: Recall = 0.0814, Jaccard score = 0.0459, loss = 0.0389, val_loss = 0.0000, eval: [7.0 s]
# Iteration 70 fit: [6.6 s]: Recall = 0.0810, Jaccard score = 0.0457, loss = 0.0376, val_loss = 0.0000, eval: [7.0 s]
# Iteration 71 fit: [6.6 s]: Recall = 0.0820, Jaccard score = 0.0463, loss = 0.0370, val_loss = 0.0000, eval: [7.0 s]
# Iteration 72 fit: [6.6 s]: Recall = 0.0829, Jaccard score = 0.0468, loss = 0.0353, val_loss = 0.0000, eval: [7.0 s]
# Iteration 73 fit: [6.6 s]: Recall = 0.0826, Jaccard score = 0.0466, loss = 0.0361, val_loss = 0.0000, eval: [7.0 s]
# Iteration 74 fit: [6.6 s]: Recall = 0.0827, Jaccard score = 0.0467, loss = 0.0349, val_loss = 0.0000, eval: [7.0 s]
# Iteration 75 fit: [6.6 s]: Recall = 0.0812, Jaccard score = 0.0458, loss = 0.0346, val_loss = 0.0000, eval: [7.0 s]
# Iteration 76 fit: [6.6 s]: Recall = 0.0822, Jaccard score = 0.0464, loss = 0.0337, val_loss = 0.0000, eval: [7.0 s]
# Iteration 77 fit: [6.6 s]: Recall = 0.0807, Jaccard score = 0.0455, loss = 0.0333, val_loss = 0.0000, eval: [7.0 s]
# Iteration 78 fit: [6.6 s]: Recall = 0.0812, Jaccard score = 0.0458, loss = 0.0323, val_loss = 0.0000, eval: [7.0 s]
# Iteration 79 fit: [6.6 s]: Recall = 0.0854, Jaccard score = 0.0483, loss = 0.0323, val_loss = 0.0000, eval: [7.0 s]
# Iteration 80 fit: [6.6 s]: Recall = 0.0854, Jaccard score = 0.0483, loss = 0.0322, val_loss = 0.0000, eval: [7.0 s]
# Iteration 81 fit: [6.6 s]: Recall = 0.0846, Jaccard score = 0.0478, loss = 0.0313, val_loss = 0.0000, eval: [7.0 s]
# Iteration 82 fit: [6.6 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0308, val_loss = 0.0000, eval: [7.0 s]
# Iteration 83 fit: [6.6 s]: Recall = 0.0829, Jaccard score = 0.0468, loss = 0.0299, val_loss = 0.0000, eval: [7.0 s]
# Iteration 84 fit: [6.6 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0301, val_loss = 0.0000, eval: [7.0 s]
# Iteration 85 fit: [6.6 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0293, val_loss = 0.0000, eval: [7.0 s]
# Iteration 86 fit: [6.6 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0292, val_loss = 0.0000, eval: [7.0 s]
# Iteration 87 fit: [6.6 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0285, val_loss = 0.0000, eval: [7.0 s]
# Iteration 88 fit: [6.6 s]: Recall = 0.0850, Jaccard score = 0.0481, loss = 0.0281, val_loss = 0.0000, eval: [7.0 s]
# Iteration 89 fit: [6.6 s]: Recall = 0.0827, Jaccard score = 0.0467, loss = 0.0284, val_loss = 0.0000, eval: [7.0 s]
# Iteration 90 fit: [6.6 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0272, val_loss = 0.0000, eval: [7.0 s]
# Iteration 91 fit: [6.6 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0267, val_loss = 0.0000, eval: [7.0 s]
# Iteration 92 fit: [6.6 s]: Recall = 0.0873, Jaccard score = 0.0494, loss = 0.0266, val_loss = 0.0000, eval: [7.0 s]
# Iteration 93 fit: [6.6 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0263, val_loss = 0.0000, eval: [7.0 s]
# Iteration 94 fit: [6.6 s]: Recall = 0.0875, Jaccard score = 0.0495, loss = 0.0268, val_loss = 0.0000, eval: [7.0 s]
# Iteration 95 fit: [6.6 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0258, val_loss = 0.0000, eval: [7.0 s]
# Iteration 96 fit: [6.6 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0252, val_loss = 0.0000, eval: [7.3 s]
# Iteration 97 fit: [6.6 s]: Recall = 0.0871, Jaccard score = 0.0493, loss = 0.0249, val_loss = 0.0000, eval: [7.0 s]
# Iteration 98 fit: [6.6 s]: Recall = 0.0875, Jaccard score = 0.0495, loss = 0.0246, val_loss = 0.0000, eval: [7.0 s]
# Iteration 99 fit: [6.6 s]: Recall = 0.0867, Jaccard score = 0.0491, loss = 0.0247, val_loss = 0.0000, eval: [7.0 s]
# End. Best Iteration 94:  Recall = 0.0875, Jaccard score = 0.0495. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128]_1560957207.h5


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1560959183.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1560959183.h5
# Load data done [2.0 s]. #user=18000, #item=985, #train=135566, #test=18000
# Init: Recall = 0.0031, Jaccard score = 0.0017
# Iteration 0 fit: [7.1 s]: Recall = 0.0260, Jaccard score = 0.0141, loss = 0.4537, val_loss = 0.0000, eval: [7.0 s]
# Iteration 1 fit: [6.7 s]: Recall = 0.0254, Jaccard score = 0.0138, loss = 0.4388, val_loss = 0.0000, eval: [7.0 s]
# Iteration 2 fit: [6.7 s]: Recall = 0.0270, Jaccard score = 0.0146, loss = 0.4359, val_loss = 0.0000, eval: [7.0 s]
# Iteration 3 fit: [6.7 s]: Recall = 0.0256, Jaccard score = 0.0139, loss = 0.4332, val_loss = 0.0000, eval: [7.1 s]
# Iteration 4 fit: [6.7 s]: Recall = 0.0225, Jaccard score = 0.0122, loss = 0.4278, val_loss = 0.0000, eval: [7.1 s]
# Iteration 5 fit: [6.7 s]: Recall = 0.0254, Jaccard score = 0.0138, loss = 0.4194, val_loss = 0.0000, eval: [7.0 s]
# Iteration 6 fit: [6.7 s]: Recall = 0.0260, Jaccard score = 0.0141, loss = 0.4075, val_loss = 0.0000, eval: [7.1 s]
# Iteration 7 fit: [6.7 s]: Recall = 0.0245, Jaccard score = 0.0132, loss = 0.3934, val_loss = 0.0000, eval: [7.0 s]
# Iteration 8 fit: [6.7 s]: Recall = 0.0237, Jaccard score = 0.0128, loss = 0.3774, val_loss = 0.0000, eval: [7.1 s]
# Iteration 9 fit: [6.7 s]: Recall = 0.0254, Jaccard score = 0.0138, loss = 0.3606, val_loss = 0.0000, eval: [7.1 s]
# Iteration 10 fit: [6.7 s]: Recall = 0.0237, Jaccard score = 0.0128, loss = 0.3436, val_loss = 0.0000, eval: [7.1 s]
# Iteration 11 fit: [6.7 s]: Recall = 0.0268, Jaccard score = 0.0145, loss = 0.3275, val_loss = 0.0000, eval: [7.0 s]
# Iteration 12 fit: [6.7 s]: Recall = 0.0326, Jaccard score = 0.0177, loss = 0.3113, val_loss = 0.0000, eval: [7.0 s]
# Iteration 13 fit: [6.7 s]: Recall = 0.0324, Jaccard score = 0.0176, loss = 0.2954, val_loss = 0.0000, eval: [7.0 s]
# Iteration 14 fit: [6.7 s]: Recall = 0.0352, Jaccard score = 0.0191, loss = 0.2808, val_loss = 0.0000, eval: [7.2 s]
# Iteration 15 fit: [6.7 s]: Recall = 0.0379, Jaccard score = 0.0206, loss = 0.2674, val_loss = 0.0000, eval: [7.1 s]
# Iteration 16 fit: [6.7 s]: Recall = 0.0404, Jaccard score = 0.0220, loss = 0.2538, val_loss = 0.0000, eval: [7.0 s]
# Iteration 17 fit: [6.7 s]: Recall = 0.0387, Jaccard score = 0.0211, loss = 0.2413, val_loss = 0.0000, eval: [7.0 s]
# Iteration 18 fit: [6.7 s]: Recall = 0.0414, Jaccard score = 0.0226, loss = 0.2292, val_loss = 0.0000, eval: [7.0 s]
# Iteration 19 fit: [6.7 s]: Recall = 0.0443, Jaccard score = 0.0242, loss = 0.2177, val_loss = 0.0000, eval: [7.1 s]
# Iteration 20 fit: [6.7 s]: Recall = 0.0451, Jaccard score = 0.0246, loss = 0.2070, val_loss = 0.0000, eval: [7.1 s]
# Iteration 21 fit: [6.7 s]: Recall = 0.0425, Jaccard score = 0.0232, loss = 0.1964, val_loss = 0.0000, eval: [7.0 s]
# Iteration 22 fit: [6.7 s]: Recall = 0.0474, Jaccard score = 0.0259, loss = 0.1868, val_loss = 0.0000, eval: [7.0 s]
# Iteration 23 fit: [6.7 s]: Recall = 0.0507, Jaccard score = 0.0278, loss = 0.1773, val_loss = 0.0000, eval: [7.1 s]
# Iteration 24 fit: [6.7 s]: Recall = 0.0519, Jaccard score = 0.0285, loss = 0.1684, val_loss = 0.0000, eval: [7.0 s]
# Iteration 25 fit: [6.7 s]: Recall = 0.0505, Jaccard score = 0.0277, loss = 0.1603, val_loss = 0.0000, eval: [7.1 s]
# Iteration 26 fit: [6.7 s]: Recall = 0.0521, Jaccard score = 0.0286, loss = 0.1523, val_loss = 0.0000, eval: [7.0 s]
# Iteration 27 fit: [6.7 s]: Recall = 0.0528, Jaccard score = 0.0290, loss = 0.1459, val_loss = 0.0000, eval: [7.1 s]
# Iteration 28 fit: [6.7 s]: Recall = 0.0550, Jaccard score = 0.0302, loss = 0.1385, val_loss = 0.0000, eval: [7.1 s]
# Iteration 29 fit: [6.7 s]: Recall = 0.0554, Jaccard score = 0.0304, loss = 0.1320, val_loss = 0.0000, eval: [7.1 s]
# Iteration 30 fit: [6.7 s]: Recall = 0.0517, Jaccard score = 0.0284, loss = 0.1259, val_loss = 0.0000, eval: [7.1 s]
# Iteration 31 fit: [6.7 s]: Recall = 0.0559, Jaccard score = 0.0308, loss = 0.1200, val_loss = 0.0000, eval: [7.0 s]
# Iteration 32 fit: [6.7 s]: Recall = 0.0571, Jaccard score = 0.0314, loss = 0.1147, val_loss = 0.0000, eval: [7.1 s]
# Iteration 33 fit: [6.7 s]: Recall = 0.0583, Jaccard score = 0.0321, loss = 0.1097, val_loss = 0.0000, eval: [7.0 s]
# Iteration 34 fit: [6.7 s]: Recall = 0.0554, Jaccard score = 0.0304, loss = 0.1050, val_loss = 0.0000, eval: [7.0 s]
# Iteration 35 fit: [6.7 s]: Recall = 0.0550, Jaccard score = 0.0302, loss = 0.1010, val_loss = 0.0000, eval: [7.1 s]
# Iteration 36 fit: [6.7 s]: Recall = 0.0604, Jaccard score = 0.0333, loss = 0.0967, val_loss = 0.0000, eval: [7.1 s]
# Iteration 37 fit: [6.7 s]: Recall = 0.0587, Jaccard score = 0.0323, loss = 0.0912, val_loss = 0.0000, eval: [7.0 s]
# Iteration 38 fit: [6.7 s]: Recall = 0.0610, Jaccard score = 0.0336, loss = 0.0885, val_loss = 0.0000, eval: [7.0 s]
# Iteration 39 fit: [6.7 s]: Recall = 0.0606, Jaccard score = 0.0334, loss = 0.0854, val_loss = 0.0000, eval: [7.0 s]
# Iteration 40 fit: [6.7 s]: Recall = 0.0633, Jaccard score = 0.0350, loss = 0.0817, val_loss = 0.0000, eval: [7.0 s]
# Iteration 41 fit: [6.7 s]: Recall = 0.0643, Jaccard score = 0.0355, loss = 0.0798, val_loss = 0.0000, eval: [7.0 s]
# Iteration 42 fit: [6.7 s]: Recall = 0.0616, Jaccard score = 0.0340, loss = 0.0762, val_loss = 0.0000, eval: [7.0 s]
# Iteration 43 fit: [6.7 s]: Recall = 0.0604, Jaccard score = 0.0333, loss = 0.0734, val_loss = 0.0000, eval: [7.0 s]
# Iteration 44 fit: [6.7 s]: Recall = 0.0629, Jaccard score = 0.0347, loss = 0.0708, val_loss = 0.0000, eval: [7.0 s]
# Iteration 45 fit: [6.7 s]: Recall = 0.0639, Jaccard score = 0.0353, loss = 0.0681, val_loss = 0.0000, eval: [7.0 s]
# Iteration 46 fit: [6.7 s]: Recall = 0.0655, Jaccard score = 0.0362, loss = 0.0667, val_loss = 0.0000, eval: [7.0 s]
# Iteration 47 fit: [6.7 s]: Recall = 0.0662, Jaccard score = 0.0366, loss = 0.0645, val_loss = 0.0000, eval: [7.0 s]
# Iteration 48 fit: [6.7 s]: Recall = 0.0660, Jaccard score = 0.0365, loss = 0.0631, val_loss = 0.0000, eval: [7.0 s]
# Iteration 49 fit: [6.7 s]: Recall = 0.0676, Jaccard score = 0.0374, loss = 0.0600, val_loss = 0.0000, eval: [7.0 s]
# Iteration 50 fit: [6.7 s]: Recall = 0.0641, Jaccard score = 0.0354, loss = 0.0583, val_loss = 0.0000, eval: [7.0 s]
# Iteration 51 fit: [6.7 s]: Recall = 0.0660, Jaccard score = 0.0365, loss = 0.0570, val_loss = 0.0000, eval: [7.0 s]
# Iteration 52 fit: [6.7 s]: Recall = 0.0688, Jaccard score = 0.0381, loss = 0.0551, val_loss = 0.0000, eval: [7.1 s]
# Iteration 53 fit: [6.7 s]: Recall = 0.0684, Jaccard score = 0.0379, loss = 0.0538, val_loss = 0.0000, eval: [7.0 s]
# Iteration 54 fit: [6.7 s]: Recall = 0.0676, Jaccard score = 0.0374, loss = 0.0522, val_loss = 0.0000, eval: [7.0 s]
# Iteration 55 fit: [6.7 s]: Recall = 0.0659, Jaccard score = 0.0364, loss = 0.0511, val_loss = 0.0000, eval: [7.0 s]
# Iteration 56 fit: [6.7 s]: Recall = 0.0682, Jaccard score = 0.0378, loss = 0.0495, val_loss = 0.0000, eval: [7.0 s]
# Iteration 57 fit: [6.7 s]: Recall = 0.0664, Jaccard score = 0.0368, loss = 0.0483, val_loss = 0.0000, eval: [7.0 s]
# Iteration 58 fit: [6.7 s]: Recall = 0.0680, Jaccard score = 0.0376, loss = 0.0469, val_loss = 0.0000, eval: [7.0 s]
# Iteration 59 fit: [6.7 s]: Recall = 0.0678, Jaccard score = 0.0375, loss = 0.0456, val_loss = 0.0000, eval: [7.0 s]
# Iteration 60 fit: [6.7 s]: Recall = 0.0676, Jaccard score = 0.0374, loss = 0.0447, val_loss = 0.0000, eval: [7.1 s]
# Iteration 61 fit: [6.7 s]: Recall = 0.0682, Jaccard score = 0.0378, loss = 0.0438, val_loss = 0.0000, eval: [7.0 s]
# Iteration 62 fit: [6.7 s]: Recall = 0.0682, Jaccard score = 0.0378, loss = 0.0424, val_loss = 0.0000, eval: [7.1 s]
# Iteration 63 fit: [6.7 s]: Recall = 0.0686, Jaccard score = 0.0380, loss = 0.0424, val_loss = 0.0000, eval: [7.0 s]
# Iteration 64 fit: [6.7 s]: Recall = 0.0705, Jaccard score = 0.0391, loss = 0.0415, val_loss = 0.0000, eval: [7.1 s]
# Iteration 65 fit: [6.7 s]: Recall = 0.0713, Jaccard score = 0.0395, loss = 0.0409, val_loss = 0.0000, eval: [7.0 s]
# Iteration 66 fit: [6.7 s]: Recall = 0.0686, Jaccard score = 0.0380, loss = 0.0397, val_loss = 0.0000, eval: [7.0 s]
# Iteration 67 fit: [6.7 s]: Recall = 0.0695, Jaccard score = 0.0385, loss = 0.0387, val_loss = 0.0000, eval: [7.3 s]
# Iteration 68 fit: [6.7 s]: Recall = 0.0713, Jaccard score = 0.0395, loss = 0.0379, val_loss = 0.0000, eval: [7.0 s]
# Iteration 69 fit: [6.7 s]: Recall = 0.0721, Jaccard score = 0.0400, loss = 0.0369, val_loss = 0.0000, eval: [7.0 s]
# Iteration 70 fit: [6.7 s]: Recall = 0.0711, Jaccard score = 0.0394, loss = 0.0370, val_loss = 0.0000, eval: [7.0 s]
# Iteration 71 fit: [6.7 s]: Recall = 0.0719, Jaccard score = 0.0399, loss = 0.0356, val_loss = 0.0000, eval: [7.0 s]
# Iteration 72 fit: [6.7 s]: Recall = 0.0744, Jaccard score = 0.0413, loss = 0.0353, val_loss = 0.0000, eval: [7.0 s]
# Iteration 73 fit: [6.7 s]: Recall = 0.0707, Jaccard score = 0.0392, loss = 0.0345, val_loss = 0.0000, eval: [7.0 s]
# Iteration 74 fit: [6.7 s]: Recall = 0.0740, Jaccard score = 0.0411, loss = 0.0332, val_loss = 0.0000, eval: [7.0 s]
# Iteration 75 fit: [6.7 s]: Recall = 0.0789, Jaccard score = 0.0439, loss = 0.0335, val_loss = 0.0000, eval: [7.0 s]
# Iteration 76 fit: [6.7 s]: Recall = 0.0754, Jaccard score = 0.0419, loss = 0.0325, val_loss = 0.0000, eval: [7.1 s]
# Iteration 77 fit: [6.7 s]: Recall = 0.0742, Jaccard score = 0.0412, loss = 0.0323, val_loss = 0.0000, eval: [7.0 s]
# Iteration 78 fit: [6.7 s]: Recall = 0.0763, Jaccard score = 0.0425, loss = 0.0319, val_loss = 0.0000, eval: [7.1 s]
# Iteration 79 fit: [6.7 s]: Recall = 0.0734, Jaccard score = 0.0408, loss = 0.0320, val_loss = 0.0000, eval: [7.1 s]
# Iteration 80 fit: [6.7 s]: Recall = 0.0793, Jaccard score = 0.0442, loss = 0.0305, val_loss = 0.0000, eval: [7.1 s]
# Iteration 81 fit: [6.7 s]: Recall = 0.0791, Jaccard score = 0.0440, loss = 0.0302, val_loss = 0.0000, eval: [7.0 s]
# Iteration 82 fit: [6.7 s]: Recall = 0.0787, Jaccard score = 0.0438, loss = 0.0303, val_loss = 0.0000, eval: [7.1 s]
# Iteration 83 fit: [6.7 s]: Recall = 0.0789, Jaccard score = 0.0439, loss = 0.0298, val_loss = 0.0000, eval: [7.0 s]
# Iteration 84 fit: [6.7 s]: Recall = 0.0760, Jaccard score = 0.0422, loss = 0.0292, val_loss = 0.0000, eval: [7.1 s]
# Iteration 85 fit: [6.7 s]: Recall = 0.0760, Jaccard score = 0.0422, loss = 0.0283, val_loss = 0.0000, eval: [7.0 s]
# Iteration 86 fit: [6.7 s]: Recall = 0.0765, Jaccard score = 0.0426, loss = 0.0285, val_loss = 0.0000, eval: [7.0 s]
# Iteration 87 fit: [6.7 s]: Recall = 0.0752, Jaccard score = 0.0418, loss = 0.0275, val_loss = 0.0000, eval: [7.0 s]
# Iteration 88 fit: [6.7 s]: Recall = 0.0748, Jaccard score = 0.0416, loss = 0.0277, val_loss = 0.0000, eval: [7.0 s]
# Iteration 89 fit: [6.7 s]: Recall = 0.0728, Jaccard score = 0.0404, loss = 0.0271, val_loss = 0.0000, eval: [7.0 s]
# Iteration 90 fit: [6.7 s]: Recall = 0.0756, Jaccard score = 0.0420, loss = 0.0266, val_loss = 0.0000, eval: [7.0 s]
# Iteration 91 fit: [6.7 s]: Recall = 0.0742, Jaccard score = 0.0412, loss = 0.0265, val_loss = 0.0000, eval: [7.0 s]
# Iteration 92 fit: [6.7 s]: Recall = 0.0758, Jaccard score = 0.0421, loss = 0.0258, val_loss = 0.0000, eval: [7.3 s]
# Iteration 93 fit: [6.7 s]: Recall = 0.0779, Jaccard score = 0.0434, loss = 0.0257, val_loss = 0.0000, eval: [7.1 s]
# Iteration 94 fit: [6.7 s]: Recall = 0.0736, Jaccard score = 0.0409, loss = 0.0256, val_loss = 0.0000, eval: [7.0 s]
# Iteration 95 fit: [6.7 s]: Recall = 0.0773, Jaccard score = 0.0430, loss = 0.0254, val_loss = 0.0000, eval: [7.0 s]
# Iteration 96 fit: [6.7 s]: Recall = 0.0756, Jaccard score = 0.0420, loss = 0.0255, val_loss = 0.0000, eval: [7.0 s]
# Iteration 97 fit: [6.7 s]: Recall = 0.0744, Jaccard score = 0.0413, loss = 0.0253, val_loss = 0.0000, eval: [7.1 s]
# Iteration 98 fit: [6.7 s]: Recall = 0.0746, Jaccard score = 0.0415, loss = 0.0247, val_loss = 0.0000, eval: [7.1 s]
# Iteration 99 fit: [6.7 s]: Recall = 0.0744, Jaccard score = 0.0413, loss = 0.0242, val_loss = 0.0000, eval: [7.0 s]
# End. Best Iteration 80:  Recall = 0.0793, Jaccard score = 0.0442. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128]_1560959183.h5
