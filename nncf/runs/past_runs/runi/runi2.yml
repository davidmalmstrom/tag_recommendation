--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "120"
--num_factors: "64"
--num_k_folds: "10"


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=120, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_k_folds=10, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1561386812.h5
--weights_path: Pretrain/_GMF_64_[64,32,16,8]_1561386812.h5
# Load data done [2.1 s]. #user=20000, #item=985, #train=142138, #test=20000
# 
# Performing k-fold 1
# Init: Recall = 0.0030, Jaccard score = 0.0010
# Iteration 0 fit: [7.5 s]: Recall = 0.0033, Jaccard score = 0.0011, loss = 0.5439, val_loss = 0.0000, eval: [8.7 s]
# Iteration 1 fit: [7.1 s]: Recall = 0.0020, Jaccard score = 0.0007, loss = 0.5007, val_loss = 0.0000, eval: [8.7 s]
# Iteration 2 fit: [7.1 s]: Recall = 0.0033, Jaccard score = 0.0011, loss = 0.5002, val_loss = 0.0000, eval: [8.8 s]
# Iteration 3 fit: [7.1 s]: Recall = 0.0010, Jaccard score = 0.0003, loss = 0.4982, val_loss = 0.0000, eval: [8.7 s]
# Iteration 4 fit: [7.1 s]: Recall = 0.0033, Jaccard score = 0.0011, loss = 0.4935, val_loss = 0.0000, eval: [8.8 s]
# Iteration 5 fit: [7.1 s]: Recall = 0.0043, Jaccard score = 0.0014, loss = 0.4845, val_loss = 0.0000, eval: [8.8 s]
# Iteration 6 fit: [7.1 s]: Recall = 0.0053, Jaccard score = 0.0018, loss = 0.4708, val_loss = 0.0000, eval: [8.8 s]
# Iteration 7 fit: [7.1 s]: Recall = 0.0093, Jaccard score = 0.0031, loss = 0.4523, val_loss = 0.0000, eval: [8.8 s]
# Iteration 8 fit: [7.1 s]: Recall = 0.0093, Jaccard score = 0.0031, loss = 0.4283, val_loss = 0.0000, eval: [8.8 s]
# Iteration 9 fit: [7.1 s]: Recall = 0.0127, Jaccard score = 0.0042, loss = 0.4008, val_loss = 0.0000, eval: [8.8 s]
# Iteration 10 fit: [7.1 s]: Recall = 0.0143, Jaccard score = 0.0048, loss = 0.3727, val_loss = 0.0000, eval: [8.8 s]
# Iteration 11 fit: [7.1 s]: Recall = 0.0150, Jaccard score = 0.0050, loss = 0.3436, val_loss = 0.0000, eval: [8.8 s]
# Iteration 12 fit: [7.1 s]: Recall = 0.0163, Jaccard score = 0.0055, loss = 0.3158, val_loss = 0.0000, eval: [8.8 s]
# Iteration 13 fit: [7.1 s]: Recall = 0.0173, Jaccard score = 0.0058, loss = 0.2896, val_loss = 0.0000, eval: [8.8 s]
# Iteration 14 fit: [7.1 s]: Recall = 0.0183, Jaccard score = 0.0062, loss = 0.2663, val_loss = 0.0000, eval: [8.8 s]
# Iteration 15 fit: [7.1 s]: Recall = 0.0183, Jaccard score = 0.0062, loss = 0.2435, val_loss = 0.0000, eval: [8.8 s]
# Iteration 16 fit: [7.1 s]: Recall = 0.0190, Jaccard score = 0.0064, loss = 0.2225, val_loss = 0.0000, eval: [8.8 s]
# Iteration 17 fit: [7.1 s]: Recall = 0.0227, Jaccard score = 0.0076, loss = 0.2042, val_loss = 0.0000, eval: [8.8 s]
# Iteration 18 fit: [7.1 s]: Recall = 0.0213, Jaccard score = 0.0072, loss = 0.1854, val_loss = 0.0000, eval: [8.8 s]
# Iteration 19 fit: [7.1 s]: Recall = 0.0237, Jaccard score = 0.0080, loss = 0.1700, val_loss = 0.0000, eval: [8.8 s]
# Iteration 20 fit: [7.1 s]: Recall = 0.0220, Jaccard score = 0.0074, loss = 0.1544, val_loss = 0.0000, eval: [8.8 s]
# Iteration 21 fit: [7.1 s]: Recall = 0.0227, Jaccard score = 0.0076, loss = 0.1401, val_loss = 0.0000, eval: [8.7 s]
# Iteration 22 fit: [7.1 s]: Recall = 0.0237, Jaccard score = 0.0080, loss = 0.1282, val_loss = 0.0000, eval: [8.8 s]
# Iteration 23 fit: [7.1 s]: Recall = 0.0233, Jaccard score = 0.0078, loss = 0.1158, val_loss = 0.0000, eval: [8.8 s]
# Iteration 24 fit: [7.1 s]: Recall = 0.0254, Jaccard score = 0.0085, loss = 0.1059, val_loss = 0.0000, eval: [8.7 s]
# Iteration 25 fit: [7.1 s]: Recall = 0.0250, Jaccard score = 0.0084, loss = 0.0965, val_loss = 0.0000, eval: [8.8 s]
# Iteration 26 fit: [7.1 s]: Recall = 0.0247, Jaccard score = 0.0083, loss = 0.0879, val_loss = 0.0000, eval: [8.8 s]
# Iteration 27 fit: [7.1 s]: Recall = 0.0270, Jaccard score = 0.0091, loss = 0.0805, val_loss = 0.0000, eval: [8.8 s]
# Iteration 28 fit: [7.1 s]: Recall = 0.0284, Jaccard score = 0.0095, loss = 0.0729, val_loss = 0.0000, eval: [8.7 s]
# Iteration 29 fit: [7.1 s]: Recall = 0.0264, Jaccard score = 0.0089, loss = 0.0667, val_loss = 0.0000, eval: [8.8 s]
# Iteration 30 fit: [7.1 s]: Recall = 0.0294, Jaccard score = 0.0099, loss = 0.0609, val_loss = 0.0000, eval: [8.8 s]
# Iteration 31 fit: [7.1 s]: Recall = 0.0300, Jaccard score = 0.0101, loss = 0.0556, val_loss = 0.0000, eval: [8.8 s]
# Iteration 32 fit: [7.1 s]: Recall = 0.0320, Jaccard score = 0.0108, loss = 0.0518, val_loss = 0.0000, eval: [8.7 s]
# Iteration 33 fit: [7.1 s]: Recall = 0.0340, Jaccard score = 0.0115, loss = 0.0476, val_loss = 0.0000, eval: [8.8 s]
# Iteration 34 fit: [7.1 s]: Recall = 0.0330, Jaccard score = 0.0111, loss = 0.0439, val_loss = 0.0000, eval: [8.7 s]
# Iteration 35 fit: [7.1 s]: Recall = 0.0340, Jaccard score = 0.0115, loss = 0.0410, val_loss = 0.0000, eval: [8.8 s]
# Iteration 36 fit: [7.1 s]: Recall = 0.0370, Jaccard score = 0.0125, loss = 0.0385, val_loss = 0.0000, eval: [8.8 s]
# Iteration 37 fit: [7.1 s]: Recall = 0.0394, Jaccard score = 0.0133, loss = 0.0349, val_loss = 0.0000, eval: [8.7 s]
# Iteration 38 fit: [7.1 s]: Recall = 0.0404, Jaccard score = 0.0136, loss = 0.0331, val_loss = 0.0000, eval: [8.8 s]
# Iteration 39 fit: [7.1 s]: Recall = 0.0400, Jaccard score = 0.0135, loss = 0.0304, val_loss = 0.0000, eval: [8.8 s]
# Iteration 40 fit: [7.1 s]: Recall = 0.0414, Jaccard score = 0.0140, loss = 0.0282, val_loss = 0.0000, eval: [8.7 s]
# Iteration 41 fit: [7.1 s]: Recall = 0.0440, Jaccard score = 0.0149, loss = 0.0267, val_loss = 0.0000, eval: [8.8 s]
# Iteration 42 fit: [7.1 s]: Recall = 0.0450, Jaccard score = 0.0152, loss = 0.0255, val_loss = 0.0000, eval: [8.8 s]
# Iteration 43 fit: [7.1 s]: Recall = 0.0484, Jaccard score = 0.0164, loss = 0.0239, val_loss = 0.0000, eval: [8.8 s]
# Iteration 44 fit: [7.1 s]: Recall = 0.0467, Jaccard score = 0.0158, loss = 0.0225, val_loss = 0.0000, eval: [8.8 s]
# Iteration 45 fit: [7.1 s]: Recall = 0.0500, Jaccard score = 0.0170, loss = 0.0209, val_loss = 0.0000, eval: [8.7 s]
# Iteration 46 fit: [7.1 s]: Recall = 0.0530, Jaccard score = 0.0180, loss = 0.0195, val_loss = 0.0000, eval: [8.8 s]
# Iteration 47 fit: [7.1 s]: Recall = 0.0550, Jaccard score = 0.0187, loss = 0.0190, val_loss = 0.0000, eval: [8.7 s]
# Iteration 48 fit: [7.1 s]: Recall = 0.0537, Jaccard score = 0.0182, loss = 0.0188, val_loss = 0.0000, eval: [8.7 s]
# Iteration 49 fit: [7.1 s]: Recall = 0.0557, Jaccard score = 0.0189, loss = 0.0176, val_loss = 0.0000, eval: [8.8 s]
# Iteration 50 fit: [7.1 s]: Recall = 0.0570, Jaccard score = 0.0194, loss = 0.0164, val_loss = 0.0000, eval: [8.8 s]
# Iteration 51 fit: [7.1 s]: Recall = 0.0590, Jaccard score = 0.0201, loss = 0.0160, val_loss = 0.0000, eval: [8.8 s]
# Iteration 52 fit: [7.1 s]: Recall = 0.0594, Jaccard score = 0.0202, loss = 0.0150, val_loss = 0.0000, eval: [8.8 s]
# Iteration 53 fit: [7.1 s]: Recall = 0.0590, Jaccard score = 0.0201, loss = 0.0148, val_loss = 0.0000, eval: [8.8 s]
# Iteration 54 fit: [7.1 s]: Recall = 0.0614, Jaccard score = 0.0209, loss = 0.0141, val_loss = 0.0000, eval: [8.8 s]
# Iteration 55 fit: [7.1 s]: Recall = 0.0620, Jaccard score = 0.0211, loss = 0.0137, val_loss = 0.0000, eval: [8.8 s]
# Iteration 56 fit: [7.2 s]: Recall = 0.0644, Jaccard score = 0.0219, loss = 0.0132, val_loss = 0.0000, eval: [8.7 s]
# Iteration 57 fit: [7.3 s]: Recall = 0.0634, Jaccard score = 0.0216, loss = 0.0125, val_loss = 0.0000, eval: [11.8 s]
# Iteration 58 fit: [8.4 s]: Recall = 0.0660, Jaccard score = 0.0225, loss = 0.0120, val_loss = 0.0000, eval: [9.1 s]
# Iteration 59 fit: [7.6 s]: Recall = 0.0664, Jaccard score = 0.0226, loss = 0.0117, val_loss = 0.0000, eval: [9.5 s]
# Iteration 60 fit: [8.2 s]: Recall = 0.0680, Jaccard score = 0.0232, loss = 0.0111, val_loss = 0.0000, eval: [12.1 s]
# Iteration 61 fit: [7.6 s]: Recall = 0.0694, Jaccard score = 0.0237, loss = 0.0108, val_loss = 0.0000, eval: [8.8 s]
# Iteration 62 fit: [7.1 s]: Recall = 0.0690, Jaccard score = 0.0235, loss = 0.0101, val_loss = 0.0000, eval: [8.8 s]
# Iteration 63 fit: [7.1 s]: Recall = 0.0704, Jaccard score = 0.0240, loss = 0.0100, val_loss = 0.0000, eval: [8.8 s]
# Iteration 64 fit: [7.1 s]: Recall = 0.0720, Jaccard score = 0.0246, loss = 0.0098, val_loss = 0.0000, eval: [8.8 s]
# Iteration 65 fit: [8.3 s]: Recall = 0.0747, Jaccard score = 0.0255, loss = 0.0093, val_loss = 0.0000, eval: [11.8 s]
# Iteration 66 fit: [7.9 s]: Recall = 0.0727, Jaccard score = 0.0248, loss = 0.0093, val_loss = 0.0000, eval: [8.8 s]
# Iteration 67 fit: [7.1 s]: Recall = 0.0751, Jaccard score = 0.0256, loss = 0.0092, val_loss = 0.0000, eval: [8.8 s]
# Iteration 68 fit: [7.1 s]: Recall = 0.0734, Jaccard score = 0.0251, loss = 0.0087, val_loss = 0.0000, eval: [8.8 s]
# Iteration 69 fit: [7.1 s]: Recall = 0.0761, Jaccard score = 0.0260, loss = 0.0086, val_loss = 0.0000, eval: [8.7 s]
# Iteration 70 fit: [7.1 s]: Recall = 0.0784, Jaccard score = 0.0268, loss = 0.0083, val_loss = 0.0000, eval: [8.7 s]
# Iteration 71 fit: [7.1 s]: Recall = 0.0781, Jaccard score = 0.0267, loss = 0.0083, val_loss = 0.0000, eval: [8.8 s]
# Iteration 72 fit: [7.1 s]: Recall = 0.0791, Jaccard score = 0.0271, loss = 0.0080, val_loss = 0.0000, eval: [8.8 s]
# Iteration 73 fit: [7.1 s]: Recall = 0.0774, Jaccard score = 0.0265, loss = 0.0076, val_loss = 0.0000, eval: [8.7 s]
# Iteration 74 fit: [7.1 s]: Recall = 0.0774, Jaccard score = 0.0265, loss = 0.0074, val_loss = 0.0000, eval: [8.8 s]
# Iteration 75 fit: [7.1 s]: Recall = 0.0784, Jaccard score = 0.0268, loss = 0.0072, val_loss = 0.0000, eval: [8.8 s]
# Iteration 76 fit: [7.1 s]: Recall = 0.0787, Jaccard score = 0.0269, loss = 0.0074, val_loss = 0.0000, eval: [8.8 s]
# Iteration 77 fit: [7.1 s]: Recall = 0.0794, Jaccard score = 0.0272, loss = 0.0069, val_loss = 0.0000, eval: [8.8 s]
# Iteration 78 fit: [7.1 s]: Recall = 0.0794, Jaccard score = 0.0272, loss = 0.0067, val_loss = 0.0000, eval: [8.9 s]
# Iteration 79 fit: [7.2 s]: Recall = 0.0801, Jaccard score = 0.0274, loss = 0.0065, val_loss = 0.0000, eval: [8.8 s]
