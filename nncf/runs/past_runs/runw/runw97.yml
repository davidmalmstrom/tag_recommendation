--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,150]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,150]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,150]_1566824616.h5
--weights_path: Pretrain/_MLP_8_[512,150]_1566824616.h5
# Load data done [2.0 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0262, Jaccard score = 0.0158
# Iteration 0 fit: [48.7 s]: Recall = 0.2370, Jaccard score = 0.1637, loss = 0.4224, gradient norm = 0.2597, eval: [8.7 s]
# Iteration 1 fit: [33.7 s]: Recall = 0.2645, Jaccard score = 0.1861, loss = 0.3782, gradient norm = 0.1941, eval: [9.0 s]
# Iteration 2 fit: [33.0 s]: Recall = 0.2775, Jaccard score = 0.1971, loss = 0.3566, gradient norm = 0.1759, eval: [8.8 s]
# Iteration 3 fit: [32.8 s]: Recall = 0.2811, Jaccard score = 0.2002, loss = 0.3355, gradient norm = 0.1701, eval: [8.9 s]
# Iteration 4 fit: [32.4 s]: Recall = 0.2947, Jaccard score = 0.2119, loss = 0.3146, gradient norm = 0.1716, eval: [8.7 s]
# Iteration 5 fit: [32.8 s]: Recall = 0.3026, Jaccard score = 0.2188, loss = 0.2949, gradient norm = 0.1748, eval: [8.8 s]
# Iteration 6 fit: [32.8 s]: Recall = 0.3025, Jaccard score = 0.2187, loss = 0.2767, gradient norm = 0.1798, eval: [8.8 s]
# Iteration 7 fit: [32.8 s]: Recall = 0.3072, Jaccard score = 0.2229, loss = 0.2605, gradient norm = 0.1850, eval: [8.9 s]
# Iteration 8 fit: [32.9 s]: Recall = 0.3130, Jaccard score = 0.2281, loss = 0.2444, gradient norm = 0.1915, eval: [8.7 s]
# Iteration 9 fit: [32.8 s]: Recall = 0.3120, Jaccard score = 0.2271, loss = 0.2295, gradient norm = 0.1977, eval: [8.8 s]
# Iteration 10 fit: [32.8 s]: Recall = 0.3135, Jaccard score = 0.2285, loss = 0.2155, gradient norm = 0.2026, eval: [8.7 s]
# Iteration 11 fit: [32.6 s]: Recall = 0.3197, Jaccard score = 0.2341, loss = 0.2010, gradient norm = 0.2086, eval: [8.8 s]
# Iteration 12 fit: [33.0 s]: Recall = 0.3179, Jaccard score = 0.2325, loss = 0.1876, gradient norm = 0.2151, eval: [8.9 s]
# Iteration 13 fit: [33.2 s]: Recall = 0.3216, Jaccard score = 0.2358, loss = 0.1760, gradient norm = 0.2196, eval: [8.9 s]
# Iteration 14 fit: [33.2 s]: Recall = 0.3218, Jaccard score = 0.2360, loss = 0.1631, gradient norm = 0.2236, eval: [9.0 s]
# Iteration 15 fit: [33.1 s]: Recall = 0.3224, Jaccard score = 0.2365, loss = 0.1523, gradient norm = 0.2284, eval: [9.0 s]
# Iteration 16 fit: [32.7 s]: Recall = 0.3225, Jaccard score = 0.2366, loss = 0.1417, gradient norm = 0.2302, eval: [8.9 s]
# Iteration 17 fit: [32.7 s]: Recall = 0.3291, Jaccard score = 0.2427, loss = 0.1316, gradient norm = 0.2332, eval: [8.8 s]
# Iteration 18 fit: [32.8 s]: Recall = 0.3244, Jaccard score = 0.2384, loss = 0.1220, gradient norm = 0.2333, eval: [9.0 s]
# Iteration 19 fit: [32.8 s]: Recall = 0.3243, Jaccard score = 0.2383, loss = 0.1135, gradient norm = 0.2336, eval: [8.9 s]
# Iteration 20 fit: [32.6 s]: Recall = 0.3267, Jaccard score = 0.2405, loss = 0.1062, gradient norm = 0.2342, eval: [8.9 s]
# Iteration 21 fit: [32.6 s]: Recall = 0.3274, Jaccard score = 0.2411, loss = 0.0993, gradient norm = 0.2335, eval: [8.8 s]
# Iteration 22 fit: [32.3 s]: Recall = 0.3297, Jaccard score = 0.2432, loss = 0.0924, gradient norm = 0.2318, eval: [8.9 s]
# Iteration 23 fit: [32.9 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0861, gradient norm = 0.2295, eval: [8.7 s]
# Iteration 24 fit: [32.8 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0806, gradient norm = 0.2277, eval: [8.7 s]
# Iteration 25 fit: [32.8 s]: Recall = 0.3253, Jaccard score = 0.2392, loss = 0.0770, gradient norm = 0.2265, eval: [8.8 s]
# Iteration 26 fit: [32.8 s]: Recall = 0.3296, Jaccard score = 0.2431, loss = 0.0720, gradient norm = 0.2228, eval: [8.9 s]
# Iteration 27 fit: [32.9 s]: Recall = 0.3252, Jaccard score = 0.2391, loss = 0.0685, gradient norm = 0.2202, eval: [8.9 s]
# Iteration 28 fit: [37.3 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0648, gradient norm = 0.2171, eval: [9.1 s]
# Iteration 29 fit: [33.1 s]: Recall = 0.3293, Jaccard score = 0.2429, loss = 0.0625, gradient norm = 0.2158, eval: [9.0 s]
# Iteration 30 fit: [33.3 s]: Recall = 0.3346, Jaccard score = 0.2477, loss = 0.0590, gradient norm = 0.2117, eval: [9.0 s]
# Iteration 31 fit: [32.4 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0559, gradient norm = 0.2078, eval: [8.9 s]
# Iteration 32 fit: [32.4 s]: Recall = 0.3330, Jaccard score = 0.2462, loss = 0.0529, gradient norm = 0.2044, eval: [8.7 s]
# Iteration 33 fit: [32.4 s]: Recall = 0.3352, Jaccard score = 0.2482, loss = 0.0509, gradient norm = 0.2030, eval: [8.8 s]
# Iteration 34 fit: [32.4 s]: Recall = 0.3309, Jaccard score = 0.2443, loss = 0.0490, gradient norm = 0.1998, eval: [8.9 s]
# Iteration 35 fit: [32.4 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0468, gradient norm = 0.1970, eval: [8.8 s]
# Iteration 36 fit: [32.4 s]: Recall = 0.3306, Jaccard score = 0.2440, loss = 0.0458, gradient norm = 0.1952, eval: [8.8 s]
# Iteration 37 fit: [32.5 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0438, gradient norm = 0.1929, eval: [8.8 s]
# Iteration 38 fit: [32.4 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0419, gradient norm = 0.1891, eval: [8.8 s]
# Iteration 39 fit: [32.4 s]: Recall = 0.3329, Jaccard score = 0.2461, loss = 0.0404, gradient norm = 0.1862, eval: [8.8 s]
# Iteration 40 fit: [32.4 s]: Recall = 0.3345, Jaccard score = 0.2476, loss = 0.0389, gradient norm = 0.1839, eval: [8.9 s]
# Iteration 41 fit: [32.5 s]: Recall = 0.3321, Jaccard score = 0.2454, loss = 0.0377, gradient norm = 0.1821, eval: [8.8 s]
# Iteration 42 fit: [32.4 s]: Recall = 0.3358, Jaccard score = 0.2489, loss = 0.0369, gradient norm = 0.1798, eval: [8.8 s]
# Iteration 43 fit: [32.5 s]: Recall = 0.3325, Jaccard score = 0.2458, loss = 0.0354, gradient norm = 0.1777, eval: [8.7 s]
# Iteration 44 fit: [32.4 s]: Recall = 0.3333, Jaccard score = 0.2465, loss = 0.0343, gradient norm = 0.1749, eval: [8.7 s]
# Iteration 45 fit: [32.5 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0332, gradient norm = 0.1732, eval: [8.7 s]
# Iteration 46 fit: [32.4 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0319, gradient norm = 0.1705, eval: [8.7 s]
# Iteration 47 fit: [32.5 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0309, gradient norm = 0.1677, eval: [8.7 s]
# Iteration 48 fit: [32.5 s]: Recall = 0.3330, Jaccard score = 0.2462, loss = 0.0309, gradient norm = 0.1687, eval: [8.7 s]
# Iteration 49 fit: [32.6 s]: Recall = 0.3289, Jaccard score = 0.2424, loss = 0.0291, gradient norm = 0.1643, eval: [8.8 s]
# Iteration 50 fit: [32.7 s]: Recall = 0.3307, Jaccard score = 0.2441, loss = 0.0288, gradient norm = 0.1641, eval: [8.9 s]
# Iteration 51 fit: [32.9 s]: Recall = 0.3365, Jaccard score = 0.2495, loss = 0.0279, gradient norm = 0.1618, eval: [8.9 s]
# Iteration 52 fit: [33.5 s]: Recall = 0.3362, Jaccard score = 0.2492, loss = 0.0271, gradient norm = 0.1595, eval: [8.9 s]
# Iteration 53 fit: [33.3 s]: Recall = 0.3340, Jaccard score = 0.2472, loss = 0.0260, gradient norm = 0.1566, eval: [9.0 s]
# Iteration 54 fit: [33.1 s]: Recall = 0.3258, Jaccard score = 0.2396, loss = 0.0259, gradient norm = 0.1573, eval: [8.9 s]
# Iteration 55 fit: [33.4 s]: Recall = 0.3353, Jaccard score = 0.2483, loss = 0.0253, gradient norm = 0.1541, eval: [8.9 s]
# Iteration 56 fit: [33.2 s]: Recall = 0.3291, Jaccard score = 0.2427, loss = 0.0246, gradient norm = 0.1526, eval: [9.0 s]
# Iteration 57 fit: [33.3 s]: Recall = 0.3286, Jaccard score = 0.2422, loss = 0.0241, gradient norm = 0.1519, eval: [9.0 s]
# Iteration 58 fit: [33.0 s]: Recall = 0.3326, Jaccard score = 0.2459, loss = 0.0233, gradient norm = 0.1497, eval: [8.9 s]
# Iteration 59 fit: [33.0 s]: Recall = 0.3280, Jaccard score = 0.2416, loss = 0.0231, gradient norm = 0.1498, eval: [8.9 s]
# Iteration 60 fit: [33.0 s]: Recall = 0.3365, Jaccard score = 0.2495, loss = 0.0225, gradient norm = 0.1476, eval: [8.9 s]
# Iteration 61 fit: [33.0 s]: Recall = 0.3334, Jaccard score = 0.2466, loss = 0.0225, gradient norm = 0.1476, eval: [8.9 s]
# Iteration 62 fit: [33.0 s]: Recall = 0.3253, Jaccard score = 0.2392, loss = 0.0223, gradient norm = 0.1468, eval: [8.9 s]
# Iteration 63 fit: [33.0 s]: Recall = 0.3331, Jaccard score = 0.2463, loss = 0.0215, gradient norm = 0.1438, eval: [8.9 s]
# Iteration 64 fit: [33.0 s]: Recall = 0.3268, Jaccard score = 0.2406, loss = 0.0213, gradient norm = 0.1435, eval: [8.9 s]
# Iteration 65 fit: [33.1 s]: Recall = 0.3279, Jaccard score = 0.2415, loss = 0.0203, gradient norm = 0.1403, eval: [8.9 s]
# Iteration 66 fit: [33.0 s]: Recall = 0.3328, Jaccard score = 0.2460, loss = 0.0202, gradient norm = 0.1402, eval: [9.1 s]
# Iteration 67 fit: [33.4 s]: Recall = 0.3305, Jaccard score = 0.2439, loss = 0.0202, gradient norm = 0.1405, eval: [9.0 s]
# Iteration 68 fit: [33.3 s]: Recall = 0.3209, Jaccard score = 0.2352, loss = 0.0195, gradient norm = 0.1383, eval: [9.0 s]
# Iteration 69 fit: [33.3 s]: Recall = 0.3297, Jaccard score = 0.2432, loss = 0.0191, gradient norm = 0.1366, eval: [8.9 s]
# Iteration 70 fit: [33.2 s]: Recall = 0.3269, Jaccard score = 0.2407, loss = 0.0191, gradient norm = 0.1365, eval: [8.9 s]
# Iteration 71 fit: [33.3 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0186, gradient norm = 0.1361, eval: [9.0 s]
# Iteration 72 fit: [33.4 s]: Recall = 0.3248, Jaccard score = 0.2387, loss = 0.0181, gradient norm = 0.1331, eval: [9.0 s]
# Iteration 73 fit: [33.3 s]: Recall = 0.3280, Jaccard score = 0.2416, loss = 0.0180, gradient norm = 0.1332, eval: [9.0 s]
# Iteration 74 fit: [33.1 s]: Recall = 0.3302, Jaccard score = 0.2437, loss = 0.0175, gradient norm = 0.1316, eval: [8.9 s]
# Iteration 75 fit: [33.1 s]: Recall = 0.3267, Jaccard score = 0.2405, loss = 0.0170, gradient norm = 0.1288, eval: [8.9 s]
# Iteration 76 fit: [33.2 s]: Recall = 0.3304, Jaccard score = 0.2438, loss = 0.0167, gradient norm = 0.1284, eval: [8.9 s]
# Iteration 77 fit: [33.4 s]: Recall = 0.3320, Jaccard score = 0.2453, loss = 0.0168, gradient norm = 0.1302, eval: [9.0 s]
# Iteration 78 fit: [33.2 s]: Recall = 0.3339, Jaccard score = 0.2471, loss = 0.0168, gradient norm = 0.1299, eval: [8.9 s]
# Iteration 79 fit: [33.4 s]: Recall = 0.3274, Jaccard score = 0.2411, loss = 0.0161, gradient norm = 0.1272, eval: [9.0 s]
# Iteration 80 fit: [33.2 s]: Recall = 0.3290, Jaccard score = 0.2425, loss = 0.0163, gradient norm = 0.1261, eval: [8.8 s]
# Iteration 81 fit: [33.2 s]: Recall = 0.3288, Jaccard score = 0.2423, loss = 0.0160, gradient norm = 0.1264, eval: [8.9 s]
# Iteration 82 fit: [33.1 s]: Recall = 0.3313, Jaccard score = 0.2446, loss = 0.0157, gradient norm = 0.1252, eval: [8.8 s]
# Iteration 83 fit: [33.2 s]: Recall = 0.3277, Jaccard score = 0.2414, loss = 0.0155, gradient norm = 0.1244, eval: [9.0 s]
# Iteration 84 fit: [33.1 s]: Recall = 0.3318, Jaccard score = 0.2452, loss = 0.0153, gradient norm = 0.1229, eval: [8.8 s]
# Iteration 85 fit: [33.2 s]: Recall = 0.3313, Jaccard score = 0.2446, loss = 0.0151, gradient norm = 0.1234, eval: [8.9 s]
# Iteration 86 fit: [40.0 s]: Recall = 0.3268, Jaccard score = 0.2406, loss = 0.0151, gradient norm = 0.1228, eval: [9.3 s]
# Iteration 87 fit: [35.2 s]: Recall = 0.3298, Jaccard score = 0.2433, loss = 0.0145, gradient norm = 0.1198, eval: [9.8 s]
# Iteration 88 fit: [33.7 s]: Recall = 0.3264, Jaccard score = 0.2401, loss = 0.0144, gradient norm = 0.1199, eval: [9.4 s]
# Iteration 89 fit: [35.3 s]: Recall = 0.3284, Jaccard score = 0.2420, loss = 0.0143, gradient norm = 0.1192, eval: [11.4 s]
# Iteration 90 fit: [35.2 s]: Recall = 0.3294, Jaccard score = 0.2430, loss = 0.0143, gradient norm = 0.1202, eval: [9.2 s]
# Iteration 91 fit: [33.6 s]: Recall = 0.3235, Jaccard score = 0.2375, loss = 0.0135, gradient norm = 0.1161, eval: [9.3 s]
# Iteration 92 fit: [33.6 s]: Recall = 0.3273, Jaccard score = 0.2410, loss = 0.0140, gradient norm = 0.1176, eval: [9.0 s]
# Iteration 93 fit: [35.1 s]: Recall = 0.3283, Jaccard score = 0.2419, loss = 0.0138, gradient norm = 0.1181, eval: [9.3 s]
# Iteration 94 fit: [33.9 s]: Recall = 0.3316, Jaccard score = 0.2450, loss = 0.0136, gradient norm = 0.1174, eval: [9.0 s]
# Iteration 95 fit: [33.5 s]: Recall = 0.3299, Jaccard score = 0.2434, loss = 0.0134, gradient norm = 0.1157, eval: [9.1 s]
# Iteration 96 fit: [33.3 s]: Recall = 0.3279, Jaccard score = 0.2415, loss = 0.0137, gradient norm = 0.1181, eval: [8.9 s]
# End. Best Iteration 51:  Recall = 0.3365, Jaccard score = 0.2495. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,150]_1566824616.h5
