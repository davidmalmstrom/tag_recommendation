--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--num_factors: "94"
--early_stopping: "145"
--test_dataset: "1"
--percentage: "0.1"
--dataset_name_prepend: "cold_0.1_"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.1_', early_stopping=145, epochs=300, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.1, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1566571169.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1566571169.h5
# Load data done [1.6 s]. #user=20000, #item=2000, #train=147903, #test=eval_recall
# <class 'tensorflow.python.framework.errors_impl.InternalError'>: GPU sync failed


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.1_', early_stopping=145, epochs=300, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.1, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1566583232.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1566583232.h5
# Load data done [1.8 s]. #user=20000, #item=2000, #train=147903, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0266, Jaccard score = 0.0196
# Iteration 0 fit: [41.3 s]: Recall = 0.1771, Jaccard score = 0.1467, loss = 0.4910, gradient norm = 0.2938, eval: [9.0 s]
# Iteration 1 fit: [21.1 s]: Recall = 0.1962, Jaccard score = 0.1651, loss = 0.3870, gradient norm = 0.2514, eval: [8.9 s]
# Iteration 2 fit: [22.4 s]: Recall = 0.2001, Jaccard score = 0.1690, loss = 0.3584, gradient norm = 0.2564, eval: [8.9 s]
# Iteration 3 fit: [17.7 s]: Recall = 0.1998, Jaccard score = 0.1687, loss = 0.3346, gradient norm = 0.2675, eval: [8.8 s]
# Iteration 4 fit: [17.6 s]: Recall = 0.1973, Jaccard score = 0.1662, loss = 0.3123, gradient norm = 0.2784, eval: [8.8 s]
# Iteration 5 fit: [17.7 s]: Recall = 0.1930, Jaccard score = 0.1620, loss = 0.2901, gradient norm = 0.2891, eval: [8.8 s]
# Iteration 6 fit: [17.6 s]: Recall = 0.1899, Jaccard score = 0.1590, loss = 0.2687, gradient norm = 0.2947, eval: [8.8 s]
# Iteration 7 fit: [17.7 s]: Recall = 0.1830, Jaccard score = 0.1523, loss = 0.2471, gradient norm = 0.2992, eval: [8.8 s]
# Iteration 8 fit: [17.7 s]: Recall = 0.1795, Jaccard score = 0.1490, loss = 0.2271, gradient norm = 0.3002, eval: [8.8 s]
# Iteration 9 fit: [17.7 s]: Recall = 0.1784, Jaccard score = 0.1479, loss = 0.2085, gradient norm = 0.3002, eval: [8.8 s]
# Iteration 10 fit: [18.6 s]: Recall = 0.1742, Jaccard score = 0.1440, loss = 0.1913, gradient norm = 0.2975, eval: [8.8 s]
# Iteration 11 fit: [17.7 s]: Recall = 0.1732, Jaccard score = 0.1430, loss = 0.1754, gradient norm = 0.2937, eval: [8.8 s]
# Iteration 12 fit: [17.7 s]: Recall = 0.1741, Jaccard score = 0.1438, loss = 0.1604, gradient norm = 0.2891, eval: [8.8 s]
# Iteration 13 fit: [17.7 s]: Recall = 0.1679, Jaccard score = 0.1380, loss = 0.1476, gradient norm = 0.2837, eval: [8.9 s]
# Iteration 14 fit: [17.7 s]: Recall = 0.1683, Jaccard score = 0.1384, loss = 0.1352, gradient norm = 0.2780, eval: [8.9 s]
# Iteration 15 fit: [17.7 s]: Recall = 0.1660, Jaccard score = 0.1363, loss = 0.1247, gradient norm = 0.2717, eval: [8.9 s]
# Iteration 16 fit: [17.8 s]: Recall = 0.1671, Jaccard score = 0.1373, loss = 0.1161, gradient norm = 0.2662, eval: [8.8 s]
# Iteration 17 fit: [17.7 s]: Recall = 0.1667, Jaccard score = 0.1369, loss = 0.1070, gradient norm = 0.2585, eval: [8.9 s]
# Iteration 18 fit: [17.7 s]: Recall = 0.1675, Jaccard score = 0.1376, loss = 0.0997, gradient norm = 0.2530, eval: [8.8 s]
# Iteration 19 fit: [17.7 s]: Recall = 0.1668, Jaccard score = 0.1370, loss = 0.0925, gradient norm = 0.2460, eval: [8.9 s]
# Iteration 20 fit: [17.7 s]: Recall = 0.1679, Jaccard score = 0.1380, loss = 0.0866, gradient norm = 0.2400, eval: [8.8 s]
# Iteration 21 fit: [17.8 s]: Recall = 0.1669, Jaccard score = 0.1371, loss = 0.0808, gradient norm = 0.2332, eval: [8.9 s]
# Iteration 22 fit: [17.7 s]: Recall = 0.1672, Jaccard score = 0.1374, loss = 0.0761, gradient norm = 0.2260, eval: [8.8 s]
# Iteration 23 fit: [17.7 s]: Recall = 0.1682, Jaccard score = 0.1383, loss = 0.0721, gradient norm = 0.2202, eval: [8.9 s]
# Iteration 24 fit: [17.8 s]: Recall = 0.1692, Jaccard score = 0.1392, loss = 0.0675, gradient norm = 0.2144, eval: [8.8 s]
# Iteration 25 fit: [17.9 s]: Recall = 0.1692, Jaccard score = 0.1392, loss = 0.0640, gradient norm = 0.2089, eval: [8.7 s]
# Iteration 26 fit: [17.7 s]: Recall = 0.1700, Jaccard score = 0.1399, loss = 0.0610, gradient norm = 0.2041, eval: [8.7 s]
# Iteration 27 fit: [17.7 s]: Recall = 0.1679, Jaccard score = 0.1380, loss = 0.0576, gradient norm = 0.1982, eval: [8.8 s]
# Iteration 28 fit: [17.7 s]: Recall = 0.1685, Jaccard score = 0.1386, loss = 0.0548, gradient norm = 0.1929, eval: [8.8 s]
# Iteration 29 fit: [17.7 s]: Recall = 0.1691, Jaccard score = 0.1392, loss = 0.0520, gradient norm = 0.1881, eval: [8.8 s]
# Iteration 30 fit: [17.7 s]: Recall = 0.1690, Jaccard score = 0.1390, loss = 0.0501, gradient norm = 0.1830, eval: [8.8 s]
# Iteration 31 fit: [17.8 s]: Recall = 0.1727, Jaccard score = 0.1425, loss = 0.0479, gradient norm = 0.1783, eval: [8.7 s]
# Iteration 32 fit: [17.7 s]: Recall = 0.1698, Jaccard score = 0.1398, loss = 0.0455, gradient norm = 0.1744, eval: [8.8 s]
# Iteration 33 fit: [17.7 s]: Recall = 0.1685, Jaccard score = 0.1386, loss = 0.0442, gradient norm = 0.1706, eval: [8.8 s]
# Iteration 34 fit: [17.7 s]: Recall = 0.1676, Jaccard score = 0.1378, loss = 0.0421, gradient norm = 0.1652, eval: [8.8 s]
# Iteration 35 fit: [17.7 s]: Recall = 0.1696, Jaccard score = 0.1396, loss = 0.0407, gradient norm = 0.1619, eval: [8.7 s]
# Iteration 36 fit: [17.7 s]: Recall = 0.1705, Jaccard score = 0.1404, loss = 0.0394, gradient norm = 0.1569, eval: [8.8 s]
# Iteration 37 fit: [17.8 s]: Recall = 0.1692, Jaccard score = 0.1392, loss = 0.0381, gradient norm = 0.1539, eval: [8.8 s]
# Iteration 38 fit: [17.9 s]: Recall = 0.1685, Jaccard score = 0.1386, loss = 0.0361, gradient norm = 0.1486, eval: [8.9 s]
# Iteration 39 fit: [17.7 s]: Recall = 0.1716, Jaccard score = 0.1415, loss = 0.0352, gradient norm = 0.1464, eval: [8.8 s]
# Iteration 40 fit: [17.8 s]: Recall = 0.1691, Jaccard score = 0.1391, loss = 0.0332, gradient norm = 0.1416, eval: [8.8 s]
# Iteration 41 fit: [17.8 s]: Recall = 0.1676, Jaccard score = 0.1377, loss = 0.0321, gradient norm = 0.1373, eval: [8.8 s]
# Iteration 42 fit: [17.7 s]: Recall = 0.1707, Jaccard score = 0.1407, loss = 0.0306, gradient norm = 0.1342, eval: [8.8 s]
# Iteration 43 fit: [17.8 s]: Recall = 0.1696, Jaccard score = 0.1396, loss = 0.0299, gradient norm = 0.1330, eval: [8.8 s]
# Iteration 44 fit: [17.8 s]: Recall = 0.1702, Jaccard score = 0.1402, loss = 0.0287, gradient norm = 0.1283, eval: [8.8 s]
# Iteration 45 fit: [17.8 s]: Recall = 0.1700, Jaccard score = 0.1399, loss = 0.0281, gradient norm = 0.1267, eval: [8.8 s]
# Iteration 46 fit: [17.8 s]: Recall = 0.1678, Jaccard score = 0.1379, loss = 0.0271, gradient norm = 0.1227, eval: [8.9 s]
# Iteration 47 fit: [17.8 s]: Recall = 0.1702, Jaccard score = 0.1402, loss = 0.0266, gradient norm = 0.1216, eval: [8.9 s]
# Iteration 48 fit: [17.8 s]: Recall = 0.1702, Jaccard score = 0.1402, loss = 0.0256, gradient norm = 0.1173, eval: [8.9 s]
# Iteration 49 fit: [17.8 s]: Recall = 0.1708, Jaccard score = 0.1407, loss = 0.0247, gradient norm = 0.1133, eval: [8.8 s]
# Iteration 50 fit: [17.8 s]: Recall = 0.1714, Jaccard score = 0.1413, loss = 0.0246, gradient norm = 0.1132, eval: [8.9 s]
# Iteration 51 fit: [17.8 s]: Recall = 0.1696, Jaccard score = 0.1396, loss = 0.0233, gradient norm = 0.1099, eval: [8.9 s]
# Iteration 52 fit: [17.8 s]: Recall = 0.1685, Jaccard score = 0.1386, loss = 0.0231, gradient norm = 0.1071, eval: [8.9 s]
# Iteration 53 fit: [17.8 s]: Recall = 0.1696, Jaccard score = 0.1396, loss = 0.0220, gradient norm = 0.1042, eval: [8.9 s]
# Iteration 54 fit: [17.8 s]: Recall = 0.1721, Jaccard score = 0.1419, loss = 0.0217, gradient norm = 0.1025, eval: [8.9 s]
# Iteration 55 fit: [17.8 s]: Recall = 0.1714, Jaccard score = 0.1413, loss = 0.0206, gradient norm = 0.0991, eval: [8.9 s]
# Iteration 56 fit: [17.8 s]: Recall = 0.1714, Jaccard score = 0.1413, loss = 0.0207, gradient norm = 0.0985, eval: [8.8 s]
# Iteration 57 fit: [17.8 s]: Recall = 0.1709, Jaccard score = 0.1409, loss = 0.0201, gradient norm = 0.0966, eval: [8.9 s]
# Iteration 58 fit: [17.8 s]: Recall = 0.1721, Jaccard score = 0.1420, loss = 0.0195, gradient norm = 0.0941, eval: [8.9 s]
# Iteration 59 fit: [17.8 s]: Recall = 0.1728, Jaccard score = 0.1427, loss = 0.0192, gradient norm = 0.0925, eval: [8.9 s]
# Iteration 60 fit: [17.8 s]: Recall = 0.1700, Jaccard score = 0.1399, loss = 0.0187, gradient norm = 0.0906, eval: [8.9 s]
# Iteration 61 fit: [17.8 s]: Recall = 0.1701, Jaccard score = 0.1401, loss = 0.0185, gradient norm = 0.0897, eval: [8.9 s]
# Iteration 62 fit: [17.8 s]: Recall = 0.1719, Jaccard score = 0.1418, loss = 0.0179, gradient norm = 0.0871, eval: [8.9 s]
# Iteration 63 fit: [17.8 s]: Recall = 0.1737, Jaccard score = 0.1435, loss = 0.0175, gradient norm = 0.0855, eval: [8.9 s]
# Iteration 64 fit: [17.8 s]: Recall = 0.1755, Jaccard score = 0.1451, loss = 0.0168, gradient norm = 0.0839, eval: [8.9 s]
# Iteration 65 fit: [17.8 s]: Recall = 0.1728, Jaccard score = 0.1427, loss = 0.0169, gradient norm = 0.0839, eval: [8.9 s]
# Iteration 66 fit: [17.8 s]: Recall = 0.1733, Jaccard score = 0.1431, loss = 0.0172, gradient norm = 0.0837, eval: [8.9 s]
# Iteration 67 fit: [17.8 s]: Recall = 0.1726, Jaccard score = 0.1425, loss = 0.0162, gradient norm = 0.0801, eval: [8.9 s]
# Iteration 68 fit: [17.8 s]: Recall = 0.1748, Jaccard score = 0.1445, loss = 0.0160, gradient norm = 0.0800, eval: [8.9 s]
# Iteration 69 fit: [17.8 s]: Recall = 0.1739, Jaccard score = 0.1436, loss = 0.0158, gradient norm = 0.0788, eval: [8.9 s]
# Iteration 70 fit: [17.8 s]: Recall = 0.1738, Jaccard score = 0.1436, loss = 0.0154, gradient norm = 0.0778, eval: [8.9 s]
# Iteration 71 fit: [17.8 s]: Recall = 0.1783, Jaccard score = 0.1478, loss = 0.0154, gradient norm = 0.0770, eval: [8.9 s]
# Iteration 72 fit: [17.8 s]: Recall = 0.1755, Jaccard score = 0.1452, loss = 0.0151, gradient norm = 0.0766, eval: [8.9 s]
# Iteration 73 fit: [17.8 s]: Recall = 0.1748, Jaccard score = 0.1445, loss = 0.0150, gradient norm = 0.0758, eval: [8.9 s]
# Iteration 74 fit: [17.8 s]: Recall = 0.1766, Jaccard score = 0.1462, loss = 0.0143, gradient norm = 0.0738, eval: [8.9 s]
# Iteration 75 fit: [17.8 s]: Recall = 0.1760, Jaccard score = 0.1457, loss = 0.0141, gradient norm = 0.0732, eval: [8.9 s]
# Iteration 76 fit: [17.8 s]: Recall = 0.1757, Jaccard score = 0.1454, loss = 0.0138, gradient norm = 0.0718, eval: [8.9 s]
# Iteration 77 fit: [17.9 s]: Recall = 0.1764, Jaccard score = 0.1460, loss = 0.0140, gradient norm = 0.0731, eval: [8.9 s]
# Iteration 78 fit: [17.9 s]: Recall = 0.1766, Jaccard score = 0.1462, loss = 0.0140, gradient norm = 0.0719, eval: [8.9 s]
# Iteration 79 fit: [17.8 s]: Recall = 0.1755, Jaccard score = 0.1451, loss = 0.0137, gradient norm = 0.0714, eval: [8.9 s]
# Iteration 80 fit: [17.8 s]: Recall = 0.1773, Jaccard score = 0.1469, loss = 0.0132, gradient norm = 0.0702, eval: [8.9 s]
# Iteration 81 fit: [17.9 s]: Recall = 0.1769, Jaccard score = 0.1465, loss = 0.0129, gradient norm = 0.0698, eval: [8.9 s]
# Iteration 82 fit: [17.9 s]: Recall = 0.1768, Jaccard score = 0.1464, loss = 0.0134, gradient norm = 0.0707, eval: [8.9 s]
# Iteration 83 fit: [17.9 s]: Recall = 0.1766, Jaccard score = 0.1462, loss = 0.0135, gradient norm = 0.0715, eval: [8.9 s]
# Iteration 84 fit: [17.9 s]: Recall = 0.1783, Jaccard score = 0.1479, loss = 0.0128, gradient norm = 0.0689, eval: [8.9 s]
# Iteration 85 fit: [17.9 s]: Recall = 0.1775, Jaccard score = 0.1471, loss = 0.0127, gradient norm = 0.0688, eval: [8.9 s]
# Iteration 86 fit: [17.9 s]: Recall = 0.1767, Jaccard score = 0.1464, loss = 0.0126, gradient norm = 0.0687, eval: [8.9 s]
# Iteration 87 fit: [17.9 s]: Recall = 0.1762, Jaccard score = 0.1459, loss = 0.0125, gradient norm = 0.0688, eval: [8.9 s]
# Iteration 88 fit: [17.9 s]: Recall = 0.1777, Jaccard score = 0.1473, loss = 0.0123, gradient norm = 0.0679, eval: [8.9 s]
# Iteration 89 fit: [17.9 s]: Recall = 0.1785, Jaccard score = 0.1481, loss = 0.0122, gradient norm = 0.0679, eval: [8.9 s]
# Iteration 90 fit: [17.9 s]: Recall = 0.1773, Jaccard score = 0.1469, loss = 0.0121, gradient norm = 0.0678, eval: [8.9 s]
# Iteration 91 fit: [17.9 s]: Recall = 0.1745, Jaccard score = 0.1442, loss = 0.0119, gradient norm = 0.0672, eval: [8.9 s]
# Iteration 92 fit: [17.9 s]: Recall = 0.1786, Jaccard score = 0.1481, loss = 0.0119, gradient norm = 0.0668, eval: [8.9 s]
# Iteration 93 fit: [17.9 s]: Recall = 0.1764, Jaccard score = 0.1461, loss = 0.0115, gradient norm = 0.0661, eval: [8.9 s]
# Iteration 94 fit: [17.9 s]: Recall = 0.1797, Jaccard score = 0.1492, loss = 0.0115, gradient norm = 0.0665, eval: [8.9 s]
# Iteration 95 fit: [17.4 s]: Recall = 0.1758, Jaccard score = 0.1455, loss = 0.0115, gradient norm = 0.0671, eval: [8.9 s]
# Iteration 96 fit: [17.9 s]: Recall = 0.1758, Jaccard score = 0.1455, loss = 0.0111, gradient norm = 0.0651, eval: [8.9 s]
# Iteration 97 fit: [17.9 s]: Recall = 0.1757, Jaccard score = 0.1454, loss = 0.0113, gradient norm = 0.0659, eval: [8.9 s]
# Iteration 98 fit: [17.9 s]: Recall = 0.1784, Jaccard score = 0.1479, loss = 0.0110, gradient norm = 0.0656, eval: [8.9 s]
# Iteration 99 fit: [17.9 s]: Recall = 0.1776, Jaccard score = 0.1472, loss = 0.0113, gradient norm = 0.0670, eval: [8.9 s]
# Iteration 100 fit: [17.9 s]: Recall = 0.1773, Jaccard score = 0.1468, loss = 0.0110, gradient norm = 0.0667, eval: [8.9 s]
# Iteration 101 fit: [17.9 s]: Recall = 0.1786, Jaccard score = 0.1481, loss = 0.0109, gradient norm = 0.0661, eval: [8.9 s]
# Iteration 102 fit: [17.9 s]: Recall = 0.1794, Jaccard score = 0.1489, loss = 0.0110, gradient norm = 0.0659, eval: [8.9 s]
# Iteration 103 fit: [17.9 s]: Recall = 0.1779, Jaccard score = 0.1475, loss = 0.0108, gradient norm = 0.0666, eval: [8.9 s]
# Iteration 104 fit: [17.9 s]: Recall = 0.1772, Jaccard score = 0.1468, loss = 0.0109, gradient norm = 0.0666, eval: [8.9 s]
# Iteration 105 fit: [17.9 s]: Recall = 0.1759, Jaccard score = 0.1456, loss = 0.0108, gradient norm = 0.0670, eval: [8.9 s]
# Iteration 106 fit: [17.9 s]: Recall = 0.1789, Jaccard score = 0.1484, loss = 0.0103, gradient norm = 0.0656, eval: [8.9 s]
# Iteration 107 fit: [17.9 s]: Recall = 0.1757, Jaccard score = 0.1453, loss = 0.0104, gradient norm = 0.0664, eval: [8.9 s]
# Iteration 108 fit: [18.1 s]: Recall = 0.1732, Jaccard score = 0.1430, loss = 0.0103, gradient norm = 0.0665, eval: [8.9 s]
# Iteration 109 fit: [17.9 s]: Recall = 0.1780, Jaccard score = 0.1476, loss = 0.0105, gradient norm = 0.0680, eval: [8.9 s]
# Iteration 110 fit: [17.9 s]: Recall = 0.1769, Jaccard score = 0.1465, loss = 0.0102, gradient norm = 0.0669, eval: [8.9 s]
# Iteration 111 fit: [17.9 s]: Recall = 0.1807, Jaccard score = 0.1501, loss = 0.0101, gradient norm = 0.0664, eval: [8.9 s]
# Iteration 112 fit: [17.9 s]: Recall = 0.1795, Jaccard score = 0.1490, loss = 0.0099, gradient norm = 0.0655, eval: [8.9 s]
# Iteration 113 fit: [17.9 s]: Recall = 0.1777, Jaccard score = 0.1473, loss = 0.0099, gradient norm = 0.0664, eval: [8.9 s]
# Iteration 114 fit: [17.9 s]: Recall = 0.1778, Jaccard score = 0.1474, loss = 0.0097, gradient norm = 0.0658, eval: [9.9 s]
# Iteration 115 fit: [17.9 s]: Recall = 0.1755, Jaccard score = 0.1452, loss = 0.0099, gradient norm = 0.0666, eval: [8.9 s]
# Iteration 116 fit: [17.9 s]: Recall = 0.1752, Jaccard score = 0.1449, loss = 0.0097, gradient norm = 0.0665, eval: [8.9 s]
# Iteration 117 fit: [18.1 s]: Recall = 0.1767, Jaccard score = 0.1463, loss = 0.0097, gradient norm = 0.0669, eval: [8.9 s]
# Iteration 118 fit: [18.0 s]: Recall = 0.1771, Jaccard score = 0.1467, loss = 0.0097, gradient norm = 0.0675, eval: [8.9 s]
# Iteration 119 fit: [17.5 s]: Recall = 0.1758, Jaccard score = 0.1454, loss = 0.0094, gradient norm = 0.0664, eval: [8.9 s]
# Iteration 120 fit: [18.0 s]: Recall = 0.1756, Jaccard score = 0.1453, loss = 0.0096, gradient norm = 0.0679, eval: [8.8 s]
# Iteration 121 fit: [17.9 s]: Recall = 0.1747, Jaccard score = 0.1444, loss = 0.0093, gradient norm = 0.0669, eval: [8.8 s]
# Iteration 122 fit: [17.9 s]: Recall = 0.1750, Jaccard score = 0.1447, loss = 0.0095, gradient norm = 0.0685, eval: [8.8 s]
# Iteration 123 fit: [18.0 s]: Recall = 0.1763, Jaccard score = 0.1459, loss = 0.0095, gradient norm = 0.0689, eval: [8.8 s]
# Iteration 124 fit: [18.0 s]: Recall = 0.1771, Jaccard score = 0.1467, loss = 0.0092, gradient norm = 0.0671, eval: [8.8 s]
# Iteration 125 fit: [18.0 s]: Recall = 0.1753, Jaccard score = 0.1450, loss = 0.0093, gradient norm = 0.0686, eval: [8.8 s]
# Iteration 126 fit: [18.0 s]: Recall = 0.1760, Jaccard score = 0.1456, loss = 0.0092, gradient norm = 0.0681, eval: [8.8 s]
# Iteration 127 fit: [18.0 s]: Recall = 0.1762, Jaccard score = 0.1459, loss = 0.0091, gradient norm = 0.0686, eval: [8.8 s]
# Iteration 128 fit: [17.9 s]: Recall = 0.1765, Jaccard score = 0.1461, loss = 0.0092, gradient norm = 0.0685, eval: [8.8 s]
# Iteration 129 fit: [18.0 s]: Recall = 0.1773, Jaccard score = 0.1469, loss = 0.0092, gradient norm = 0.0700, eval: [8.8 s]
# Iteration 130 fit: [18.0 s]: Recall = 0.1764, Jaccard score = 0.1460, loss = 0.0089, gradient norm = 0.0686, eval: [8.8 s]
# Iteration 131 fit: [18.0 s]: Recall = 0.1753, Jaccard score = 0.1450, loss = 0.0090, gradient norm = 0.0691, eval: [8.8 s]
# Iteration 132 fit: [18.0 s]: Recall = 0.1762, Jaccard score = 0.1459, loss = 0.0088, gradient norm = 0.0685, eval: [8.8 s]
# Iteration 133 fit: [18.0 s]: Recall = 0.1755, Jaccard score = 0.1452, loss = 0.0088, gradient norm = 0.0692, eval: [8.8 s]
# Iteration 134 fit: [18.0 s]: Recall = 0.1739, Jaccard score = 0.1437, loss = 0.0087, gradient norm = 0.0689, eval: [8.8 s]
# Iteration 135 fit: [18.0 s]: Recall = 0.1779, Jaccard score = 0.1475, loss = 0.0090, gradient norm = 0.0711, eval: [8.8 s]
# Iteration 136 fit: [18.0 s]: Recall = 0.1774, Jaccard score = 0.1470, loss = 0.0088, gradient norm = 0.0705, eval: [8.8 s]
# Iteration 137 fit: [18.0 s]: Recall = 0.1751, Jaccard score = 0.1448, loss = 0.0087, gradient norm = 0.0698, eval: [8.8 s]
# Iteration 138 fit: [18.0 s]: Recall = 0.1750, Jaccard score = 0.1447, loss = 0.0084, gradient norm = 0.0693, eval: [8.7 s]
# Iteration 139 fit: [18.0 s]: Recall = 0.1764, Jaccard score = 0.1460, loss = 0.0086, gradient norm = 0.0701, eval: [8.8 s]
# Iteration 140 fit: [18.0 s]: Recall = 0.1755, Jaccard score = 0.1451, loss = 0.0084, gradient norm = 0.0693, eval: [8.8 s]
# Iteration 141 fit: [18.0 s]: Recall = 0.1755, Jaccard score = 0.1451, loss = 0.0085, gradient norm = 0.0699, eval: [8.8 s]
# Iteration 142 fit: [18.0 s]: Recall = 0.1751, Jaccard score = 0.1448, loss = 0.0081, gradient norm = 0.0689, eval: [8.8 s]
# Iteration 143 fit: [18.0 s]: Recall = 0.1741, Jaccard score = 0.1439, loss = 0.0084, gradient norm = 0.0709, eval: [8.8 s]
# Iteration 144 fit: [18.0 s]: Recall = 0.1755, Jaccard score = 0.1452, loss = 0.0081, gradient norm = 0.0696, eval: [8.8 s]
# Iteration 145 fit: [18.0 s]: Recall = 0.1730, Jaccard score = 0.1428, loss = 0.0082, gradient norm = 0.0707, eval: [8.8 s]
# Iteration 146 fit: [18.0 s]: Recall = 0.1755, Jaccard score = 0.1452, loss = 0.0082, gradient norm = 0.0707, eval: [8.8 s]
# Iteration 147 fit: [18.0 s]: Recall = 0.1760, Jaccard score = 0.1456, loss = 0.0084, gradient norm = 0.0727, eval: [8.8 s]
# End. Best Iteration 2:  Recall = 0.2001, Jaccard score = 0.1690. 
# The best NeuMF model has been saved to Pretrain/_GMF_94_[64,32,16,8]_1566583232.h5
