--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--early_stopping: "45"
--test_dataset: "1"
--percentage: "0.0"
--dataset_name_prepend: "cold_0.0_"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.0_', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.0, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1566591956.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1566591956.h5
# Load data done [1.9 s]. #user=20000, #item=2000, #train=143502, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0299, Jaccard score = 0.0229
# Iteration 0 fit: [84.1 s]: Recall = 0.1784, Jaccard score = 0.1539, loss = 0.4249, gradient norm = 0.2340, eval: [8.3 s]
# Iteration 1 fit: [29.2 s]: Recall = 0.1917, Jaccard score = 0.1674, loss = 0.3822, gradient norm = 0.1809, eval: [8.3 s]
# Iteration 2 fit: [29.2 s]: Recall = 0.1938, Jaccard score = 0.1695, loss = 0.3602, gradient norm = 0.1715, eval: [8.2 s]
# Iteration 3 fit: [29.3 s]: Recall = 0.1910, Jaccard score = 0.1667, loss = 0.3395, gradient norm = 0.1700, eval: [8.2 s]
# Iteration 4 fit: [28.9 s]: Recall = 0.1892, Jaccard score = 0.1648, loss = 0.3199, gradient norm = 0.1733, eval: [8.1 s]
# Iteration 5 fit: [28.9 s]: Recall = 0.1833, Jaccard score = 0.1589, loss = 0.3019, gradient norm = 0.1783, eval: [8.1 s]
# Iteration 6 fit: [28.9 s]: Recall = 0.1791, Jaccard score = 0.1547, loss = 0.2853, gradient norm = 0.1840, eval: [8.2 s]
# Iteration 7 fit: [28.9 s]: Recall = 0.1778, Jaccard score = 0.1533, loss = 0.2700, gradient norm = 0.1901, eval: [8.1 s]
# Iteration 8 fit: [28.9 s]: Recall = 0.1699, Jaccard score = 0.1456, loss = 0.2555, gradient norm = 0.1968, eval: [8.1 s]
# Iteration 9 fit: [28.9 s]: Recall = 0.1682, Jaccard score = 0.1439, loss = 0.2419, gradient norm = 0.2030, eval: [8.1 s]
# Iteration 10 fit: [28.9 s]: Recall = 0.1652, Jaccard score = 0.1410, loss = 0.2283, gradient norm = 0.2097, eval: [8.1 s]
# Iteration 11 fit: [28.9 s]: Recall = 0.1597, Jaccard score = 0.1356, loss = 0.2159, gradient norm = 0.2160, eval: [8.2 s]
# Iteration 12 fit: [28.9 s]: Recall = 0.1613, Jaccard score = 0.1372, loss = 0.2035, gradient norm = 0.2220, eval: [8.1 s]
# Iteration 13 fit: [28.9 s]: Recall = 0.1565, Jaccard score = 0.1326, loss = 0.1914, gradient norm = 0.2280, eval: [8.1 s]
# Iteration 14 fit: [28.9 s]: Recall = 0.1528, Jaccard score = 0.1290, loss = 0.1797, gradient norm = 0.2341, eval: [8.1 s]
# Iteration 15 fit: [28.9 s]: Recall = 0.1483, Jaccard score = 0.1248, loss = 0.1697, gradient norm = 0.2393, eval: [8.2 s]
# Iteration 16 fit: [28.9 s]: Recall = 0.1460, Jaccard score = 0.1225, loss = 0.1586, gradient norm = 0.2429, eval: [8.1 s]
# Iteration 17 fit: [28.9 s]: Recall = 0.1439, Jaccard score = 0.1206, loss = 0.1488, gradient norm = 0.2463, eval: [8.1 s]
# Iteration 18 fit: [29.1 s]: Recall = 0.1403, Jaccard score = 0.1173, loss = 0.1403, gradient norm = 0.2497, eval: [8.2 s]
# Iteration 19 fit: [28.9 s]: Recall = 0.1390, Jaccard score = 0.1160, loss = 0.1309, gradient norm = 0.2499, eval: [8.2 s]
# Iteration 20 fit: [28.9 s]: Recall = 0.1329, Jaccard score = 0.1104, loss = 0.1228, gradient norm = 0.2499, eval: [8.1 s]
# Iteration 21 fit: [28.9 s]: Recall = 0.1365, Jaccard score = 0.1137, loss = 0.1148, gradient norm = 0.2502, eval: [8.2 s]
# Iteration 22 fit: [28.9 s]: Recall = 0.1322, Jaccard score = 0.1097, loss = 0.1094, gradient norm = 0.2522, eval: [8.3 s]
# Iteration 23 fit: [29.1 s]: Recall = 0.1313, Jaccard score = 0.1089, loss = 0.1020, gradient norm = 0.2499, eval: [8.1 s]
# Iteration 24 fit: [28.9 s]: Recall = 0.1320, Jaccard score = 0.1095, loss = 0.0962, gradient norm = 0.2490, eval: [8.3 s]
# Iteration 25 fit: [28.9 s]: Recall = 0.1307, Jaccard score = 0.1083, loss = 0.0907, gradient norm = 0.2458, eval: [8.2 s]
# Iteration 26 fit: [28.9 s]: Recall = 0.1297, Jaccard score = 0.1074, loss = 0.0864, gradient norm = 0.2445, eval: [8.2 s]
# Iteration 27 fit: [28.9 s]: Recall = 0.1244, Jaccard score = 0.1026, loss = 0.0824, gradient norm = 0.2432, eval: [8.2 s]
# Iteration 28 fit: [28.9 s]: Recall = 0.1282, Jaccard score = 0.1061, loss = 0.0783, gradient norm = 0.2399, eval: [8.3 s]
# Iteration 29 fit: [28.9 s]: Recall = 0.1245, Jaccard score = 0.1027, loss = 0.0748, gradient norm = 0.2375, eval: [8.2 s]
# Iteration 30 fit: [28.9 s]: Recall = 0.1266, Jaccard score = 0.1046, loss = 0.0706, gradient norm = 0.2339, eval: [8.3 s]
# Iteration 31 fit: [29.0 s]: Recall = 0.1228, Jaccard score = 0.1011, loss = 0.0683, gradient norm = 0.2321, eval: [8.2 s]
# Iteration 32 fit: [29.0 s]: Recall = 0.1217, Jaccard score = 0.1002, loss = 0.0650, gradient norm = 0.2292, eval: [8.3 s]
# Iteration 33 fit: [28.9 s]: Recall = 0.1203, Jaccard score = 0.0989, loss = 0.0620, gradient norm = 0.2260, eval: [8.2 s]
# Iteration 34 fit: [29.0 s]: Recall = 0.1219, Jaccard score = 0.1003, loss = 0.0599, gradient norm = 0.2240, eval: [8.2 s]
# Iteration 35 fit: [29.0 s]: Recall = 0.1266, Jaccard score = 0.1046, loss = 0.0576, gradient norm = 0.2203, eval: [8.3 s]
# Iteration 36 fit: [29.0 s]: Recall = 0.1225, Jaccard score = 0.1009, loss = 0.0555, gradient norm = 0.2176, eval: [8.3 s]
# Iteration 37 fit: [29.0 s]: Recall = 0.1205, Jaccard score = 0.0991, loss = 0.0540, gradient norm = 0.2174, eval: [8.2 s]
# Iteration 38 fit: [29.0 s]: Recall = 0.1195, Jaccard score = 0.0981, loss = 0.0516, gradient norm = 0.2128, eval: [8.3 s]
# Iteration 39 fit: [29.0 s]: Recall = 0.1185, Jaccard score = 0.0973, loss = 0.0506, gradient norm = 0.2120, eval: [8.2 s]
# Iteration 40 fit: [28.9 s]: Recall = 0.1191, Jaccard score = 0.0978, loss = 0.0486, gradient norm = 0.2093, eval: [8.3 s]
# Iteration 41 fit: [29.0 s]: Recall = 0.1210, Jaccard score = 0.0995, loss = 0.0473, gradient norm = 0.2051, eval: [8.2 s]
# Iteration 42 fit: [29.0 s]: Recall = 0.1243, Jaccard score = 0.1025, loss = 0.0458, gradient norm = 0.2049, eval: [8.2 s]
# Iteration 43 fit: [29.0 s]: Recall = 0.1164, Jaccard score = 0.0954, loss = 0.0442, gradient norm = 0.2018, eval: [8.2 s]
# Iteration 44 fit: [29.0 s]: Recall = 0.1168, Jaccard score = 0.0957, loss = 0.0430, gradient norm = 0.1994, eval: [8.3 s]
# Iteration 45 fit: [29.0 s]: Recall = 0.1200, Jaccard score = 0.0986, loss = 0.0418, gradient norm = 0.1962, eval: [8.2 s]
# Iteration 46 fit: [29.0 s]: Recall = 0.1211, Jaccard score = 0.0996, loss = 0.0408, gradient norm = 0.1956, eval: [8.3 s]
# Iteration 47 fit: [29.0 s]: Recall = 0.1188, Jaccard score = 0.0975, loss = 0.0400, gradient norm = 0.1933, eval: [8.2 s]
# End. Best Iteration 2:  Recall = 0.1938, Jaccard score = 0.1695. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1566591956.h5
