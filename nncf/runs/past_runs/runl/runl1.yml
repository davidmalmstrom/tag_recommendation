--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "130"
--layers: "[128,128]"
--reg_layers: "[0,0]"
--test_dataset: "1"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=130, eval_recall=1, is_tag=1, layers='[128,128]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=1, num_neg=4, out=1, path='Data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,128]_1561718212.h5
--weights_path: Pretrain/_MLP_8_[128,128]_1561718212.h5
# Load data done [2.1 s]. #user=20000, #item=2000, #train=179445, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0380, Jaccard score = 0.0231
# Iteration 0 fit: [9.8 s]: Recall = 0.1651, Jaccard score = 0.1088, loss = 0.4409, eval: [6.4 s]
# Iteration 1 fit: [9.3 s]: Recall = 0.1720, Jaccard score = 0.1138, loss = 0.4219, eval: [6.4 s]
# Iteration 2 fit: [9.3 s]: Recall = 0.1683, Jaccard score = 0.1111, loss = 0.4188, eval: [6.4 s]
# Iteration 3 fit: [9.3 s]: Recall = 0.1697, Jaccard score = 0.1121, loss = 0.4155, eval: [6.4 s]
# Iteration 4 fit: [9.3 s]: Recall = 0.1645, Jaccard score = 0.1083, loss = 0.4104, eval: [6.4 s]
# Iteration 5 fit: [9.3 s]: Recall = 0.1620, Jaccard score = 0.1065, loss = 0.4011, eval: [6.4 s]
# Iteration 6 fit: [9.3 s]: Recall = 0.1650, Jaccard score = 0.1087, loss = 0.3888, eval: [6.4 s]
# Iteration 7 fit: [9.3 s]: Recall = 0.1590, Jaccard score = 0.1043, loss = 0.3733, eval: [6.4 s]
# Iteration 8 fit: [9.3 s]: Recall = 0.1567, Jaccard score = 0.1027, loss = 0.3566, eval: [6.4 s]
# Iteration 9 fit: [9.3 s]: Recall = 0.1558, Jaccard score = 0.1020, loss = 0.3392, eval: [6.4 s]
# Iteration 10 fit: [9.3 s]: Recall = 0.1609, Jaccard score = 0.1057, loss = 0.3216, eval: [6.4 s]
# Iteration 11 fit: [9.3 s]: Recall = 0.1649, Jaccard score = 0.1086, loss = 0.3045, eval: [6.4 s]
# Iteration 12 fit: [9.3 s]: Recall = 0.1706, Jaccard score = 0.1128, loss = 0.2888, eval: [6.4 s]
# Iteration 13 fit: [9.3 s]: Recall = 0.1735, Jaccard score = 0.1149, loss = 0.2740, eval: [6.4 s]
# Iteration 14 fit: [9.3 s]: Recall = 0.1744, Jaccard score = 0.1156, loss = 0.2600, eval: [6.4 s]
# Iteration 15 fit: [9.3 s]: Recall = 0.1769, Jaccard score = 0.1174, loss = 0.2459, eval: [6.4 s]
# Iteration 16 fit: [9.3 s]: Recall = 0.1810, Jaccard score = 0.1205, loss = 0.2331, eval: [6.4 s]
# Iteration 17 fit: [9.3 s]: Recall = 0.1873, Jaccard score = 0.1253, loss = 0.2210, eval: [6.4 s]
# Iteration 18 fit: [9.3 s]: Recall = 0.1831, Jaccard score = 0.1221, loss = 0.2101, eval: [6.4 s]
# Iteration 19 fit: [9.3 s]: Recall = 0.1838, Jaccard score = 0.1226, loss = 0.1991, eval: [6.5 s]
# Iteration 20 fit: [9.3 s]: Recall = 0.1846, Jaccard score = 0.1232, loss = 0.1892, eval: [6.4 s]
# Iteration 21 fit: [9.3 s]: Recall = 0.1878, Jaccard score = 0.1256, loss = 0.1800, eval: [6.4 s]
# Iteration 22 fit: [9.3 s]: Recall = 0.1901, Jaccard score = 0.1273, loss = 0.1706, eval: [6.4 s]
# Iteration 23 fit: [9.3 s]: Recall = 0.1943, Jaccard score = 0.1305, loss = 0.1623, eval: [6.4 s]
# Iteration 24 fit: [9.3 s]: Recall = 0.1913, Jaccard score = 0.1283, loss = 0.1553, eval: [6.4 s]
# Iteration 25 fit: [9.3 s]: Recall = 0.1935, Jaccard score = 0.1299, loss = 0.1472, eval: [6.4 s]
# Iteration 26 fit: [9.3 s]: Recall = 0.2050, Jaccard score = 0.1387, loss = 0.1410, eval: [6.4 s]
# Iteration 27 fit: [9.3 s]: Recall = 0.2000, Jaccard score = 0.1349, loss = 0.1335, eval: [6.4 s]
# Iteration 28 fit: [9.3 s]: Recall = 0.2045, Jaccard score = 0.1383, loss = 0.1276, eval: [6.4 s]
# Iteration 29 fit: [9.3 s]: Recall = 0.2043, Jaccard score = 0.1382, loss = 0.1208, eval: [6.4 s]
# Iteration 30 fit: [9.3 s]: Recall = 0.2059, Jaccard score = 0.1394, loss = 0.1166, eval: [6.4 s]
# Iteration 31 fit: [9.4 s]: Recall = 0.2086, Jaccard score = 0.1415, loss = 0.1113, eval: [6.4 s]
# Iteration 32 fit: [9.3 s]: Recall = 0.2044, Jaccard score = 0.1383, loss = 0.1054, eval: [6.4 s]
# Iteration 33 fit: [9.3 s]: Recall = 0.2071, Jaccard score = 0.1404, loss = 0.1018, eval: [6.4 s]
# Iteration 34 fit: [9.3 s]: Recall = 0.2041, Jaccard score = 0.1380, loss = 0.0976, eval: [6.4 s]
# Iteration 35 fit: [9.3 s]: Recall = 0.2104, Jaccard score = 0.1429, loss = 0.0931, eval: [6.4 s]
# Iteration 36 fit: [9.3 s]: Recall = 0.2104, Jaccard score = 0.1429, loss = 0.0897, eval: [6.4 s]
# Iteration 37 fit: [9.3 s]: Recall = 0.2090, Jaccard score = 0.1418, loss = 0.0864, eval: [6.4 s]
# Iteration 38 fit: [9.3 s]: Recall = 0.2126, Jaccard score = 0.1446, loss = 0.0825, eval: [6.4 s]
# Iteration 39 fit: [9.4 s]: Recall = 0.2150, Jaccard score = 0.1465, loss = 0.0803, eval: [6.4 s]
# Iteration 40 fit: [9.3 s]: Recall = 0.2197, Jaccard score = 0.1501, loss = 0.0772, eval: [6.4 s]
# Iteration 41 fit: [9.3 s]: Recall = 0.2172, Jaccard score = 0.1482, loss = 0.0738, eval: [6.4 s]
# Iteration 42 fit: [9.3 s]: Recall = 0.2193, Jaccard score = 0.1499, loss = 0.0715, eval: [6.4 s]
# Iteration 43 fit: [9.3 s]: Recall = 0.2165, Jaccard score = 0.1476, loss = 0.0684, eval: [6.5 s]
# Iteration 44 fit: [9.3 s]: Recall = 0.2159, Jaccard score = 0.1472, loss = 0.0667, eval: [6.4 s]
# Iteration 45 fit: [9.3 s]: Recall = 0.2208, Jaccard score = 0.1510, loss = 0.0642, eval: [6.4 s]
# Iteration 46 fit: [9.3 s]: Recall = 0.2193, Jaccard score = 0.1499, loss = 0.0621, eval: [6.6 s]
# Iteration 47 fit: [9.3 s]: Recall = 0.2232, Jaccard score = 0.1529, loss = 0.0607, eval: [6.4 s]
# Iteration 48 fit: [9.3 s]: Recall = 0.2161, Jaccard score = 0.1474, loss = 0.0592, eval: [6.4 s]
# Iteration 49 fit: [9.3 s]: Recall = 0.2197, Jaccard score = 0.1501, loss = 0.0575, eval: [6.4 s]
# Iteration 50 fit: [9.3 s]: Recall = 0.2230, Jaccard score = 0.1527, loss = 0.0552, eval: [6.4 s]
# Iteration 51 fit: [9.3 s]: Recall = 0.2273, Jaccard score = 0.1561, loss = 0.0539, eval: [6.4 s]
# Iteration 52 fit: [9.3 s]: Recall = 0.2259, Jaccard score = 0.1551, loss = 0.0529, eval: [6.4 s]
# Iteration 53 fit: [9.3 s]: Recall = 0.2264, Jaccard score = 0.1554, loss = 0.0517, eval: [6.4 s]
# Iteration 54 fit: [9.4 s]: Recall = 0.2262, Jaccard score = 0.1552, loss = 0.0497, eval: [6.4 s]
# Iteration 55 fit: [9.3 s]: Recall = 0.2280, Jaccard score = 0.1567, loss = 0.0486, eval: [6.4 s]
# Iteration 56 fit: [9.3 s]: Recall = 0.2303, Jaccard score = 0.1585, loss = 0.0476, eval: [6.4 s]
# Iteration 57 fit: [9.3 s]: Recall = 0.2275, Jaccard score = 0.1563, loss = 0.0464, eval: [6.4 s]
# Iteration 58 fit: [9.3 s]: Recall = 0.2308, Jaccard score = 0.1590, loss = 0.0455, eval: [6.4 s]
# Iteration 59 fit: [9.3 s]: Recall = 0.2325, Jaccard score = 0.1603, loss = 0.0436, eval: [6.4 s]
# Iteration 60 fit: [9.3 s]: Recall = 0.2334, Jaccard score = 0.1611, loss = 0.0435, eval: [6.4 s]
# Iteration 61 fit: [9.3 s]: Recall = 0.2309, Jaccard score = 0.1590, loss = 0.0417, eval: [6.4 s]
# Iteration 62 fit: [9.5 s]: Recall = 0.2350, Jaccard score = 0.1623, loss = 0.0408, eval: [6.4 s]
# Iteration 63 fit: [9.3 s]: Recall = 0.2379, Jaccard score = 0.1646, loss = 0.0406, eval: [6.4 s]
# Iteration 64 fit: [9.3 s]: Recall = 0.2331, Jaccard score = 0.1608, loss = 0.0394, eval: [6.4 s]
# Iteration 65 fit: [9.3 s]: Recall = 0.2397, Jaccard score = 0.1661, loss = 0.0395, eval: [6.4 s]
# Iteration 66 fit: [9.3 s]: Recall = 0.2380, Jaccard score = 0.1647, loss = 0.0385, eval: [6.4 s]
# Iteration 67 fit: [9.3 s]: Recall = 0.2384, Jaccard score = 0.1651, loss = 0.0383, eval: [6.5 s]
# Iteration 68 fit: [9.3 s]: Recall = 0.2365, Jaccard score = 0.1635, loss = 0.0377, eval: [6.4 s]
# Iteration 69 fit: [9.3 s]: Recall = 0.2398, Jaccard score = 0.1662, loss = 0.0364, eval: [6.6 s]
# Iteration 70 fit: [9.3 s]: Recall = 0.2377, Jaccard score = 0.1644, loss = 0.0356, eval: [6.4 s]
# Iteration 71 fit: [9.3 s]: Recall = 0.2423, Jaccard score = 0.1682, loss = 0.0354, eval: [6.4 s]
# Iteration 72 fit: [9.3 s]: Recall = 0.2384, Jaccard score = 0.1651, loss = 0.0353, eval: [6.4 s]
# Iteration 73 fit: [9.3 s]: Recall = 0.2450, Jaccard score = 0.1704, loss = 0.0341, eval: [6.4 s]
# Iteration 74 fit: [9.3 s]: Recall = 0.2378, Jaccard score = 0.1645, loss = 0.0337, eval: [6.4 s]
# Iteration 75 fit: [9.3 s]: Recall = 0.2439, Jaccard score = 0.1695, loss = 0.0335, eval: [6.4 s]
# Iteration 76 fit: [9.3 s]: Recall = 0.2384, Jaccard score = 0.1651, loss = 0.0332, eval: [6.4 s]
# Iteration 77 fit: [9.4 s]: Recall = 0.2412, Jaccard score = 0.1673, loss = 0.0317, eval: [6.4 s]
# Iteration 78 fit: [9.3 s]: Recall = 0.2465, Jaccard score = 0.1716, loss = 0.0323, eval: [6.4 s]
# Iteration 79 fit: [9.3 s]: Recall = 0.2435, Jaccard score = 0.1691, loss = 0.0313, eval: [6.4 s]
# Iteration 80 fit: [9.3 s]: Recall = 0.2454, Jaccard score = 0.1707, loss = 0.0315, eval: [6.4 s]
# Iteration 81 fit: [9.3 s]: Recall = 0.2443, Jaccard score = 0.1698, loss = 0.0310, eval: [6.4 s]
# Iteration 82 fit: [9.3 s]: Recall = 0.2439, Jaccard score = 0.1695, loss = 0.0305, eval: [6.4 s]
# Iteration 83 fit: [9.3 s]: Recall = 0.2444, Jaccard score = 0.1699, loss = 0.0302, eval: [6.4 s]
# Iteration 84 fit: [9.3 s]: Recall = 0.2480, Jaccard score = 0.1728, loss = 0.0300, eval: [6.4 s]
# Iteration 85 fit: [9.5 s]: Recall = 0.2502, Jaccard score = 0.1746, loss = 0.0299, eval: [6.4 s]
# Iteration 86 fit: [9.3 s]: Recall = 0.2477, Jaccard score = 0.1726, loss = 0.0288, eval: [6.4 s]
# Iteration 87 fit: [9.3 s]: Recall = 0.2517, Jaccard score = 0.1758, loss = 0.0291, eval: [6.5 s]
# Iteration 88 fit: [9.3 s]: Recall = 0.2416, Jaccard score = 0.1677, loss = 0.0285, eval: [6.4 s]
# Iteration 89 fit: [9.3 s]: Recall = 0.2503, Jaccard score = 0.1747, loss = 0.0293, eval: [6.4 s]
# Iteration 90 fit: [9.3 s]: Recall = 0.2489, Jaccard score = 0.1736, loss = 0.0283, eval: [6.4 s]
# Iteration 91 fit: [9.3 s]: Recall = 0.2540, Jaccard score = 0.1778, loss = 0.0282, eval: [6.5 s]
# Iteration 92 fit: [9.5 s]: Recall = 0.2485, Jaccard score = 0.1732, loss = 0.0274, eval: [6.4 s]
# Iteration 93 fit: [9.3 s]: Recall = 0.2488, Jaccard score = 0.1735, loss = 0.0274, eval: [6.4 s]
# Iteration 94 fit: [9.3 s]: Recall = 0.2530, Jaccard score = 0.1769, loss = 0.0274, eval: [6.4 s]
# Iteration 95 fit: [9.3 s]: Recall = 0.2507, Jaccard score = 0.1751, loss = 0.0270, eval: [6.4 s]
# Iteration 96 fit: [9.3 s]: Recall = 0.2448, Jaccard score = 0.1702, loss = 0.0268, eval: [6.4 s]
# Iteration 97 fit: [9.3 s]: Recall = 0.2486, Jaccard score = 0.1733, loss = 0.0275, eval: [6.4 s]
# Iteration 98 fit: [9.3 s]: Recall = 0.2499, Jaccard score = 0.1744, loss = 0.0265, eval: [6.4 s]
# Iteration 99 fit: [9.3 s]: Recall = 0.2527, Jaccard score = 0.1767, loss = 0.0262, eval: [6.4 s]
# Iteration 100 fit: [9.5 s]: Recall = 0.2545, Jaccard score = 0.1782, loss = 0.0259, eval: [6.4 s]
# Iteration 101 fit: [9.3 s]: Recall = 0.2522, Jaccard score = 0.1763, loss = 0.0259, eval: [6.4 s]
# Iteration 102 fit: [9.3 s]: Recall = 0.2519, Jaccard score = 0.1760, loss = 0.0264, eval: [6.4 s]
# Iteration 103 fit: [9.3 s]: Recall = 0.2577, Jaccard score = 0.1808, loss = 0.0265, eval: [6.4 s]
# Iteration 104 fit: [9.3 s]: Recall = 0.2568, Jaccard score = 0.1800, loss = 0.0258, eval: [6.4 s]
# Iteration 105 fit: [9.3 s]: Recall = 0.2559, Jaccard score = 0.1793, loss = 0.0254, eval: [6.4 s]
# Iteration 106 fit: [9.3 s]: Recall = 0.2598, Jaccard score = 0.1826, loss = 0.0256, eval: [6.4 s]
# Iteration 107 fit: [9.3 s]: Recall = 0.2565, Jaccard score = 0.1799, loss = 0.0255, eval: [6.5 s]
# Iteration 108 fit: [9.3 s]: Recall = 0.2550, Jaccard score = 0.1785, loss = 0.0253, eval: [6.4 s]
# Iteration 109 fit: [9.3 s]: Recall = 0.2532, Jaccard score = 0.1771, loss = 0.0250, eval: [6.4 s]
# Iteration 110 fit: [9.3 s]: Recall = 0.2527, Jaccard score = 0.1767, loss = 0.0252, eval: [6.4 s]
# Iteration 111 fit: [9.3 s]: Recall = 0.2551, Jaccard score = 0.1786, loss = 0.0250, eval: [6.4 s]
# Iteration 112 fit: [9.3 s]: Recall = 0.2596, Jaccard score = 0.1824, loss = 0.0247, eval: [6.4 s]
# Iteration 113 fit: [9.3 s]: Recall = 0.2568, Jaccard score = 0.1800, loss = 0.0253, eval: [6.4 s]
# Iteration 114 fit: [9.3 s]: Recall = 0.2581, Jaccard score = 0.1812, loss = 0.0243, eval: [6.4 s]
# Iteration 115 fit: [9.4 s]: Recall = 0.2613, Jaccard score = 0.1838, loss = 0.0247, eval: [6.5 s]
# Iteration 116 fit: [9.3 s]: Recall = 0.2619, Jaccard score = 0.1843, loss = 0.0245, eval: [6.4 s]
# Iteration 117 fit: [9.3 s]: Recall = 0.2601, Jaccard score = 0.1828, loss = 0.0242, eval: [6.4 s]
# Iteration 118 fit: [9.3 s]: Recall = 0.2578, Jaccard score = 0.1809, loss = 0.0244, eval: [6.4 s]
# Iteration 119 fit: [9.3 s]: Recall = 0.2650, Jaccard score = 0.1869, loss = 0.0246, eval: [6.4 s]
# Iteration 120 fit: [9.3 s]: Recall = 0.2644, Jaccard score = 0.1864, loss = 0.0246, eval: [6.4 s]
# Iteration 121 fit: [9.3 s]: Recall = 0.2596, Jaccard score = 0.1824, loss = 0.0240, eval: [6.4 s]
# Iteration 122 fit: [9.3 s]: Recall = 0.2583, Jaccard score = 0.1813, loss = 0.0240, eval: [6.4 s]
# Iteration 123 fit: [9.5 s]: Recall = 0.2594, Jaccard score = 0.1822, loss = 0.0246, eval: [6.4 s]
# Iteration 124 fit: [9.3 s]: Recall = 0.2649, Jaccard score = 0.1868, loss = 0.0237, eval: [6.4 s]
# Iteration 125 fit: [9.3 s]: Recall = 0.2653, Jaccard score = 0.1872, loss = 0.0244, eval: [6.4 s]
# Iteration 126 fit: [9.3 s]: Recall = 0.2634, Jaccard score = 0.1855, loss = 0.0240, eval: [6.4 s]
# Iteration 127 fit: [9.3 s]: Recall = 0.2650, Jaccard score = 0.1869, loss = 0.0234, eval: [6.4 s]
# Iteration 128 fit: [9.3 s]: Recall = 0.2670, Jaccard score = 0.1886, loss = 0.0241, eval: [6.4 s]
# Iteration 129 fit: [9.3 s]: Recall = 0.2705, Jaccard score = 0.1916, loss = 0.0239, eval: [6.4 s]
# End. Best Iteration 129:  Recall = 0.2705, Jaccard score = 0.1916. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,128]_1561718212.h5
# Model test performed 
# Recall score: 0.06566114765252892     Jaccard score: 0.04066296790504951