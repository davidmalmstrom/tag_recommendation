--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[128,32,16]"
--reg_layers: "[0,0,0]"
--num_k_folds: "5"
--early_stopping: "35"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[128,32,16]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[128,32,16]_1563525734.h5
--weights_path: Pretrain/_MLP_8_[128,32,16]_1563525734.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0327, Jaccard score = 0.0197
# Iteration 0 fit: [14.9 s]: Recall = 0.2137, Jaccard score = 0.1447, loss = 0.4368, eval: [15.6 s]
# Iteration 1 fit: [14.2 s]: Recall = 0.2416, Jaccard score = 0.1668, loss = 0.3974, eval: [15.5 s]
# Iteration 2 fit: [14.3 s]: Recall = 0.2559, Jaccard score = 0.1784, loss = 0.3811, eval: [15.6 s]
# Iteration 3 fit: [14.3 s]: Recall = 0.2598, Jaccard score = 0.1816, loss = 0.3680, eval: [15.3 s]
# Iteration 4 fit: [14.2 s]: Recall = 0.2647, Jaccard score = 0.1857, loss = 0.3561, eval: [15.5 s]
# Iteration 5 fit: [14.3 s]: Recall = 0.2658, Jaccard score = 0.1866, loss = 0.3447, eval: [15.5 s]
# Iteration 6 fit: [14.2 s]: Recall = 0.2664, Jaccard score = 0.1871, loss = 0.3328, eval: [15.5 s]
# Iteration 7 fit: [14.3 s]: Recall = 0.2663, Jaccard score = 0.1870, loss = 0.3216, eval: [15.5 s]
# Iteration 8 fit: [14.2 s]: Recall = 0.2662, Jaccard score = 0.1869, loss = 0.3102, eval: [15.5 s]
# Iteration 9 fit: [14.3 s]: Recall = 0.2654, Jaccard score = 0.1862, loss = 0.2994, eval: [15.6 s]
# Iteration 10 fit: [14.3 s]: Recall = 0.2600, Jaccard score = 0.1818, loss = 0.2892, eval: [15.5 s]
# Iteration 11 fit: [14.3 s]: Recall = 0.2650, Jaccard score = 0.1859, loss = 0.2785, eval: [15.5 s]
# Iteration 12 fit: [14.2 s]: Recall = 0.2622, Jaccard score = 0.1836, loss = 0.2701, eval: [15.5 s]
# Iteration 13 fit: [14.3 s]: Recall = 0.2597, Jaccard score = 0.1815, loss = 0.2601, eval: [15.5 s]
# Iteration 14 fit: [14.2 s]: Recall = 0.2574, Jaccard score = 0.1796, loss = 0.2522, eval: [15.6 s]
# Iteration 15 fit: [14.3 s]: Recall = 0.2607, Jaccard score = 0.1823, loss = 0.2428, eval: [15.5 s]
# Iteration 16 fit: [14.2 s]: Recall = 0.2649, Jaccard score = 0.1858, loss = 0.2352, eval: [15.5 s]
# Iteration 17 fit: [14.3 s]: Recall = 0.2584, Jaccard score = 0.1805, loss = 0.2284, eval: [15.5 s]
# Iteration 18 fit: [14.2 s]: Recall = 0.2532, Jaccard score = 0.1762, loss = 0.2214, eval: [15.5 s]
# Iteration 19 fit: [14.4 s]: Recall = 0.2563, Jaccard score = 0.1787, loss = 0.2135, eval: [15.5 s]
# Iteration 20 fit: [14.2 s]: Recall = 0.2541, Jaccard score = 0.1769, loss = 0.2077, eval: [15.5 s]
# Iteration 21 fit: [14.3 s]: Recall = 0.2526, Jaccard score = 0.1757, loss = 0.2008, eval: [15.4 s]
# Iteration 22 fit: [14.2 s]: Recall = 0.2533, Jaccard score = 0.1763, loss = 0.1955, eval: [15.5 s]
# Iteration 23 fit: [14.4 s]: Recall = 0.2510, Jaccard score = 0.1744, loss = 0.1888, eval: [15.5 s]
# Iteration 24 fit: [14.2 s]: Recall = 0.2520, Jaccard score = 0.1752, loss = 0.1839, eval: [15.7 s]
# Iteration 25 fit: [14.3 s]: Recall = 0.2524, Jaccard score = 0.1755, loss = 0.1788, eval: [15.5 s]
# Iteration 26 fit: [14.2 s]: Recall = 0.2527, Jaccard score = 0.1758, loss = 0.1738, eval: [15.5 s]
# Iteration 27 fit: [14.3 s]: Recall = 0.2551, Jaccard score = 0.1777, loss = 0.1684, eval: [15.5 s]
# Iteration 28 fit: [14.2 s]: Recall = 0.2510, Jaccard score = 0.1743, loss = 0.1638, eval: [15.5 s]
# Iteration 29 fit: [14.3 s]: Recall = 0.2520, Jaccard score = 0.1752, loss = 0.1599, eval: [15.4 s]
# Iteration 30 fit: [14.3 s]: Recall = 0.2506, Jaccard score = 0.1740, loss = 0.1552, eval: [15.5 s]
# Iteration 31 fit: [14.3 s]: Recall = 0.2495, Jaccard score = 0.1731, loss = 0.1506, eval: [15.5 s]
# Iteration 32 fit: [14.4 s]: Recall = 0.2467, Jaccard score = 0.1709, loss = 0.1475, eval: [15.7 s]
# Iteration 33 fit: [14.3 s]: Recall = 0.2539, Jaccard score = 0.1767, loss = 0.1436, eval: [15.5 s]
# Iteration 34 fit: [13.8 s]: Recall = 0.2487, Jaccard score = 0.1725, loss = 0.1407, eval: [15.4 s]
# Iteration 35 fit: [14.4 s]: Recall = 0.2533, Jaccard score = 0.1763, loss = 0.1371, eval: [15.5 s]
# Iteration 36 fit: [14.2 s]: Recall = 0.2528, Jaccard score = 0.1758, loss = 0.1340, eval: [15.5 s]
# Iteration 37 fit: [14.3 s]: Recall = 0.2524, Jaccard score = 0.1755, loss = 0.1310, eval: [15.4 s]
# Iteration 38 fit: [14.2 s]: Recall = 0.2469, Jaccard score = 0.1710, loss = 0.1277, eval: [15.5 s]
# Iteration 39 fit: [14.3 s]: Recall = 0.2507, Jaccard score = 0.1741, loss = 0.1248, eval: [15.5 s]
# Iteration 40 fit: [14.2 s]: Recall = 0.2492, Jaccard score = 0.1729, loss = 0.1229, eval: [15.5 s]
# Iteration 41 fit: [14.3 s]: Recall = 0.2491, Jaccard score = 0.1728, loss = 0.1200, eval: [15.5 s]
# End. Best Iteration 6:  Recall = 0.2664, Jaccard score = 0.1871. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,32,16]_1563525734.h5
# The average best performance after k-fold 1 is: Recall = 0.2664322250639386, Jaccard score = 0.18708750505095856
# 
# Performing k-fold 2
# Init: Recall = 0.0320, Jaccard score = 0.0195
# Iteration 0 fit: [15.5 s]: Recall = 0.2100, Jaccard score = 0.1432, loss = 0.4367, eval: [15.4 s]
# Iteration 1 fit: [14.4 s]: Recall = 0.2327, Jaccard score = 0.1613, loss = 0.3976, eval: [15.7 s]
# Iteration 2 fit: [14.2 s]: Recall = 0.2492, Jaccard score = 0.1747, loss = 0.3813, eval: [15.6 s]
# Iteration 3 fit: [14.4 s]: Recall = 0.2500, Jaccard score = 0.1753, loss = 0.3684, eval: [15.7 s]
# Iteration 4 fit: [14.3 s]: Recall = 0.2491, Jaccard score = 0.1746, loss = 0.3563, eval: [15.7 s]
# Iteration 5 fit: [14.3 s]: Recall = 0.2511, Jaccard score = 0.1762, loss = 0.3442, eval: [15.7 s]
# Iteration 6 fit: [14.3 s]: Recall = 0.2546, Jaccard score = 0.1791, loss = 0.3323, eval: [15.7 s]
# Iteration 7 fit: [14.4 s]: Recall = 0.2521, Jaccard score = 0.1771, loss = 0.3206, eval: [15.7 s]
# Iteration 8 fit: [14.2 s]: Recall = 0.2558, Jaccard score = 0.1802, loss = 0.3093, eval: [15.7 s]
# Iteration 9 fit: [14.4 s]: Recall = 0.2570, Jaccard score = 0.1811, loss = 0.2989, eval: [15.7 s]
# Iteration 10 fit: [14.2 s]: Recall = 0.2556, Jaccard score = 0.1800, loss = 0.2889, eval: [15.7 s]
# Iteration 11 fit: [14.4 s]: Recall = 0.2550, Jaccard score = 0.1795, loss = 0.2796, eval: [15.7 s]
# Iteration 12 fit: [14.3 s]: Recall = 0.2555, Jaccard score = 0.1799, loss = 0.2700, eval: [15.7 s]
# Iteration 13 fit: [14.3 s]: Recall = 0.2555, Jaccard score = 0.1798, loss = 0.2605, eval: [15.7 s]
# Iteration 14 fit: [14.3 s]: Recall = 0.2546, Jaccard score = 0.1791, loss = 0.2529, eval: [15.7 s]
# Iteration 15 fit: [14.4 s]: Recall = 0.2522, Jaccard score = 0.1772, loss = 0.2445, eval: [15.8 s]
# Iteration 16 fit: [14.3 s]: Recall = 0.2528, Jaccard score = 0.1776, loss = 0.2362, eval: [15.7 s]
# Iteration 17 fit: [14.3 s]: Recall = 0.2490, Jaccard score = 0.1745, loss = 0.2300, eval: [15.7 s]
# Iteration 18 fit: [14.3 s]: Recall = 0.2509, Jaccard score = 0.1761, loss = 0.2214, eval: [15.6 s]
# Iteration 19 fit: [14.4 s]: Recall = 0.2495, Jaccard score = 0.1749, loss = 0.2146, eval: [15.7 s]
# Iteration 20 fit: [14.2 s]: Recall = 0.2505, Jaccard score = 0.1758, loss = 0.2086, eval: [15.7 s]
# Iteration 21 fit: [14.4 s]: Recall = 0.2498, Jaccard score = 0.1751, loss = 0.2026, eval: [15.7 s]
# Iteration 22 fit: [14.3 s]: Recall = 0.2512, Jaccard score = 0.1763, loss = 0.1958, eval: [15.7 s]
# Iteration 23 fit: [14.4 s]: Recall = 0.2481, Jaccard score = 0.1738, loss = 0.1903, eval: [15.7 s]
# Iteration 24 fit: [14.3 s]: Recall = 0.2466, Jaccard score = 0.1726, loss = 0.1848, eval: [15.7 s]
# Iteration 25 fit: [14.3 s]: Recall = 0.2523, Jaccard score = 0.1772, loss = 0.1804, eval: [15.7 s]
# Iteration 26 fit: [14.3 s]: Recall = 0.2466, Jaccard score = 0.1725, loss = 0.1738, eval: [15.7 s]
# Iteration 27 fit: [14.4 s]: Recall = 0.2477, Jaccard score = 0.1734, loss = 0.1691, eval: [15.7 s]
# Iteration 28 fit: [14.2 s]: Recall = 0.2498, Jaccard score = 0.1751, loss = 0.1646, eval: [15.7 s]
# Iteration 29 fit: [14.4 s]: Recall = 0.2513, Jaccard score = 0.1764, loss = 0.1603, eval: [15.7 s]
# Iteration 30 fit: [14.2 s]: Recall = 0.2460, Jaccard score = 0.1721, loss = 0.1563, eval: [15.7 s]
# Iteration 31 fit: [14.4 s]: Recall = 0.2468, Jaccard score = 0.1727, loss = 0.1518, eval: [15.7 s]
# Iteration 32 fit: [14.3 s]: Recall = 0.2466, Jaccard score = 0.1725, loss = 0.1484, eval: [15.7 s]
# Iteration 33 fit: [14.4 s]: Recall = 0.2453, Jaccard score = 0.1715, loss = 0.1443, eval: [15.7 s]
# Iteration 34 fit: [14.3 s]: Recall = 0.2446, Jaccard score = 0.1709, loss = 0.1405, eval: [15.7 s]
# Iteration 35 fit: [14.3 s]: Recall = 0.2466, Jaccard score = 0.1726, loss = 0.1371, eval: [15.7 s]
# Iteration 36 fit: [14.2 s]: Recall = 0.2478, Jaccard score = 0.1735, loss = 0.1343, eval: [15.6 s]
# Iteration 37 fit: [14.3 s]: Recall = 0.2479, Jaccard score = 0.1736, loss = 0.1308, eval: [15.7 s]
# Iteration 38 fit: [14.3 s]: Recall = 0.2464, Jaccard score = 0.1724, loss = 0.1282, eval: [15.7 s]
# Iteration 39 fit: [14.4 s]: Recall = 0.2480, Jaccard score = 0.1736, loss = 0.1247, eval: [15.8 s]
# Iteration 40 fit: [14.2 s]: Recall = 0.2493, Jaccard score = 0.1747, loss = 0.1221, eval: [15.7 s]
# Iteration 41 fit: [14.4 s]: Recall = 0.2462, Jaccard score = 0.1722, loss = 0.1204, eval: [15.7 s]
# Iteration 42 fit: [14.3 s]: Recall = 0.2419, Jaccard score = 0.1687, loss = 0.1169, eval: [15.7 s]
# Iteration 43 fit: [14.4 s]: Recall = 0.2442, Jaccard score = 0.1706, loss = 0.1147, eval: [15.7 s]
# Iteration 44 fit: [14.2 s]: Recall = 0.2464, Jaccard score = 0.1724, loss = 0.1113, eval: [15.7 s]
# End. Best Iteration 9:  Recall = 0.2570, Jaccard score = 0.1811. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,32,16]_1563525734.h5
# The average best performance after k-fold 2 is: Recall = 0.2616972440170435, Jaccard score = 0.18409198169674024
# 
# Performing k-fold 3
# Init: Recall = 0.0321, Jaccard score = 0.0194
# Iteration 0 fit: [16.6 s]: Recall = 0.2144, Jaccard score = 0.1463, loss = 0.4372, eval: [15.8 s]
# Iteration 1 fit: [14.4 s]: Recall = 0.2425, Jaccard score = 0.1687, loss = 0.3977, eval: [15.7 s]
# Iteration 2 fit: [14.4 s]: Recall = 0.2490, Jaccard score = 0.1740, loss = 0.3816, eval: [15.8 s]
# Iteration 3 fit: [14.4 s]: Recall = 0.2581, Jaccard score = 0.1815, loss = 0.3683, eval: [15.7 s]
# Iteration 4 fit: [14.4 s]: Recall = 0.2569, Jaccard score = 0.1805, loss = 0.3564, eval: [15.7 s]
# Iteration 5 fit: [14.4 s]: Recall = 0.2581, Jaccard score = 0.1815, loss = 0.3444, eval: [15.9 s]
# Iteration 6 fit: [14.4 s]: Recall = 0.2612, Jaccard score = 0.1840, loss = 0.3320, eval: [15.8 s]
# Iteration 7 fit: [14.4 s]: Recall = 0.2624, Jaccard score = 0.1850, loss = 0.3206, eval: [15.7 s]
# Iteration 8 fit: [14.4 s]: Recall = 0.2569, Jaccard score = 0.1805, loss = 0.3092, eval: [15.8 s]
# Iteration 9 fit: [14.4 s]: Recall = 0.2597, Jaccard score = 0.1828, loss = 0.2982, eval: [15.7 s]
# Iteration 10 fit: [14.4 s]: Recall = 0.2586, Jaccard score = 0.1820, loss = 0.2882, eval: [15.8 s]
# Iteration 11 fit: [14.4 s]: Recall = 0.2608, Jaccard score = 0.1838, loss = 0.2787, eval: [15.8 s]
# Iteration 12 fit: [14.4 s]: Recall = 0.2596, Jaccard score = 0.1827, loss = 0.2689, eval: [15.7 s]
# Iteration 13 fit: [14.4 s]: Recall = 0.2577, Jaccard score = 0.1812, loss = 0.2598, eval: [15.8 s]
# Iteration 14 fit: [14.4 s]: Recall = 0.2563, Jaccard score = 0.1800, loss = 0.2518, eval: [15.7 s]
# Iteration 15 fit: [14.4 s]: Recall = 0.2568, Jaccard score = 0.1804, loss = 0.2432, eval: [15.8 s]
# Iteration 16 fit: [14.4 s]: Recall = 0.2580, Jaccard score = 0.1814, loss = 0.2353, eval: [15.8 s]
# Iteration 17 fit: [14.4 s]: Recall = 0.2579, Jaccard score = 0.1813, loss = 0.2280, eval: [15.8 s]
# Iteration 18 fit: [14.4 s]: Recall = 0.2558, Jaccard score = 0.1796, loss = 0.2214, eval: [15.8 s]
# Iteration 19 fit: [14.4 s]: Recall = 0.2539, Jaccard score = 0.1780, loss = 0.2144, eval: [15.8 s]
# Iteration 20 fit: [14.4 s]: Recall = 0.2513, Jaccard score = 0.1759, loss = 0.2073, eval: [15.8 s]
# Iteration 21 fit: [14.4 s]: Recall = 0.2501, Jaccard score = 0.1749, loss = 0.2011, eval: [15.8 s]
# Iteration 22 fit: [14.4 s]: Recall = 0.2568, Jaccard score = 0.1804, loss = 0.1960, eval: [15.8 s]
# Iteration 23 fit: [14.4 s]: Recall = 0.2545, Jaccard score = 0.1785, loss = 0.1886, eval: [15.7 s]
# Iteration 24 fit: [14.4 s]: Recall = 0.2528, Jaccard score = 0.1771, loss = 0.1843, eval: [15.8 s]
# Iteration 25 fit: [14.4 s]: Recall = 0.2520, Jaccard score = 0.1765, loss = 0.1794, eval: [15.8 s]
# Iteration 26 fit: [14.4 s]: Recall = 0.2534, Jaccard score = 0.1776, loss = 0.1736, eval: [15.8 s]
# Iteration 27 fit: [14.4 s]: Recall = 0.2513, Jaccard score = 0.1759, loss = 0.1686, eval: [15.8 s]
# Iteration 28 fit: [14.4 s]: Recall = 0.2551, Jaccard score = 0.1790, loss = 0.1646, eval: [15.8 s]
# Iteration 29 fit: [14.4 s]: Recall = 0.2531, Jaccard score = 0.1774, loss = 0.1596, eval: [15.7 s]
# Iteration 30 fit: [14.4 s]: Recall = 0.2531, Jaccard score = 0.1774, loss = 0.1559, eval: [15.8 s]
# Iteration 31 fit: [14.4 s]: Recall = 0.2522, Jaccard score = 0.1766, loss = 0.1525, eval: [15.7 s]
# Iteration 32 fit: [14.4 s]: Recall = 0.2522, Jaccard score = 0.1766, loss = 0.1481, eval: [15.8 s]
# Iteration 33 fit: [14.4 s]: Recall = 0.2476, Jaccard score = 0.1729, loss = 0.1444, eval: [15.7 s]
# Iteration 34 fit: [14.4 s]: Recall = 0.2526, Jaccard score = 0.1769, loss = 0.1416, eval: [15.8 s]
# Iteration 35 fit: [14.4 s]: Recall = 0.2513, Jaccard score = 0.1759, loss = 0.1389, eval: [15.8 s]
# Iteration 36 fit: [14.4 s]: Recall = 0.2515, Jaccard score = 0.1761, loss = 0.1351, eval: [15.8 s]
# Iteration 37 fit: [14.4 s]: Recall = 0.2471, Jaccard score = 0.1724, loss = 0.1314, eval: [15.7 s]
# Iteration 38 fit: [14.4 s]: Recall = 0.2505, Jaccard score = 0.1752, loss = 0.1285, eval: [15.8 s]
# Iteration 39 fit: [14.4 s]: Recall = 0.2474, Jaccard score = 0.1727, loss = 0.1269, eval: [15.8 s]
# Iteration 40 fit: [14.4 s]: Recall = 0.2483, Jaccard score = 0.1734, loss = 0.1233, eval: [15.8 s]
# Iteration 41 fit: [14.4 s]: Recall = 0.2490, Jaccard score = 0.1740, loss = 0.1216, eval: [15.8 s]
# Iteration 42 fit: [14.4 s]: Recall = 0.2483, Jaccard score = 0.1734, loss = 0.1189, eval: [15.8 s]
# End. Best Iteration 7:  Recall = 0.2624, Jaccard score = 0.1850. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,32,16]_1563525734.h5
# The average best performance after k-fold 3 is: Recall = 0.2619178595523074, Jaccard score = 0.1844108673192885
# 
# Performing k-fold 4
# Init: Recall = 0.0327, Jaccard score = 0.0199
# Iteration 0 fit: [16.6 s]: Recall = 0.2203, Jaccard score = 0.1514, loss = 0.4373, eval: [15.9 s]
# Iteration 1 fit: [14.1 s]: Recall = 0.2458, Jaccard score = 0.1719, loss = 0.3986, eval: [15.8 s]
# Iteration 2 fit: [14.1 s]: Recall = 0.2559, Jaccard score = 0.1803, loss = 0.3823, eval: [15.8 s]
# Iteration 3 fit: [14.1 s]: Recall = 0.2617, Jaccard score = 0.1851, loss = 0.3689, eval: [15.9 s]
# Iteration 4 fit: [14.1 s]: Recall = 0.2638, Jaccard score = 0.1868, loss = 0.3572, eval: [15.9 s]
# Iteration 5 fit: [14.1 s]: Recall = 0.2628, Jaccard score = 0.1860, loss = 0.3447, eval: [15.8 s]
# Iteration 6 fit: [14.1 s]: Recall = 0.2668, Jaccard score = 0.1893, loss = 0.3324, eval: [15.8 s]
# Iteration 7 fit: [14.1 s]: Recall = 0.2603, Jaccard score = 0.1839, loss = 0.3210, eval: [15.9 s]
# Iteration 8 fit: [14.1 s]: Recall = 0.2654, Jaccard score = 0.1882, loss = 0.3093, eval: [15.9 s]
# Iteration 9 fit: [14.1 s]: Recall = 0.2653, Jaccard score = 0.1881, loss = 0.2987, eval: [15.8 s]
# Iteration 10 fit: [14.0 s]: Recall = 0.2651, Jaccard score = 0.1880, loss = 0.2874, eval: [15.9 s]
# Iteration 11 fit: [14.0 s]: Recall = 0.2628, Jaccard score = 0.1860, loss = 0.2772, eval: [15.9 s]
# Iteration 12 fit: [14.0 s]: Recall = 0.2649, Jaccard score = 0.1877, loss = 0.2680, eval: [15.9 s]
# Iteration 13 fit: [14.0 s]: Recall = 0.2638, Jaccard score = 0.1868, loss = 0.2585, eval: [15.9 s]
# Iteration 14 fit: [14.0 s]: Recall = 0.2571, Jaccard score = 0.1812, loss = 0.2505, eval: [15.9 s]
# Iteration 15 fit: [14.1 s]: Recall = 0.2546, Jaccard score = 0.1791, loss = 0.2407, eval: [15.9 s]
# Iteration 16 fit: [14.1 s]: Recall = 0.2552, Jaccard score = 0.1796, loss = 0.2327, eval: [15.9 s]
# Iteration 17 fit: [14.1 s]: Recall = 0.2568, Jaccard score = 0.1810, loss = 0.2257, eval: [15.9 s]
# Iteration 18 fit: [14.1 s]: Recall = 0.2506, Jaccard score = 0.1759, loss = 0.2173, eval: [15.8 s]
# Iteration 19 fit: [14.1 s]: Recall = 0.2529, Jaccard score = 0.1778, loss = 0.2114, eval: [15.9 s]
# Iteration 20 fit: [14.1 s]: Recall = 0.2532, Jaccard score = 0.1780, loss = 0.2053, eval: [15.9 s]
# Iteration 21 fit: [14.1 s]: Recall = 0.2559, Jaccard score = 0.1803, loss = 0.1984, eval: [15.9 s]
# Iteration 22 fit: [14.1 s]: Recall = 0.2496, Jaccard score = 0.1750, loss = 0.1914, eval: [15.9 s]
# Iteration 23 fit: [14.1 s]: Recall = 0.2538, Jaccard score = 0.1785, loss = 0.1860, eval: [15.9 s]
# Iteration 24 fit: [14.1 s]: Recall = 0.2495, Jaccard score = 0.1749, loss = 0.1811, eval: [15.9 s]
# Iteration 25 fit: [14.1 s]: Recall = 0.2488, Jaccard score = 0.1744, loss = 0.1763, eval: [17.5 s]
# Iteration 26 fit: [15.9 s]: Recall = 0.2519, Jaccard score = 0.1769, loss = 0.1707, eval: [15.9 s]
# Iteration 27 fit: [14.0 s]: Recall = 0.2509, Jaccard score = 0.1761, loss = 0.1658, eval: [15.9 s]
# Iteration 28 fit: [14.1 s]: Recall = 0.2489, Jaccard score = 0.1745, loss = 0.1618, eval: [15.8 s]
# Iteration 29 fit: [14.1 s]: Recall = 0.2457, Jaccard score = 0.1718, loss = 0.1574, eval: [16.3 s]
# Iteration 30 fit: [14.1 s]: Recall = 0.2519, Jaccard score = 0.1769, loss = 0.1525, eval: [15.9 s]
# Iteration 31 fit: [14.1 s]: Recall = 0.2539, Jaccard score = 0.1785, loss = 0.1496, eval: [15.8 s]
# Iteration 32 fit: [14.1 s]: Recall = 0.2424, Jaccard score = 0.1691, loss = 0.1449, eval: [15.9 s]
# Iteration 33 fit: [14.0 s]: Recall = 0.2500, Jaccard score = 0.1753, loss = 0.1420, eval: [15.9 s]
# Iteration 34 fit: [14.1 s]: Recall = 0.2466, Jaccard score = 0.1725, loss = 0.1394, eval: [15.9 s]
# Iteration 35 fit: [14.1 s]: Recall = 0.2483, Jaccard score = 0.1739, loss = 0.1350, eval: [15.9 s]
# Iteration 36 fit: [14.1 s]: Recall = 0.2473, Jaccard score = 0.1731, loss = 0.1318, eval: [15.9 s]
# Iteration 37 fit: [14.1 s]: Recall = 0.2493, Jaccard score = 0.1748, loss = 0.1299, eval: [15.9 s]
# Iteration 38 fit: [14.0 s]: Recall = 0.2499, Jaccard score = 0.1753, loss = 0.1270, eval: [15.9 s]
# Iteration 39 fit: [14.1 s]: Recall = 0.2528, Jaccard score = 0.1777, loss = 0.1239, eval: [15.8 s]
# Iteration 40 fit: [14.1 s]: Recall = 0.2510, Jaccard score = 0.1762, loss = 0.1214, eval: [15.9 s]
# Iteration 41 fit: [14.0 s]: Recall = 0.2509, Jaccard score = 0.1761, loss = 0.1188, eval: [15.8 s]
# End. Best Iteration 6:  Recall = 0.2668, Jaccard score = 0.1893. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,32,16]_1563525734.h5
# The average best performance after k-fold 4 is: Recall = 0.26313113559038825, Jaccard score = 0.1856390560275043
# 
# Performing k-fold 5
# Init: Recall = 0.0322, Jaccard score = 0.0195
# Iteration 0 fit: [16.6 s]: Recall = 0.2140, Jaccard score = 0.1462, loss = 0.4369, eval: [15.8 s]
# Iteration 1 fit: [14.4 s]: Recall = 0.2399, Jaccard score = 0.1668, loss = 0.3980, eval: [15.8 s]
# Iteration 2 fit: [14.5 s]: Recall = 0.2509, Jaccard score = 0.1758, loss = 0.3815, eval: [15.8 s]
# Iteration 3 fit: [14.4 s]: Recall = 0.2577, Jaccard score = 0.1814, loss = 0.3685, eval: [15.8 s]
# Iteration 4 fit: [14.5 s]: Recall = 0.2603, Jaccard score = 0.1836, loss = 0.3562, eval: [15.8 s]
# Iteration 5 fit: [14.4 s]: Recall = 0.2620, Jaccard score = 0.1850, loss = 0.3440, eval: [15.8 s]
# Iteration 6 fit: [14.4 s]: Recall = 0.2657, Jaccard score = 0.1881, loss = 0.3320, eval: [15.8 s]
# Iteration 7 fit: [14.4 s]: Recall = 0.2644, Jaccard score = 0.1870, loss = 0.3206, eval: [15.8 s]
# Iteration 8 fit: [14.5 s]: Recall = 0.2597, Jaccard score = 0.1831, loss = 0.3089, eval: [15.8 s]
# Iteration 9 fit: [14.4 s]: Recall = 0.2637, Jaccard score = 0.1865, loss = 0.2983, eval: [15.8 s]
# Iteration 10 fit: [14.5 s]: Recall = 0.2618, Jaccard score = 0.1848, loss = 0.2880, eval: [15.9 s]
# Iteration 11 fit: [14.4 s]: Recall = 0.2612, Jaccard score = 0.1844, loss = 0.2781, eval: [15.8 s]
# Iteration 12 fit: [14.5 s]: Recall = 0.2642, Jaccard score = 0.1869, loss = 0.2690, eval: [15.8 s]
# Iteration 13 fit: [14.4 s]: Recall = 0.2635, Jaccard score = 0.1862, loss = 0.2595, eval: [15.8 s]
# Iteration 14 fit: [14.5 s]: Recall = 0.2652, Jaccard score = 0.1877, loss = 0.2513, eval: [15.8 s]
# Iteration 15 fit: [14.4 s]: Recall = 0.2635, Jaccard score = 0.1862, loss = 0.2426, eval: [15.8 s]
# Iteration 16 fit: [14.4 s]: Recall = 0.2622, Jaccard score = 0.1851, loss = 0.2358, eval: [15.8 s]
# Iteration 17 fit: [14.4 s]: Recall = 0.2593, Jaccard score = 0.1827, loss = 0.2282, eval: [15.8 s]
# Iteration 18 fit: [14.5 s]: Recall = 0.2612, Jaccard score = 0.1843, loss = 0.2206, eval: [15.8 s]
# Iteration 19 fit: [14.4 s]: Recall = 0.2591, Jaccard score = 0.1826, loss = 0.2134, eval: [15.8 s]
# Iteration 20 fit: [14.4 s]: Recall = 0.2556, Jaccard score = 0.1797, loss = 0.2069, eval: [15.8 s]
# Iteration 21 fit: [14.4 s]: Recall = 0.2607, Jaccard score = 0.1839, loss = 0.2004, eval: [15.8 s]
# Iteration 22 fit: [14.4 s]: Recall = 0.2612, Jaccard score = 0.1844, loss = 0.1947, eval: [15.8 s]
# Iteration 23 fit: [14.4 s]: Recall = 0.2586, Jaccard score = 0.1822, loss = 0.1886, eval: [15.8 s]
# Iteration 24 fit: [14.4 s]: Recall = 0.2604, Jaccard score = 0.1837, loss = 0.1829, eval: [15.8 s]
# Iteration 25 fit: [14.4 s]: Recall = 0.2544, Jaccard score = 0.1787, loss = 0.1776, eval: [15.9 s]
# Iteration 26 fit: [14.4 s]: Recall = 0.2570, Jaccard score = 0.1808, loss = 0.1736, eval: [15.8 s]
# Iteration 27 fit: [14.4 s]: Recall = 0.2532, Jaccard score = 0.1777, loss = 0.1683, eval: [15.8 s]
# Iteration 28 fit: [14.5 s]: Recall = 0.2543, Jaccard score = 0.1786, loss = 0.1637, eval: [15.8 s]
# Iteration 29 fit: [14.4 s]: Recall = 0.2521, Jaccard score = 0.1768, loss = 0.1589, eval: [15.8 s]
# Iteration 30 fit: [14.5 s]: Recall = 0.2548, Jaccard score = 0.1790, loss = 0.1548, eval: [15.8 s]
# Iteration 31 fit: [14.4 s]: Recall = 0.2521, Jaccard score = 0.1768, loss = 0.1511, eval: [15.8 s]
# Iteration 32 fit: [14.6 s]: Recall = 0.2541, Jaccard score = 0.1784, loss = 0.1475, eval: [15.8 s]
# Iteration 33 fit: [14.4 s]: Recall = 0.2515, Jaccard score = 0.1763, loss = 0.1444, eval: [15.8 s]
# Iteration 34 fit: [14.6 s]: Recall = 0.2558, Jaccard score = 0.1798, loss = 0.1402, eval: [15.8 s]
# Iteration 35 fit: [14.4 s]: Recall = 0.2504, Jaccard score = 0.1753, loss = 0.1375, eval: [15.9 s]
# Iteration 36 fit: [14.4 s]: Recall = 0.2503, Jaccard score = 0.1753, loss = 0.1338, eval: [15.8 s]
# Iteration 37 fit: [14.4 s]: Recall = 0.2517, Jaccard score = 0.1765, loss = 0.1313, eval: [15.8 s]
# Iteration 38 fit: [14.4 s]: Recall = 0.2487, Jaccard score = 0.1740, loss = 0.1273, eval: [15.8 s]
# Iteration 39 fit: [14.4 s]: Recall = 0.2554, Jaccard score = 0.1795, loss = 0.1254, eval: [15.9 s]
# Iteration 40 fit: [14.6 s]: Recall = 0.2522, Jaccard score = 0.1769, loss = 0.1230, eval: [15.8 s]
# Iteration 41 fit: [14.4 s]: Recall = 0.2511, Jaccard score = 0.1759, loss = 0.1207, eval: [15.9 s]
# End. Best Iteration 6:  Recall = 0.2657, Jaccard score = 0.1881. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[128,32,16]_1563525734.h5
# The average best performance after k-fold 5 is: Recall = 0.2636414861803169, Jaccard score = 0.1861301654230526
