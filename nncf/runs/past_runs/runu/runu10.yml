--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--num_factors: "94"
--early_stopping: "45"
--test_dataset: "1"
--percentage: "0.0"
--dataset_name_prepend: "cold_0.0_"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='cold_0.0_', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.0, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1566231092.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1566231092.h5
# Load data done [1.5 s]. #user=20000, #item=2000, #train=143502, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0289, Jaccard score = 0.0221
# Iteration 0 fit: [9.6 s]: Recall = 0.0287, Jaccard score = 0.0219, loss = 0.5425, eval: [5.6 s]
# Iteration 1 fit: [9.2 s]: Recall = 0.0269, Jaccard score = 0.0205, loss = 0.5008, eval: [5.7 s]
# Iteration 2 fit: [9.1 s]: Recall = 0.0282, Jaccard score = 0.0215, loss = 0.4998, eval: [5.6 s]
# Iteration 3 fit: [9.1 s]: Recall = 0.0292, Jaccard score = 0.0223, loss = 0.4961, eval: [5.6 s]
# Iteration 4 fit: [9.1 s]: Recall = 0.0311, Jaccard score = 0.0238, loss = 0.4871, eval: [5.6 s]
# Iteration 5 fit: [9.1 s]: Recall = 0.0335, Jaccard score = 0.0257, loss = 0.4715, eval: [5.6 s]
# Iteration 6 fit: [9.1 s]: Recall = 0.0370, Jaccard score = 0.0285, loss = 0.4486, eval: [5.6 s]
# Iteration 7 fit: [9.1 s]: Recall = 0.0375, Jaccard score = 0.0289, loss = 0.4196, eval: [5.6 s]
# Iteration 8 fit: [9.1 s]: Recall = 0.0415, Jaccard score = 0.0320, loss = 0.3852, eval: [5.6 s]
# Iteration 9 fit: [9.1 s]: Recall = 0.0431, Jaccard score = 0.0333, loss = 0.3482, eval: [5.6 s]
# Iteration 10 fit: [9.1 s]: Recall = 0.0466, Jaccard score = 0.0361, loss = 0.3109, eval: [5.6 s]
# Iteration 11 fit: [9.1 s]: Recall = 0.0463, Jaccard score = 0.0359, loss = 0.2762, eval: [5.5 s]
# Iteration 12 fit: [9.1 s]: Recall = 0.0468, Jaccard score = 0.0363, loss = 0.2431, eval: [5.6 s]
# Iteration 13 fit: [9.1 s]: Recall = 0.0476, Jaccard score = 0.0369, loss = 0.2136, eval: [5.6 s]
# Iteration 14 fit: [9.1 s]: Recall = 0.0472, Jaccard score = 0.0366, loss = 0.1872, eval: [5.6 s]
# Iteration 15 fit: [9.1 s]: Recall = 0.0464, Jaccard score = 0.0359, loss = 0.1644, eval: [5.6 s]
# Iteration 16 fit: [9.1 s]: Recall = 0.0478, Jaccard score = 0.0371, loss = 0.1443, eval: [5.6 s]
# Iteration 17 fit: [9.1 s]: Recall = 0.0474, Jaccard score = 0.0367, loss = 0.1239, eval: [5.6 s]
# Iteration 18 fit: [9.1 s]: Recall = 0.0451, Jaccard score = 0.0349, loss = 0.1081, eval: [5.5 s]
# Iteration 19 fit: [9.1 s]: Recall = 0.0449, Jaccard score = 0.0348, loss = 0.0940, eval: [5.6 s]
# Iteration 20 fit: [9.1 s]: Recall = 0.0444, Jaccard score = 0.0343, loss = 0.0809, eval: [5.6 s]
# Iteration 21 fit: [9.1 s]: Recall = 0.0430, Jaccard score = 0.0332, loss = 0.0699, eval: [5.7 s]
# Iteration 22 fit: [9.1 s]: Recall = 0.0442, Jaccard score = 0.0342, loss = 0.0612, eval: [5.5 s]
# Iteration 23 fit: [9.1 s]: Recall = 0.0415, Jaccard score = 0.0320, loss = 0.0530, eval: [5.5 s]
# Iteration 24 fit: [9.1 s]: Recall = 0.0405, Jaccard score = 0.0312, loss = 0.0463, eval: [5.6 s]
# Iteration 25 fit: [9.1 s]: Recall = 0.0419, Jaccard score = 0.0324, loss = 0.0406, eval: [5.6 s]
# Iteration 26 fit: [9.1 s]: Recall = 0.0405, Jaccard score = 0.0312, loss = 0.0351, eval: [5.6 s]
# Iteration 27 fit: [9.1 s]: Recall = 0.0410, Jaccard score = 0.0316, loss = 0.0318, eval: [5.5 s]
# Iteration 28 fit: [9.1 s]: Recall = 0.0384, Jaccard score = 0.0295, loss = 0.0278, eval: [5.5 s]
# Iteration 29 fit: [9.1 s]: Recall = 0.0400, Jaccard score = 0.0308, loss = 0.0253, eval: [5.6 s]
# Iteration 30 fit: [9.1 s]: Recall = 0.0399, Jaccard score = 0.0308, loss = 0.0229, eval: [5.6 s]
# Iteration 31 fit: [9.1 s]: Recall = 0.0377, Jaccard score = 0.0290, loss = 0.0209, eval: [5.5 s]
# Iteration 32 fit: [9.1 s]: Recall = 0.0370, Jaccard score = 0.0284, loss = 0.0184, eval: [5.6 s]
# Iteration 33 fit: [9.1 s]: Recall = 0.0365, Jaccard score = 0.0280, loss = 0.0170, eval: [5.6 s]
# Iteration 34 fit: [9.1 s]: Recall = 0.0373, Jaccard score = 0.0287, loss = 0.0155, eval: [5.5 s]
# Iteration 35 fit: [9.1 s]: Recall = 0.0353, Jaccard score = 0.0271, loss = 0.0142, eval: [5.6 s]
# Iteration 36 fit: [9.1 s]: Recall = 0.0365, Jaccard score = 0.0280, loss = 0.0128, eval: [5.6 s]
# Iteration 37 fit: [9.1 s]: Recall = 0.0362, Jaccard score = 0.0279, loss = 0.0125, eval: [5.6 s]
# Iteration 38 fit: [9.1 s]: Recall = 0.0344, Jaccard score = 0.0264, loss = 0.0115, eval: [5.5 s]
# Iteration 39 fit: [9.1 s]: Recall = 0.0349, Jaccard score = 0.0268, loss = 0.0112, eval: [5.6 s]
# Iteration 40 fit: [9.1 s]: Recall = 0.0337, Jaccard score = 0.0259, loss = 0.0098, eval: [5.5 s]
# Iteration 41 fit: [9.1 s]: Recall = 0.0339, Jaccard score = 0.0260, loss = 0.0094, eval: [5.5 s]
# Iteration 42 fit: [9.1 s]: Recall = 0.0341, Jaccard score = 0.0262, loss = 0.0087, eval: [5.6 s]
# Iteration 43 fit: [9.1 s]: Recall = 0.0343, Jaccard score = 0.0263, loss = 0.0080, eval: [5.6 s]
# Iteration 44 fit: [9.1 s]: Recall = 0.0352, Jaccard score = 0.0270, loss = 0.0076, eval: [5.5 s]
# Iteration 45 fit: [9.1 s]: Recall = 0.0326, Jaccard score = 0.0250, loss = 0.0074, eval: [5.6 s]
# Iteration 46 fit: [9.1 s]: Recall = 0.0319, Jaccard score = 0.0245, loss = 0.0068, eval: [5.6 s]
# Iteration 47 fit: [9.1 s]: Recall = 0.0330, Jaccard score = 0.0253, loss = 0.0065, eval: [5.6 s]
# Iteration 48 fit: [9.1 s]: Recall = 0.0327, Jaccard score = 0.0251, loss = 0.0065, eval: [5.6 s]
# Iteration 49 fit: [9.1 s]: Recall = 0.0326, Jaccard score = 0.0250, loss = 0.0062, eval: [5.6 s]
# Iteration 50 fit: [9.1 s]: Recall = 0.0307, Jaccard score = 0.0235, loss = 0.0057, eval: [5.6 s]
# Iteration 51 fit: [9.1 s]: Recall = 0.0310, Jaccard score = 0.0237, loss = 0.0055, eval: [5.6 s]
# Iteration 52 fit: [9.1 s]: Recall = 0.0313, Jaccard score = 0.0240, loss = 0.0051, eval: [5.6 s]
# Iteration 53 fit: [9.1 s]: Recall = 0.0316, Jaccard score = 0.0242, loss = 0.0048, eval: [5.6 s]
# Iteration 54 fit: [9.1 s]: Recall = 0.0301, Jaccard score = 0.0230, loss = 0.0048, eval: [5.6 s]
# Iteration 55 fit: [9.1 s]: Recall = 0.0306, Jaccard score = 0.0234, loss = 0.0046, eval: [5.6 s]
# Iteration 56 fit: [9.1 s]: Recall = 0.0311, Jaccard score = 0.0238, loss = 0.0044, eval: [5.6 s]
# Iteration 57 fit: [9.1 s]: Recall = 0.0297, Jaccard score = 0.0227, loss = 0.0045, eval: [5.6 s]
# Iteration 58 fit: [9.1 s]: Recall = 0.0297, Jaccard score = 0.0227, loss = 0.0043, eval: [5.6 s]
# Iteration 59 fit: [9.1 s]: Recall = 0.0301, Jaccard score = 0.0230, loss = 0.0041, eval: [5.6 s]
# Iteration 60 fit: [9.1 s]: Recall = 0.0293, Jaccard score = 0.0224, loss = 0.0040, eval: [5.6 s]
# Iteration 61 fit: [9.1 s]: Recall = 0.0299, Jaccard score = 0.0229, loss = 0.0039, eval: [5.6 s]
# End. Best Iteration 16:  Recall = 0.0478, Jaccard score = 0.0371. 
# The best NeuMF model has been saved to Pretrain/_GMF_94_[64,32,16,8]_1566231092.h5
# Model test performed 
# Recall score: 0.005015432098765432     Jaccard score: 0.003783311852991311