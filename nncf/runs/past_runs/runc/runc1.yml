--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "30"
--layers: "[1028,1028]"
--reg_layers: "[0,0]"
#--mf_pretrain: "Pretrain/ml-1m_GMF_8_1501651698.h5"
#--mlp_pretrain: "Pretrain/ml-1m_MLP_[64,32,16,8]_1501652038.h5"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=30, eval_recall=1, is_tag=1, layers='[1028,1028]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0]', reg_mf=0, topk=3, verbose=1) 
# Load data done [2.7 s]. #user=17445, #item=986, #train=133201, #test=17445
# Init: Recall = 0.0025, Jaccard score = 0.0013
# Iteration 0 fit: [26.7 s]: Recall = 0.0254, Jaccard score = 0.0139, loss = 0.4563, val_loss = 0.0000, eval: [9.5 s]
# Iteration 1 fit: [26.0 s]: Recall = 0.0188, Jaccard score = 0.0102, loss = 0.4477, val_loss = 0.0000, eval: [9.2 s]
# Iteration 2 fit: [26.0 s]: Recall = 0.0247, Jaccard score = 0.0135, loss = 0.4427, val_loss = 0.0000, eval: [9.6 s]
# Iteration 3 fit: [26.1 s]: Recall = 0.0266, Jaccard score = 0.0145, loss = 0.4322, val_loss = 0.0000, eval: [9.0 s]
# Iteration 4 fit: [26.1 s]: Recall = 0.0328, Jaccard score = 0.0180, loss = 0.4066, val_loss = 0.0000, eval: [9.6 s]
# Iteration 5 fit: [26.1 s]: Recall = 0.0425, Jaccard score = 0.0235, loss = 0.3585, val_loss = 0.0000, eval: [8.4 s]
# Iteration 6 fit: [26.3 s]: Recall = 0.0494, Jaccard score = 0.0273, loss = 0.2964, val_loss = 0.0000, eval: [9.8 s]
# Iteration 7 fit: [26.1 s]: Recall = 0.0492, Jaccard score = 0.0272, loss = 0.2335, val_loss = 0.0000, eval: [9.2 s]
# Iteration 8 fit: [26.0 s]: Recall = 0.0539, Jaccard score = 0.0299, loss = 0.1827, val_loss = 0.0000, eval: [9.3 s]
# Iteration 9 fit: [26.1 s]: Recall = 0.0534, Jaccard score = 0.0296, loss = 0.1458, val_loss = 0.0000, eval: [9.2 s]
# Iteration 10 fit: [26.1 s]: Recall = 0.0609, Jaccard score = 0.0340, loss = 0.1200, val_loss = 0.0000, eval: [10.3 s]
# Iteration 11 fit: [26.1 s]: Recall = 0.0670, Jaccard score = 0.0375, loss = 0.1018, val_loss = 0.0000, eval: [8.9 s]
# Iteration 12 fit: [26.0 s]: Recall = 0.0684, Jaccard score = 0.0383, loss = 0.0884, val_loss = 0.0000, eval: [9.2 s]
# Iteration 13 fit: [26.1 s]: Recall = 0.0665, Jaccard score = 0.0372, loss = 0.0784, val_loss = 0.0000, eval: [9.2 s]
# Iteration 14 fit: [25.9 s]: Recall = 0.0720, Jaccard score = 0.0404, loss = 0.0693, val_loss = 0.0000, eval: [9.4 s]
# Iteration 15 fit: [26.1 s]: Recall = 0.0775, Jaccard score = 0.0436, loss = 0.0628, val_loss = 0.0000, eval: [8.5 s]
# Iteration 16 fit: [26.1 s]: Recall = 0.0710, Jaccard score = 0.0398, loss = 0.0572, val_loss = 0.0000, eval: [9.3 s]
# Iteration 17 fit: [26.1 s]: Recall = 0.0801, Jaccard score = 0.0452, loss = 0.0518, val_loss = 0.0000, eval: [9.4 s]
# Iteration 18 fit: [26.0 s]: Recall = 0.0773, Jaccard score = 0.0435, loss = 0.0490, val_loss = 0.0000, eval: [9.7 s]
# Iteration 19 fit: [26.1 s]: Recall = 0.0773, Jaccard score = 0.0435, loss = 0.0447, val_loss = 0.0000, eval: [9.2 s]
# Iteration 20 fit: [26.1 s]: Recall = 0.0856, Jaccard score = 0.0484, loss = 0.0414, val_loss = 0.0000, eval: [10.0 s]
# Iteration 21 fit: [26.1 s]: Recall = 0.0813, Jaccard score = 0.0458, loss = 0.0383, val_loss = 0.0000, eval: [9.1 s]
# Iteration 22 fit: [26.0 s]: Recall = 0.0889, Jaccard score = 0.0503, loss = 0.0360, val_loss = 0.0000, eval: [9.5 s]
# Iteration 23 fit: [26.0 s]: Recall = 0.0902, Jaccard score = 0.0511, loss = 0.0342, val_loss = 0.0000, eval: [8.9 s]
# Iteration 24 fit: [26.0 s]: Recall = 0.0921, Jaccard score = 0.0523, loss = 0.0316, val_loss = 0.0000, eval: [9.1 s]
# Iteration 25 fit: [26.0 s]: Recall = 0.0940, Jaccard score = 0.0534, loss = 0.0297, val_loss = 0.0000, eval: [9.0 s]
# Iteration 26 fit: [26.2 s]: Recall = 0.0961, Jaccard score = 0.0546, loss = 0.0289, val_loss = 0.0000, eval: [9.9 s]
# Iteration 27 fit: [26.1 s]: Recall = 0.0870, Jaccard score = 0.0492, loss = 0.0270, val_loss = 0.0000, eval: [8.9 s]
# Iteration 28 fit: [26.1 s]: Recall = 0.0923, Jaccard score = 0.0524, loss = 0.0253, val_loss = 0.0000, eval: [9.6 s]
# Iteration 29 fit: [26.0 s]: Recall = 0.0928, Jaccard score = 0.0527, loss = 0.0242, val_loss = 0.0000, eval: [8.7 s]
# End. Best Iteration 26:  Recall = 0.0961, Jaccard score = 0.0546. 
# The best NeuMF model is saved to Pretrain/_MLP_8_[1028,1028]_1559920886.h5
