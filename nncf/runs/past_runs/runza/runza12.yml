--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "100"
--early_stopping: "35"
--layers: "[512,96]"
--MLP_variant: ""
--reg_layers: "[0,0]"
--num_k_folds: "5"


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1569775748.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1569775748.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_9 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# concatenate_9 (Concatenate)     (None, 1256)         0           flatten_9[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# flatten_10 (Flatten)            (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_10 (Concatenate)    (None, 1512)         0           concatenate_9[0][0]              
#                                                                  flatten_10[0][0]                 
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_10[0][0]             
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          layer1[0][0]                     
# ==================================================================================================
# Total params: 5,265,345
# Trainable params: 5,265,345
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0229, Jaccard score = 0.0137
# Iteration 0 fit: [25.9 s]: Recall = 0.21298, Jaccard score = 0.1441, loss = 0.431223, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 1 fit: [23.6 s]: Recall = 0.24488, Jaccard score = 0.1694, loss = 0.389988, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 2 fit: [23.6 s]: Recall = 0.26579, Jaccard score = 0.1866, loss = 0.361929, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 3 fit: [23.7 s]: Recall = 0.27276, Jaccard score = 0.1924, loss = 0.334765, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 4 fit: [23.9 s]: Recall = 0.27609, Jaccard score = 0.1952, loss = 0.307003, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 5 fit: [24.0 s]: Recall = 0.27832, Jaccard score = 0.1971, loss = 0.280315, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 6 fit: [23.8 s]: Recall = 0.27845, Jaccard score = 0.1972, loss = 0.254616, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 7 fit: [23.9 s]: Recall = 0.27909, Jaccard score = 0.1977, loss = 0.231819, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 8 fit: [23.4 s]: Recall = 0.27730, Jaccard score = 0.1962, loss = 0.209888, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 9 fit: [23.5 s]: Recall = 0.28389, Jaccard score = 0.2018, loss = 0.189927, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 10 fit: [23.2 s]: Recall = 0.27928, Jaccard score = 0.1979, loss = 0.170917, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 11 fit: [23.5 s]: Recall = 0.27896, Jaccard score = 0.1976, loss = 0.154518, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 12 fit: [23.5 s]: Recall = 0.27999, Jaccard score = 0.1985, loss = 0.140688, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 13 fit: [23.6 s]: Recall = 0.28286, Jaccard score = 0.2009, loss = 0.126980, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 14 fit: [23.6 s]: Recall = 0.28127, Jaccard score = 0.1996, loss = 0.116118, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 15 fit: [23.3 s]: Recall = 0.28958, Jaccard score = 0.2067, loss = 0.106165, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 16 fit: [23.7 s]: Recall = 0.28913, Jaccard score = 0.2063, loss = 0.097208, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 17 fit: [23.5 s]: Recall = 0.28740, Jaccard score = 0.2048, loss = 0.089945, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 18 fit: [23.8 s]: Recall = 0.28434, Jaccard score = 0.2022, loss = 0.083476, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 19 fit: [23.6 s]: Recall = 0.29290, Jaccard score = 0.2096, loss = 0.077310, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 20 fit: [24.3 s]: Recall = 0.29405, Jaccard score = 0.2106, loss = 0.072569, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 21 fit: [23.6 s]: Recall = 0.29354, Jaccard score = 0.2101, loss = 0.067904, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 22 fit: [23.8 s]: Recall = 0.29169, Jaccard score = 0.2085, loss = 0.063436, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 23 fit: [23.6 s]: Recall = 0.29699, Jaccard score = 0.2131, loss = 0.059841, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 24 fit: [23.6 s]: Recall = 0.29361, Jaccard score = 0.2102, loss = 0.057036, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 25 fit: [23.8 s]: Recall = 0.29648, Jaccard score = 0.2127, loss = 0.053903, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 26 fit: [23.8 s]: Recall = 0.29591, Jaccard score = 0.2122, loss = 0.051067, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 27 fit: [23.8 s]: Recall = 0.30000, Jaccard score = 0.2157, loss = 0.048016, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 28 fit: [23.6 s]: Recall = 0.29917, Jaccard score = 0.2150, loss = 0.046210, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 29 fit: [23.8 s]: Recall = 0.30134, Jaccard score = 0.2169, loss = 0.043915, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 30 fit: [23.7 s]: Recall = 0.29898, Jaccard score = 0.2149, loss = 0.042149, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 31 fit: [23.8 s]: Recall = 0.29719, Jaccard score = 0.2133, loss = 0.040420, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 32 fit: [23.5 s]: Recall = 0.30166, Jaccard score = 0.2172, loss = 0.039419, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 33 fit: [23.6 s]: Recall = 0.30090, Jaccard score = 0.2165, loss = 0.037050, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 34 fit: [23.6 s]: Recall = 0.30524, Jaccard score = 0.2203, loss = 0.036468, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 35 fit: [23.3 s]: Recall = 0.30448, Jaccard score = 0.2197, loss = 0.034550, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 36 fit: [23.5 s]: Recall = 0.30665, Jaccard score = 0.2216, loss = 0.033509, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 37 fit: [23.6 s]: Recall = 0.30422, Jaccard score = 0.2194, loss = 0.032612, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 38 fit: [23.3 s]: Recall = 0.30102, Jaccard score = 0.2166, loss = 0.031018, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 39 fit: [23.6 s]: Recall = 0.30678, Jaccard score = 0.2217, loss = 0.030386, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 40 fit: [23.5 s]: Recall = 0.30428, Jaccard score = 0.2195, loss = 0.029139, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 41 fit: [23.4 s]: Recall = 0.30786, Jaccard score = 0.2227, loss = 0.028540, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 42 fit: [23.5 s]: Recall = 0.30428, Jaccard score = 0.2195, loss = 0.027731, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 43 fit: [23.2 s]: Recall = 0.30978, Jaccard score = 0.2244, loss = 0.027417, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 44 fit: [23.9 s]: Recall = 0.30614, Jaccard score = 0.2211, loss = 0.026451, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 45 fit: [24.0 s]: Recall = 0.31049, Jaccard score = 0.2250, loss = 0.025023, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 46 fit: [23.5 s]: Recall = 0.30563, Jaccard score = 0.2207, loss = 0.024883, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 47 fit: [23.8 s]: Recall = 0.31042, Jaccard score = 0.2249, loss = 0.024196, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 48 fit: [23.6 s]: Recall = 0.30754, Jaccard score = 0.2224, loss = 0.023913, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 49 fit: [23.4 s]: Recall = 0.30537, Jaccard score = 0.2205, loss = 0.022368, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 50 fit: [23.7 s]: Recall = 0.30754, Jaccard score = 0.2224, loss = 0.022442, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 51 fit: [23.9 s]: Recall = 0.31247, Jaccard score = 0.2267, loss = 0.021965, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 52 fit: [23.2 s]: Recall = 0.30876, Jaccard score = 0.2235, loss = 0.022023, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 53 fit: [23.4 s]: Recall = 0.31151, Jaccard score = 0.2259, loss = 0.020256, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 54 fit: [23.4 s]: Recall = 0.31132, Jaccard score = 0.2257, loss = 0.020347, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 55 fit: [23.9 s]: Recall = 0.31330, Jaccard score = 0.2275, loss = 0.020051, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 56 fit: [23.9 s]: Recall = 0.30812, Jaccard score = 0.2229, loss = 0.019409, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 57 fit: [23.4 s]: Recall = 0.31701, Jaccard score = 0.2308, loss = 0.019285, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 58 fit: [23.6 s]: Recall = 0.31784, Jaccard score = 0.2315, loss = 0.018936, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 59 fit: [23.5 s]: Recall = 0.31368, Jaccard score = 0.2278, loss = 0.018103, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 60 fit: [23.7 s]: Recall = 0.31483, Jaccard score = 0.2289, loss = 0.018227, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 61 fit: [23.9 s]: Recall = 0.31579, Jaccard score = 0.2297, loss = 0.017525, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 62 fit: [23.6 s]: Recall = 0.31528, Jaccard score = 0.2293, loss = 0.017652, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 63 fit: [23.5 s]: Recall = 0.31426, Jaccard score = 0.2283, loss = 0.017034, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 64 fit: [23.7 s]: Recall = 0.31566, Jaccard score = 0.2296, loss = 0.016547, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 65 fit: [23.6 s]: Recall = 0.31656, Jaccard score = 0.2304, loss = 0.016385, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 66 fit: [23.6 s]: Recall = 0.31586, Jaccard score = 0.2298, loss = 0.016504, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 67 fit: [23.7 s]: Recall = 0.31573, Jaccard score = 0.2297, loss = 0.016781, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 68 fit: [23.9 s]: Recall = 0.31145, Jaccard score = 0.2258, loss = 0.015704, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 69 fit: [23.5 s]: Recall = 0.31598, Jaccard score = 0.2299, loss = 0.015784, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 70 fit: [23.6 s]: Recall = 0.31292, Jaccard score = 0.2271, loss = 0.015435, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 71 fit: [23.7 s]: Recall = 0.31650, Jaccard score = 0.2303, loss = 0.014784, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 72 fit: [23.5 s]: Recall = 0.31535, Jaccard score = 0.2293, loss = 0.015175, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 73 fit: [23.6 s]: Recall = 0.31343, Jaccard score = 0.2276, loss = 0.014202, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 74 fit: [24.0 s]: Recall = 0.31714, Jaccard score = 0.2309, loss = 0.014978, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 75 fit: [23.4 s]: Recall = 0.31196, Jaccard score = 0.2263, loss = 0.014502, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 76 fit: [23.4 s]: Recall = 0.31522, Jaccard score = 0.2292, loss = 0.013960, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 77 fit: [23.5 s]: Recall = 0.31375, Jaccard score = 0.2279, loss = 0.013980, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 78 fit: [24.1 s]: Recall = 0.31483, Jaccard score = 0.2289, loss = 0.013825, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 79 fit: [24.0 s]: Recall = 0.31739, Jaccard score = 0.2311, loss = 0.013519, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 80 fit: [23.7 s]: Recall = 0.31630, Jaccard score = 0.2302, loss = 0.013208, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 81 fit: [23.5 s]: Recall = 0.31394, Jaccard score = 0.2281, loss = 0.013122, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 82 fit: [23.6 s]: Recall = 0.31573, Jaccard score = 0.2297, loss = 0.013340, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 83 fit: [23.5 s]: Recall = 0.31503, Jaccard score = 0.2290, loss = 0.013156, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 84 fit: [23.6 s]: Recall = 0.31720, Jaccard score = 0.2310, loss = 0.013012, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 85 fit: [23.5 s]: Recall = 0.32046, Jaccard score = 0.2339, loss = 0.012716, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 86 fit: [23.9 s]: Recall = 0.31643, Jaccard score = 0.2303, loss = 0.012094, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 87 fit: [23.5 s]: Recall = 0.31579, Jaccard score = 0.2297, loss = 0.012189, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 88 fit: [23.7 s]: Recall = 0.32123, Jaccard score = 0.2346, loss = 0.012513, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 89 fit: [23.9 s]: Recall = 0.31969, Jaccard score = 0.2332, loss = 0.011900, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 90 fit: [23.7 s]: Recall = 0.32123, Jaccard score = 0.2346, loss = 0.011884, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 91 fit: [23.6 s]: Recall = 0.31963, Jaccard score = 0.2332, loss = 0.011847, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 92 fit: [23.6 s]: Recall = 0.32302, Jaccard score = 0.2362, loss = 0.012012, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 93 fit: [23.5 s]: Recall = 0.31669, Jaccard score = 0.2305, loss = 0.011648, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 94 fit: [23.6 s]: Recall = 0.32136, Jaccard score = 0.2347, loss = 0.011760, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 95 fit: [23.7 s]: Recall = 0.31790, Jaccard score = 0.2316, loss = 0.011241, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 96 fit: [23.5 s]: Recall = 0.31714, Jaccard score = 0.2309, loss = 0.011111, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 97 fit: [23.8 s]: Recall = 0.31982, Jaccard score = 0.2333, loss = 0.011583, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 98 fit: [24.0 s]: Recall = 0.31739, Jaccard score = 0.2311, loss = 0.011173, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 99 fit: [23.6 s]: Recall = 0.32129, Jaccard score = 0.2346, loss = 0.010963, gradient norm = 1.0000, eval: [16.2 s]
# End. Best Iteration 92:  Recall = 0.3230, Jaccard score = 0.2362. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569775748.h5
# The average best performance after k-fold 1 is: Recall = 0.32301790281329923, Jaccard score = 0.23620721900130914
# 
# Performing k-fold 2
# Init: Recall = 0.0238, Jaccard score = 0.0144
# Iteration 0 fit: [26.4 s]: Recall = 0.20821, Jaccard score = 0.1419, loss = 0.430777, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 1 fit: [23.3 s]: Recall = 0.23863, Jaccard score = 0.1660, loss = 0.390240, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 2 fit: [23.2 s]: Recall = 0.25371, Jaccard score = 0.1784, loss = 0.362276, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 3 fit: [23.6 s]: Recall = 0.26053, Jaccard score = 0.1841, loss = 0.335131, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 4 fit: [23.6 s]: Recall = 0.26259, Jaccard score = 0.1858, loss = 0.307835, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 5 fit: [23.5 s]: Recall = 0.26666, Jaccard score = 0.1892, loss = 0.281307, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 6 fit: [23.2 s]: Recall = 0.27261, Jaccard score = 0.1943, loss = 0.255115, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 7 fit: [23.2 s]: Recall = 0.26948, Jaccard score = 0.1916, loss = 0.231281, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 8 fit: [23.2 s]: Recall = 0.27449, Jaccard score = 0.1959, loss = 0.208636, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 9 fit: [23.6 s]: Recall = 0.27398, Jaccard score = 0.1954, loss = 0.189201, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 10 fit: [23.2 s]: Recall = 0.27323, Jaccard score = 0.1948, loss = 0.170589, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 11 fit: [23.1 s]: Recall = 0.27480, Jaccard score = 0.1961, loss = 0.154469, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 12 fit: [23.4 s]: Recall = 0.27686, Jaccard score = 0.1979, loss = 0.140642, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 13 fit: [23.3 s]: Recall = 0.27417, Jaccard score = 0.1956, loss = 0.127217, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 14 fit: [23.0 s]: Recall = 0.27129, Jaccard score = 0.1931, loss = 0.115451, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 15 fit: [23.5 s]: Recall = 0.27893, Jaccard score = 0.1997, loss = 0.105173, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 16 fit: [23.1 s]: Recall = 0.27724, Jaccard score = 0.1982, loss = 0.096622, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 17 fit: [23.3 s]: Recall = 0.27536, Jaccard score = 0.1966, loss = 0.089707, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 18 fit: [23.3 s]: Recall = 0.27874, Jaccard score = 0.1995, loss = 0.083114, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 19 fit: [23.6 s]: Recall = 0.28187, Jaccard score = 0.2022, loss = 0.077278, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 20 fit: [23.3 s]: Recall = 0.28275, Jaccard score = 0.2030, loss = 0.072995, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 21 fit: [23.3 s]: Recall = 0.28663, Jaccard score = 0.2063, loss = 0.067733, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 22 fit: [23.5 s]: Recall = 0.28469, Jaccard score = 0.2046, loss = 0.063372, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 23 fit: [23.3 s]: Recall = 0.28663, Jaccard score = 0.2063, loss = 0.060190, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 24 fit: [23.3 s]: Recall = 0.28556, Jaccard score = 0.2054, loss = 0.055874, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 25 fit: [23.3 s]: Recall = 0.28963, Jaccard score = 0.2089, loss = 0.054570, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 26 fit: [23.3 s]: Recall = 0.28700, Jaccard score = 0.2066, loss = 0.050148, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 27 fit: [23.4 s]: Recall = 0.28863, Jaccard score = 0.2081, loss = 0.048668, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 28 fit: [23.2 s]: Recall = 0.29026, Jaccard score = 0.2095, loss = 0.046509, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 29 fit: [23.5 s]: Recall = 0.28932, Jaccard score = 0.2087, loss = 0.044532, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 30 fit: [23.4 s]: Recall = 0.28631, Jaccard score = 0.2060, loss = 0.041971, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 31 fit: [23.4 s]: Recall = 0.28982, Jaccard score = 0.2091, loss = 0.040488, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 32 fit: [23.3 s]: Recall = 0.29232, Jaccard score = 0.2113, loss = 0.039031, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 33 fit: [23.0 s]: Recall = 0.29232, Jaccard score = 0.2113, loss = 0.036915, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 34 fit: [23.1 s]: Recall = 0.29151, Jaccard score = 0.2106, loss = 0.036141, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 35 fit: [23.6 s]: Recall = 0.29320, Jaccard score = 0.2120, loss = 0.034880, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 36 fit: [23.6 s]: Recall = 0.29714, Jaccard score = 0.2155, loss = 0.034073, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 37 fit: [23.2 s]: Recall = 0.29564, Jaccard score = 0.2142, loss = 0.032009, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 38 fit: [23.4 s]: Recall = 0.29501, Jaccard score = 0.2136, loss = 0.031493, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 39 fit: [22.9 s]: Recall = 0.29720, Jaccard score = 0.2156, loss = 0.029959, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 40 fit: [23.2 s]: Recall = 0.29733, Jaccard score = 0.2157, loss = 0.029498, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 41 fit: [23.2 s]: Recall = 0.29695, Jaccard score = 0.2153, loss = 0.027524, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 42 fit: [23.3 s]: Recall = 0.29651, Jaccard score = 0.2150, loss = 0.027360, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 43 fit: [23.6 s]: Recall = 0.29764, Jaccard score = 0.2160, loss = 0.026295, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 44 fit: [23.6 s]: Recall = 0.29808, Jaccard score = 0.2163, loss = 0.025420, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 45 fit: [23.4 s]: Recall = 0.29952, Jaccard score = 0.2176, loss = 0.025541, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 46 fit: [23.1 s]: Recall = 0.30014, Jaccard score = 0.2182, loss = 0.024411, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 47 fit: [23.3 s]: Recall = 0.29864, Jaccard score = 0.2168, loss = 0.024107, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 48 fit: [23.0 s]: Recall = 0.29808, Jaccard score = 0.2163, loss = 0.022939, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 49 fit: [23.6 s]: Recall = 0.29858, Jaccard score = 0.2168, loss = 0.022510, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 50 fit: [23.1 s]: Recall = 0.29952, Jaccard score = 0.2176, loss = 0.022078, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 51 fit: [23.4 s]: Recall = 0.30064, Jaccard score = 0.2186, loss = 0.021600, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 52 fit: [23.2 s]: Recall = 0.30158, Jaccard score = 0.2194, loss = 0.020758, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 53 fit: [23.6 s]: Recall = 0.30140, Jaccard score = 0.2193, loss = 0.020540, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 54 fit: [23.4 s]: Recall = 0.29777, Jaccard score = 0.2161, loss = 0.019886, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 55 fit: [23.4 s]: Recall = 0.29964, Jaccard score = 0.2177, loss = 0.020117, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 56 fit: [23.1 s]: Recall = 0.30083, Jaccard score = 0.2188, loss = 0.018975, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 57 fit: [23.2 s]: Recall = 0.30296, Jaccard score = 0.2207, loss = 0.018727, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 58 fit: [23.3 s]: Recall = 0.29996, Jaccard score = 0.2180, loss = 0.018506, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 59 fit: [23.0 s]: Recall = 0.30484, Jaccard score = 0.2223, loss = 0.017670, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 60 fit: [23.6 s]: Recall = 0.29701, Jaccard score = 0.2154, loss = 0.017700, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 61 fit: [23.2 s]: Recall = 0.30365, Jaccard score = 0.2213, loss = 0.017776, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 62 fit: [23.3 s]: Recall = 0.30283, Jaccard score = 0.2206, loss = 0.017685, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 63 fit: [23.4 s]: Recall = 0.29914, Jaccard score = 0.2173, loss = 0.016794, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 64 fit: [23.2 s]: Recall = 0.30290, Jaccard score = 0.2206, loss = 0.016016, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 65 fit: [23.5 s]: Recall = 0.29983, Jaccard score = 0.2179, loss = 0.016595, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 66 fit: [23.1 s]: Recall = 0.30215, Jaccard score = 0.2199, loss = 0.015754, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 67 fit: [23.2 s]: Recall = 0.30265, Jaccard score = 0.2204, loss = 0.016201, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 68 fit: [22.9 s]: Recall = 0.30283, Jaccard score = 0.2206, loss = 0.015513, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 69 fit: [23.4 s]: Recall = 0.30659, Jaccard score = 0.2239, loss = 0.015375, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 70 fit: [23.5 s]: Recall = 0.30690, Jaccard score = 0.2242, loss = 0.014876, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 71 fit: [23.5 s]: Recall = 0.30790, Jaccard score = 0.2251, loss = 0.015221, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 72 fit: [23.2 s]: Recall = 0.30421, Jaccard score = 0.2218, loss = 0.014578, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 73 fit: [23.4 s]: Recall = 0.30584, Jaccard score = 0.2232, loss = 0.013714, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 74 fit: [23.2 s]: Recall = 0.30646, Jaccard score = 0.2238, loss = 0.014689, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 75 fit: [23.6 s]: Recall = 0.30409, Jaccard score = 0.2217, loss = 0.014359, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 76 fit: [23.6 s]: Recall = 0.30396, Jaccard score = 0.2216, loss = 0.014016, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 77 fit: [23.1 s]: Recall = 0.30628, Jaccard score = 0.2236, loss = 0.013697, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 78 fit: [23.5 s]: Recall = 0.30334, Jaccard score = 0.2210, loss = 0.013269, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 79 fit: [23.1 s]: Recall = 0.30584, Jaccard score = 0.2232, loss = 0.013249, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 80 fit: [23.6 s]: Recall = 0.30678, Jaccard score = 0.2241, loss = 0.013395, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 81 fit: [23.9 s]: Recall = 0.30853, Jaccard score = 0.2256, loss = 0.013045, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 82 fit: [23.2 s]: Recall = 0.30540, Jaccard score = 0.2228, loss = 0.012937, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 83 fit: [23.3 s]: Recall = 0.30884, Jaccard score = 0.2259, loss = 0.012774, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 84 fit: [23.3 s]: Recall = 0.30628, Jaccard score = 0.2236, loss = 0.012283, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 85 fit: [23.4 s]: Recall = 0.30884, Jaccard score = 0.2259, loss = 0.012410, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 86 fit: [23.3 s]: Recall = 0.30790, Jaccard score = 0.2251, loss = 0.012143, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 87 fit: [23.0 s]: Recall = 0.30690, Jaccard score = 0.2242, loss = 0.012013, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 88 fit: [23.0 s]: Recall = 0.30421, Jaccard score = 0.2218, loss = 0.012724, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 89 fit: [23.6 s]: Recall = 0.31141, Jaccard score = 0.2282, loss = 0.011781, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 90 fit: [23.6 s]: Recall = 0.30778, Jaccard score = 0.2250, loss = 0.012201, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 91 fit: [23.4 s]: Recall = 0.30765, Jaccard score = 0.2249, loss = 0.011586, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 92 fit: [23.4 s]: Recall = 0.31122, Jaccard score = 0.2281, loss = 0.011890, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 93 fit: [23.4 s]: Recall = 0.30740, Jaccard score = 0.2246, loss = 0.011092, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 94 fit: [23.1 s]: Recall = 0.30753, Jaccard score = 0.2247, loss = 0.011252, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 95 fit: [23.4 s]: Recall = 0.31003, Jaccard score = 0.2270, loss = 0.011348, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 96 fit: [23.8 s]: Recall = 0.30628, Jaccard score = 0.2236, loss = 0.011311, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 97 fit: [23.4 s]: Recall = 0.30991, Jaccard score = 0.2269, loss = 0.011139, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 98 fit: [23.2 s]: Recall = 0.30972, Jaccard score = 0.2267, loss = 0.010708, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 99 fit: [23.1 s]: Recall = 0.30903, Jaccard score = 0.2261, loss = 0.010879, gradient norm = 1.0000, eval: [16.7 s]
# End. Best Iteration 89:  Recall = 0.3114, Jaccard score = 0.2282. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569775748.h5
# The average best performance after k-fold 2 is: Recall = 0.3172133133817419, Jaccard score = 0.23221634627999688
# 
# Performing k-fold 3
# Init: Recall = 0.0233, Jaccard score = 0.0141
# Iteration 0 fit: [26.6 s]: Recall = 0.21494, Jaccard score = 0.1467, loss = 0.431073, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 1 fit: [23.2 s]: Recall = 0.24013, Jaccard score = 0.1668, loss = 0.389574, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 2 fit: [24.2 s]: Recall = 0.25474, Jaccard score = 0.1787, loss = 0.361690, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 3 fit: [23.3 s]: Recall = 0.26652, Jaccard score = 0.1885, loss = 0.334470, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 4 fit: [23.6 s]: Recall = 0.26513, Jaccard score = 0.1874, loss = 0.307354, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 5 fit: [23.7 s]: Recall = 0.26979, Jaccard score = 0.1913, loss = 0.280731, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 6 fit: [23.9 s]: Recall = 0.27319, Jaccard score = 0.1942, loss = 0.255097, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 7 fit: [23.6 s]: Recall = 0.27231, Jaccard score = 0.1934, loss = 0.231664, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 8 fit: [23.8 s]: Recall = 0.27218, Jaccard score = 0.1933, loss = 0.208828, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 9 fit: [23.5 s]: Recall = 0.26620, Jaccard score = 0.1883, loss = 0.189157, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 10 fit: [23.9 s]: Recall = 0.27155, Jaccard score = 0.1928, loss = 0.170705, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 11 fit: [23.6 s]: Recall = 0.27313, Jaccard score = 0.1941, loss = 0.154179, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 12 fit: [23.6 s]: Recall = 0.27338, Jaccard score = 0.1943, loss = 0.140528, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 13 fit: [23.2 s]: Recall = 0.27432, Jaccard score = 0.1951, loss = 0.126506, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 14 fit: [23.9 s]: Recall = 0.27508, Jaccard score = 0.1958, loss = 0.116191, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 15 fit: [23.2 s]: Recall = 0.27703, Jaccard score = 0.1974, loss = 0.106221, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 16 fit: [24.6 s]: Recall = 0.27754, Jaccard score = 0.1979, loss = 0.097089, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 17 fit: [23.3 s]: Recall = 0.27804, Jaccard score = 0.1983, loss = 0.089067, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 18 fit: [23.7 s]: Recall = 0.28125, Jaccard score = 0.2011, loss = 0.083439, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 19 fit: [23.5 s]: Recall = 0.28056, Jaccard score = 0.2005, loss = 0.077251, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 20 fit: [23.6 s]: Recall = 0.28308, Jaccard score = 0.2026, loss = 0.071622, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 21 fit: [23.6 s]: Recall = 0.28503, Jaccard score = 0.2043, loss = 0.067706, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 22 fit: [23.7 s]: Recall = 0.28270, Jaccard score = 0.2023, loss = 0.063570, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 23 fit: [23.3 s]: Recall = 0.28453, Jaccard score = 0.2039, loss = 0.059276, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 24 fit: [24.1 s]: Recall = 0.28302, Jaccard score = 0.2026, loss = 0.056447, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 25 fit: [23.3 s]: Recall = 0.28698, Jaccard score = 0.2060, loss = 0.054128, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 26 fit: [23.7 s]: Recall = 0.28667, Jaccard score = 0.2057, loss = 0.051247, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 27 fit: [23.3 s]: Recall = 0.29127, Jaccard score = 0.2097, loss = 0.048775, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 28 fit: [23.9 s]: Recall = 0.29108, Jaccard score = 0.2095, loss = 0.046374, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 29 fit: [23.3 s]: Recall = 0.29473, Jaccard score = 0.2127, loss = 0.044966, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 30 fit: [23.8 s]: Recall = 0.29127, Jaccard score = 0.2097, loss = 0.042212, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 31 fit: [23.6 s]: Recall = 0.29234, Jaccard score = 0.2106, loss = 0.040263, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 32 fit: [23.7 s]: Recall = 0.29259, Jaccard score = 0.2109, loss = 0.038934, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 33 fit: [23.7 s]: Recall = 0.29555, Jaccard score = 0.2135, loss = 0.038166, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 34 fit: [23.7 s]: Recall = 0.29700, Jaccard score = 0.2147, loss = 0.036634, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 35 fit: [23.6 s]: Recall = 0.29844, Jaccard score = 0.2160, loss = 0.034639, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 36 fit: [23.8 s]: Recall = 0.29555, Jaccard score = 0.2135, loss = 0.032655, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 37 fit: [23.4 s]: Recall = 0.30084, Jaccard score = 0.2181, loss = 0.032675, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 38 fit: [24.1 s]: Recall = 0.29693, Jaccard score = 0.2147, loss = 0.031277, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 39 fit: [23.2 s]: Recall = 0.29712, Jaccard score = 0.2148, loss = 0.031074, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 40 fit: [23.7 s]: Recall = 0.29914, Jaccard score = 0.2166, loss = 0.028962, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 41 fit: [23.2 s]: Recall = 0.29895, Jaccard score = 0.2164, loss = 0.028940, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 42 fit: [23.8 s]: Recall = 0.29479, Jaccard score = 0.2128, loss = 0.027442, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 43 fit: [23.7 s]: Recall = 0.29863, Jaccard score = 0.2162, loss = 0.026802, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 44 fit: [23.7 s]: Recall = 0.29624, Jaccard score = 0.2141, loss = 0.025364, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 45 fit: [23.6 s]: Recall = 0.30462, Jaccard score = 0.2215, loss = 0.025282, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 46 fit: [23.6 s]: Recall = 0.30216, Jaccard score = 0.2193, loss = 0.024200, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 47 fit: [23.5 s]: Recall = 0.30090, Jaccard score = 0.2182, loss = 0.024009, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 48 fit: [24.0 s]: Recall = 0.29593, Jaccard score = 0.2138, loss = 0.023467, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 49 fit: [23.3 s]: Recall = 0.30241, Jaccard score = 0.2195, loss = 0.022598, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 50 fit: [24.0 s]: Recall = 0.29851, Jaccard score = 0.2161, loss = 0.022085, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 51 fit: [23.3 s]: Recall = 0.30235, Jaccard score = 0.2194, loss = 0.021804, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 52 fit: [23.7 s]: Recall = 0.30071, Jaccard score = 0.2180, loss = 0.021203, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 53 fit: [23.4 s]: Recall = 0.30355, Jaccard score = 0.2205, loss = 0.020885, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 54 fit: [23.8 s]: Recall = 0.30298, Jaccard score = 0.2200, loss = 0.020168, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 55 fit: [23.4 s]: Recall = 0.30128, Jaccard score = 0.2185, loss = 0.019586, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 56 fit: [23.7 s]: Recall = 0.30342, Jaccard score = 0.2204, loss = 0.019231, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 57 fit: [23.3 s]: Recall = 0.30436, Jaccard score = 0.2212, loss = 0.019239, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 58 fit: [24.1 s]: Recall = 0.30348, Jaccard score = 0.2204, loss = 0.018130, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 59 fit: [23.1 s]: Recall = 0.30323, Jaccard score = 0.2202, loss = 0.018370, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 60 fit: [23.6 s]: Recall = 0.30443, Jaccard score = 0.2213, loss = 0.018436, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 61 fit: [23.4 s]: Recall = 0.30550, Jaccard score = 0.2222, loss = 0.017571, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 62 fit: [23.6 s]: Recall = 0.30588, Jaccard score = 0.2226, loss = 0.017091, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 63 fit: [23.3 s]: Recall = 0.30556, Jaccard score = 0.2223, loss = 0.017263, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 64 fit: [24.1 s]: Recall = 0.30827, Jaccard score = 0.2247, loss = 0.017177, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 65 fit: [23.5 s]: Recall = 0.30808, Jaccard score = 0.2245, loss = 0.016964, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 66 fit: [24.1 s]: Recall = 0.30329, Jaccard score = 0.2203, loss = 0.015973, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 67 fit: [23.3 s]: Recall = 0.30462, Jaccard score = 0.2215, loss = 0.015678, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 68 fit: [23.9 s]: Recall = 0.30827, Jaccard score = 0.2247, loss = 0.015655, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 69 fit: [23.5 s]: Recall = 0.31060, Jaccard score = 0.2268, loss = 0.015167, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 70 fit: [23.9 s]: Recall = 0.31072, Jaccard score = 0.2269, loss = 0.015813, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 71 fit: [23.6 s]: Recall = 0.30109, Jaccard score = 0.2183, loss = 0.014912, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 72 fit: [23.6 s]: Recall = 0.31010, Jaccard score = 0.2263, loss = 0.014677, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 73 fit: [23.3 s]: Recall = 0.30669, Jaccard score = 0.2233, loss = 0.014819, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 74 fit: [23.6 s]: Recall = 0.30997, Jaccard score = 0.2262, loss = 0.014867, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 75 fit: [23.2 s]: Recall = 0.30770, Jaccard score = 0.2242, loss = 0.013934, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 76 fit: [24.0 s]: Recall = 0.31180, Jaccard score = 0.2279, loss = 0.013995, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 77 fit: [23.6 s]: Recall = 0.30663, Jaccard score = 0.2232, loss = 0.013923, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 78 fit: [23.8 s]: Recall = 0.31123, Jaccard score = 0.2274, loss = 0.013489, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 79 fit: [23.5 s]: Recall = 0.31274, Jaccard score = 0.2287, loss = 0.013418, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 80 fit: [24.1 s]: Recall = 0.30808, Jaccard score = 0.2245, loss = 0.013604, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 81 fit: [23.6 s]: Recall = 0.30959, Jaccard score = 0.2259, loss = 0.013057, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 82 fit: [24.2 s]: Recall = 0.30858, Jaccard score = 0.2250, loss = 0.012923, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 83 fit: [23.4 s]: Recall = 0.31167, Jaccard score = 0.2277, loss = 0.012625, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 84 fit: [23.6 s]: Recall = 0.31003, Jaccard score = 0.2263, loss = 0.012963, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 85 fit: [23.4 s]: Recall = 0.30884, Jaccard score = 0.2252, loss = 0.012516, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 86 fit: [23.7 s]: Recall = 0.31243, Jaccard score = 0.2284, loss = 0.012532, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 87 fit: [23.4 s]: Recall = 0.30865, Jaccard score = 0.2250, loss = 0.012233, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 88 fit: [23.8 s]: Recall = 0.31312, Jaccard score = 0.2291, loss = 0.011735, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 89 fit: [23.7 s]: Recall = 0.31224, Jaccard score = 0.2283, loss = 0.012324, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 90 fit: [23.7 s]: Recall = 0.31003, Jaccard score = 0.2263, loss = 0.011993, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 91 fit: [23.2 s]: Recall = 0.31457, Jaccard score = 0.2304, loss = 0.011516, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 92 fit: [23.6 s]: Recall = 0.31343, Jaccard score = 0.2293, loss = 0.011932, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 93 fit: [23.6 s]: Recall = 0.31305, Jaccard score = 0.2290, loss = 0.011735, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 94 fit: [24.5 s]: Recall = 0.31387, Jaccard score = 0.2297, loss = 0.011330, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 95 fit: [23.5 s]: Recall = 0.31230, Jaccard score = 0.2283, loss = 0.011222, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 96 fit: [23.9 s]: Recall = 0.31469, Jaccard score = 0.2305, loss = 0.011079, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 97 fit: [23.4 s]: Recall = 0.31274, Jaccard score = 0.2287, loss = 0.011327, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 98 fit: [24.0 s]: Recall = 0.31350, Jaccard score = 0.2294, loss = 0.011058, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 99 fit: [23.5 s]: Recall = 0.31457, Jaccard score = 0.2304, loss = 0.010903, gradient norm = 1.0000, eval: [16.5 s]
# End. Best Iteration 96:  Recall = 0.3147, Jaccard score = 0.2305. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569775748.h5
# The average best performance after k-fold 3 is: Recall = 0.3163729959144648, Jaccard score = 0.23163345386473858
# 
# Performing k-fold 4
# Init: Recall = 0.0240, Jaccard score = 0.0145
# Iteration 0 fit: [26.7 s]: Recall = 0.21665, Jaccard score = 0.1485, loss = 0.431097, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 1 fit: [23.8 s]: Recall = 0.24912, Jaccard score = 0.1746, loss = 0.389954, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 2 fit: [23.2 s]: Recall = 0.26145, Jaccard score = 0.1849, loss = 0.361743, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 3 fit: [23.4 s]: Recall = 0.26821, Jaccard score = 0.1905, loss = 0.334887, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 4 fit: [23.3 s]: Recall = 0.27472, Jaccard score = 0.1961, loss = 0.307795, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 5 fit: [23.7 s]: Recall = 0.27703, Jaccard score = 0.1980, loss = 0.280071, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 6 fit: [23.4 s]: Recall = 0.27904, Jaccard score = 0.1998, loss = 0.254737, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 7 fit: [23.7 s]: Recall = 0.27954, Jaccard score = 0.2002, loss = 0.231367, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 8 fit: [23.6 s]: Recall = 0.28079, Jaccard score = 0.2013, loss = 0.209009, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 9 fit: [23.9 s]: Recall = 0.28235, Jaccard score = 0.2026, loss = 0.188955, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 10 fit: [23.5 s]: Recall = 0.27841, Jaccard score = 0.1992, loss = 0.170665, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 11 fit: [23.7 s]: Recall = 0.28229, Jaccard score = 0.2026, loss = 0.154614, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 12 fit: [23.6 s]: Recall = 0.27822, Jaccard score = 0.1991, loss = 0.139981, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 13 fit: [24.0 s]: Recall = 0.28329, Jaccard score = 0.2034, loss = 0.127049, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 14 fit: [23.8 s]: Recall = 0.28091, Jaccard score = 0.2014, loss = 0.116172, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 15 fit: [23.7 s]: Recall = 0.27966, Jaccard score = 0.2003, loss = 0.105897, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 16 fit: [23.2 s]: Recall = 0.28623, Jaccard score = 0.2060, loss = 0.097737, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 17 fit: [23.5 s]: Recall = 0.28579, Jaccard score = 0.2056, loss = 0.089683, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 18 fit: [23.2 s]: Recall = 0.28317, Jaccard score = 0.2033, loss = 0.082544, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 19 fit: [23.5 s]: Recall = 0.28605, Jaccard score = 0.2058, loss = 0.077242, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 20 fit: [23.2 s]: Recall = 0.28761, Jaccard score = 0.2072, loss = 0.072519, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 21 fit: [23.6 s]: Recall = 0.28773, Jaccard score = 0.2073, loss = 0.067489, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 22 fit: [23.3 s]: Recall = 0.28886, Jaccard score = 0.2083, loss = 0.062813, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 23 fit: [23.7 s]: Recall = 0.29105, Jaccard score = 0.2102, loss = 0.059697, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 24 fit: [23.1 s]: Recall = 0.29161, Jaccard score = 0.2107, loss = 0.057074, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 25 fit: [23.5 s]: Recall = 0.29180, Jaccard score = 0.2108, loss = 0.053002, gradient norm = 1.0000, eval: [17.2 s]
# Iteration 26 fit: [23.6 s]: Recall = 0.29274, Jaccard score = 0.2117, loss = 0.050340, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 27 fit: [23.5 s]: Recall = 0.29030, Jaccard score = 0.2095, loss = 0.047707, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 28 fit: [23.3 s]: Recall = 0.29506, Jaccard score = 0.2137, loss = 0.046397, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 29 fit: [24.0 s]: Recall = 0.29099, Jaccard score = 0.2101, loss = 0.043871, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 30 fit: [23.6 s]: Recall = 0.29693, Jaccard score = 0.2153, loss = 0.041949, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 31 fit: [23.5 s]: Recall = 0.29618, Jaccard score = 0.2147, loss = 0.040708, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 32 fit: [23.5 s]: Recall = 0.29543, Jaccard score = 0.2140, loss = 0.038585, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 33 fit: [23.8 s]: Recall = 0.29556, Jaccard score = 0.2141, loss = 0.037556, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 34 fit: [23.2 s]: Recall = 0.30031, Jaccard score = 0.2183, loss = 0.036490, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 35 fit: [23.8 s]: Recall = 0.29637, Jaccard score = 0.2148, loss = 0.034370, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 36 fit: [23.3 s]: Recall = 0.30144, Jaccard score = 0.2193, loss = 0.033745, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 37 fit: [24.0 s]: Recall = 0.29931, Jaccard score = 0.2174, loss = 0.032830, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 38 fit: [23.1 s]: Recall = 0.29625, Jaccard score = 0.2147, loss = 0.030590, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 39 fit: [23.9 s]: Recall = 0.30006, Jaccard score = 0.2181, loss = 0.029632, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 40 fit: [23.5 s]: Recall = 0.30250, Jaccard score = 0.2203, loss = 0.028695, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 41 fit: [23.8 s]: Recall = 0.30150, Jaccard score = 0.2194, loss = 0.028062, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 42 fit: [23.3 s]: Recall = 0.29662, Jaccard score = 0.2151, loss = 0.027483, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 43 fit: [23.5 s]: Recall = 0.30250, Jaccard score = 0.2203, loss = 0.026684, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 44 fit: [23.7 s]: Recall = 0.30013, Jaccard score = 0.2182, loss = 0.025817, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 45 fit: [23.6 s]: Recall = 0.30144, Jaccard score = 0.2193, loss = 0.024802, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 46 fit: [23.2 s]: Recall = 0.30144, Jaccard score = 0.2193, loss = 0.024145, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 47 fit: [23.6 s]: Recall = 0.30138, Jaccard score = 0.2193, loss = 0.023447, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 48 fit: [23.6 s]: Recall = 0.30175, Jaccard score = 0.2196, loss = 0.023498, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 49 fit: [23.6 s]: Recall = 0.30563, Jaccard score = 0.2231, loss = 0.023001, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 50 fit: [23.4 s]: Recall = 0.30213, Jaccard score = 0.2199, loss = 0.022374, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 51 fit: [23.4 s]: Recall = 0.30695, Jaccard score = 0.2242, loss = 0.021042, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 52 fit: [23.2 s]: Recall = 0.30332, Jaccard score = 0.2210, loss = 0.021296, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 53 fit: [23.7 s]: Recall = 0.30063, Jaccard score = 0.2186, loss = 0.020528, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 54 fit: [23.0 s]: Recall = 0.30407, Jaccard score = 0.2217, loss = 0.019503, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 55 fit: [23.5 s]: Recall = 0.30989, Jaccard score = 0.2269, loss = 0.019717, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 56 fit: [23.5 s]: Recall = 0.30557, Jaccard score = 0.2230, loss = 0.019809, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 57 fit: [23.5 s]: Recall = 0.31001, Jaccard score = 0.2270, loss = 0.018882, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 58 fit: [23.6 s]: Recall = 0.30713, Jaccard score = 0.2244, loss = 0.018737, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 59 fit: [23.8 s]: Recall = 0.30945, Jaccard score = 0.2265, loss = 0.017850, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 60 fit: [23.5 s]: Recall = 0.30563, Jaccard score = 0.2231, loss = 0.017946, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 61 fit: [23.8 s]: Recall = 0.30914, Jaccard score = 0.2262, loss = 0.017878, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 62 fit: [23.5 s]: Recall = 0.30832, Jaccard score = 0.2255, loss = 0.017216, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 63 fit: [23.5 s]: Recall = 0.30594, Jaccard score = 0.2233, loss = 0.016876, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 64 fit: [23.6 s]: Recall = 0.31333, Jaccard score = 0.2300, loss = 0.016372, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 65 fit: [23.5 s]: Recall = 0.31133, Jaccard score = 0.2282, loss = 0.016539, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 66 fit: [23.2 s]: Recall = 0.30907, Jaccard score = 0.2261, loss = 0.016281, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 67 fit: [23.8 s]: Recall = 0.31001, Jaccard score = 0.2270, loss = 0.015992, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 68 fit: [23.3 s]: Recall = 0.30701, Jaccard score = 0.2243, loss = 0.015555, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 69 fit: [23.3 s]: Recall = 0.31258, Jaccard score = 0.2293, loss = 0.015381, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 70 fit: [23.5 s]: Recall = 0.30976, Jaccard score = 0.2268, loss = 0.015211, gradient norm = 1.0000, eval: [17.1 s]
# Iteration 71 fit: [23.7 s]: Recall = 0.31377, Jaccard score = 0.2304, loss = 0.015102, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 72 fit: [23.6 s]: Recall = 0.31421, Jaccard score = 0.2308, loss = 0.014625, gradient norm = 1.0000, eval: [17.1 s]
# Iteration 73 fit: [23.7 s]: Recall = 0.31446, Jaccard score = 0.2310, loss = 0.014373, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 74 fit: [23.6 s]: Recall = 0.30976, Jaccard score = 0.2268, loss = 0.014170, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 75 fit: [23.8 s]: Recall = 0.31220, Jaccard score = 0.2289, loss = 0.013906, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 76 fit: [23.6 s]: Recall = 0.31126, Jaccard score = 0.2281, loss = 0.014234, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 77 fit: [23.6 s]: Recall = 0.31314, Jaccard score = 0.2298, loss = 0.013742, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 78 fit: [23.5 s]: Recall = 0.31283, Jaccard score = 0.2295, loss = 0.013270, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 79 fit: [23.5 s]: Recall = 0.31790, Jaccard score = 0.2341, loss = 0.013463, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 80 fit: [23.5 s]: Recall = 0.31452, Jaccard score = 0.2310, loss = 0.013829, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 81 fit: [23.4 s]: Recall = 0.31176, Jaccard score = 0.2286, loss = 0.012609, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 82 fit: [23.2 s]: Recall = 0.31583, Jaccard score = 0.2322, loss = 0.012781, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 83 fit: [23.8 s]: Recall = 0.31564, Jaccard score = 0.2321, loss = 0.013201, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 84 fit: [23.5 s]: Recall = 0.31270, Jaccard score = 0.2294, loss = 0.012833, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 85 fit: [23.8 s]: Recall = 0.31220, Jaccard score = 0.2289, loss = 0.012473, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 86 fit: [23.2 s]: Recall = 0.31608, Jaccard score = 0.2325, loss = 0.012552, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 87 fit: [23.5 s]: Recall = 0.31877, Jaccard score = 0.2349, loss = 0.012238, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 88 fit: [23.3 s]: Recall = 0.31564, Jaccard score = 0.2321, loss = 0.012327, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 89 fit: [23.2 s]: Recall = 0.31389, Jaccard score = 0.2305, loss = 0.011630, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 90 fit: [23.2 s]: Recall = 0.31683, Jaccard score = 0.2331, loss = 0.012091, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 91 fit: [24.1 s]: Recall = 0.31433, Jaccard score = 0.2309, loss = 0.011474, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 92 fit: [23.6 s]: Recall = 0.31552, Jaccard score = 0.2319, loss = 0.011435, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 93 fit: [23.5 s]: Recall = 0.31546, Jaccard score = 0.2319, loss = 0.011468, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 94 fit: [23.7 s]: Recall = 0.31783, Jaccard score = 0.2340, loss = 0.010799, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 95 fit: [23.7 s]: Recall = 0.31026, Jaccard score = 0.2272, loss = 0.011784, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 96 fit: [23.5 s]: Recall = 0.31671, Jaccard score = 0.2330, loss = 0.011195, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 97 fit: [23.9 s]: Recall = 0.31320, Jaccard score = 0.2299, loss = 0.011693, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 98 fit: [23.4 s]: Recall = 0.31859, Jaccard score = 0.2347, loss = 0.010802, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 99 fit: [23.3 s]: Recall = 0.31859, Jaccard score = 0.2347, loss = 0.011366, gradient norm = 1.0000, eval: [17.0 s]
# End. Best Iteration 87:  Recall = 0.3188, Jaccard score = 0.2349. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569775748.h5
# The average best performance after k-fold 4 is: Recall = 0.3169731136442341, Jaccard score = 0.23244961313211476
# 
# Performing k-fold 5
# Init: Recall = 0.0258, Jaccard score = 0.0156
# Iteration 0 fit: [27.6 s]: Recall = 0.21199, Jaccard score = 0.1446, loss = 0.430679, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 1 fit: [23.8 s]: Recall = 0.24578, Jaccard score = 0.1716, loss = 0.389176, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 2 fit: [24.0 s]: Recall = 0.26185, Jaccard score = 0.1849, loss = 0.361061, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 3 fit: [24.4 s]: Recall = 0.26819, Jaccard score = 0.1902, loss = 0.334352, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 4 fit: [23.9 s]: Recall = 0.27906, Jaccard score = 0.1995, loss = 0.307699, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 5 fit: [23.9 s]: Recall = 0.27648, Jaccard score = 0.1972, loss = 0.280722, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 6 fit: [24.3 s]: Recall = 0.28050, Jaccard score = 0.2007, loss = 0.255392, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 7 fit: [24.6 s]: Recall = 0.27812, Jaccard score = 0.1986, loss = 0.231597, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 8 fit: [24.1 s]: Recall = 0.27724, Jaccard score = 0.1979, loss = 0.209943, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 9 fit: [23.9 s]: Recall = 0.28088, Jaccard score = 0.2010, loss = 0.189314, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 10 fit: [24.1 s]: Recall = 0.27780, Jaccard score = 0.1984, loss = 0.171531, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 11 fit: [24.4 s]: Recall = 0.27786, Jaccard score = 0.1984, loss = 0.155625, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 12 fit: [24.3 s]: Recall = 0.27874, Jaccard score = 0.1992, loss = 0.140755, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 13 fit: [24.1 s]: Recall = 0.27881, Jaccard score = 0.1992, loss = 0.127591, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 14 fit: [24.2 s]: Recall = 0.28107, Jaccard score = 0.2012, loss = 0.117122, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 15 fit: [24.1 s]: Recall = 0.28088, Jaccard score = 0.2010, loss = 0.106933, gradient norm = 1.0000, eval: [17.1 s]
# Iteration 16 fit: [24.3 s]: Recall = 0.28245, Jaccard score = 0.2024, loss = 0.097914, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 17 fit: [24.0 s]: Recall = 0.28025, Jaccard score = 0.2005, loss = 0.089887, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 18 fit: [23.9 s]: Recall = 0.28571, Jaccard score = 0.2052, loss = 0.083373, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 19 fit: [24.3 s]: Recall = 0.28333, Jaccard score = 0.2031, loss = 0.076758, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 20 fit: [23.7 s]: Recall = 0.28829, Jaccard score = 0.2074, loss = 0.072549, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 21 fit: [24.0 s]: Recall = 0.28754, Jaccard score = 0.2068, loss = 0.067512, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 22 fit: [24.2 s]: Recall = 0.29275, Jaccard score = 0.2113, loss = 0.063560, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 23 fit: [24.2 s]: Recall = 0.29055, Jaccard score = 0.2094, loss = 0.059852, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 24 fit: [23.8 s]: Recall = 0.28967, Jaccard score = 0.2086, loss = 0.056972, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 25 fit: [24.2 s]: Recall = 0.29149, Jaccard score = 0.2102, loss = 0.053341, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 26 fit: [24.0 s]: Recall = 0.28892, Jaccard score = 0.2080, loss = 0.051889, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 27 fit: [24.3 s]: Recall = 0.29124, Jaccard score = 0.2100, loss = 0.048393, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 28 fit: [24.2 s]: Recall = 0.29501, Jaccard score = 0.2133, loss = 0.046710, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 29 fit: [24.1 s]: Recall = 0.29400, Jaccard score = 0.2124, loss = 0.044247, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 30 fit: [24.6 s]: Recall = 0.29557, Jaccard score = 0.2138, loss = 0.041870, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 31 fit: [23.9 s]: Recall = 0.29708, Jaccard score = 0.2151, loss = 0.040701, gradient norm = 1.0000, eval: [17.1 s]
# Iteration 32 fit: [23.9 s]: Recall = 0.30066, Jaccard score = 0.2183, loss = 0.038853, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 33 fit: [23.9 s]: Recall = 0.29865, Jaccard score = 0.2165, loss = 0.037637, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 34 fit: [24.4 s]: Recall = 0.30047, Jaccard score = 0.2181, loss = 0.035506, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 35 fit: [24.1 s]: Recall = 0.30066, Jaccard score = 0.2183, loss = 0.034381, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 36 fit: [24.0 s]: Recall = 0.29796, Jaccard score = 0.2159, loss = 0.032796, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 37 fit: [24.2 s]: Recall = 0.30041, Jaccard score = 0.2180, loss = 0.032918, gradient norm = 1.0000, eval: [17.1 s]
# Iteration 38 fit: [24.2 s]: Recall = 0.29934, Jaccard score = 0.2171, loss = 0.031939, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 39 fit: [24.2 s]: Recall = 0.30204, Jaccard score = 0.2195, loss = 0.030730, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 40 fit: [24.2 s]: Recall = 0.30317, Jaccard score = 0.2205, loss = 0.030107, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 41 fit: [24.2 s]: Recall = 0.30380, Jaccard score = 0.2210, loss = 0.028509, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 42 fit: [23.9 s]: Recall = 0.30355, Jaccard score = 0.2208, loss = 0.027797, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 43 fit: [24.3 s]: Recall = 0.30512, Jaccard score = 0.2222, loss = 0.026853, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 44 fit: [24.0 s]: Recall = 0.30229, Jaccard score = 0.2197, loss = 0.025954, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 45 fit: [24.2 s]: Recall = 0.30411, Jaccard score = 0.2213, loss = 0.025061, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 46 fit: [24.0 s]: Recall = 0.30505, Jaccard score = 0.2222, loss = 0.024300, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 47 fit: [24.2 s]: Recall = 0.30524, Jaccard score = 0.2223, loss = 0.024207, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 48 fit: [23.8 s]: Recall = 0.31027, Jaccard score = 0.2268, loss = 0.023620, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 49 fit: [24.3 s]: Recall = 0.30443, Jaccard score = 0.2216, loss = 0.022274, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 50 fit: [24.8 s]: Recall = 0.30600, Jaccard score = 0.2230, loss = 0.021830, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 51 fit: [24.2 s]: Recall = 0.30719, Jaccard score = 0.2241, loss = 0.021879, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 52 fit: [23.7 s]: Recall = 0.30958, Jaccard score = 0.2262, loss = 0.020534, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 53 fit: [24.1 s]: Recall = 0.30644, Jaccard score = 0.2234, loss = 0.020838, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 54 fit: [24.3 s]: Recall = 0.30462, Jaccard score = 0.2218, loss = 0.020077, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 55 fit: [23.9 s]: Recall = 0.30380, Jaccard score = 0.2210, loss = 0.019754, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 56 fit: [23.8 s]: Recall = 0.30323, Jaccard score = 0.2205, loss = 0.018723, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 57 fit: [24.3 s]: Recall = 0.30801, Jaccard score = 0.2248, loss = 0.019188, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 58 fit: [24.2 s]: Recall = 0.31096, Jaccard score = 0.2274, loss = 0.019114, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 59 fit: [23.9 s]: Recall = 0.30694, Jaccard score = 0.2238, loss = 0.018382, gradient norm = 1.0000, eval: [17.2 s]
# Iteration 60 fit: [24.1 s]: Recall = 0.30719, Jaccard score = 0.2241, loss = 0.018347, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 61 fit: [24.0 s]: Recall = 0.31127, Jaccard score = 0.2277, loss = 0.017010, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 62 fit: [24.4 s]: Recall = 0.31196, Jaccard score = 0.2283, loss = 0.017429, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 63 fit: [24.2 s]: Recall = 0.30637, Jaccard score = 0.2233, loss = 0.017157, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 64 fit: [24.2 s]: Recall = 0.30794, Jaccard score = 0.2247, loss = 0.016993, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 65 fit: [23.9 s]: Recall = 0.31064, Jaccard score = 0.2272, loss = 0.016286, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 66 fit: [23.9 s]: Recall = 0.31454, Jaccard score = 0.2307, loss = 0.015929, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 67 fit: [24.2 s]: Recall = 0.30876, Jaccard score = 0.2255, loss = 0.016061, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 68 fit: [24.2 s]: Recall = 0.30845, Jaccard score = 0.2252, loss = 0.016030, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 69 fit: [23.8 s]: Recall = 0.30914, Jaccard score = 0.2258, loss = 0.015637, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 70 fit: [24.4 s]: Recall = 0.31203, Jaccard score = 0.2284, loss = 0.014972, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 71 fit: [24.4 s]: Recall = 0.31146, Jaccard score = 0.2279, loss = 0.014678, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 72 fit: [24.3 s]: Recall = 0.31196, Jaccard score = 0.2283, loss = 0.014768, gradient norm = 1.0000, eval: [17.2 s]
# Iteration 73 fit: [23.7 s]: Recall = 0.31341, Jaccard score = 0.2296, loss = 0.014280, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 74 fit: [24.3 s]: Recall = 0.31064, Jaccard score = 0.2272, loss = 0.014287, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 75 fit: [24.0 s]: Recall = 0.31385, Jaccard score = 0.2300, loss = 0.014503, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 76 fit: [24.2 s]: Recall = 0.31290, Jaccard score = 0.2292, loss = 0.013460, gradient norm = 1.0000, eval: [17.2 s]
# Iteration 77 fit: [24.2 s]: Recall = 0.31215, Jaccard score = 0.2285, loss = 0.014440, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 78 fit: [23.9 s]: Recall = 0.31265, Jaccard score = 0.2290, loss = 0.013298, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 79 fit: [23.9 s]: Recall = 0.31133, Jaccard score = 0.2278, loss = 0.013432, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 80 fit: [24.0 s]: Recall = 0.31027, Jaccard score = 0.2268, loss = 0.013113, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 81 fit: [23.9 s]: Recall = 0.31435, Jaccard score = 0.2305, loss = 0.012984, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 82 fit: [23.9 s]: Recall = 0.31190, Jaccard score = 0.2283, loss = 0.013357, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 83 fit: [23.9 s]: Recall = 0.30970, Jaccard score = 0.2263, loss = 0.012999, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 84 fit: [24.1 s]: Recall = 0.31623, Jaccard score = 0.2322, loss = 0.012378, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 85 fit: [23.9 s]: Recall = 0.31466, Jaccard score = 0.2308, loss = 0.012870, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 86 fit: [23.6 s]: Recall = 0.31523, Jaccard score = 0.2313, loss = 0.012136, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 87 fit: [23.8 s]: Recall = 0.31385, Jaccard score = 0.2300, loss = 0.012160, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 88 fit: [24.2 s]: Recall = 0.31303, Jaccard score = 0.2293, loss = 0.012083, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 89 fit: [24.2 s]: Recall = 0.31278, Jaccard score = 0.2291, loss = 0.012487, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 90 fit: [23.8 s]: Recall = 0.31410, Jaccard score = 0.2303, loss = 0.012014, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 91 fit: [23.9 s]: Recall = 0.31667, Jaccard score = 0.2326, loss = 0.011629, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 92 fit: [24.1 s]: Recall = 0.31692, Jaccard score = 0.2328, loss = 0.011930, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 93 fit: [24.2 s]: Recall = 0.31491, Jaccard score = 0.2310, loss = 0.011519, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 94 fit: [24.1 s]: Recall = 0.31347, Jaccard score = 0.2297, loss = 0.011307, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 95 fit: [23.9 s]: Recall = 0.31705, Jaccard score = 0.2329, loss = 0.011834, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 96 fit: [24.2 s]: Recall = 0.31768, Jaccard score = 0.2335, loss = 0.011344, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 97 fit: [24.2 s]: Recall = 0.31523, Jaccard score = 0.2313, loss = 0.010939, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 98 fit: [24.2 s]: Recall = 0.31372, Jaccard score = 0.2299, loss = 0.011288, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 99 fit: [24.2 s]: Recall = 0.31435, Jaccard score = 0.2305, loss = 0.011368, gradient norm = 1.0000, eval: [17.0 s]
# End. Best Iteration 96:  Recall = 0.3177, Jaccard score = 0.2335. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569775748.h5
# The average best performance after k-fold 5 is: Recall = 0.31711381273642336, Jaccard score = 0.2326595889641059
