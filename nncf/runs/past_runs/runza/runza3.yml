--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "100"
--lr: "0.001"
--early_stopping: "35"
--layers: "[512,750,350,96]"
--MLP_variant: "dropbn"
--reg_layers: "[0,0,0,0]"
--num_k_folds: "5"


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='dropbn', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
# Load data done [1.6 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_5 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# bn_user (BatchNormalization)    (None, 256)          1024        flatten_5[0][0]                  
# __________________________________________________________________________________________________
# flatten_6 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# dropout_11 (Dropout)            (None, 256)          0           bn_user[0][0]                    
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# bn_item (BatchNormalization)    (None, 256)          1024        flatten_6[0][0]                  
# __________________________________________________________________________________________________
# concatenate_5 (Concatenate)     (None, 1256)         0           dropout_11[0][0]                 
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_12 (Dropout)            (None, 256)          0           bn_item[0][0]                    
# __________________________________________________________________________________________________
# concatenate_6 (Concatenate)     (None, 1512)         0           concatenate_5[0][0]              
#                                                                  dropout_12[0][0]                 
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_6[0][0]              
# __________________________________________________________________________________________________
# dropout_13 (Dropout)            (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_13[0][0]                 
# __________________________________________________________________________________________________
# dropout_14 (Dropout)            (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_14[0][0]                 
# __________________________________________________________________________________________________
# dropout_15 (Dropout)            (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_15[0][0]                 
# ==================================================================================================
# Total params: 6,553,441
# Trainable params: 6,552,417
# Non-trainable params: 1,024
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0953, Jaccard score = 0.0297
# Iteration 0 fit: [32.5 s]: Recall = 0.42462, Jaccard score = 0.1476, loss = 0.441600, gradient norm = 1.0000, eval: [17.7 s]
# Iteration 1 fit: [30.6 s]: Recall = 0.47442, Jaccard score = 0.1678, loss = 0.403532, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 2 fit: [30.6 s]: Recall = 0.50716, Jaccard score = 0.1815, loss = 0.379733, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 3 fit: [30.6 s]: Recall = 0.52430, Jaccard score = 0.1888, loss = 0.360861, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 4 fit: [30.6 s]: Recall = 0.53127, Jaccard score = 0.1918, loss = 0.344337, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 5 fit: [30.6 s]: Recall = 0.54335, Jaccard score = 0.1970, loss = 0.329119, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 6 fit: [30.6 s]: Recall = 0.54699, Jaccard score = 0.1986, loss = 0.315253, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 7 fit: [30.6 s]: Recall = 0.55230, Jaccard score = 0.2009, loss = 0.302644, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 8 fit: [30.6 s]: Recall = 0.55729, Jaccard score = 0.2031, loss = 0.290852, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 9 fit: [30.6 s]: Recall = 0.55934, Jaccard score = 0.2040, loss = 0.280224, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 10 fit: [30.6 s]: Recall = 0.56228, Jaccard score = 0.2052, loss = 0.268945, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 11 fit: [30.6 s]: Recall = 0.56957, Jaccard score = 0.2085, loss = 0.259715, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 12 fit: [30.6 s]: Recall = 0.56624, Jaccard score = 0.2070, loss = 0.249701, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 13 fit: [30.6 s]: Recall = 0.57199, Jaccard score = 0.2095, loss = 0.240862, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 14 fit: [30.6 s]: Recall = 0.57398, Jaccard score = 0.2104, loss = 0.233510, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 15 fit: [30.6 s]: Recall = 0.57666, Jaccard score = 0.2116, loss = 0.224884, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 16 fit: [30.6 s]: Recall = 0.57928, Jaccard score = 0.2128, loss = 0.217335, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 17 fit: [30.6 s]: Recall = 0.58133, Jaccard score = 0.2137, loss = 0.210564, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 18 fit: [30.6 s]: Recall = 0.57980, Jaccard score = 0.2130, loss = 0.202674, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 19 fit: [30.6 s]: Recall = 0.58421, Jaccard score = 0.2150, loss = 0.195969, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 20 fit: [30.6 s]: Recall = 0.58063, Jaccard score = 0.2134, loss = 0.189850, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 21 fit: [30.6 s]: Recall = 0.58593, Jaccard score = 0.2157, loss = 0.185597, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 22 fit: [30.6 s]: Recall = 0.59137, Jaccard score = 0.2182, loss = 0.178859, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 23 fit: [30.6 s]: Recall = 0.59527, Jaccard score = 0.2199, loss = 0.173687, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 24 fit: [30.6 s]: Recall = 0.59335, Jaccard score = 0.2191, loss = 0.169244, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 25 fit: [30.6 s]: Recall = 0.59936, Jaccard score = 0.2218, loss = 0.165277, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 26 fit: [30.6 s]: Recall = 0.60013, Jaccard score = 0.2221, loss = 0.160615, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 27 fit: [30.6 s]: Recall = 0.60332, Jaccard score = 0.2236, loss = 0.156564, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 28 fit: [30.6 s]: Recall = 0.60499, Jaccard score = 0.2243, loss = 0.151876, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 29 fit: [30.6 s]: Recall = 0.60205, Jaccard score = 0.2230, loss = 0.148628, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 30 fit: [30.6 s]: Recall = 0.60748, Jaccard score = 0.2255, loss = 0.144212, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 31 fit: [30.6 s]: Recall = 0.60627, Jaccard score = 0.2249, loss = 0.140388, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 32 fit: [30.6 s]: Recall = 0.60972, Jaccard score = 0.2265, loss = 0.137537, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 33 fit: [30.6 s]: Recall = 0.60735, Jaccard score = 0.2254, loss = 0.134354, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 34 fit: [30.6 s]: Recall = 0.61400, Jaccard score = 0.2284, loss = 0.131694, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 35 fit: [30.6 s]: Recall = 0.61087, Jaccard score = 0.2270, loss = 0.129186, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 36 fit: [30.6 s]: Recall = 0.61471, Jaccard score = 0.2288, loss = 0.125948, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 37 fit: [30.6 s]: Recall = 0.61413, Jaccard score = 0.2285, loss = 0.123434, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 38 fit: [30.6 s]: Recall = 0.61439, Jaccard score = 0.2286, loss = 0.119881, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 39 fit: [30.6 s]: Recall = 0.61969, Jaccard score = 0.2310, loss = 0.117678, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 40 fit: [30.6 s]: Recall = 0.61650, Jaccard score = 0.2296, loss = 0.115731, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 41 fit: [30.6 s]: Recall = 0.61809, Jaccard score = 0.2303, loss = 0.113640, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 42 fit: [30.6 s]: Recall = 0.61963, Jaccard score = 0.2310, loss = 0.110217, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 43 fit: [30.6 s]: Recall = 0.62014, Jaccard score = 0.2313, loss = 0.108261, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 44 fit: [30.6 s]: Recall = 0.62180, Jaccard score = 0.2320, loss = 0.106765, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 45 fit: [30.6 s]: Recall = 0.62219, Jaccard score = 0.2322, loss = 0.104543, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 46 fit: [30.6 s]: Recall = 0.62455, Jaccard score = 0.2333, loss = 0.102396, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 47 fit: [30.6 s]: Recall = 0.62372, Jaccard score = 0.2329, loss = 0.101174, gradient norm = 1.0000, eval: [17.7 s]
# Iteration 48 fit: [30.6 s]: Recall = 0.62820, Jaccard score = 0.2350, loss = 0.099734, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 49 fit: [30.6 s]: Recall = 0.62327, Jaccard score = 0.2327, loss = 0.097314, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 50 fit: [30.6 s]: Recall = 0.62692, Jaccard score = 0.2344, loss = 0.096287, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 51 fit: [30.6 s]: Recall = 0.62295, Jaccard score = 0.2325, loss = 0.094825, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 52 fit: [30.6 s]: Recall = 0.62909, Jaccard score = 0.2354, loss = 0.093031, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 53 fit: [30.6 s]: Recall = 0.63133, Jaccard score = 0.2364, loss = 0.091189, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 54 fit: [30.6 s]: Recall = 0.63063, Jaccard score = 0.2361, loss = 0.090250, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 55 fit: [30.6 s]: Recall = 0.62928, Jaccard score = 0.2355, loss = 0.088186, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 56 fit: [30.6 s]: Recall = 0.63107, Jaccard score = 0.2363, loss = 0.088231, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 57 fit: [30.6 s]: Recall = 0.63242, Jaccard score = 0.2369, loss = 0.085412, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 58 fit: [30.6 s]: Recall = 0.63139, Jaccard score = 0.2364, loss = 0.083959, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 59 fit: [30.6 s]: Recall = 0.63024, Jaccard score = 0.2359, loss = 0.082641, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 60 fit: [30.6 s]: Recall = 0.63274, Jaccard score = 0.2371, loss = 0.081863, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 61 fit: [30.6 s]: Recall = 0.63459, Jaccard score = 0.2379, loss = 0.080205, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 62 fit: [30.6 s]: Recall = 0.62960, Jaccard score = 0.2356, loss = 0.079990, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 63 fit: [30.6 s]: Recall = 0.63811, Jaccard score = 0.2396, loss = 0.078110, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 64 fit: [30.6 s]: Recall = 0.63625, Jaccard score = 0.2387, loss = 0.077685, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 65 fit: [30.6 s]: Recall = 0.63299, Jaccard score = 0.2372, loss = 0.076303, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 66 fit: [30.6 s]: Recall = 0.63517, Jaccard score = 0.2382, loss = 0.075930, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 67 fit: [30.6 s]: Recall = 0.63465, Jaccard score = 0.2380, loss = 0.074102, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 68 fit: [30.6 s]: Recall = 0.63453, Jaccard score = 0.2379, loss = 0.073401, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 69 fit: [30.6 s]: Recall = 0.63325, Jaccard score = 0.2373, loss = 0.071795, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 70 fit: [30.6 s]: Recall = 0.63389, Jaccard score = 0.2376, loss = 0.071645, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 71 fit: [30.6 s]: Recall = 0.63504, Jaccard score = 0.2381, loss = 0.070632, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 72 fit: [30.6 s]: Recall = 0.63702, Jaccard score = 0.2391, loss = 0.070013, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 73 fit: [30.6 s]: Recall = 0.63798, Jaccard score = 0.2395, loss = 0.068739, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 74 fit: [30.6 s]: Recall = 0.63760, Jaccard score = 0.2393, loss = 0.068126, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 75 fit: [30.6 s]: Recall = 0.63875, Jaccard score = 0.2399, loss = 0.067085, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 76 fit: [30.6 s]: Recall = 0.63849, Jaccard score = 0.2397, loss = 0.067303, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 77 fit: [30.6 s]: Recall = 0.63504, Jaccard score = 0.2381, loss = 0.066210, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 78 fit: [30.6 s]: Recall = 0.63683, Jaccard score = 0.2390, loss = 0.065198, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 79 fit: [30.6 s]: Recall = 0.63881, Jaccard score = 0.2399, loss = 0.064428, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 80 fit: [30.6 s]: Recall = 0.63996, Jaccard score = 0.2404, loss = 0.063832, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 81 fit: [30.6 s]: Recall = 0.63632, Jaccard score = 0.2387, loss = 0.062575, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 82 fit: [30.6 s]: Recall = 0.63683, Jaccard score = 0.2390, loss = 0.061786, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 83 fit: [30.6 s]: Recall = 0.64035, Jaccard score = 0.2406, loss = 0.061631, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 84 fit: [30.6 s]: Recall = 0.63721, Jaccard score = 0.2391, loss = 0.061483, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 85 fit: [30.6 s]: Recall = 0.63836, Jaccard score = 0.2397, loss = 0.061318, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 86 fit: [30.6 s]: Recall = 0.63523, Jaccard score = 0.2382, loss = 0.059246, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 87 fit: [30.6 s]: Recall = 0.63811, Jaccard score = 0.2396, loss = 0.058722, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 88 fit: [30.6 s]: Recall = 0.63951, Jaccard score = 0.2402, loss = 0.058404, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 89 fit: [30.6 s]: Recall = 0.63561, Jaccard score = 0.2384, loss = 0.057602, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 90 fit: [30.6 s]: Recall = 0.63958, Jaccard score = 0.2402, loss = 0.056908, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 91 fit: [30.6 s]: Recall = 0.64047, Jaccard score = 0.2407, loss = 0.055873, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 92 fit: [30.6 s]: Recall = 0.63926, Jaccard score = 0.2401, loss = 0.056482, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 93 fit: [30.6 s]: Recall = 0.63811, Jaccard score = 0.2396, loss = 0.055340, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 94 fit: [30.6 s]: Recall = 0.64258, Jaccard score = 0.2416, loss = 0.054613, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 95 fit: [30.6 s]: Recall = 0.64290, Jaccard score = 0.2418, loss = 0.053959, gradient norm = 1.0000, eval: [17.7 s]
# Iteration 96 fit: [30.6 s]: Recall = 0.63574, Jaccard score = 0.2385, loss = 0.054046, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 97 fit: [30.6 s]: Recall = 0.64277, Jaccard score = 0.2417, loss = 0.053089, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 98 fit: [30.6 s]: Recall = 0.63798, Jaccard score = 0.2395, loss = 0.052513, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 99 fit: [30.6 s]: Recall = 0.64066, Jaccard score = 0.2407, loss = 0.053218, gradient norm = 1.0000, eval: [17.6 s]
# End. Best Iteration 95:  Recall = 0.6429, Jaccard score = 0.2418. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
# The average best performance after k-fold 1 is: Recall = 0.6429028132992327, Jaccard score = 0.241793916075508
# 
# Performing k-fold 2
# Init: Recall = 0.0954, Jaccard score = 0.0302
# Iteration 0 fit: [32.3 s]: Recall = 0.41711, Jaccard score = 0.1471, loss = 0.441863, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 1 fit: [30.6 s]: Recall = 0.46836, Jaccard score = 0.1682, loss = 0.404070, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 2 fit: [30.6 s]: Recall = 0.49427, Jaccard score = 0.1792, loss = 0.379997, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 3 fit: [30.7 s]: Recall = 0.50948, Jaccard score = 0.1857, loss = 0.361203, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 4 fit: [30.6 s]: Recall = 0.52275, Jaccard score = 0.1915, loss = 0.344627, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 5 fit: [30.7 s]: Recall = 0.53214, Jaccard score = 0.1956, loss = 0.329402, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 6 fit: [30.6 s]: Recall = 0.53915, Jaccard score = 0.1987, loss = 0.315248, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 7 fit: [30.7 s]: Recall = 0.54277, Jaccard score = 0.2003, loss = 0.301862, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 8 fit: [30.6 s]: Recall = 0.55041, Jaccard score = 0.2037, loss = 0.289810, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 9 fit: [30.7 s]: Recall = 0.55360, Jaccard score = 0.2051, loss = 0.278948, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 10 fit: [30.6 s]: Recall = 0.55523, Jaccard score = 0.2058, loss = 0.267925, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 11 fit: [30.7 s]: Recall = 0.55736, Jaccard score = 0.2068, loss = 0.258831, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 12 fit: [30.6 s]: Recall = 0.56555, Jaccard score = 0.2104, loss = 0.249786, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 13 fit: [30.7 s]: Recall = 0.56499, Jaccard score = 0.2102, loss = 0.240376, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 14 fit: [30.6 s]: Recall = 0.57075, Jaccard score = 0.2128, loss = 0.232747, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 15 fit: [30.6 s]: Recall = 0.56981, Jaccard score = 0.2124, loss = 0.223678, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 16 fit: [30.6 s]: Recall = 0.57094, Jaccard score = 0.2129, loss = 0.215198, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 17 fit: [30.7 s]: Recall = 0.57701, Jaccard score = 0.2156, loss = 0.209331, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 18 fit: [30.6 s]: Recall = 0.57989, Jaccard score = 0.2169, loss = 0.201570, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 19 fit: [30.6 s]: Recall = 0.58276, Jaccard score = 0.2182, loss = 0.195556, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 20 fit: [30.6 s]: Recall = 0.58295, Jaccard score = 0.2183, loss = 0.189911, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 21 fit: [30.7 s]: Recall = 0.58502, Jaccard score = 0.2193, loss = 0.183267, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 22 fit: [30.6 s]: Recall = 0.58977, Jaccard score = 0.2215, loss = 0.177997, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 23 fit: [30.7 s]: Recall = 0.58715, Jaccard score = 0.2203, loss = 0.172866, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 24 fit: [30.6 s]: Recall = 0.59196, Jaccard score = 0.2225, loss = 0.167685, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 25 fit: [30.7 s]: Recall = 0.59178, Jaccard score = 0.2224, loss = 0.164591, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 26 fit: [30.6 s]: Recall = 0.59359, Jaccard score = 0.2232, loss = 0.158675, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 27 fit: [30.7 s]: Recall = 0.59829, Jaccard score = 0.2254, loss = 0.154770, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 28 fit: [30.6 s]: Recall = 0.60148, Jaccard score = 0.2268, loss = 0.151042, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 29 fit: [30.7 s]: Recall = 0.59929, Jaccard score = 0.2258, loss = 0.147164, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 30 fit: [30.6 s]: Recall = 0.60611, Jaccard score = 0.2290, loss = 0.143760, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 31 fit: [30.7 s]: Recall = 0.60605, Jaccard score = 0.2290, loss = 0.140130, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 32 fit: [30.6 s]: Recall = 0.60473, Jaccard score = 0.2284, loss = 0.135738, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 33 fit: [30.7 s]: Recall = 0.60717, Jaccard score = 0.2295, loss = 0.133546, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 34 fit: [30.6 s]: Recall = 0.60824, Jaccard score = 0.2300, loss = 0.130258, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 35 fit: [30.7 s]: Recall = 0.60892, Jaccard score = 0.2303, loss = 0.127819, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 36 fit: [30.6 s]: Recall = 0.60924, Jaccard score = 0.2304, loss = 0.124550, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 37 fit: [30.6 s]: Recall = 0.61193, Jaccard score = 0.2317, loss = 0.121647, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 38 fit: [30.6 s]: Recall = 0.61537, Jaccard score = 0.2333, loss = 0.120589, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 39 fit: [30.7 s]: Recall = 0.61525, Jaccard score = 0.2332, loss = 0.117090, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 40 fit: [30.6 s]: Recall = 0.61437, Jaccard score = 0.2328, loss = 0.114939, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 41 fit: [30.6 s]: Recall = 0.61368, Jaccard score = 0.2325, loss = 0.112446, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 42 fit: [32.1 s]: Recall = 0.61643, Jaccard score = 0.2338, loss = 0.110932, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 43 fit: [30.7 s]: Recall = 0.61800, Jaccard score = 0.2345, loss = 0.108400, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 44 fit: [30.8 s]: Recall = 0.61681, Jaccard score = 0.2340, loss = 0.105695, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 45 fit: [30.6 s]: Recall = 0.61900, Jaccard score = 0.2350, loss = 0.104743, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 46 fit: [30.6 s]: Recall = 0.61744, Jaccard score = 0.2343, loss = 0.102859, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 47 fit: [30.7 s]: Recall = 0.62157, Jaccard score = 0.2362, loss = 0.101261, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 48 fit: [30.6 s]: Recall = 0.61837, Jaccard score = 0.2347, loss = 0.098850, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 49 fit: [30.6 s]: Recall = 0.62006, Jaccard score = 0.2355, loss = 0.098147, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 50 fit: [30.6 s]: Recall = 0.62288, Jaccard score = 0.2368, loss = 0.095031, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 51 fit: [30.6 s]: Recall = 0.62200, Jaccard score = 0.2364, loss = 0.093926, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 52 fit: [30.6 s]: Recall = 0.62307, Jaccard score = 0.2369, loss = 0.092956, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 53 fit: [30.6 s]: Recall = 0.62463, Jaccard score = 0.2377, loss = 0.091517, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 54 fit: [30.6 s]: Recall = 0.62275, Jaccard score = 0.2368, loss = 0.090221, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 55 fit: [30.7 s]: Recall = 0.62182, Jaccard score = 0.2363, loss = 0.088230, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 56 fit: [30.6 s]: Recall = 0.62357, Jaccard score = 0.2372, loss = 0.086923, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 57 fit: [30.7 s]: Recall = 0.62426, Jaccard score = 0.2375, loss = 0.085796, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 58 fit: [30.6 s]: Recall = 0.62432, Jaccard score = 0.2375, loss = 0.084517, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 59 fit: [30.7 s]: Recall = 0.62820, Jaccard score = 0.2393, loss = 0.083221, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 60 fit: [30.7 s]: Recall = 0.62657, Jaccard score = 0.2386, loss = 0.081079, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 61 fit: [30.7 s]: Recall = 0.62895, Jaccard score = 0.2397, loss = 0.081229, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 62 fit: [30.6 s]: Recall = 0.62926, Jaccard score = 0.2398, loss = 0.079042, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 63 fit: [30.7 s]: Recall = 0.62807, Jaccard score = 0.2393, loss = 0.078887, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 64 fit: [30.6 s]: Recall = 0.63089, Jaccard score = 0.2406, loss = 0.077309, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 65 fit: [30.6 s]: Recall = 0.63083, Jaccard score = 0.2406, loss = 0.076536, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 66 fit: [30.6 s]: Recall = 0.62901, Jaccard score = 0.2397, loss = 0.075619, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 67 fit: [30.7 s]: Recall = 0.62651, Jaccard score = 0.2385, loss = 0.074059, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 68 fit: [30.6 s]: Recall = 0.62520, Jaccard score = 0.2379, loss = 0.073470, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 69 fit: [30.6 s]: Recall = 0.63208, Jaccard score = 0.2412, loss = 0.072601, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 70 fit: [30.6 s]: Recall = 0.63477, Jaccard score = 0.2424, loss = 0.071479, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 71 fit: [30.7 s]: Recall = 0.63208, Jaccard score = 0.2412, loss = 0.070615, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 72 fit: [30.6 s]: Recall = 0.62726, Jaccard score = 0.2389, loss = 0.069072, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 73 fit: [30.6 s]: Recall = 0.63227, Jaccard score = 0.2413, loss = 0.068380, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 74 fit: [30.6 s]: Recall = 0.63502, Jaccard score = 0.2426, loss = 0.066758, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 75 fit: [30.7 s]: Recall = 0.63120, Jaccard score = 0.2408, loss = 0.067103, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 76 fit: [30.6 s]: Recall = 0.63352, Jaccard score = 0.2419, loss = 0.066625, gradient norm = 1.0000, eval: [17.7 s]
# Iteration 77 fit: [30.6 s]: Recall = 0.63152, Jaccard score = 0.2409, loss = 0.065770, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 78 fit: [30.6 s]: Recall = 0.63371, Jaccard score = 0.2419, loss = 0.065043, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 79 fit: [30.7 s]: Recall = 0.63127, Jaccard score = 0.2408, loss = 0.063970, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 80 fit: [30.6 s]: Recall = 0.63177, Jaccard score = 0.2410, loss = 0.062720, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 81 fit: [30.6 s]: Recall = 0.62663, Jaccard score = 0.2386, loss = 0.062595, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 82 fit: [30.6 s]: Recall = 0.62964, Jaccard score = 0.2400, loss = 0.061687, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 83 fit: [30.7 s]: Recall = 0.62757, Jaccard score = 0.2390, loss = 0.060902, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 84 fit: [30.6 s]: Recall = 0.63070, Jaccard score = 0.2405, loss = 0.060448, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 85 fit: [30.6 s]: Recall = 0.63364, Jaccard score = 0.2419, loss = 0.059695, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 86 fit: [30.6 s]: Recall = 0.62951, Jaccard score = 0.2400, loss = 0.059128, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 87 fit: [30.6 s]: Recall = 0.62895, Jaccard score = 0.2397, loss = 0.058142, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 88 fit: [30.6 s]: Recall = 0.62983, Jaccard score = 0.2401, loss = 0.058149, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 89 fit: [30.6 s]: Recall = 0.63114, Jaccard score = 0.2407, loss = 0.057150, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 90 fit: [30.6 s]: Recall = 0.63339, Jaccard score = 0.2418, loss = 0.056682, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 91 fit: [30.6 s]: Recall = 0.63177, Jaccard score = 0.2410, loss = 0.056266, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 92 fit: [30.6 s]: Recall = 0.63440, Jaccard score = 0.2423, loss = 0.055578, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 93 fit: [30.6 s]: Recall = 0.63258, Jaccard score = 0.2414, loss = 0.054919, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 94 fit: [30.6 s]: Recall = 0.63440, Jaccard score = 0.2423, loss = 0.054608, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 95 fit: [30.7 s]: Recall = 0.63283, Jaccard score = 0.2415, loss = 0.053870, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 96 fit: [30.6 s]: Recall = 0.63039, Jaccard score = 0.2404, loss = 0.053728, gradient norm = 1.0000, eval: [17.5 s]
# Iteration 97 fit: [30.7 s]: Recall = 0.63246, Jaccard score = 0.2413, loss = 0.054143, gradient norm = 1.0000, eval: [17.9 s]
# Iteration 98 fit: [30.6 s]: Recall = 0.63383, Jaccard score = 0.2420, loss = 0.052780, gradient norm = 1.0000, eval: [17.6 s]
# Iteration 99 fit: [30.7 s]: Recall = 0.63565, Jaccard score = 0.2429, loss = 0.051857, gradient norm = 1.0000, eval: [17.8 s]
# End. Best Iteration 99:  Recall = 0.6356, Jaccard score = 0.2429. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
# The average best performance after k-fold 2 is: Recall = 0.639274799853196, Jaccard score = 0.24232826213607545
# 
# Performing k-fold 3
# Init: Recall = 0.0953, Jaccard score = 0.0301
# Iteration 0 fit: [33.0 s]: Recall = 0.42377, Jaccard score = 0.1490, loss = 0.440851, gradient norm = 1.0000, eval: [17.8 s]
# Iteration 1 fit: [30.8 s]: Recall = 0.47358, Jaccard score = 0.1695, loss = 0.402333, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 2 fit: [30.8 s]: Recall = 0.49909, Jaccard score = 0.1803, loss = 0.379389, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 3 fit: [30.8 s]: Recall = 0.51949, Jaccard score = 0.1891, loss = 0.360831, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 4 fit: [30.7 s]: Recall = 0.52629, Jaccard score = 0.1920, loss = 0.343902, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 5 fit: [30.8 s]: Recall = 0.53517, Jaccard score = 0.1959, loss = 0.328602, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 6 fit: [30.8 s]: Recall = 0.54349, Jaccard score = 0.1995, loss = 0.315070, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 7 fit: [30.8 s]: Recall = 0.55186, Jaccard score = 0.2032, loss = 0.302919, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 8 fit: [30.8 s]: Recall = 0.55570, Jaccard score = 0.2049, loss = 0.290412, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 9 fit: [30.8 s]: Recall = 0.55551, Jaccard score = 0.2049, loss = 0.279688, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 10 fit: [30.7 s]: Recall = 0.55595, Jaccard score = 0.2051, loss = 0.268756, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 11 fit: [30.8 s]: Recall = 0.55885, Jaccard score = 0.2063, loss = 0.259093, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 12 fit: [30.8 s]: Recall = 0.56213, Jaccard score = 0.2078, loss = 0.249822, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 13 fit: [30.8 s]: Recall = 0.56830, Jaccard score = 0.2106, loss = 0.240298, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 14 fit: [30.8 s]: Recall = 0.57195, Jaccard score = 0.2122, loss = 0.232473, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 15 fit: [30.8 s]: Recall = 0.57371, Jaccard score = 0.2130, loss = 0.224257, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 16 fit: [30.7 s]: Recall = 0.57321, Jaccard score = 0.2128, loss = 0.216870, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 17 fit: [30.8 s]: Recall = 0.57705, Jaccard score = 0.2145, loss = 0.209295, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 18 fit: [30.8 s]: Recall = 0.57944, Jaccard score = 0.2156, loss = 0.202562, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 19 fit: [30.8 s]: Recall = 0.58448, Jaccard score = 0.2179, loss = 0.196452, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 20 fit: [30.7 s]: Recall = 0.58473, Jaccard score = 0.2180, loss = 0.190344, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 21 fit: [30.8 s]: Recall = 0.58461, Jaccard score = 0.2179, loss = 0.184560, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 22 fit: [30.8 s]: Recall = 0.58688, Jaccard score = 0.2190, loss = 0.179467, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 23 fit: [30.8 s]: Recall = 0.59097, Jaccard score = 0.2208, loss = 0.173259, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 24 fit: [30.7 s]: Recall = 0.59047, Jaccard score = 0.2206, loss = 0.169090, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 25 fit: [30.8 s]: Recall = 0.59053, Jaccard score = 0.2206, loss = 0.164478, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 26 fit: [30.7 s]: Recall = 0.59525, Jaccard score = 0.2228, loss = 0.159056, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 27 fit: [30.8 s]: Recall = 0.59437, Jaccard score = 0.2224, loss = 0.155091, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 28 fit: [30.7 s]: Recall = 0.60237, Jaccard score = 0.2260, loss = 0.151192, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 29 fit: [30.8 s]: Recall = 0.60432, Jaccard score = 0.2269, loss = 0.147552, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 30 fit: [30.8 s]: Recall = 0.60048, Jaccard score = 0.2252, loss = 0.144200, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 31 fit: [30.8 s]: Recall = 0.60142, Jaccard score = 0.2256, loss = 0.140717, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 32 fit: [30.7 s]: Recall = 0.60804, Jaccard score = 0.2287, loss = 0.137611, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 33 fit: [30.8 s]: Recall = 0.60659, Jaccard score = 0.2280, loss = 0.134043, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 34 fit: [30.8 s]: Recall = 0.61112, Jaccard score = 0.2301, loss = 0.130342, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 35 fit: [30.7 s]: Recall = 0.61068, Jaccard score = 0.2299, loss = 0.129090, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 36 fit: [30.8 s]: Recall = 0.60822, Jaccard score = 0.2287, loss = 0.125304, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 37 fit: [30.7 s]: Recall = 0.61118, Jaccard score = 0.2301, loss = 0.123108, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 38 fit: [30.8 s]: Recall = 0.61433, Jaccard score = 0.2316, loss = 0.120960, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 39 fit: [30.8 s]: Recall = 0.61131, Jaccard score = 0.2302, loss = 0.117479, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 40 fit: [30.8 s]: Recall = 0.61207, Jaccard score = 0.2305, loss = 0.114858, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 41 fit: [30.8 s]: Recall = 0.61534, Jaccard score = 0.2320, loss = 0.112893, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 42 fit: [30.8 s]: Recall = 0.61717, Jaccard score = 0.2329, loss = 0.111751, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 43 fit: [30.8 s]: Recall = 0.61824, Jaccard score = 0.2334, loss = 0.109544, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 44 fit: [30.8 s]: Recall = 0.61824, Jaccard score = 0.2334, loss = 0.107125, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 45 fit: [30.8 s]: Recall = 0.61962, Jaccard score = 0.2340, loss = 0.105232, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 46 fit: [30.7 s]: Recall = 0.62435, Jaccard score = 0.2362, loss = 0.102798, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 47 fit: [30.8 s]: Recall = 0.61578, Jaccard score = 0.2323, loss = 0.101702, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 48 fit: [30.7 s]: Recall = 0.62164, Jaccard score = 0.2350, loss = 0.099131, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 49 fit: [30.7 s]: Recall = 0.62328, Jaccard score = 0.2357, loss = 0.098090, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 50 fit: [30.8 s]: Recall = 0.62479, Jaccard score = 0.2365, loss = 0.095186, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 51 fit: [30.8 s]: Recall = 0.62145, Jaccard score = 0.2349, loss = 0.093911, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 52 fit: [30.7 s]: Recall = 0.62561, Jaccard score = 0.2368, loss = 0.093126, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 53 fit: [30.7 s]: Recall = 0.62535, Jaccard score = 0.2367, loss = 0.090774, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 54 fit: [30.7 s]: Recall = 0.62523, Jaccard score = 0.2367, loss = 0.089444, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 55 fit: [30.7 s]: Recall = 0.62384, Jaccard score = 0.2360, loss = 0.088794, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 56 fit: [30.8 s]: Recall = 0.62580, Jaccard score = 0.2369, loss = 0.086754, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 57 fit: [30.8 s]: Recall = 0.62800, Jaccard score = 0.2380, loss = 0.085492, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 58 fit: [30.7 s]: Recall = 0.62630, Jaccard score = 0.2372, loss = 0.084941, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 59 fit: [30.8 s]: Recall = 0.62819, Jaccard score = 0.2380, loss = 0.083717, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 60 fit: [30.8 s]: Recall = 0.63096, Jaccard score = 0.2393, loss = 0.082102, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 61 fit: [30.8 s]: Recall = 0.63190, Jaccard score = 0.2398, loss = 0.081209, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 62 fit: [30.8 s]: Recall = 0.62825, Jaccard score = 0.2381, loss = 0.080179, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 63 fit: [30.7 s]: Recall = 0.62768, Jaccard score = 0.2378, loss = 0.079253, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 64 fit: [30.7 s]: Recall = 0.63071, Jaccard score = 0.2392, loss = 0.077850, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 65 fit: [30.8 s]: Recall = 0.63178, Jaccard score = 0.2397, loss = 0.077041, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 66 fit: [30.8 s]: Recall = 0.63127, Jaccard score = 0.2395, loss = 0.074837, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 67 fit: [30.8 s]: Recall = 0.63222, Jaccard score = 0.2399, loss = 0.074495, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 68 fit: [30.8 s]: Recall = 0.63543, Jaccard score = 0.2415, loss = 0.073214, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 69 fit: [30.8 s]: Recall = 0.63493, Jaccard score = 0.2412, loss = 0.072776, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 70 fit: [30.7 s]: Recall = 0.63442, Jaccard score = 0.2410, loss = 0.072178, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 71 fit: [30.8 s]: Recall = 0.63455, Jaccard score = 0.2410, loss = 0.071283, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 72 fit: [30.8 s]: Recall = 0.63209, Jaccard score = 0.2399, loss = 0.070411, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 73 fit: [30.8 s]: Recall = 0.63436, Jaccard score = 0.2409, loss = 0.069909, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 74 fit: [30.8 s]: Recall = 0.63732, Jaccard score = 0.2423, loss = 0.068635, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 75 fit: [30.7 s]: Recall = 0.62844, Jaccard score = 0.2382, loss = 0.067493, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 76 fit: [30.7 s]: Recall = 0.63575, Jaccard score = 0.2416, loss = 0.067219, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 77 fit: [30.7 s]: Recall = 0.63153, Jaccard score = 0.2396, loss = 0.066035, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 78 fit: [30.8 s]: Recall = 0.63864, Jaccard score = 0.2430, loss = 0.065330, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 79 fit: [30.8 s]: Recall = 0.63826, Jaccard score = 0.2428, loss = 0.064336, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 80 fit: [30.7 s]: Recall = 0.63814, Jaccard score = 0.2427, loss = 0.063376, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 81 fit: [30.7 s]: Recall = 0.63656, Jaccard score = 0.2420, loss = 0.063583, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 82 fit: [30.7 s]: Recall = 0.63480, Jaccard score = 0.2412, loss = 0.061811, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 83 fit: [30.7 s]: Recall = 0.63575, Jaccard score = 0.2416, loss = 0.061263, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 84 fit: [30.8 s]: Recall = 0.63675, Jaccard score = 0.2421, loss = 0.061409, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 85 fit: [30.7 s]: Recall = 0.63600, Jaccard score = 0.2417, loss = 0.061265, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 86 fit: [30.8 s]: Recall = 0.63631, Jaccard score = 0.2419, loss = 0.059213, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 87 fit: [30.8 s]: Recall = 0.63449, Jaccard score = 0.2410, loss = 0.058832, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 88 fit: [30.7 s]: Recall = 0.63839, Jaccard score = 0.2428, loss = 0.058642, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 89 fit: [30.8 s]: Recall = 0.63789, Jaccard score = 0.2426, loss = 0.058011, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 90 fit: [30.8 s]: Recall = 0.63820, Jaccard score = 0.2428, loss = 0.057545, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 91 fit: [30.8 s]: Recall = 0.63940, Jaccard score = 0.2433, loss = 0.056710, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 92 fit: [30.8 s]: Recall = 0.63719, Jaccard score = 0.2423, loss = 0.056226, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 93 fit: [30.8 s]: Recall = 0.63940, Jaccard score = 0.2433, loss = 0.056033, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 94 fit: [30.8 s]: Recall = 0.63455, Jaccard score = 0.2410, loss = 0.054952, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 95 fit: [30.8 s]: Recall = 0.63619, Jaccard score = 0.2418, loss = 0.054936, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 96 fit: [30.8 s]: Recall = 0.64091, Jaccard score = 0.2440, loss = 0.054523, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 97 fit: [30.8 s]: Recall = 0.63619, Jaccard score = 0.2418, loss = 0.053898, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 98 fit: [30.7 s]: Recall = 0.63423, Jaccard score = 0.2409, loss = 0.053119, gradient norm = 1.0000, eval: [18.1 s]
# Iteration 99 fit: [30.7 s]: Recall = 0.63612, Jaccard score = 0.2418, loss = 0.053022, gradient norm = 1.0000, eval: [18.1 s]
# End. Best Iteration 96:  Recall = 0.6409, Jaccard score = 0.2440. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
# The average best performance after k-fold 3 is: Recall = 0.6398196589570669, Jaccard score = 0.24289919248634947
# 
# Performing k-fold 4
# Init: Recall = 0.0972, Jaccard score = 0.0308
# Iteration 0 fit: [33.0 s]: Recall = 0.43104, Jaccard score = 0.1528, loss = 0.441106, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 1 fit: [30.4 s]: Recall = 0.47885, Jaccard score = 0.1726, loss = 0.402993, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 2 fit: [30.6 s]: Recall = 0.50119, Jaccard score = 0.1821, loss = 0.379387, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 3 fit: [30.4 s]: Recall = 0.51702, Jaccard score = 0.1890, loss = 0.360268, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 4 fit: [30.6 s]: Recall = 0.52847, Jaccard score = 0.1940, loss = 0.343389, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 5 fit: [30.4 s]: Recall = 0.53949, Jaccard score = 0.1988, loss = 0.328546, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 6 fit: [30.6 s]: Recall = 0.54637, Jaccard score = 0.2019, loss = 0.314392, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 7 fit: [30.4 s]: Recall = 0.55094, Jaccard score = 0.2039, loss = 0.302284, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 8 fit: [30.6 s]: Recall = 0.55676, Jaccard score = 0.2065, loss = 0.289632, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 9 fit: [30.4 s]: Recall = 0.56014, Jaccard score = 0.2080, loss = 0.278776, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 10 fit: [30.6 s]: Recall = 0.56158, Jaccard score = 0.2087, loss = 0.267909, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 11 fit: [30.4 s]: Recall = 0.56621, Jaccard score = 0.2108, loss = 0.259151, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 12 fit: [30.6 s]: Recall = 0.56909, Jaccard score = 0.2121, loss = 0.249389, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 13 fit: [30.4 s]: Recall = 0.57222, Jaccard score = 0.2135, loss = 0.239968, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 14 fit: [30.6 s]: Recall = 0.57447, Jaccard score = 0.2145, loss = 0.233077, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 15 fit: [30.4 s]: Recall = 0.57259, Jaccard score = 0.2136, loss = 0.223426, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 16 fit: [30.6 s]: Recall = 0.58010, Jaccard score = 0.2170, loss = 0.216737, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 17 fit: [30.4 s]: Recall = 0.58404, Jaccard score = 0.2188, loss = 0.209271, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 18 fit: [30.6 s]: Recall = 0.58317, Jaccard score = 0.2184, loss = 0.202385, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 19 fit: [30.4 s]: Recall = 0.58705, Jaccard score = 0.2202, loss = 0.196316, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 20 fit: [30.6 s]: Recall = 0.59168, Jaccard score = 0.2223, loss = 0.190162, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 21 fit: [30.4 s]: Recall = 0.58874, Jaccard score = 0.2210, loss = 0.184569, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 22 fit: [30.6 s]: Recall = 0.59387, Jaccard score = 0.2233, loss = 0.178139, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 23 fit: [30.5 s]: Recall = 0.59374, Jaccard score = 0.2233, loss = 0.172865, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 24 fit: [30.6 s]: Recall = 0.59656, Jaccard score = 0.2246, loss = 0.168380, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 25 fit: [30.4 s]: Recall = 0.60000, Jaccard score = 0.2262, loss = 0.163855, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 26 fit: [30.6 s]: Recall = 0.59844, Jaccard score = 0.2255, loss = 0.159621, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 27 fit: [30.4 s]: Recall = 0.59700, Jaccard score = 0.2248, loss = 0.154872, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 28 fit: [30.6 s]: Recall = 0.60526, Jaccard score = 0.2286, loss = 0.151308, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 29 fit: [30.4 s]: Recall = 0.60419, Jaccard score = 0.2281, loss = 0.147012, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 30 fit: [30.6 s]: Recall = 0.60513, Jaccard score = 0.2286, loss = 0.143542, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 31 fit: [30.4 s]: Recall = 0.60989, Jaccard score = 0.2308, loss = 0.140294, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 32 fit: [30.6 s]: Recall = 0.60670, Jaccard score = 0.2293, loss = 0.136098, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 33 fit: [30.4 s]: Recall = 0.61020, Jaccard score = 0.2309, loss = 0.133568, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 34 fit: [30.6 s]: Recall = 0.61245, Jaccard score = 0.2320, loss = 0.130060, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 35 fit: [30.4 s]: Recall = 0.61270, Jaccard score = 0.2321, loss = 0.127297, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 36 fit: [30.6 s]: Recall = 0.61214, Jaccard score = 0.2318, loss = 0.124747, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 37 fit: [30.4 s]: Recall = 0.61602, Jaccard score = 0.2336, loss = 0.122347, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 38 fit: [30.6 s]: Recall = 0.61796, Jaccard score = 0.2345, loss = 0.119377, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 39 fit: [30.4 s]: Recall = 0.61859, Jaccard score = 0.2348, loss = 0.116909, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 40 fit: [30.6 s]: Recall = 0.62441, Jaccard score = 0.2376, loss = 0.114192, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 41 fit: [30.4 s]: Recall = 0.61815, Jaccard score = 0.2346, loss = 0.112125, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 42 fit: [30.6 s]: Recall = 0.62290, Jaccard score = 0.2369, loss = 0.110081, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 43 fit: [30.4 s]: Recall = 0.62222, Jaccard score = 0.2365, loss = 0.108041, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 44 fit: [30.6 s]: Recall = 0.62459, Jaccard score = 0.2376, loss = 0.105705, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 45 fit: [30.4 s]: Recall = 0.62503, Jaccard score = 0.2379, loss = 0.103764, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 46 fit: [30.6 s]: Recall = 0.62196, Jaccard score = 0.2364, loss = 0.101710, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 47 fit: [30.4 s]: Recall = 0.62384, Jaccard score = 0.2373, loss = 0.100266, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 48 fit: [30.6 s]: Recall = 0.62566, Jaccard score = 0.2381, loss = 0.098406, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 49 fit: [30.4 s]: Recall = 0.62672, Jaccard score = 0.2387, loss = 0.097443, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 50 fit: [30.6 s]: Recall = 0.62522, Jaccard score = 0.2379, loss = 0.094586, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 51 fit: [30.4 s]: Recall = 0.62816, Jaccard score = 0.2393, loss = 0.092662, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 52 fit: [30.6 s]: Recall = 0.62722, Jaccard score = 0.2389, loss = 0.092676, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 53 fit: [30.4 s]: Recall = 0.63066, Jaccard score = 0.2405, loss = 0.090567, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 54 fit: [30.6 s]: Recall = 0.63110, Jaccard score = 0.2407, loss = 0.088425, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 55 fit: [30.4 s]: Recall = 0.62885, Jaccard score = 0.2397, loss = 0.087691, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 56 fit: [30.6 s]: Recall = 0.62947, Jaccard score = 0.2400, loss = 0.087309, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 57 fit: [30.4 s]: Recall = 0.63342, Jaccard score = 0.2418, loss = 0.084651, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 58 fit: [30.6 s]: Recall = 0.63217, Jaccard score = 0.2412, loss = 0.083999, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 59 fit: [30.4 s]: Recall = 0.62872, Jaccard score = 0.2396, loss = 0.082404, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 60 fit: [30.6 s]: Recall = 0.63742, Jaccard score = 0.2437, loss = 0.081475, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 61 fit: [30.4 s]: Recall = 0.63242, Jaccard score = 0.2413, loss = 0.081184, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 62 fit: [30.6 s]: Recall = 0.63123, Jaccard score = 0.2408, loss = 0.079521, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 63 fit: [30.4 s]: Recall = 0.62816, Jaccard score = 0.2393, loss = 0.077985, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 64 fit: [30.6 s]: Recall = 0.63154, Jaccard score = 0.2409, loss = 0.076291, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 65 fit: [30.4 s]: Recall = 0.63404, Jaccard score = 0.2421, loss = 0.075295, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 66 fit: [30.6 s]: Recall = 0.63517, Jaccard score = 0.2426, loss = 0.075334, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 67 fit: [30.4 s]: Recall = 0.63292, Jaccard score = 0.2416, loss = 0.074122, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 68 fit: [30.6 s]: Recall = 0.63373, Jaccard score = 0.2420, loss = 0.073159, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 69 fit: [30.4 s]: Recall = 0.63304, Jaccard score = 0.2416, loss = 0.072340, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 70 fit: [30.6 s]: Recall = 0.63429, Jaccard score = 0.2422, loss = 0.070562, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 71 fit: [30.4 s]: Recall = 0.63417, Jaccard score = 0.2422, loss = 0.070273, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 72 fit: [30.6 s]: Recall = 0.63936, Jaccard score = 0.2446, loss = 0.069437, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 73 fit: [30.4 s]: Recall = 0.63705, Jaccard score = 0.2435, loss = 0.068495, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 74 fit: [30.6 s]: Recall = 0.63191, Jaccard score = 0.2411, loss = 0.067424, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 75 fit: [30.4 s]: Recall = 0.63461, Jaccard score = 0.2424, loss = 0.067156, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 76 fit: [30.6 s]: Recall = 0.63442, Jaccard score = 0.2423, loss = 0.066467, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 77 fit: [30.4 s]: Recall = 0.63742, Jaccard score = 0.2437, loss = 0.065353, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 78 fit: [30.6 s]: Recall = 0.63567, Jaccard score = 0.2429, loss = 0.064515, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 79 fit: [30.4 s]: Recall = 0.63379, Jaccard score = 0.2420, loss = 0.063967, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 80 fit: [30.6 s]: Recall = 0.63867, Jaccard score = 0.2443, loss = 0.063510, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 81 fit: [30.4 s]: Recall = 0.63630, Jaccard score = 0.2432, loss = 0.062406, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 82 fit: [30.6 s]: Recall = 0.63567, Jaccard score = 0.2429, loss = 0.062191, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 83 fit: [30.4 s]: Recall = 0.63680, Jaccard score = 0.2434, loss = 0.061011, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 84 fit: [30.6 s]: Recall = 0.63473, Jaccard score = 0.2424, loss = 0.061341, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 85 fit: [30.4 s]: Recall = 0.63461, Jaccard score = 0.2424, loss = 0.060143, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 86 fit: [30.6 s]: Recall = 0.63385, Jaccard score = 0.2420, loss = 0.059109, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 87 fit: [30.4 s]: Recall = 0.63742, Jaccard score = 0.2437, loss = 0.059107, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 88 fit: [30.6 s]: Recall = 0.63899, Jaccard score = 0.2445, loss = 0.058175, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 89 fit: [30.4 s]: Recall = 0.64011, Jaccard score = 0.2450, loss = 0.057643, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 90 fit: [30.6 s]: Recall = 0.63936, Jaccard score = 0.2446, loss = 0.057607, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 91 fit: [30.4 s]: Recall = 0.63736, Jaccard score = 0.2437, loss = 0.056623, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 92 fit: [30.6 s]: Recall = 0.64011, Jaccard score = 0.2450, loss = 0.055334, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 93 fit: [30.4 s]: Recall = 0.64018, Jaccard score = 0.2450, loss = 0.055587, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 94 fit: [30.7 s]: Recall = 0.63830, Jaccard score = 0.2441, loss = 0.054663, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 95 fit: [30.4 s]: Recall = 0.64036, Jaccard score = 0.2451, loss = 0.054433, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 96 fit: [30.6 s]: Recall = 0.64061, Jaccard score = 0.2452, loss = 0.054221, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 97 fit: [30.4 s]: Recall = 0.64243, Jaccard score = 0.2461, loss = 0.053149, gradient norm = 1.0000, eval: [18.2 s]
# Iteration 98 fit: [30.6 s]: Recall = 0.64305, Jaccard score = 0.2464, loss = 0.052454, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 99 fit: [30.4 s]: Recall = 0.64049, Jaccard score = 0.2452, loss = 0.052163, gradient norm = 1.0000, eval: [18.3 s]
# End. Best Iteration 98:  Recall = 0.6431, Jaccard score = 0.2464. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
# The average best performance after k-fold 4 is: Recall = 0.6406281985356976, Jaccard score = 0.2437752000428745
# 
# Performing k-fold 5
# Init: Recall = 0.0960, Jaccard score = 0.0303
# Iteration 0 fit: [33.6 s]: Recall = 0.42474, Jaccard score = 0.1498, loss = 0.440669, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 1 fit: [31.1 s]: Recall = 0.47359, Jaccard score = 0.1699, loss = 0.402955, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 2 fit: [30.9 s]: Recall = 0.50411, Jaccard score = 0.1829, loss = 0.379867, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 3 fit: [31.0 s]: Recall = 0.52320, Jaccard score = 0.1911, loss = 0.361182, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 4 fit: [31.0 s]: Recall = 0.53061, Jaccard score = 0.1944, loss = 0.344125, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 5 fit: [31.0 s]: Recall = 0.54141, Jaccard score = 0.1991, loss = 0.328755, gradient norm = 1.0000, eval: [18.6 s]
# Iteration 6 fit: [31.0 s]: Recall = 0.55058, Jaccard score = 0.2032, loss = 0.314353, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 7 fit: [31.0 s]: Recall = 0.55900, Jaccard score = 0.2069, loss = 0.302133, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 8 fit: [31.0 s]: Recall = 0.55780, Jaccard score = 0.2064, loss = 0.290031, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 9 fit: [31.0 s]: Recall = 0.56144, Jaccard score = 0.2080, loss = 0.278839, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 10 fit: [31.0 s]: Recall = 0.56452, Jaccard score = 0.2094, loss = 0.268432, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 11 fit: [31.0 s]: Recall = 0.56936, Jaccard score = 0.2116, loss = 0.259409, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 12 fit: [31.0 s]: Recall = 0.57212, Jaccard score = 0.2128, loss = 0.249780, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 13 fit: [31.0 s]: Recall = 0.57369, Jaccard score = 0.2135, loss = 0.240520, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 14 fit: [31.0 s]: Recall = 0.57664, Jaccard score = 0.2148, loss = 0.232258, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 15 fit: [31.0 s]: Recall = 0.57620, Jaccard score = 0.2146, loss = 0.225107, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 16 fit: [31.0 s]: Recall = 0.58217, Jaccard score = 0.2174, loss = 0.217585, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 17 fit: [31.0 s]: Recall = 0.58480, Jaccard score = 0.2186, loss = 0.210629, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 18 fit: [31.0 s]: Recall = 0.58342, Jaccard score = 0.2179, loss = 0.203031, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 19 fit: [31.0 s]: Recall = 0.58619, Jaccard score = 0.2192, loss = 0.196015, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 20 fit: [31.0 s]: Recall = 0.59259, Jaccard score = 0.2221, loss = 0.190586, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 21 fit: [31.0 s]: Recall = 0.59334, Jaccard score = 0.2225, loss = 0.185638, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 22 fit: [31.0 s]: Recall = 0.59454, Jaccard score = 0.2230, loss = 0.178956, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 23 fit: [31.0 s]: Recall = 0.59441, Jaccard score = 0.2229, loss = 0.173527, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 24 fit: [31.0 s]: Recall = 0.60050, Jaccard score = 0.2257, loss = 0.168940, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 25 fit: [31.0 s]: Recall = 0.60251, Jaccard score = 0.2267, loss = 0.163706, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 26 fit: [31.0 s]: Recall = 0.60019, Jaccard score = 0.2256, loss = 0.160010, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 27 fit: [31.0 s]: Recall = 0.60546, Jaccard score = 0.2280, loss = 0.155721, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 28 fit: [31.0 s]: Recall = 0.60659, Jaccard score = 0.2286, loss = 0.151346, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 29 fit: [31.0 s]: Recall = 0.60873, Jaccard score = 0.2295, loss = 0.147532, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 30 fit: [31.0 s]: Recall = 0.61011, Jaccard score = 0.2302, loss = 0.143758, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 31 fit: [31.0 s]: Recall = 0.60961, Jaccard score = 0.2300, loss = 0.141345, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 32 fit: [31.0 s]: Recall = 0.61451, Jaccard score = 0.2322, loss = 0.137114, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 33 fit: [31.0 s]: Recall = 0.61212, Jaccard score = 0.2311, loss = 0.134907, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 34 fit: [31.0 s]: Recall = 0.61526, Jaccard score = 0.2326, loss = 0.130829, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 35 fit: [31.0 s]: Recall = 0.61432, Jaccard score = 0.2321, loss = 0.127875, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 36 fit: [31.0 s]: Recall = 0.61626, Jaccard score = 0.2331, loss = 0.125865, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 37 fit: [31.0 s]: Recall = 0.61815, Jaccard score = 0.2339, loss = 0.123522, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 38 fit: [31.0 s]: Recall = 0.61683, Jaccard score = 0.2333, loss = 0.120590, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 39 fit: [31.0 s]: Recall = 0.62122, Jaccard score = 0.2354, loss = 0.117840, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 40 fit: [31.0 s]: Recall = 0.61871, Jaccard score = 0.2342, loss = 0.116124, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 41 fit: [31.0 s]: Recall = 0.62047, Jaccard score = 0.2350, loss = 0.113529, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 42 fit: [31.0 s]: Recall = 0.62210, Jaccard score = 0.2358, loss = 0.110630, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 43 fit: [31.0 s]: Recall = 0.62323, Jaccard score = 0.2363, loss = 0.108479, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 44 fit: [31.0 s]: Recall = 0.62392, Jaccard score = 0.2366, loss = 0.106090, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 45 fit: [31.0 s]: Recall = 0.62575, Jaccard score = 0.2375, loss = 0.104872, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 46 fit: [31.0 s]: Recall = 0.62411, Jaccard score = 0.2367, loss = 0.102415, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 47 fit: [31.0 s]: Recall = 0.62650, Jaccard score = 0.2378, loss = 0.101307, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 48 fit: [31.0 s]: Recall = 0.62669, Jaccard score = 0.2379, loss = 0.099892, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 49 fit: [31.0 s]: Recall = 0.62863, Jaccard score = 0.2388, loss = 0.097288, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 50 fit: [31.0 s]: Recall = 0.62889, Jaccard score = 0.2390, loss = 0.095482, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 51 fit: [31.0 s]: Recall = 0.63152, Jaccard score = 0.2402, loss = 0.094628, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 52 fit: [31.0 s]: Recall = 0.62951, Jaccard score = 0.2393, loss = 0.093123, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 53 fit: [31.0 s]: Recall = 0.63064, Jaccard score = 0.2398, loss = 0.090747, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 54 fit: [30.9 s]: Recall = 0.62970, Jaccard score = 0.2393, loss = 0.089774, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 55 fit: [31.0 s]: Recall = 0.63096, Jaccard score = 0.2399, loss = 0.088474, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 56 fit: [30.9 s]: Recall = 0.62901, Jaccard score = 0.2390, loss = 0.087313, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 57 fit: [31.0 s]: Recall = 0.63303, Jaccard score = 0.2409, loss = 0.085650, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 58 fit: [31.0 s]: Recall = 0.63322, Jaccard score = 0.2410, loss = 0.084135, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 59 fit: [31.0 s]: Recall = 0.63385, Jaccard score = 0.2413, loss = 0.084546, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 60 fit: [31.0 s]: Recall = 0.63529, Jaccard score = 0.2420, loss = 0.082536, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 61 fit: [31.0 s]: Recall = 0.63567, Jaccard score = 0.2422, loss = 0.081116, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 62 fit: [30.9 s]: Recall = 0.63774, Jaccard score = 0.2431, loss = 0.079610, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 63 fit: [31.1 s]: Recall = 0.63680, Jaccard score = 0.2427, loss = 0.078916, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 64 fit: [30.9 s]: Recall = 0.63573, Jaccard score = 0.2422, loss = 0.077547, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 65 fit: [31.0 s]: Recall = 0.63573, Jaccard score = 0.2422, loss = 0.077316, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 66 fit: [30.9 s]: Recall = 0.63278, Jaccard score = 0.2408, loss = 0.076042, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 67 fit: [31.0 s]: Recall = 0.63799, Jaccard score = 0.2433, loss = 0.074700, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 68 fit: [31.0 s]: Recall = 0.63730, Jaccard score = 0.2429, loss = 0.073340, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 69 fit: [31.0 s]: Recall = 0.63328, Jaccard score = 0.2410, loss = 0.071900, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 70 fit: [30.9 s]: Recall = 0.63353, Jaccard score = 0.2412, loss = 0.072154, gradient norm = 1.0000, eval: [18.6 s]
# Iteration 71 fit: [31.0 s]: Recall = 0.63630, Jaccard score = 0.2425, loss = 0.070668, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 72 fit: [31.0 s]: Recall = 0.63830, Jaccard score = 0.2434, loss = 0.070264, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 73 fit: [31.0 s]: Recall = 0.63812, Jaccard score = 0.2433, loss = 0.069590, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 74 fit: [31.0 s]: Recall = 0.63768, Jaccard score = 0.2431, loss = 0.068117, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 75 fit: [31.0 s]: Recall = 0.63648, Jaccard score = 0.2426, loss = 0.067349, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 76 fit: [31.0 s]: Recall = 0.63906, Jaccard score = 0.2438, loss = 0.067157, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 77 fit: [31.0 s]: Recall = 0.64000, Jaccard score = 0.2442, loss = 0.066424, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 78 fit: [31.0 s]: Recall = 0.63667, Jaccard score = 0.2426, loss = 0.065164, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 79 fit: [31.0 s]: Recall = 0.63793, Jaccard score = 0.2432, loss = 0.064597, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 80 fit: [31.0 s]: Recall = 0.64283, Jaccard score = 0.2456, loss = 0.064025, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 81 fit: [31.0 s]: Recall = 0.63906, Jaccard score = 0.2438, loss = 0.063864, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 82 fit: [31.0 s]: Recall = 0.63994, Jaccard score = 0.2442, loss = 0.062494, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 83 fit: [31.0 s]: Recall = 0.63736, Jaccard score = 0.2430, loss = 0.062293, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 84 fit: [31.0 s]: Recall = 0.64226, Jaccard score = 0.2453, loss = 0.060728, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 85 fit: [31.0 s]: Recall = 0.63736, Jaccard score = 0.2430, loss = 0.060029, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 86 fit: [31.0 s]: Recall = 0.64603, Jaccard score = 0.2471, loss = 0.059418, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 87 fit: [31.0 s]: Recall = 0.64232, Jaccard score = 0.2453, loss = 0.059211, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 88 fit: [31.0 s]: Recall = 0.64201, Jaccard score = 0.2452, loss = 0.058625, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 89 fit: [31.0 s]: Recall = 0.63743, Jaccard score = 0.2430, loss = 0.058258, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 90 fit: [31.0 s]: Recall = 0.63981, Jaccard score = 0.2441, loss = 0.058085, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 91 fit: [31.0 s]: Recall = 0.64132, Jaccard score = 0.2448, loss = 0.057206, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 92 fit: [31.0 s]: Recall = 0.64232, Jaccard score = 0.2453, loss = 0.056859, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 93 fit: [31.0 s]: Recall = 0.64163, Jaccard score = 0.2450, loss = 0.055480, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 94 fit: [31.0 s]: Recall = 0.64527, Jaccard score = 0.2467, loss = 0.054680, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 95 fit: [31.0 s]: Recall = 0.64471, Jaccard score = 0.2465, loss = 0.054270, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 96 fit: [31.0 s]: Recall = 0.64188, Jaccard score = 0.2451, loss = 0.054144, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 97 fit: [31.0 s]: Recall = 0.64301, Jaccard score = 0.2457, loss = 0.053682, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 98 fit: [31.0 s]: Recall = 0.64170, Jaccard score = 0.2450, loss = 0.052854, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 99 fit: [31.0 s]: Recall = 0.64728, Jaccard score = 0.2477, loss = 0.052743, gradient norm = 1.0000, eval: [18.4 s]
# End. Best Iteration 99:  Recall = 0.6473, Jaccard score = 0.2477. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569551287.h5
# The average best performance after k-fold 5 is: Recall = 0.6419593877139584, Jaccard score = 0.24455760867307702
