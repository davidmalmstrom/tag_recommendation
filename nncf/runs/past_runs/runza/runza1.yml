--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "100"
--lr: "0.001"
--early_stopping: "35"
--layers: "[512,750,350,96]"
--MLP_variant: "drop"
--reg_layers: "[0,0,0,0]"
--num_k_folds: "5"


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=90, epochs=300, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569497617.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569497617.h5
# Load data done [1.6 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 256)          0           flatten_1[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 256)          0           flatten_2[0][0]                  
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_2[0][0]              
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_3[0][0]                  
# __________________________________________________________________________________________________
# dropout_4 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_4[0][0]                  
# __________________________________________________________________________________________________
# dropout_5 (Dropout)             (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_5[0][0]                  
# ==================================================================================================
# Total params: 6,551,393
# Trainable params: 6,551,393
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.1072, Jaccard score = 0.0335
# Iteration 0 fit: [28.4 s]: Recall = 0.41151, Jaccard score = 0.1424, loss = 0.442721, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 1 fit: [27.8 s]: Recall = 0.46451, Jaccard score = 0.1637, loss = 0.409565, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 2 fit: [27.4 s]: Recall = 0.49457, Jaccard score = 0.1762, loss = 0.387570, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 3 fit: [27.7 s]: Recall = 0.51349, Jaccard score = 0.1842, loss = 0.369367, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 4 fit: [27.8 s]: Recall = 0.52743, Jaccard score = 0.1901, loss = 0.352891, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 5 fit: [27.4 s]: Recall = 0.53344, Jaccard score = 0.1927, loss = 0.339026, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 6 fit: [27.5 s]: Recall = 0.53824, Jaccard score = 0.1948, loss = 0.326718, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 7 fit: [27.6 s]: Recall = 0.54770, Jaccard score = 0.1989, loss = 0.314539, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 8 fit: [27.4 s]: Recall = 0.55320, Jaccard score = 0.2013, loss = 0.303714, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 9 fit: [27.5 s]: Recall = 0.55646, Jaccard score = 0.2027, loss = 0.292748, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 10 fit: [27.7 s]: Recall = 0.56157, Jaccard score = 0.2049, loss = 0.283854, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 11 fit: [27.7 s]: Recall = 0.56317, Jaccard score = 0.2056, loss = 0.274046, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 12 fit: [27.2 s]: Recall = 0.56969, Jaccard score = 0.2085, loss = 0.265302, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 13 fit: [27.5 s]: Recall = 0.57353, Jaccard score = 0.2102, loss = 0.256886, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 14 fit: [27.5 s]: Recall = 0.57896, Jaccard score = 0.2126, loss = 0.249562, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 15 fit: [27.5 s]: Recall = 0.57602, Jaccard score = 0.2113, loss = 0.240905, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 16 fit: [27.6 s]: Recall = 0.58178, Jaccard score = 0.2139, loss = 0.233205, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 17 fit: [27.3 s]: Recall = 0.58267, Jaccard score = 0.2143, loss = 0.227534, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 18 fit: [27.6 s]: Recall = 0.58600, Jaccard score = 0.2158, loss = 0.221364, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 19 fit: [27.7 s]: Recall = 0.58798, Jaccard score = 0.2167, loss = 0.214289, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 20 fit: [27.5 s]: Recall = 0.58721, Jaccard score = 0.2163, loss = 0.207902, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 21 fit: [27.6 s]: Recall = 0.59361, Jaccard score = 0.2192, loss = 0.202962, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 22 fit: [27.5 s]: Recall = 0.59636, Jaccard score = 0.2204, loss = 0.196702, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 23 fit: [27.4 s]: Recall = 0.59412, Jaccard score = 0.2194, loss = 0.191595, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 24 fit: [27.5 s]: Recall = 0.59744, Jaccard score = 0.2209, loss = 0.187309, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 25 fit: [27.6 s]: Recall = 0.60345, Jaccard score = 0.2236, loss = 0.183186, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 26 fit: [27.5 s]: Recall = 0.60678, Jaccard score = 0.2251, loss = 0.178217, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 27 fit: [27.4 s]: Recall = 0.60550, Jaccard score = 0.2246, loss = 0.172483, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 28 fit: [27.7 s]: Recall = 0.60818, Jaccard score = 0.2258, loss = 0.168553, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 29 fit: [27.6 s]: Recall = 0.60735, Jaccard score = 0.2254, loss = 0.165431, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 30 fit: [27.6 s]: Recall = 0.61036, Jaccard score = 0.2268, loss = 0.160312, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 31 fit: [27.5 s]: Recall = 0.60946, Jaccard score = 0.2264, loss = 0.157415, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 32 fit: [27.3 s]: Recall = 0.61279, Jaccard score = 0.2279, loss = 0.152686, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 33 fit: [27.6 s]: Recall = 0.61432, Jaccard score = 0.2286, loss = 0.149943, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 34 fit: [27.3 s]: Recall = 0.61758, Jaccard score = 0.2301, loss = 0.146424, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 35 fit: [27.4 s]: Recall = 0.61592, Jaccard score = 0.2293, loss = 0.143587, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 36 fit: [27.5 s]: Recall = 0.61982, Jaccard score = 0.2311, loss = 0.139761, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 37 fit: [27.7 s]: Recall = 0.62199, Jaccard score = 0.2321, loss = 0.137549, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 38 fit: [27.6 s]: Recall = 0.62155, Jaccard score = 0.2319, loss = 0.134500, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 39 fit: [27.5 s]: Recall = 0.62890, Jaccard score = 0.2353, loss = 0.130569, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 40 fit: [27.5 s]: Recall = 0.62295, Jaccard score = 0.2325, loss = 0.129106, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 41 fit: [27.4 s]: Recall = 0.62372, Jaccard score = 0.2329, loss = 0.125454, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 42 fit: [27.8 s]: Recall = 0.62481, Jaccard score = 0.2334, loss = 0.123951, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 43 fit: [27.4 s]: Recall = 0.62590, Jaccard score = 0.2339, loss = 0.121146, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 44 fit: [27.4 s]: Recall = 0.62980, Jaccard score = 0.2357, loss = 0.119030, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 45 fit: [27.4 s]: Recall = 0.62826, Jaccard score = 0.2350, loss = 0.116248, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 46 fit: [27.6 s]: Recall = 0.63229, Jaccard score = 0.2369, loss = 0.114769, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 47 fit: [27.3 s]: Recall = 0.63037, Jaccard score = 0.2360, loss = 0.112480, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 48 fit: [27.6 s]: Recall = 0.63299, Jaccard score = 0.2372, loss = 0.110436, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 49 fit: [27.3 s]: Recall = 0.63357, Jaccard score = 0.2374, loss = 0.108678, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 50 fit: [27.7 s]: Recall = 0.63293, Jaccard score = 0.2372, loss = 0.106824, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 51 fit: [27.7 s]: Recall = 0.63261, Jaccard score = 0.2370, loss = 0.104454, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 52 fit: [27.5 s]: Recall = 0.63779, Jaccard score = 0.2394, loss = 0.103212, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 53 fit: [27.4 s]: Recall = 0.63638, Jaccard score = 0.2388, loss = 0.100939, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 54 fit: [27.4 s]: Recall = 0.63670, Jaccard score = 0.2389, loss = 0.099599, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 55 fit: [27.6 s]: Recall = 0.63798, Jaccard score = 0.2395, loss = 0.098132, gradient norm = 1.0000, eval: [14.3 s]



# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569502837.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569502837.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 256)          0           flatten_1[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 256)          0           flatten_2[0][0]                  
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_2[0][0]              
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_3[0][0]                  
# __________________________________________________________________________________________________
# dropout_4 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_4[0][0]                  
# __________________________________________________________________________________________________
# dropout_5 (Dropout)             (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_5[0][0]                  
# ==================================================================================================
# Total params: 6,551,393
# Trainable params: 6,551,393
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0934, Jaccard score = 0.0291
# Iteration 0 fit: [28.0 s]: Recall = 0.40914, Jaccard score = 0.1414, loss = 0.442488, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 1 fit: [27.6 s]: Recall = 0.46515, Jaccard score = 0.1640, loss = 0.408957, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 2 fit: [27.5 s]: Recall = 0.49111, Jaccard score = 0.1747, loss = 0.386416, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 3 fit: [27.7 s]: Recall = 0.51304, Jaccard score = 0.1840, loss = 0.368206, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 4 fit: [27.7 s]: Recall = 0.52136, Jaccard score = 0.1875, loss = 0.351506, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 5 fit: [27.6 s]: Recall = 0.53632, Jaccard score = 0.1939, loss = 0.337956, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 6 fit: [27.8 s]: Recall = 0.54003, Jaccard score = 0.1955, loss = 0.324411, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 7 fit: [27.6 s]: Recall = 0.54207, Jaccard score = 0.1964, loss = 0.312590, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 8 fit: [27.5 s]: Recall = 0.55307, Jaccard score = 0.2012, loss = 0.301650, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 9 fit: [27.5 s]: Recall = 0.55607, Jaccard score = 0.2025, loss = 0.290925, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 10 fit: [27.5 s]: Recall = 0.55959, Jaccard score = 0.2041, loss = 0.281662, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 11 fit: [27.7 s]: Recall = 0.56228, Jaccard score = 0.2052, loss = 0.272375, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 12 fit: [27.5 s]: Recall = 0.56861, Jaccard score = 0.2080, loss = 0.263949, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 13 fit: [27.6 s]: Recall = 0.57136, Jaccard score = 0.2093, loss = 0.254432, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 14 fit: [27.5 s]: Recall = 0.57538, Jaccard score = 0.2110, loss = 0.247926, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 15 fit: [27.7 s]: Recall = 0.57928, Jaccard score = 0.2128, loss = 0.240676, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 16 fit: [28.2 s]: Recall = 0.57967, Jaccard score = 0.2129, loss = 0.232905, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 17 fit: [27.7 s]: Recall = 0.58299, Jaccard score = 0.2144, loss = 0.226346, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 18 fit: [27.7 s]: Recall = 0.58223, Jaccard score = 0.2141, loss = 0.219263, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 19 fit: [28.6 s]: Recall = 0.59009, Jaccard score = 0.2176, loss = 0.213046, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 20 fit: [27.6 s]: Recall = 0.58855, Jaccard score = 0.2169, loss = 0.207596, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 21 fit: [27.6 s]: Recall = 0.59150, Jaccard score = 0.2182, loss = 0.202037, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 22 fit: [27.6 s]: Recall = 0.59546, Jaccard score = 0.2200, loss = 0.196370, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 23 fit: [27.8 s]: Recall = 0.60077, Jaccard score = 0.2224, loss = 0.190670, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 24 fit: [27.6 s]: Recall = 0.59751, Jaccard score = 0.2209, loss = 0.185857, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 25 fit: [27.7 s]: Recall = 0.60045, Jaccard score = 0.2223, loss = 0.181786, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 26 fit: [27.6 s]: Recall = 0.60390, Jaccard score = 0.2238, loss = 0.176593, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 27 fit: [27.6 s]: Recall = 0.60748, Jaccard score = 0.2255, loss = 0.171676, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 28 fit: [27.6 s]: Recall = 0.60595, Jaccard score = 0.2248, loss = 0.168522, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 29 fit: [27.4 s]: Recall = 0.60569, Jaccard score = 0.2247, loss = 0.163628, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 30 fit: [27.6 s]: Recall = 0.60902, Jaccard score = 0.2262, loss = 0.159537, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 31 fit: [27.8 s]: Recall = 0.60857, Jaccard score = 0.2260, loss = 0.155680, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 32 fit: [27.6 s]: Recall = 0.61272, Jaccard score = 0.2279, loss = 0.152498, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 33 fit: [27.5 s]: Recall = 0.61426, Jaccard score = 0.2286, loss = 0.149305, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 34 fit: [27.7 s]: Recall = 0.61528, Jaccard score = 0.2290, loss = 0.146203, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 35 fit: [27.5 s]: Recall = 0.61215, Jaccard score = 0.2276, loss = 0.142653, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 36 fit: [27.9 s]: Recall = 0.62180, Jaccard score = 0.2320, loss = 0.139477, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 37 fit: [27.6 s]: Recall = 0.61995, Jaccard score = 0.2312, loss = 0.137415, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 38 fit: [27.6 s]: Recall = 0.61944, Jaccard score = 0.2309, loss = 0.133421, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 39 fit: [27.7 s]: Recall = 0.62084, Jaccard score = 0.2316, loss = 0.130376, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 40 fit: [27.2 s]: Recall = 0.61829, Jaccard score = 0.2304, loss = 0.128270, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 41 fit: [27.4 s]: Recall = 0.62334, Jaccard score = 0.2327, loss = 0.124866, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 42 fit: [27.4 s]: Recall = 0.62564, Jaccard score = 0.2338, loss = 0.123296, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 43 fit: [27.6 s]: Recall = 0.62609, Jaccard score = 0.2340, loss = 0.120449, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 44 fit: [27.8 s]: Recall = 0.62903, Jaccard score = 0.2353, loss = 0.118525, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 45 fit: [28.1 s]: Recall = 0.62864, Jaccard score = 0.2352, loss = 0.116697, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 46 fit: [27.7 s]: Recall = 0.62628, Jaccard score = 0.2341, loss = 0.114097, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 47 fit: [27.3 s]: Recall = 0.62852, Jaccard score = 0.2351, loss = 0.112517, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 48 fit: [27.7 s]: Recall = 0.63344, Jaccard score = 0.2374, loss = 0.111018, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 49 fit: [27.5 s]: Recall = 0.63267, Jaccard score = 0.2370, loss = 0.108520, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 50 fit: [27.4 s]: Recall = 0.63191, Jaccard score = 0.2367, loss = 0.106737, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 51 fit: [27.6 s]: Recall = 0.63376, Jaccard score = 0.2375, loss = 0.105033, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 52 fit: [27.7 s]: Recall = 0.63363, Jaccard score = 0.2375, loss = 0.102739, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 53 fit: [27.4 s]: Recall = 0.63223, Jaccard score = 0.2368, loss = 0.101222, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 54 fit: [27.8 s]: Recall = 0.63267, Jaccard score = 0.2370, loss = 0.099303, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 55 fit: [27.6 s]: Recall = 0.63274, Jaccard score = 0.2371, loss = 0.097670, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 56 fit: [27.3 s]: Recall = 0.63702, Jaccard score = 0.2391, loss = 0.097280, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 57 fit: [27.8 s]: Recall = 0.63657, Jaccard score = 0.2388, loss = 0.094895, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 58 fit: [27.9 s]: Recall = 0.63702, Jaccard score = 0.2391, loss = 0.092347, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 59 fit: [27.5 s]: Recall = 0.63216, Jaccard score = 0.2368, loss = 0.091400, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 60 fit: [27.7 s]: Recall = 0.63919, Jaccard score = 0.2401, loss = 0.090125, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 61 fit: [27.5 s]: Recall = 0.63453, Jaccard score = 0.2379, loss = 0.089157, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 62 fit: [27.7 s]: Recall = 0.63619, Jaccard score = 0.2387, loss = 0.087597, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 63 fit: [27.8 s]: Recall = 0.63798, Jaccard score = 0.2395, loss = 0.085899, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 64 fit: [27.4 s]: Recall = 0.64015, Jaccard score = 0.2405, loss = 0.085378, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 65 fit: [27.5 s]: Recall = 0.64079, Jaccard score = 0.2408, loss = 0.084280, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 66 fit: [27.6 s]: Recall = 0.64111, Jaccard score = 0.2410, loss = 0.082831, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 67 fit: [27.7 s]: Recall = 0.63830, Jaccard score = 0.2396, loss = 0.081922, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 68 fit: [27.4 s]: Recall = 0.64003, Jaccard score = 0.2405, loss = 0.080564, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 69 fit: [27.6 s]: Recall = 0.63843, Jaccard score = 0.2397, loss = 0.079264, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 70 fit: [27.6 s]: Recall = 0.64086, Jaccard score = 0.2408, loss = 0.078652, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 71 fit: [27.4 s]: Recall = 0.63632, Jaccard score = 0.2387, loss = 0.078335, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 72 fit: [27.5 s]: Recall = 0.63760, Jaccard score = 0.2393, loss = 0.076782, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 73 fit: [27.7 s]: Recall = 0.63689, Jaccard score = 0.2390, loss = 0.075595, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 74 fit: [27.4 s]: Recall = 0.64143, Jaccard score = 0.2411, loss = 0.074937, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 75 fit: [27.8 s]: Recall = 0.63715, Jaccard score = 0.2391, loss = 0.073667, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 76 fit: [27.5 s]: Recall = 0.63830, Jaccard score = 0.2396, loss = 0.072859, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 77 fit: [27.5 s]: Recall = 0.64457, Jaccard score = 0.2426, loss = 0.072820, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 78 fit: [27.4 s]: Recall = 0.64258, Jaccard score = 0.2416, loss = 0.071559, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 79 fit: [27.6 s]: Recall = 0.63657, Jaccard score = 0.2388, loss = 0.069901, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 80 fit: [27.5 s]: Recall = 0.64520, Jaccard score = 0.2429, loss = 0.068845, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 81 fit: [27.6 s]: Recall = 0.64405, Jaccard score = 0.2423, loss = 0.068953, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 82 fit: [27.5 s]: Recall = 0.64616, Jaccard score = 0.2433, loss = 0.067775, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 83 fit: [27.5 s]: Recall = 0.64584, Jaccard score = 0.2432, loss = 0.066878, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 84 fit: [27.7 s]: Recall = 0.64354, Jaccard score = 0.2421, loss = 0.066589, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 85 fit: [27.5 s]: Recall = 0.63868, Jaccard score = 0.2398, loss = 0.065749, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 86 fit: [27.7 s]: Recall = 0.64322, Jaccard score = 0.2419, loss = 0.064633, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 87 fit: [27.5 s]: Recall = 0.64092, Jaccard score = 0.2409, loss = 0.063742, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 88 fit: [28.2 s]: Recall = 0.64207, Jaccard score = 0.2414, loss = 0.063865, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 89 fit: [27.8 s]: Recall = 0.64719, Jaccard score = 0.2438, loss = 0.062923, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 90 fit: [27.6 s]: Recall = 0.63875, Jaccard score = 0.2399, loss = 0.062131, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 91 fit: [27.7 s]: Recall = 0.64118, Jaccard score = 0.2410, loss = 0.061242, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 92 fit: [27.6 s]: Recall = 0.64770, Jaccard score = 0.2440, loss = 0.060591, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 93 fit: [27.6 s]: Recall = 0.63382, Jaccard score = 0.2376, loss = 0.060397, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 94 fit: [27.4 s]: Recall = 0.64156, Jaccard score = 0.2412, loss = 0.059509, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 95 fit: [27.6 s]: Recall = 0.63990, Jaccard score = 0.2404, loss = 0.059289, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 96 fit: [27.5 s]: Recall = 0.64425, Jaccard score = 0.2424, loss = 0.058767, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 97 fit: [27.6 s]: Recall = 0.64495, Jaccard score = 0.2428, loss = 0.058156, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 98 fit: [27.3 s]: Recall = 0.63932, Jaccard score = 0.2401, loss = 0.058062, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 99 fit: [28.0 s]: Recall = 0.64079, Jaccard score = 0.2408, loss = 0.057270, gradient norm = 1.0000, eval: [14.3 s]
# End. Best Iteration 92:  Recall = 0.6477, Jaccard score = 0.2440. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569502837.h5
# The average best performance after k-fold 1 is: Recall = 0.6476982097186701, Jaccard score = 0.24403758130570946
# 
# Performing k-fold 2
# Init: Recall = 0.0918, Jaccard score = 0.0290
# Iteration 0 fit: [28.4 s]: Recall = 0.41442, Jaccard score = 0.1460, loss = 0.442138, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 1 fit: [27.2 s]: Recall = 0.45353, Jaccard score = 0.1620, loss = 0.408330, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 2 fit: [27.2 s]: Recall = 0.48094, Jaccard score = 0.1735, loss = 0.386864, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 3 fit: [27.3 s]: Recall = 0.50122, Jaccard score = 0.1821, loss = 0.369470, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 4 fit: [27.5 s]: Recall = 0.51662, Jaccard score = 0.1888, loss = 0.353329, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 5 fit: [27.5 s]: Recall = 0.52168, Jaccard score = 0.1910, loss = 0.339299, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 6 fit: [27.2 s]: Recall = 0.52988, Jaccard score = 0.1946, loss = 0.326273, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 7 fit: [27.2 s]: Recall = 0.54015, Jaccard score = 0.1991, loss = 0.314669, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 8 fit: [27.2 s]: Recall = 0.54722, Jaccard score = 0.2022, loss = 0.304022, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 9 fit: [27.1 s]: Recall = 0.55160, Jaccard score = 0.2042, loss = 0.294032, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 10 fit: [27.2 s]: Recall = 0.55335, Jaccard score = 0.2050, loss = 0.283670, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 11 fit: [27.1 s]: Recall = 0.56155, Jaccard score = 0.2086, loss = 0.274544, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 12 fit: [27.2 s]: Recall = 0.56530, Jaccard score = 0.2103, loss = 0.265648, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 13 fit: [27.2 s]: Recall = 0.56574, Jaccard score = 0.2105, loss = 0.257497, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 14 fit: [27.1 s]: Recall = 0.56900, Jaccard score = 0.2120, loss = 0.249281, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 15 fit: [27.1 s]: Recall = 0.57050, Jaccard score = 0.2127, loss = 0.241428, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 16 fit: [27.2 s]: Recall = 0.57632, Jaccard score = 0.2153, loss = 0.234124, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 17 fit: [27.2 s]: Recall = 0.57857, Jaccard score = 0.2163, loss = 0.228077, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 18 fit: [27.2 s]: Recall = 0.58026, Jaccard score = 0.2171, loss = 0.220354, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 19 fit: [27.4 s]: Recall = 0.58389, Jaccard score = 0.2188, loss = 0.214261, gradient norm = 1.0000, eval: [14.9 s]


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
# Load data done [1.6 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 256)          0           flatten_1[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 256)          0           flatten_2[0][0]                  
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_2[0][0]              
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_3[0][0]                  
# __________________________________________________________________________________________________
# dropout_4 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_4[0][0]                  
# __________________________________________________________________________________________________
# dropout_5 (Dropout)             (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_5[0][0]                  
# ==================================================================================================
# Total params: 6,551,393
# Trainable params: 6,551,393
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0247, Jaccard score = 0.0149
# Iteration 0 fit: [27.9 s]: Recall = 0.20211, Jaccard score = 0.1358, loss = 0.442134, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 1 fit: [27.1 s]: Recall = 0.24035, Jaccard score = 0.1657, loss = 0.408265, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 2 fit: [27.0 s]: Recall = 0.26023, Jaccard score = 0.1819, loss = 0.387042, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 3 fit: [27.3 s]: Recall = 0.27206, Jaccard score = 0.1918, loss = 0.369106, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 4 fit: [27.1 s]: Recall = 0.28248, Jaccard score = 0.2006, loss = 0.353056, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 5 fit: [27.2 s]: Recall = 0.28600, Jaccard score = 0.2036, loss = 0.339433, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 6 fit: [27.1 s]: Recall = 0.29501, Jaccard score = 0.2114, loss = 0.326173, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 7 fit: [27.0 s]: Recall = 0.29821, Jaccard score = 0.2142, loss = 0.314182, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 8 fit: [27.2 s]: Recall = 0.30185, Jaccard score = 0.2174, loss = 0.302417, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 9 fit: [27.0 s]: Recall = 0.30774, Jaccard score = 0.2225, loss = 0.292521, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 10 fit: [27.2 s]: Recall = 0.30902, Jaccard score = 0.2237, loss = 0.281962, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 11 fit: [27.0 s]: Recall = 0.31234, Jaccard score = 0.2266, loss = 0.272549, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 12 fit: [26.9 s]: Recall = 0.31899, Jaccard score = 0.2326, loss = 0.263874, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 13 fit: [27.3 s]: Recall = 0.31809, Jaccard score = 0.2318, loss = 0.254900, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 14 fit: [27.0 s]: Recall = 0.32347, Jaccard score = 0.2366, loss = 0.247233, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 15 fit: [27.5 s]: Recall = 0.32481, Jaccard score = 0.2378, loss = 0.238934, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 16 fit: [27.1 s]: Recall = 0.32769, Jaccard score = 0.2404, loss = 0.231804, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 17 fit: [27.1 s]: Recall = 0.32788, Jaccard score = 0.2406, loss = 0.225468, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 18 fit: [26.9 s]: Recall = 0.32941, Jaccard score = 0.2420, loss = 0.218705, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 19 fit: [27.2 s]: Recall = 0.33146, Jaccard score = 0.2439, loss = 0.212274, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 20 fit: [27.0 s]: Recall = 0.33824, Jaccard score = 0.2501, loss = 0.206786, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 21 fit: [27.5 s]: Recall = 0.33728, Jaccard score = 0.2492, loss = 0.200945, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 22 fit: [27.1 s]: Recall = 0.33881, Jaccard score = 0.2507, loss = 0.194712, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 23 fit: [27.0 s]: Recall = 0.33645, Jaccard score = 0.2485, loss = 0.189876, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 24 fit: [27.1 s]: Recall = 0.34188, Jaccard score = 0.2535, loss = 0.185764, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 25 fit: [27.3 s]: Recall = 0.34258, Jaccard score = 0.2542, loss = 0.181322, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 26 fit: [27.1 s]: Recall = 0.34668, Jaccard score = 0.2580, loss = 0.176594, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 27 fit: [27.4 s]: Recall = 0.34680, Jaccard score = 0.2581, loss = 0.171103, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 28 fit: [27.1 s]: Recall = 0.34795, Jaccard score = 0.2592, loss = 0.167905, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 29 fit: [27.6 s]: Recall = 0.34859, Jaccard score = 0.2598, loss = 0.163700, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 30 fit: [27.1 s]: Recall = 0.35006, Jaccard score = 0.2611, loss = 0.159344, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 31 fit: [27.0 s]: Recall = 0.34994, Jaccard score = 0.2610, loss = 0.154834, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 32 fit: [27.2 s]: Recall = 0.35160, Jaccard score = 0.2626, loss = 0.152277, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 33 fit: [26.9 s]: Recall = 0.35301, Jaccard score = 0.2639, loss = 0.148001, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 34 fit: [27.1 s]: Recall = 0.35569, Jaccard score = 0.2665, loss = 0.144831, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 35 fit: [27.1 s]: Recall = 0.35703, Jaccard score = 0.2677, loss = 0.142599, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 36 fit: [27.1 s]: Recall = 0.36100, Jaccard score = 0.2715, loss = 0.139035, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 37 fit: [27.2 s]: Recall = 0.36004, Jaccard score = 0.2706, loss = 0.136238, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 38 fit: [27.2 s]: Recall = 0.36036, Jaccard score = 0.2709, loss = 0.132911, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 39 fit: [27.1 s]: Recall = 0.36119, Jaccard score = 0.2717, loss = 0.129411, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 40 fit: [27.1 s]: Recall = 0.36125, Jaccard score = 0.2718, loss = 0.128757, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 41 fit: [27.1 s]: Recall = 0.36260, Jaccard score = 0.2731, loss = 0.124805, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 42 fit: [27.5 s]: Recall = 0.36355, Jaccard score = 0.2740, loss = 0.122666, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 43 fit: [27.2 s]: Recall = 0.36726, Jaccard score = 0.2775, loss = 0.120762, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 44 fit: [27.3 s]: Recall = 0.36477, Jaccard score = 0.2751, loss = 0.118608, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 45 fit: [27.4 s]: Recall = 0.36886, Jaccard score = 0.2791, loss = 0.116005, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 46 fit: [27.4 s]: Recall = 0.36957, Jaccard score = 0.2798, loss = 0.114382, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 47 fit: [27.0 s]: Recall = 0.37052, Jaccard score = 0.2807, loss = 0.111638, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 48 fit: [27.1 s]: Recall = 0.36969, Jaccard score = 0.2799, loss = 0.110260, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 49 fit: [27.0 s]: Recall = 0.37474, Jaccard score = 0.2848, loss = 0.108644, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 50 fit: [27.1 s]: Recall = 0.37091, Jaccard score = 0.2811, loss = 0.106202, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 51 fit: [27.1 s]: Recall = 0.37308, Jaccard score = 0.2832, loss = 0.104704, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 52 fit: [27.0 s]: Recall = 0.36944, Jaccard score = 0.2796, loss = 0.102732, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 53 fit: [27.2 s]: Recall = 0.37398, Jaccard score = 0.2841, loss = 0.100940, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 54 fit: [27.3 s]: Recall = 0.37526, Jaccard score = 0.2853, loss = 0.099551, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 55 fit: [27.2 s]: Recall = 0.37359, Jaccard score = 0.2837, loss = 0.097363, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 56 fit: [27.4 s]: Recall = 0.37500, Jaccard score = 0.2851, loss = 0.096950, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 57 fit: [27.1 s]: Recall = 0.37545, Jaccard score = 0.2855, loss = 0.094721, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 58 fit: [27.1 s]: Recall = 0.37698, Jaccard score = 0.2870, loss = 0.093551, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 59 fit: [27.1 s]: Recall = 0.37673, Jaccard score = 0.2867, loss = 0.091819, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 60 fit: [27.1 s]: Recall = 0.37577, Jaccard score = 0.2858, loss = 0.090575, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 61 fit: [27.3 s]: Recall = 0.37673, Jaccard score = 0.2867, loss = 0.089779, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 62 fit: [27.0 s]: Recall = 0.37462, Jaccard score = 0.2847, loss = 0.087531, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 63 fit: [27.0 s]: Recall = 0.37756, Jaccard score = 0.2876, loss = 0.086833, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 64 fit: [27.0 s]: Recall = 0.37673, Jaccard score = 0.2867, loss = 0.085266, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 65 fit: [27.1 s]: Recall = 0.38127, Jaccard score = 0.2912, loss = 0.084617, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 66 fit: [27.4 s]: Recall = 0.37769, Jaccard score = 0.2877, loss = 0.082808, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 67 fit: [27.2 s]: Recall = 0.38306, Jaccard score = 0.2930, loss = 0.082276, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 68 fit: [27.0 s]: Recall = 0.38299, Jaccard score = 0.2929, loss = 0.081082, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 69 fit: [27.0 s]: Recall = 0.38210, Jaccard score = 0.2920, loss = 0.078522, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 70 fit: [27.0 s]: Recall = 0.38382, Jaccard score = 0.2937, loss = 0.078148, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 71 fit: [27.2 s]: Recall = 0.38306, Jaccard score = 0.2930, loss = 0.077613, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 72 fit: [27.2 s]: Recall = 0.38478, Jaccard score = 0.2947, loss = 0.077127, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 73 fit: [27.8 s]: Recall = 0.38152, Jaccard score = 0.2915, loss = 0.074935, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 74 fit: [27.2 s]: Recall = 0.38453, Jaccard score = 0.2944, loss = 0.074849, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 75 fit: [27.1 s]: Recall = 0.38497, Jaccard score = 0.2949, loss = 0.074070, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 76 fit: [27.2 s]: Recall = 0.38446, Jaccard score = 0.2944, loss = 0.072737, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 77 fit: [27.2 s]: Recall = 0.38645, Jaccard score = 0.2963, loss = 0.073004, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 78 fit: [27.3 s]: Recall = 0.38555, Jaccard score = 0.2954, loss = 0.070891, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 79 fit: [27.1 s]: Recall = 0.38606, Jaccard score = 0.2960, loss = 0.070072, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 80 fit: [27.5 s]: Recall = 0.38919, Jaccard score = 0.2991, loss = 0.069145, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 81 fit: [27.3 s]: Recall = 0.38523, Jaccard score = 0.2951, loss = 0.068714, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 82 fit: [27.0 s]: Recall = 0.39047, Jaccard score = 0.3003, loss = 0.068583, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 83 fit: [27.2 s]: Recall = 0.38977, Jaccard score = 0.2996, loss = 0.067077, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 84 fit: [27.0 s]: Recall = 0.39105, Jaccard score = 0.3009, loss = 0.066488, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 85 fit: [27.2 s]: Recall = 0.38798, Jaccard score = 0.2979, loss = 0.065904, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 86 fit: [27.2 s]: Recall = 0.38676, Jaccard score = 0.2967, loss = 0.064582, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 87 fit: [27.3 s]: Recall = 0.38670, Jaccard score = 0.2966, loss = 0.064277, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 88 fit: [27.4 s]: Recall = 0.38964, Jaccard score = 0.2995, loss = 0.064031, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 89 fit: [27.1 s]: Recall = 0.39495, Jaccard score = 0.3048, loss = 0.062477, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 90 fit: [27.1 s]: Recall = 0.39092, Jaccard score = 0.3008, loss = 0.061826, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 91 fit: [27.2 s]: Recall = 0.38977, Jaccard score = 0.2996, loss = 0.061976, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 92 fit: [27.0 s]: Recall = 0.39060, Jaccard score = 0.3005, loss = 0.060586, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 93 fit: [27.1 s]: Recall = 0.39060, Jaccard score = 0.3005, loss = 0.060276, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 94 fit: [27.3 s]: Recall = 0.39450, Jaccard score = 0.3044, loss = 0.059135, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 95 fit: [27.2 s]: Recall = 0.39092, Jaccard score = 0.3008, loss = 0.058882, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 96 fit: [27.3 s]: Recall = 0.39488, Jaccard score = 0.3048, loss = 0.058701, gradient norm = 1.0000, eval: [14.5 s]
# Iteration 97 fit: [27.1 s]: Recall = 0.39373, Jaccard score = 0.3036, loss = 0.057610, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 98 fit: [27.0 s]: Recall = 0.39169, Jaccard score = 0.3016, loss = 0.057693, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 99 fit: [27.3 s]: Recall = 0.39252, Jaccard score = 0.3024, loss = 0.057752, gradient norm = 1.0000, eval: [14.4 s]
# End. Best Iteration 89:  Recall = 0.3949, Jaccard score = 0.3048. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
# The average best performance after k-fold 1 is: Recall = 0.39494884910485933, Jaccard score = 0.30484133642599814
# 
# Performing k-fold 2
# Init: Recall = 0.0255, Jaccard score = 0.0154
# Iteration 0 fit: [28.1 s]: Recall = 0.20164, Jaccard score = 0.1368, loss = 0.441867, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 1 fit: [27.8 s]: Recall = 0.23193, Jaccard score = 0.1606, loss = 0.408702, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 2 fit: [27.5 s]: Recall = 0.25408, Jaccard score = 0.1787, loss = 0.386296, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 3 fit: [27.4 s]: Recall = 0.26460, Jaccard score = 0.1875, loss = 0.368969, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 4 fit: [27.8 s]: Recall = 0.27305, Jaccard score = 0.1946, loss = 0.353304, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 5 fit: [27.5 s]: Recall = 0.27837, Jaccard score = 0.1992, loss = 0.339168, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 6 fit: [27.5 s]: Recall = 0.28287, Jaccard score = 0.2031, loss = 0.325852, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 7 fit: [27.6 s]: Recall = 0.28982, Jaccard score = 0.2091, loss = 0.313745, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 8 fit: [27.5 s]: Recall = 0.29426, Jaccard score = 0.2130, loss = 0.302098, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 9 fit: [27.7 s]: Recall = 0.29764, Jaccard score = 0.2160, loss = 0.291840, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 10 fit: [27.5 s]: Recall = 0.29870, Jaccard score = 0.2169, loss = 0.281619, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 11 fit: [27.4 s]: Recall = 0.30521, Jaccard score = 0.2227, loss = 0.272628, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 12 fit: [27.7 s]: Recall = 0.31047, Jaccard score = 0.2274, loss = 0.263014, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 13 fit: [27.4 s]: Recall = 0.31197, Jaccard score = 0.2287, loss = 0.254814, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 14 fit: [27.6 s]: Recall = 0.31516, Jaccard score = 0.2316, loss = 0.247684, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 15 fit: [27.5 s]: Recall = 0.31598, Jaccard score = 0.2324, loss = 0.239409, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 16 fit: [27.6 s]: Recall = 0.31917, Jaccard score = 0.2353, loss = 0.231871, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 17 fit: [27.5 s]: Recall = 0.32023, Jaccard score = 0.2362, loss = 0.226327, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 18 fit: [27.7 s]: Recall = 0.32249, Jaccard score = 0.2383, loss = 0.219052, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 19 fit: [27.6 s]: Recall = 0.32424, Jaccard score = 0.2399, loss = 0.213087, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 20 fit: [27.7 s]: Recall = 0.32474, Jaccard score = 0.2403, loss = 0.207100, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 21 fit: [27.4 s]: Recall = 0.32411, Jaccard score = 0.2398, loss = 0.201193, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 22 fit: [27.3 s]: Recall = 0.33125, Jaccard score = 0.2463, loss = 0.195819, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 23 fit: [27.6 s]: Recall = 0.32899, Jaccard score = 0.2443, loss = 0.190264, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 24 fit: [27.5 s]: Recall = 0.33118, Jaccard score = 0.2463, loss = 0.185384, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 25 fit: [27.3 s]: Recall = 0.33819, Jaccard score = 0.2528, loss = 0.180444, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 26 fit: [27.8 s]: Recall = 0.33569, Jaccard score = 0.2505, loss = 0.176090, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 27 fit: [27.8 s]: Recall = 0.33625, Jaccard score = 0.2510, loss = 0.171735, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 28 fit: [27.4 s]: Recall = 0.34114, Jaccard score = 0.2556, loss = 0.166933, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 29 fit: [27.7 s]: Recall = 0.34145, Jaccard score = 0.2559, loss = 0.163414, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 30 fit: [27.4 s]: Recall = 0.34339, Jaccard score = 0.2577, loss = 0.159091, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 31 fit: [27.6 s]: Recall = 0.34533, Jaccard score = 0.2595, loss = 0.155504, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 32 fit: [27.4 s]: Recall = 0.34207, Jaccard score = 0.2565, loss = 0.152185, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 33 fit: [27.8 s]: Recall = 0.34339, Jaccard score = 0.2577, loss = 0.148614, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 34 fit: [27.5 s]: Recall = 0.34727, Jaccard score = 0.2614, loss = 0.144899, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 35 fit: [27.6 s]: Recall = 0.34890, Jaccard score = 0.2629, loss = 0.141824, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 36 fit: [27.4 s]: Recall = 0.35002, Jaccard score = 0.2640, loss = 0.138926, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 37 fit: [27.4 s]: Recall = 0.35008, Jaccard score = 0.2641, loss = 0.135764, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 38 fit: [27.5 s]: Recall = 0.35096, Jaccard score = 0.2649, loss = 0.133015, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 39 fit: [27.6 s]: Recall = 0.35371, Jaccard score = 0.2675, loss = 0.130218, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 40 fit: [27.4 s]: Recall = 0.35565, Jaccard score = 0.2694, loss = 0.127718, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 41 fit: [27.5 s]: Recall = 0.35334, Jaccard score = 0.2672, loss = 0.125493, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 42 fit: [27.5 s]: Recall = 0.35434, Jaccard score = 0.2681, loss = 0.122048, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 43 fit: [27.3 s]: Recall = 0.35659, Jaccard score = 0.2703, loss = 0.119488, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 44 fit: [27.4 s]: Recall = 0.35415, Jaccard score = 0.2679, loss = 0.117294, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 45 fit: [27.6 s]: Recall = 0.35872, Jaccard score = 0.2723, loss = 0.115703, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 46 fit: [27.3 s]: Recall = 0.35678, Jaccard score = 0.2705, loss = 0.113871, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 47 fit: [27.6 s]: Recall = 0.36129, Jaccard score = 0.2748, loss = 0.112406, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 48 fit: [27.5 s]: Recall = 0.36172, Jaccard score = 0.2753, loss = 0.109434, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 49 fit: [27.4 s]: Recall = 0.36166, Jaccard score = 0.2752, loss = 0.108678, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 50 fit: [27.6 s]: Recall = 0.36191, Jaccard score = 0.2754, loss = 0.104787, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 51 fit: [27.6 s]: Recall = 0.36586, Jaccard score = 0.2793, loss = 0.103886, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 52 fit: [27.5 s]: Recall = 0.36373, Jaccard score = 0.2772, loss = 0.102191, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 53 fit: [27.6 s]: Recall = 0.36248, Jaccard score = 0.2760, loss = 0.100692, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 54 fit: [27.4 s]: Recall = 0.36467, Jaccard score = 0.2781, loss = 0.098813, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 55 fit: [27.5 s]: Recall = 0.37055, Jaccard score = 0.2839, loss = 0.097142, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 56 fit: [27.5 s]: Recall = 0.36723, Jaccard score = 0.2806, loss = 0.095408, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 57 fit: [27.4 s]: Recall = 0.37268, Jaccard score = 0.2860, loss = 0.094044, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 58 fit: [27.4 s]: Recall = 0.36836, Jaccard score = 0.2817, loss = 0.092053, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 59 fit: [27.5 s]: Recall = 0.36792, Jaccard score = 0.2813, loss = 0.090841, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 60 fit: [27.3 s]: Recall = 0.36510, Jaccard score = 0.2785, loss = 0.089335, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 61 fit: [27.5 s]: Recall = 0.36855, Jaccard score = 0.2819, loss = 0.089135, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 62 fit: [27.3 s]: Recall = 0.37099, Jaccard score = 0.2843, loss = 0.087659, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 63 fit: [27.6 s]: Recall = 0.36667, Jaccard score = 0.2801, loss = 0.085700, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 64 fit: [27.3 s]: Recall = 0.37286, Jaccard score = 0.2862, loss = 0.084620, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 65 fit: [27.5 s]: Recall = 0.37374, Jaccard score = 0.2870, loss = 0.084346, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 66 fit: [27.3 s]: Recall = 0.37280, Jaccard score = 0.2861, loss = 0.082308, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 67 fit: [27.4 s]: Recall = 0.37230, Jaccard score = 0.2856, loss = 0.081874, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 68 fit: [27.2 s]: Recall = 0.37124, Jaccard score = 0.2845, loss = 0.080207, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 69 fit: [27.7 s]: Recall = 0.37505, Jaccard score = 0.2883, loss = 0.079318, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 70 fit: [27.3 s]: Recall = 0.37286, Jaccard score = 0.2862, loss = 0.078115, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 71 fit: [27.5 s]: Recall = 0.37443, Jaccard score = 0.2877, loss = 0.076305, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 72 fit: [27.5 s]: Recall = 0.37380, Jaccard score = 0.2871, loss = 0.075524, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 73 fit: [27.5 s]: Recall = 0.37449, Jaccard score = 0.2878, loss = 0.075162, gradient norm = 1.0000, eval: [14.6 s]
# Iteration 74 fit: [27.3 s]: Recall = 0.37649, Jaccard score = 0.2897, loss = 0.073424, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 75 fit: [27.7 s]: Recall = 0.37662, Jaccard score = 0.2899, loss = 0.073010, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 76 fit: [27.3 s]: Recall = 0.37512, Jaccard score = 0.2884, loss = 0.071943, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 77 fit: [27.8 s]: Recall = 0.37837, Jaccard score = 0.2916, loss = 0.071172, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 78 fit: [27.4 s]: Recall = 0.37512, Jaccard score = 0.2884, loss = 0.071365, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 79 fit: [27.5 s]: Recall = 0.37850, Jaccard score = 0.2917, loss = 0.068969, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 80 fit: [27.7 s]: Recall = 0.37956, Jaccard score = 0.2928, loss = 0.068540, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 81 fit: [27.6 s]: Recall = 0.37662, Jaccard score = 0.2899, loss = 0.068183, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 82 fit: [27.4 s]: Recall = 0.38069, Jaccard score = 0.2939, loss = 0.067380, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 83 fit: [27.9 s]: Recall = 0.37825, Jaccard score = 0.2915, loss = 0.066212, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 84 fit: [27.3 s]: Recall = 0.37243, Jaccard score = 0.2857, loss = 0.066064, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 85 fit: [27.6 s]: Recall = 0.37750, Jaccard score = 0.2907, loss = 0.065214, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 86 fit: [27.6 s]: Recall = 0.37606, Jaccard score = 0.2893, loss = 0.064437, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 87 fit: [27.4 s]: Recall = 0.37524, Jaccard score = 0.2885, loss = 0.063631, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 88 fit: [27.7 s]: Recall = 0.37956, Jaccard score = 0.2928, loss = 0.063488, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 89 fit: [27.6 s]: Recall = 0.37944, Jaccard score = 0.2927, loss = 0.062189, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 90 fit: [27.4 s]: Recall = 0.38244, Jaccard score = 0.2957, loss = 0.061835, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 91 fit: [27.5 s]: Recall = 0.38400, Jaccard score = 0.2972, loss = 0.061377, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 92 fit: [27.7 s]: Recall = 0.38256, Jaccard score = 0.2958, loss = 0.060640, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 93 fit: [27.4 s]: Recall = 0.38206, Jaccard score = 0.2953, loss = 0.058965, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 94 fit: [27.5 s]: Recall = 0.38238, Jaccard score = 0.2956, loss = 0.058193, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 95 fit: [27.5 s]: Recall = 0.38106, Jaccard score = 0.2943, loss = 0.058503, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 96 fit: [27.6 s]: Recall = 0.38075, Jaccard score = 0.2940, loss = 0.057901, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 97 fit: [27.4 s]: Recall = 0.38300, Jaccard score = 0.2962, loss = 0.057356, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 98 fit: [27.3 s]: Recall = 0.38169, Jaccard score = 0.2949, loss = 0.056817, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 99 fit: [27.4 s]: Recall = 0.38601, Jaccard score = 0.2993, loss = 0.056601, gradient norm = 1.0000, eval: [14.8 s]
# End. Best Iteration 99:  Recall = 0.3860, Jaccard score = 0.2993. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
# The average best performance after k-fold 2 is: Recall = 0.3904777414057997, Jaccard score = 0.30204950718248136
# 
# Performing k-fold 3
# Init: Recall = 0.0251, Jaccard score = 0.0152
# Iteration 0 fit: [28.7 s]: Recall = 0.20656, Jaccard score = 0.1402, loss = 0.441613, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 1 fit: [27.9 s]: Recall = 0.23988, Jaccard score = 0.1666, loss = 0.407946, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 2 fit: [27.6 s]: Recall = 0.25449, Jaccard score = 0.1785, loss = 0.386411, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 3 fit: [27.8 s]: Recall = 0.27036, Jaccard score = 0.1918, loss = 0.369019, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 4 fit: [27.6 s]: Recall = 0.27363, Jaccard score = 0.1945, loss = 0.353112, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 5 fit: [27.7 s]: Recall = 0.28119, Jaccard score = 0.2010, loss = 0.338759, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 6 fit: [27.5 s]: Recall = 0.28780, Jaccard score = 0.2067, loss = 0.325898, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 7 fit: [28.0 s]: Recall = 0.28805, Jaccard score = 0.2069, loss = 0.313246, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 8 fit: [27.6 s]: Recall = 0.29467, Jaccard score = 0.2127, loss = 0.302359, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 9 fit: [27.7 s]: Recall = 0.29939, Jaccard score = 0.2168, loss = 0.292655, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 10 fit: [27.8 s]: Recall = 0.30657, Jaccard score = 0.2232, loss = 0.282182, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 11 fit: [28.4 s]: Recall = 0.30745, Jaccard score = 0.2240, loss = 0.272539, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 12 fit: [27.5 s]: Recall = 0.31268, Jaccard score = 0.2287, loss = 0.264266, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 13 fit: [27.7 s]: Recall = 0.31299, Jaccard score = 0.2289, loss = 0.255332, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 14 fit: [27.6 s]: Recall = 0.31646, Jaccard score = 0.2321, loss = 0.247748, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 15 fit: [27.5 s]: Recall = 0.31904, Jaccard score = 0.2344, loss = 0.240276, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 16 fit: [27.7 s]: Recall = 0.32162, Jaccard score = 0.2367, loss = 0.232586, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 17 fit: [27.5 s]: Recall = 0.32515, Jaccard score = 0.2400, loss = 0.226123, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 18 fit: [27.7 s]: Recall = 0.32489, Jaccard score = 0.2397, loss = 0.219758, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 19 fit: [27.7 s]: Recall = 0.32710, Jaccard score = 0.2418, loss = 0.214094, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 20 fit: [27.8 s]: Recall = 0.32949, Jaccard score = 0.2440, loss = 0.208174, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 21 fit: [27.6 s]: Recall = 0.33018, Jaccard score = 0.2446, loss = 0.201948, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 22 fit: [27.6 s]: Recall = 0.33044, Jaccard score = 0.2448, loss = 0.197408, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 23 fit: [27.7 s]: Recall = 0.33195, Jaccard score = 0.2462, loss = 0.191490, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 24 fit: [27.5 s]: Recall = 0.33251, Jaccard score = 0.2467, loss = 0.186157, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 25 fit: [27.5 s]: Recall = 0.33484, Jaccard score = 0.2489, loss = 0.182331, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 26 fit: [27.7 s]: Recall = 0.33906, Jaccard score = 0.2528, loss = 0.178235, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 27 fit: [27.7 s]: Recall = 0.33982, Jaccard score = 0.2535, loss = 0.173414, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 28 fit: [27.8 s]: Recall = 0.33969, Jaccard score = 0.2534, loss = 0.168775, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 29 fit: [27.7 s]: Recall = 0.34246, Jaccard score = 0.2560, loss = 0.165133, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 30 fit: [27.9 s]: Recall = 0.34272, Jaccard score = 0.2563, loss = 0.161135, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 31 fit: [27.7 s]: Recall = 0.34511, Jaccard score = 0.2585, loss = 0.157481, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 32 fit: [27.6 s]: Recall = 0.34536, Jaccard score = 0.2587, loss = 0.153621, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 33 fit: [27.5 s]: Recall = 0.34612, Jaccard score = 0.2595, loss = 0.150009, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 34 fit: [27.8 s]: Recall = 0.34958, Jaccard score = 0.2627, loss = 0.146756, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 35 fit: [27.6 s]: Recall = 0.34782, Jaccard score = 0.2611, loss = 0.143514, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 36 fit: [27.8 s]: Recall = 0.35046, Jaccard score = 0.2636, loss = 0.140491, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 37 fit: [27.7 s]: Recall = 0.35607, Jaccard score = 0.2689, loss = 0.137927, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 38 fit: [27.6 s]: Recall = 0.35160, Jaccard score = 0.2646, loss = 0.135058, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 39 fit: [27.6 s]: Recall = 0.35367, Jaccard score = 0.2666, loss = 0.132198, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 40 fit: [27.6 s]: Recall = 0.35651, Jaccard score = 0.2693, loss = 0.128632, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 41 fit: [28.1 s]: Recall = 0.35563, Jaccard score = 0.2685, loss = 0.127991, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 42 fit: [27.6 s]: Recall = 0.35399, Jaccard score = 0.2669, loss = 0.124561, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 43 fit: [27.5 s]: Recall = 0.36041, Jaccard score = 0.2731, loss = 0.121669, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 44 fit: [27.7 s]: Recall = 0.35575, Jaccard score = 0.2686, loss = 0.118843, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 45 fit: [27.6 s]: Recall = 0.36016, Jaccard score = 0.2729, loss = 0.117668, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 46 fit: [27.6 s]: Recall = 0.36237, Jaccard score = 0.2750, loss = 0.114785, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 47 fit: [27.6 s]: Recall = 0.36180, Jaccard score = 0.2744, loss = 0.112962, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 48 fit: [27.9 s]: Recall = 0.36230, Jaccard score = 0.2749, loss = 0.111455, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 49 fit: [27.7 s]: Recall = 0.36577, Jaccard score = 0.2783, loss = 0.108932, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 50 fit: [27.6 s]: Recall = 0.36646, Jaccard score = 0.2790, loss = 0.107120, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 51 fit: [27.5 s]: Recall = 0.36488, Jaccard score = 0.2774, loss = 0.104787, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 52 fit: [27.6 s]: Recall = 0.37062, Jaccard score = 0.2830, loss = 0.103497, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 53 fit: [27.7 s]: Recall = 0.36690, Jaccard score = 0.2794, loss = 0.102230, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 54 fit: [27.8 s]: Recall = 0.37137, Jaccard score = 0.2838, loss = 0.100230, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 55 fit: [27.7 s]: Recall = 0.36766, Jaccard score = 0.2801, loss = 0.098371, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 56 fit: [28.1 s]: Recall = 0.37194, Jaccard score = 0.2843, loss = 0.097375, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 57 fit: [27.6 s]: Recall = 0.37181, Jaccard score = 0.2842, loss = 0.095764, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 58 fit: [27.4 s]: Recall = 0.36917, Jaccard score = 0.2816, loss = 0.094675, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 59 fit: [27.7 s]: Recall = 0.37093, Jaccard score = 0.2833, loss = 0.092846, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 60 fit: [27.5 s]: Recall = 0.37616, Jaccard score = 0.2885, loss = 0.091703, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 61 fit: [27.4 s]: Recall = 0.37244, Jaccard score = 0.2848, loss = 0.090134, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 62 fit: [27.5 s]: Recall = 0.37546, Jaccard score = 0.2878, loss = 0.088837, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 63 fit: [27.8 s]: Recall = 0.37565, Jaccard score = 0.2880, loss = 0.087928, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 64 fit: [27.6 s]: Recall = 0.37502, Jaccard score = 0.2873, loss = 0.086102, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 65 fit: [27.7 s]: Recall = 0.37559, Jaccard score = 0.2879, loss = 0.084865, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 66 fit: [27.7 s]: Recall = 0.37874, Jaccard score = 0.2910, loss = 0.083627, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 67 fit: [27.9 s]: Recall = 0.37609, Jaccard score = 0.2884, loss = 0.082728, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 68 fit: [27.5 s]: Recall = 0.37672, Jaccard score = 0.2890, loss = 0.081148, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 69 fit: [27.6 s]: Recall = 0.37836, Jaccard score = 0.2906, loss = 0.080361, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 70 fit: [27.6 s]: Recall = 0.37477, Jaccard score = 0.2871, loss = 0.079464, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 71 fit: [27.8 s]: Recall = 0.37981, Jaccard score = 0.2921, loss = 0.078650, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 72 fit: [27.9 s]: Recall = 0.37773, Jaccard score = 0.2900, loss = 0.077797, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 73 fit: [27.9 s]: Recall = 0.37735, Jaccard score = 0.2897, loss = 0.076860, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 74 fit: [27.6 s]: Recall = 0.37691, Jaccard score = 0.2892, loss = 0.075627, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 75 fit: [27.6 s]: Recall = 0.38031, Jaccard score = 0.2926, loss = 0.074011, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 76 fit: [27.5 s]: Recall = 0.38025, Jaccard score = 0.2925, loss = 0.073898, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 77 fit: [27.5 s]: Recall = 0.38038, Jaccard score = 0.2926, loss = 0.072883, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 78 fit: [28.1 s]: Recall = 0.38189, Jaccard score = 0.2942, loss = 0.071653, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 79 fit: [27.5 s]: Recall = 0.38208, Jaccard score = 0.2943, loss = 0.071223, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 80 fit: [27.7 s]: Recall = 0.38422, Jaccard score = 0.2965, loss = 0.069683, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 81 fit: [27.8 s]: Recall = 0.38176, Jaccard score = 0.2940, loss = 0.069756, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 82 fit: [27.5 s]: Recall = 0.38340, Jaccard score = 0.2957, loss = 0.068756, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 83 fit: [27.7 s]: Recall = 0.38195, Jaccard score = 0.2942, loss = 0.067819, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 84 fit: [27.6 s]: Recall = 0.38478, Jaccard score = 0.2970, loss = 0.067120, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 85 fit: [27.7 s]: Recall = 0.38523, Jaccard score = 0.2975, loss = 0.066077, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 86 fit: [27.6 s]: Recall = 0.38075, Jaccard score = 0.2930, loss = 0.065562, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 87 fit: [27.7 s]: Recall = 0.38453, Jaccard score = 0.2968, loss = 0.065094, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 88 fit: [27.7 s]: Recall = 0.38957, Jaccard score = 0.3019, loss = 0.064046, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 89 fit: [28.0 s]: Recall = 0.38384, Jaccard score = 0.2961, loss = 0.062999, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 90 fit: [27.5 s]: Recall = 0.38630, Jaccard score = 0.2986, loss = 0.063149, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 91 fit: [28.0 s]: Recall = 0.38378, Jaccard score = 0.2960, loss = 0.062447, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 92 fit: [27.6 s]: Recall = 0.38497, Jaccard score = 0.2972, loss = 0.062313, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 93 fit: [27.8 s]: Recall = 0.38567, Jaccard score = 0.2979, loss = 0.061261, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 94 fit: [27.6 s]: Recall = 0.38724, Jaccard score = 0.2995, loss = 0.060892, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 95 fit: [27.7 s]: Recall = 0.38478, Jaccard score = 0.2970, loss = 0.059589, gradient norm = 1.0000, eval: [14.7 s]
# Iteration 96 fit: [27.6 s]: Recall = 0.38649, Jaccard score = 0.2988, loss = 0.059678, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 97 fit: [27.6 s]: Recall = 0.38712, Jaccard score = 0.2994, loss = 0.059711, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 98 fit: [27.9 s]: Recall = 0.38460, Jaccard score = 0.2969, loss = 0.057983, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 99 fit: [27.5 s]: Recall = 0.38623, Jaccard score = 0.2985, loss = 0.057810, gradient norm = 1.0000, eval: [14.8 s]
# End. Best Iteration 88:  Recall = 0.3896, Jaccard score = 0.3019. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
# The average best performance after k-fold 3 is: Recall = 0.39017553816498496, Jaccard score = 0.30198606192978383
# 
# Performing k-fold 4
# Init: Recall = 0.0259, Jaccard score = 0.0157
# Iteration 0 fit: [28.3 s]: Recall = 0.20982, Jaccard score = 0.1431, loss = 0.441744, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 1 fit: [27.4 s]: Recall = 0.24406, Jaccard score = 0.1705, loss = 0.407221, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 2 fit: [27.3 s]: Recall = 0.26339, Jaccard score = 0.1865, loss = 0.386325, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 3 fit: [27.6 s]: Recall = 0.26865, Jaccard score = 0.1909, loss = 0.368294, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 4 fit: [27.5 s]: Recall = 0.28379, Jaccard score = 0.2039, loss = 0.352214, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 5 fit: [27.4 s]: Recall = 0.28642, Jaccard score = 0.2061, loss = 0.337375, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 6 fit: [27.2 s]: Recall = 0.29287, Jaccard score = 0.2118, loss = 0.324426, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 7 fit: [27.3 s]: Recall = 0.29956, Jaccard score = 0.2177, loss = 0.312171, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 8 fit: [27.4 s]: Recall = 0.29950, Jaccard score = 0.2176, loss = 0.300511, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 9 fit: [27.3 s]: Recall = 0.30544, Jaccard score = 0.2229, loss = 0.291438, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 10 fit: [27.3 s]: Recall = 0.30982, Jaccard score = 0.2268, loss = 0.280779, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 11 fit: [27.2 s]: Recall = 0.31126, Jaccard score = 0.2281, loss = 0.271252, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 12 fit: [27.5 s]: Recall = 0.31508, Jaccard score = 0.2315, loss = 0.262891, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 13 fit: [27.5 s]: Recall = 0.31865, Jaccard score = 0.2348, loss = 0.254292, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 14 fit: [27.2 s]: Recall = 0.31859, Jaccard score = 0.2347, loss = 0.245889, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 15 fit: [27.2 s]: Recall = 0.31934, Jaccard score = 0.2354, loss = 0.237878, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 16 fit: [27.5 s]: Recall = 0.32484, Jaccard score = 0.2404, loss = 0.230912, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 17 fit: [27.2 s]: Recall = 0.32203, Jaccard score = 0.2379, loss = 0.224053, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 18 fit: [27.4 s]: Recall = 0.32528, Jaccard score = 0.2408, loss = 0.217621, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 19 fit: [27.3 s]: Recall = 0.33041, Jaccard score = 0.2456, loss = 0.210866, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 20 fit: [27.3 s]: Recall = 0.33135, Jaccard score = 0.2465, loss = 0.205445, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 21 fit: [27.4 s]: Recall = 0.32810, Jaccard score = 0.2434, loss = 0.200249, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 22 fit: [27.5 s]: Recall = 0.33267, Jaccard score = 0.2477, loss = 0.193996, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 23 fit: [27.3 s]: Recall = 0.33467, Jaccard score = 0.2495, loss = 0.187749, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 24 fit: [27.6 s]: Recall = 0.33210, Jaccard score = 0.2471, loss = 0.183707, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 25 fit: [27.3 s]: Recall = 0.33880, Jaccard score = 0.2534, loss = 0.179392, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 26 fit: [27.4 s]: Recall = 0.33936, Jaccard score = 0.2539, loss = 0.174720, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 27 fit: [27.5 s]: Recall = 0.34074, Jaccard score = 0.2552, loss = 0.169521, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 28 fit: [27.3 s]: Recall = 0.34118, Jaccard score = 0.2556, loss = 0.165640, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 29 fit: [27.1 s]: Recall = 0.34775, Jaccard score = 0.2618, loss = 0.161515, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 30 fit: [27.8 s]: Recall = 0.34418, Jaccard score = 0.2585, loss = 0.157827, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 31 fit: [27.2 s]: Recall = 0.34912, Jaccard score = 0.2631, loss = 0.154204, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 32 fit: [27.4 s]: Recall = 0.34706, Jaccard score = 0.2612, loss = 0.149665, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 33 fit: [27.4 s]: Recall = 0.35156, Jaccard score = 0.2655, loss = 0.146884, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 34 fit: [27.4 s]: Recall = 0.35075, Jaccard score = 0.2647, loss = 0.143829, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 35 fit: [27.2 s]: Recall = 0.35282, Jaccard score = 0.2667, loss = 0.140710, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 36 fit: [27.3 s]: Recall = 0.35363, Jaccard score = 0.2675, loss = 0.137663, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 37 fit: [27.4 s]: Recall = 0.35394, Jaccard score = 0.2678, loss = 0.135086, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 38 fit: [27.4 s]: Recall = 0.35701, Jaccard score = 0.2707, loss = 0.131603, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 39 fit: [27.3 s]: Recall = 0.35651, Jaccard score = 0.2702, loss = 0.129935, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 40 fit: [27.4 s]: Recall = 0.35926, Jaccard score = 0.2729, loss = 0.126189, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 41 fit: [27.1 s]: Recall = 0.36195, Jaccard score = 0.2755, loss = 0.123992, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 42 fit: [27.2 s]: Recall = 0.35976, Jaccard score = 0.2734, loss = 0.121041, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 43 fit: [27.2 s]: Recall = 0.36358, Jaccard score = 0.2771, loss = 0.118927, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 44 fit: [27.3 s]: Recall = 0.36158, Jaccard score = 0.2751, loss = 0.116810, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 45 fit: [27.3 s]: Recall = 0.36358, Jaccard score = 0.2771, loss = 0.114824, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 46 fit: [27.2 s]: Recall = 0.36646, Jaccard score = 0.2799, loss = 0.112172, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 47 fit: [27.3 s]: Recall = 0.36733, Jaccard score = 0.2807, loss = 0.111115, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 48 fit: [27.4 s]: Recall = 0.36771, Jaccard score = 0.2811, loss = 0.109276, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 49 fit: [27.2 s]: Recall = 0.37009, Jaccard score = 0.2834, loss = 0.106819, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 50 fit: [27.3 s]: Recall = 0.36696, Jaccard score = 0.2804, loss = 0.104635, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 51 fit: [27.4 s]: Recall = 0.37178, Jaccard score = 0.2851, loss = 0.102804, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 52 fit: [27.3 s]: Recall = 0.37090, Jaccard score = 0.2842, loss = 0.101628, gradient norm = 1.0000, eval: [14.8 s]
# Iteration 53 fit: [27.4 s]: Recall = 0.37171, Jaccard score = 0.2850, loss = 0.099817, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 54 fit: [27.4 s]: Recall = 0.37484, Jaccard score = 0.2881, loss = 0.097897, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 55 fit: [27.2 s]: Recall = 0.37522, Jaccard score = 0.2885, loss = 0.096158, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 56 fit: [27.2 s]: Recall = 0.37416, Jaccard score = 0.2874, loss = 0.095958, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 57 fit: [27.0 s]: Recall = 0.37453, Jaccard score = 0.2878, loss = 0.092996, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 58 fit: [27.4 s]: Recall = 0.37190, Jaccard score = 0.2852, loss = 0.092513, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 59 fit: [27.3 s]: Recall = 0.37516, Jaccard score = 0.2884, loss = 0.090202, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 60 fit: [27.3 s]: Recall = 0.37572, Jaccard score = 0.2890, loss = 0.088889, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 61 fit: [27.3 s]: Recall = 0.37459, Jaccard score = 0.2879, loss = 0.088811, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 62 fit: [27.3 s]: Recall = 0.37816, Jaccard score = 0.2914, loss = 0.087387, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 63 fit: [26.9 s]: Recall = 0.37741, Jaccard score = 0.2907, loss = 0.085362, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 64 fit: [27.3 s]: Recall = 0.38048, Jaccard score = 0.2937, loss = 0.084399, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 65 fit: [27.2 s]: Recall = 0.37816, Jaccard score = 0.2914, loss = 0.082562, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 66 fit: [27.4 s]: Recall = 0.38210, Jaccard score = 0.2953, loss = 0.081908, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 67 fit: [27.3 s]: Recall = 0.38198, Jaccard score = 0.2952, loss = 0.080349, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 68 fit: [27.5 s]: Recall = 0.38098, Jaccard score = 0.2942, loss = 0.079838, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 69 fit: [27.1 s]: Recall = 0.38292, Jaccard score = 0.2962, loss = 0.079280, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 70 fit: [27.4 s]: Recall = 0.38285, Jaccard score = 0.2961, loss = 0.077782, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 71 fit: [27.4 s]: Recall = 0.38661, Jaccard score = 0.2999, loss = 0.075973, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 72 fit: [27.3 s]: Recall = 0.38461, Jaccard score = 0.2979, loss = 0.075486, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 73 fit: [27.4 s]: Recall = 0.37922, Jaccard score = 0.2925, loss = 0.074536, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 74 fit: [27.2 s]: Recall = 0.38373, Jaccard score = 0.2970, loss = 0.073506, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 75 fit: [27.3 s]: Recall = 0.38173, Jaccard score = 0.2950, loss = 0.072096, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 76 fit: [27.3 s]: Recall = 0.38229, Jaccard score = 0.2955, loss = 0.071878, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 77 fit: [27.3 s]: Recall = 0.38473, Jaccard score = 0.2980, loss = 0.070678, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 78 fit: [27.5 s]: Recall = 0.38554, Jaccard score = 0.2988, loss = 0.070352, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 79 fit: [27.3 s]: Recall = 0.38429, Jaccard score = 0.2975, loss = 0.069859, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 80 fit: [27.4 s]: Recall = 0.38223, Jaccard score = 0.2955, loss = 0.068460, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 81 fit: [27.3 s]: Recall = 0.38611, Jaccard score = 0.2994, loss = 0.067796, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 82 fit: [27.5 s]: Recall = 0.38648, Jaccard score = 0.2997, loss = 0.066897, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 83 fit: [27.3 s]: Recall = 0.38767, Jaccard score = 0.3009, loss = 0.066071, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 84 fit: [27.2 s]: Recall = 0.38655, Jaccard score = 0.2998, loss = 0.065560, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 85 fit: [27.1 s]: Recall = 0.38636, Jaccard score = 0.2996, loss = 0.064864, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 86 fit: [27.7 s]: Recall = 0.38817, Jaccard score = 0.3015, loss = 0.064246, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 87 fit: [27.5 s]: Recall = 0.38667, Jaccard score = 0.2999, loss = 0.063325, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 88 fit: [27.3 s]: Recall = 0.38648, Jaccard score = 0.2997, loss = 0.062972, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 89 fit: [27.4 s]: Recall = 0.38792, Jaccard score = 0.3012, loss = 0.062135, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 90 fit: [27.2 s]: Recall = 0.38811, Jaccard score = 0.3014, loss = 0.061814, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 91 fit: [27.2 s]: Recall = 0.38748, Jaccard score = 0.3008, loss = 0.060959, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 92 fit: [27.4 s]: Recall = 0.38761, Jaccard score = 0.3009, loss = 0.060053, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 93 fit: [27.2 s]: Recall = 0.39099, Jaccard score = 0.3043, loss = 0.059530, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 94 fit: [27.9 s]: Recall = 0.38761, Jaccard score = 0.3009, loss = 0.058914, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 95 fit: [27.7 s]: Recall = 0.39005, Jaccard score = 0.3034, loss = 0.058314, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 96 fit: [27.3 s]: Recall = 0.39143, Jaccard score = 0.3048, loss = 0.057583, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 97 fit: [27.4 s]: Recall = 0.38986, Jaccard score = 0.3032, loss = 0.057617, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 98 fit: [27.5 s]: Recall = 0.38705, Jaccard score = 0.3003, loss = 0.056877, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 99 fit: [27.5 s]: Recall = 0.39305, Jaccard score = 0.3064, loss = 0.056911, gradient norm = 1.0000, eval: [15.3 s]
# End. Best Iteration 99:  Recall = 0.3931, Jaccard score = 0.3064. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
# The average best performance after k-fold 4 is: Recall = 0.39089510794163607, Jaccard score = 0.30309084407161224
# 
# Performing k-fold 5
# Init: Recall = 0.0246, Jaccard score = 0.0148
# Iteration 0 fit: [28.7 s]: Recall = 0.20867, Jaccard score = 0.1420, loss = 0.441519, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 1 fit: [28.3 s]: Recall = 0.23793, Jaccard score = 0.1652, loss = 0.406949, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 2 fit: [27.7 s]: Recall = 0.25991, Jaccard score = 0.1833, loss = 0.386339, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 3 fit: [27.9 s]: Recall = 0.27303, Jaccard score = 0.1943, loss = 0.368567, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 4 fit: [27.7 s]: Recall = 0.27623, Jaccard score = 0.1970, loss = 0.352369, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 5 fit: [28.0 s]: Recall = 0.28728, Jaccard score = 0.2065, loss = 0.337425, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 6 fit: [27.7 s]: Recall = 0.29243, Jaccard score = 0.2110, loss = 0.324660, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 7 fit: [28.3 s]: Recall = 0.29614, Jaccard score = 0.2143, loss = 0.312976, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 8 fit: [27.8 s]: Recall = 0.29683, Jaccard score = 0.2149, loss = 0.301587, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 9 fit: [28.1 s]: Recall = 0.30505, Jaccard score = 0.2222, loss = 0.291061, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 10 fit: [27.8 s]: Recall = 0.31240, Jaccard score = 0.2287, loss = 0.281681, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 11 fit: [27.8 s]: Recall = 0.30794, Jaccard score = 0.2247, loss = 0.272457, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 12 fit: [27.9 s]: Recall = 0.31403, Jaccard score = 0.2302, loss = 0.263124, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 13 fit: [27.8 s]: Recall = 0.32031, Jaccard score = 0.2359, loss = 0.255115, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 14 fit: [27.8 s]: Recall = 0.32170, Jaccard score = 0.2372, loss = 0.247551, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 15 fit: [27.7 s]: Recall = 0.32659, Jaccard score = 0.2416, loss = 0.239757, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 16 fit: [27.8 s]: Recall = 0.32628, Jaccard score = 0.2413, loss = 0.232841, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 17 fit: [27.9 s]: Recall = 0.32898, Jaccard score = 0.2438, loss = 0.225854, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 18 fit: [27.8 s]: Recall = 0.33017, Jaccard score = 0.2449, loss = 0.218181, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 19 fit: [27.9 s]: Recall = 0.33444, Jaccard score = 0.2489, loss = 0.212854, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 20 fit: [27.9 s]: Recall = 0.33356, Jaccard score = 0.2481, loss = 0.207354, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 21 fit: [27.8 s]: Recall = 0.33507, Jaccard score = 0.2495, loss = 0.201213, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 22 fit: [27.8 s]: Recall = 0.34104, Jaccard score = 0.2550, loss = 0.196360, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 23 fit: [28.3 s]: Recall = 0.33564, Jaccard score = 0.2500, loss = 0.190471, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 24 fit: [27.7 s]: Recall = 0.34060, Jaccard score = 0.2546, loss = 0.185531, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 25 fit: [28.1 s]: Recall = 0.34097, Jaccard score = 0.2550, loss = 0.180765, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 26 fit: [27.8 s]: Recall = 0.34229, Jaccard score = 0.2562, loss = 0.176574, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.34154, Jaccard score = 0.2555, loss = 0.171635, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 28 fit: [28.1 s]: Recall = 0.34738, Jaccard score = 0.2610, loss = 0.167473, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 29 fit: [28.0 s]: Recall = 0.34468, Jaccard score = 0.2585, loss = 0.163720, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 30 fit: [27.9 s]: Recall = 0.34951, Jaccard score = 0.2631, loss = 0.159540, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 31 fit: [28.2 s]: Recall = 0.34776, Jaccard score = 0.2614, loss = 0.155838, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 32 fit: [27.9 s]: Recall = 0.35203, Jaccard score = 0.2654, loss = 0.152138, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 33 fit: [27.9 s]: Recall = 0.34964, Jaccard score = 0.2632, loss = 0.150019, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 34 fit: [27.8 s]: Recall = 0.35146, Jaccard score = 0.2649, loss = 0.145165, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 35 fit: [27.8 s]: Recall = 0.35542, Jaccard score = 0.2687, loss = 0.142443, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 36 fit: [27.7 s]: Recall = 0.35290, Jaccard score = 0.2663, loss = 0.138623, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 37 fit: [28.0 s]: Recall = 0.35579, Jaccard score = 0.2691, loss = 0.136872, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 38 fit: [27.9 s]: Recall = 0.35755, Jaccard score = 0.2707, loss = 0.132618, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 39 fit: [27.9 s]: Recall = 0.35906, Jaccard score = 0.2722, loss = 0.131256, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 40 fit: [27.8 s]: Recall = 0.36057, Jaccard score = 0.2737, loss = 0.128773, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 41 fit: [28.0 s]: Recall = 0.35630, Jaccard score = 0.2695, loss = 0.126436, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 42 fit: [27.8 s]: Recall = 0.36239, Jaccard score = 0.2754, loss = 0.122606, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 43 fit: [27.8 s]: Recall = 0.36157, Jaccard score = 0.2746, loss = 0.121026, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 44 fit: [27.7 s]: Recall = 0.36370, Jaccard score = 0.2767, loss = 0.118170, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 45 fit: [27.7 s]: Recall = 0.36408, Jaccard score = 0.2771, loss = 0.115555, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 46 fit: [28.2 s]: Recall = 0.36232, Jaccard score = 0.2754, loss = 0.113701, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 47 fit: [27.7 s]: Recall = 0.36823, Jaccard score = 0.2811, loss = 0.112590, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 48 fit: [27.6 s]: Recall = 0.36716, Jaccard score = 0.2801, loss = 0.110082, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 49 fit: [27.9 s]: Recall = 0.36521, Jaccard score = 0.2782, loss = 0.108222, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 50 fit: [27.7 s]: Recall = 0.36697, Jaccard score = 0.2799, loss = 0.105519, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 51 fit: [28.0 s]: Recall = 0.36829, Jaccard score = 0.2812, loss = 0.105474, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 52 fit: [27.9 s]: Recall = 0.37017, Jaccard score = 0.2830, loss = 0.102899, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 53 fit: [27.7 s]: Recall = 0.36760, Jaccard score = 0.2805, loss = 0.101285, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 54 fit: [27.8 s]: Recall = 0.37017, Jaccard score = 0.2830, loss = 0.099136, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 55 fit: [27.9 s]: Recall = 0.37231, Jaccard score = 0.2851, loss = 0.097387, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 56 fit: [27.6 s]: Recall = 0.37231, Jaccard score = 0.2851, loss = 0.096213, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 57 fit: [27.9 s]: Recall = 0.37086, Jaccard score = 0.2837, loss = 0.095237, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 58 fit: [27.8 s]: Recall = 0.37476, Jaccard score = 0.2875, loss = 0.092767, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 59 fit: [28.0 s]: Recall = 0.37375, Jaccard score = 0.2865, loss = 0.092243, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 60 fit: [27.6 s]: Recall = 0.37061, Jaccard score = 0.2834, loss = 0.090805, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 61 fit: [27.9 s]: Recall = 0.37821, Jaccard score = 0.2909, loss = 0.089717, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 62 fit: [27.9 s]: Recall = 0.37526, Jaccard score = 0.2880, loss = 0.088369, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 63 fit: [27.7 s]: Recall = 0.37495, Jaccard score = 0.2877, loss = 0.086813, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 64 fit: [27.8 s]: Recall = 0.37425, Jaccard score = 0.2870, loss = 0.085364, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 65 fit: [27.8 s]: Recall = 0.37608, Jaccard score = 0.2888, loss = 0.084196, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 66 fit: [27.7 s]: Recall = 0.37495, Jaccard score = 0.2877, loss = 0.083343, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 67 fit: [27.7 s]: Recall = 0.37582, Jaccard score = 0.2886, loss = 0.082453, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 68 fit: [27.8 s]: Recall = 0.37695, Jaccard score = 0.2897, loss = 0.081266, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 69 fit: [27.9 s]: Recall = 0.37633, Jaccard score = 0.2891, loss = 0.079561, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 70 fit: [27.6 s]: Recall = 0.37790, Jaccard score = 0.2906, loss = 0.078855, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 71 fit: [27.9 s]: Recall = 0.37551, Jaccard score = 0.2883, loss = 0.077042, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 72 fit: [28.0 s]: Recall = 0.37752, Jaccard score = 0.2903, loss = 0.077975, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 73 fit: [27.6 s]: Recall = 0.37840, Jaccard score = 0.2911, loss = 0.075841, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 74 fit: [28.0 s]: Recall = 0.38028, Jaccard score = 0.2930, loss = 0.074790, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 75 fit: [27.9 s]: Recall = 0.38173, Jaccard score = 0.2944, loss = 0.073880, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 76 fit: [28.1 s]: Recall = 0.38009, Jaccard score = 0.2928, loss = 0.072597, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 77 fit: [27.6 s]: Recall = 0.38122, Jaccard score = 0.2939, loss = 0.071929, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 78 fit: [27.7 s]: Recall = 0.37997, Jaccard score = 0.2927, loss = 0.070906, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 79 fit: [28.0 s]: Recall = 0.38154, Jaccard score = 0.2943, loss = 0.070735, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 80 fit: [27.7 s]: Recall = 0.38116, Jaccard score = 0.2939, loss = 0.069979, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 81 fit: [27.6 s]: Recall = 0.38192, Jaccard score = 0.2946, loss = 0.069000, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 82 fit: [27.5 s]: Recall = 0.38248, Jaccard score = 0.2952, loss = 0.068087, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 83 fit: [27.8 s]: Recall = 0.38179, Jaccard score = 0.2945, loss = 0.067336, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 84 fit: [27.6 s]: Recall = 0.38355, Jaccard score = 0.2963, loss = 0.066507, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 85 fit: [28.0 s]: Recall = 0.38097, Jaccard score = 0.2937, loss = 0.065654, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 86 fit: [27.8 s]: Recall = 0.38323, Jaccard score = 0.2959, loss = 0.064447, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 87 fit: [27.8 s]: Recall = 0.38267, Jaccard score = 0.2954, loss = 0.064134, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 88 fit: [27.6 s]: Recall = 0.38644, Jaccard score = 0.2992, loss = 0.064100, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 89 fit: [28.2 s]: Recall = 0.38317, Jaccard score = 0.2959, loss = 0.062924, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 90 fit: [28.3 s]: Recall = 0.38424, Jaccard score = 0.2970, loss = 0.063078, gradient norm = 1.0000, eval: [14.9 s]
# Iteration 91 fit: [27.8 s]: Recall = 0.38449, Jaccard score = 0.2972, loss = 0.061560, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 92 fit: [27.6 s]: Recall = 0.38669, Jaccard score = 0.2994, loss = 0.061135, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 93 fit: [28.2 s]: Recall = 0.38166, Jaccard score = 0.2944, loss = 0.060201, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 94 fit: [27.8 s]: Recall = 0.38135, Jaccard score = 0.2941, loss = 0.059905, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 95 fit: [27.8 s]: Recall = 0.38531, Jaccard score = 0.2980, loss = 0.058624, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 96 fit: [27.7 s]: Recall = 0.38932, Jaccard score = 0.3021, loss = 0.058682, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 97 fit: [27.9 s]: Recall = 0.38493, Jaccard score = 0.2976, loss = 0.058080, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 98 fit: [27.7 s]: Recall = 0.38600, Jaccard score = 0.2987, loss = 0.057788, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 99 fit: [28.0 s]: Recall = 0.38606, Jaccard score = 0.2988, loss = 0.056762, gradient norm = 1.0000, eval: [15.3 s]
# End. Best Iteration 96:  Recall = 0.3893, Jaccard score = 0.3021. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569507977.h5
# The average best performance after k-fold 5 is: Recall = 0.3905810785040153, Jaccard score = 0.30288680436813026
