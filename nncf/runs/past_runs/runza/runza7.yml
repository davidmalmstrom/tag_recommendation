--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "100"
--lr: "0.002"
--early_stopping: "35"
--layers: "[512,96]"
--MLP_variant: "drop"
--reg_layers: "[0,0]"
--num_k_folds: "5"

# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1569734900.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1569734900.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_5 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_9 (Dropout)             (None, 256)          0           flatten_5[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_6 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_5 (Concatenate)     (None, 1256)         0           dropout_9[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_10 (Dropout)            (None, 256)          0           flatten_6[0][0]                  
# __________________________________________________________________________________________________
# concatenate_6 (Concatenate)     (None, 1512)         0           concatenate_5[0][0]              
#                                                                  dropout_10[0][0]                 
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_6[0][0]              
# __________________________________________________________________________________________________
# dropout_11 (Dropout)            (None, 96)           0           layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_11[0][0]                 
# ==================================================================================================
# Total params: 5,265,345
# Trainable params: 5,265,345
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0316, Jaccard score = 0.0190
# Iteration 0 fit: [24.3 s]: Recall = 0.19942, Jaccard score = 0.1337, loss = 0.438973, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 1 fit: [23.2 s]: Recall = 0.23159, Jaccard score = 0.1587, loss = 0.407035, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 2 fit: [23.0 s]: Recall = 0.25230, Jaccard score = 0.1754, loss = 0.383524, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 3 fit: [23.5 s]: Recall = 0.27161, Jaccard score = 0.1914, loss = 0.361150, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 4 fit: [22.9 s]: Recall = 0.28191, Jaccard score = 0.2001, loss = 0.342588, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 5 fit: [23.0 s]: Recall = 0.28990, Jaccard score = 0.2070, loss = 0.326023, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 6 fit: [23.3 s]: Recall = 0.29808, Jaccard score = 0.2141, loss = 0.311420, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 7 fit: [23.0 s]: Recall = 0.30198, Jaccard score = 0.2175, loss = 0.298901, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 8 fit: [22.9 s]: Recall = 0.30575, Jaccard score = 0.2208, loss = 0.286775, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 9 fit: [23.1 s]: Recall = 0.31419, Jaccard score = 0.2283, loss = 0.276143, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 10 fit: [22.9 s]: Recall = 0.31292, Jaccard score = 0.2271, loss = 0.266509, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 11 fit: [22.9 s]: Recall = 0.32315, Jaccard score = 0.2363, loss = 0.257965, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 12 fit: [22.7 s]: Recall = 0.32263, Jaccard score = 0.2359, loss = 0.249328, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 13 fit: [22.9 s]: Recall = 0.32852, Jaccard score = 0.2412, loss = 0.240508, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 14 fit: [22.9 s]: Recall = 0.32871, Jaccard score = 0.2414, loss = 0.234456, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 15 fit: [22.8 s]: Recall = 0.33721, Jaccard score = 0.2492, loss = 0.226598, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 16 fit: [22.7 s]: Recall = 0.33625, Jaccard score = 0.2483, loss = 0.220426, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 17 fit: [23.1 s]: Recall = 0.33625, Jaccard score = 0.2483, loss = 0.214026, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 18 fit: [23.0 s]: Recall = 0.33523, Jaccard score = 0.2473, loss = 0.208641, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 19 fit: [22.7 s]: Recall = 0.34265, Jaccard score = 0.2542, loss = 0.202645, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 20 fit: [23.1 s]: Recall = 0.34373, Jaccard score = 0.2552, loss = 0.197795, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 21 fit: [23.0 s]: Recall = 0.34751, Jaccard score = 0.2587, loss = 0.192810, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 22 fit: [23.4 s]: Recall = 0.34923, Jaccard score = 0.2604, loss = 0.187975, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 23 fit: [22.8 s]: Recall = 0.34930, Jaccard score = 0.2604, loss = 0.183066, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 24 fit: [23.1 s]: Recall = 0.35058, Jaccard score = 0.2616, loss = 0.179444, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 25 fit: [23.0 s]: Recall = 0.35569, Jaccard score = 0.2665, loss = 0.175934, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 26 fit: [22.9 s]: Recall = 0.35275, Jaccard score = 0.2637, loss = 0.171253, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 27 fit: [22.8 s]: Recall = 0.35524, Jaccard score = 0.2660, loss = 0.168027, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 28 fit: [23.0 s]: Recall = 0.35825, Jaccard score = 0.2689, loss = 0.164104, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 29 fit: [23.0 s]: Recall = 0.35914, Jaccard score = 0.2697, loss = 0.160361, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 30 fit: [23.1 s]: Recall = 0.35390, Jaccard score = 0.2648, loss = 0.157228, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 31 fit: [23.1 s]: Recall = 0.35742, Jaccard score = 0.2681, loss = 0.154176, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 32 fit: [22.8 s]: Recall = 0.36311, Jaccard score = 0.2735, loss = 0.151434, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 33 fit: [23.0 s]: Recall = 0.36145, Jaccard score = 0.2719, loss = 0.148029, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 34 fit: [23.2 s]: Recall = 0.36119, Jaccard score = 0.2717, loss = 0.145000, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 35 fit: [22.8 s]: Recall = 0.36298, Jaccard score = 0.2734, loss = 0.143430, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 36 fit: [22.9 s]: Recall = 0.36285, Jaccard score = 0.2733, loss = 0.140443, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 37 fit: [23.4 s]: Recall = 0.36605, Jaccard score = 0.2764, loss = 0.138734, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 38 fit: [22.7 s]: Recall = 0.36867, Jaccard score = 0.2789, loss = 0.134951, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 39 fit: [23.2 s]: Recall = 0.36554, Jaccard score = 0.2759, loss = 0.133727, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 40 fit: [22.8 s]: Recall = 0.36969, Jaccard score = 0.2799, loss = 0.130994, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 41 fit: [23.0 s]: Recall = 0.36848, Jaccard score = 0.2787, loss = 0.129683, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 42 fit: [23.0 s]: Recall = 0.36598, Jaccard score = 0.2763, loss = 0.126746, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 43 fit: [23.0 s]: Recall = 0.36598, Jaccard score = 0.2763, loss = 0.125406, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 44 fit: [23.2 s]: Recall = 0.36771, Jaccard score = 0.2780, loss = 0.123412, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 45 fit: [22.8 s]: Recall = 0.37270, Jaccard score = 0.2828, loss = 0.122074, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 46 fit: [23.0 s]: Recall = 0.36854, Jaccard score = 0.2788, loss = 0.119811, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 47 fit: [23.0 s]: Recall = 0.36969, Jaccard score = 0.2799, loss = 0.118286, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 48 fit: [22.8 s]: Recall = 0.37059, Jaccard score = 0.2808, loss = 0.116875, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 49 fit: [23.2 s]: Recall = 0.37052, Jaccard score = 0.2807, loss = 0.116043, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 50 fit: [22.7 s]: Recall = 0.37244, Jaccard score = 0.2826, loss = 0.114222, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 51 fit: [23.0 s]: Recall = 0.37513, Jaccard score = 0.2852, loss = 0.112879, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 52 fit: [22.9 s]: Recall = 0.37417, Jaccard score = 0.2842, loss = 0.111015, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 53 fit: [23.1 s]: Recall = 0.37289, Jaccard score = 0.2830, loss = 0.109029, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 54 fit: [23.1 s]: Recall = 0.37327, Jaccard score = 0.2834, loss = 0.108126, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 55 fit: [23.2 s]: Recall = 0.37609, Jaccard score = 0.2861, loss = 0.106586, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 56 fit: [22.9 s]: Recall = 0.37251, Jaccard score = 0.2826, loss = 0.105827, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 57 fit: [22.7 s]: Recall = 0.37532, Jaccard score = 0.2854, loss = 0.103785, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 58 fit: [23.0 s]: Recall = 0.37340, Jaccard score = 0.2835, loss = 0.103577, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 59 fit: [22.9 s]: Recall = 0.37436, Jaccard score = 0.2844, loss = 0.102578, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 60 fit: [22.9 s]: Recall = 0.37506, Jaccard score = 0.2851, loss = 0.101620, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 61 fit: [22.8 s]: Recall = 0.37590, Jaccard score = 0.2859, loss = 0.100396, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 62 fit: [23.1 s]: Recall = 0.38069, Jaccard score = 0.2906, loss = 0.099697, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 63 fit: [23.1 s]: Recall = 0.37449, Jaccard score = 0.2846, loss = 0.098360, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 64 fit: [23.1 s]: Recall = 0.37577, Jaccard score = 0.2858, loss = 0.097735, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 65 fit: [22.7 s]: Recall = 0.38146, Jaccard score = 0.2914, loss = 0.096413, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 66 fit: [22.9 s]: Recall = 0.37903, Jaccard score = 0.2890, loss = 0.096243, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 67 fit: [22.9 s]: Recall = 0.38171, Jaccard score = 0.2916, loss = 0.095217, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 68 fit: [23.0 s]: Recall = 0.38082, Jaccard score = 0.2908, loss = 0.093716, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 69 fit: [23.1 s]: Recall = 0.37916, Jaccard score = 0.2891, loss = 0.092536, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 70 fit: [23.2 s]: Recall = 0.37928, Jaccard score = 0.2893, loss = 0.091812, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 71 fit: [22.8 s]: Recall = 0.37749, Jaccard score = 0.2875, loss = 0.091348, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 72 fit: [23.4 s]: Recall = 0.38037, Jaccard score = 0.2903, loss = 0.091504, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 73 fit: [22.9 s]: Recall = 0.37992, Jaccard score = 0.2899, loss = 0.089773, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 74 fit: [22.8 s]: Recall = 0.38088, Jaccard score = 0.2908, loss = 0.090001, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 75 fit: [22.7 s]: Recall = 0.37781, Jaccard score = 0.2878, loss = 0.089082, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 76 fit: [23.0 s]: Recall = 0.38050, Jaccard score = 0.2904, loss = 0.087972, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 77 fit: [22.7 s]: Recall = 0.37954, Jaccard score = 0.2895, loss = 0.088053, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 78 fit: [23.1 s]: Recall = 0.38114, Jaccard score = 0.2911, loss = 0.086867, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 79 fit: [23.4 s]: Recall = 0.37877, Jaccard score = 0.2888, loss = 0.086210, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 80 fit: [22.9 s]: Recall = 0.38223, Jaccard score = 0.2922, loss = 0.085193, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 81 fit: [23.1 s]: Recall = 0.38120, Jaccard score = 0.2911, loss = 0.085355, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 82 fit: [23.2 s]: Recall = 0.38536, Jaccard score = 0.2953, loss = 0.084565, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 83 fit: [22.7 s]: Recall = 0.38421, Jaccard score = 0.2941, loss = 0.084013, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 84 fit: [23.1 s]: Recall = 0.38606, Jaccard score = 0.2960, loss = 0.083676, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 85 fit: [23.0 s]: Recall = 0.38242, Jaccard score = 0.2923, loss = 0.083114, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 86 fit: [23.1 s]: Recall = 0.38472, Jaccard score = 0.2946, loss = 0.082556, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 87 fit: [23.1 s]: Recall = 0.38280, Jaccard score = 0.2927, loss = 0.081930, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 88 fit: [22.7 s]: Recall = 0.38165, Jaccard score = 0.2916, loss = 0.081522, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 89 fit: [22.7 s]: Recall = 0.38536, Jaccard score = 0.2953, loss = 0.080434, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 90 fit: [23.0 s]: Recall = 0.38299, Jaccard score = 0.2929, loss = 0.080406, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 91 fit: [23.5 s]: Recall = 0.38465, Jaccard score = 0.2946, loss = 0.079155, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 92 fit: [22.7 s]: Recall = 0.38376, Jaccard score = 0.2937, loss = 0.079306, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 93 fit: [23.0 s]: Recall = 0.38421, Jaccard score = 0.2941, loss = 0.079308, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 94 fit: [22.7 s]: Recall = 0.38549, Jaccard score = 0.2954, loss = 0.078345, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 95 fit: [22.7 s]: Recall = 0.38280, Jaccard score = 0.2927, loss = 0.078192, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 96 fit: [22.7 s]: Recall = 0.38529, Jaccard score = 0.2952, loss = 0.077546, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 97 fit: [23.2 s]: Recall = 0.38293, Jaccard score = 0.2928, loss = 0.076871, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 98 fit: [23.1 s]: Recall = 0.38331, Jaccard score = 0.2932, loss = 0.076982, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 99 fit: [22.9 s]: Recall = 0.38465, Jaccard score = 0.2946, loss = 0.077151, gradient norm = 1.0000, eval: [15.5 s]
# End. Best Iteration 84:  Recall = 0.3861, Jaccard score = 0.2960. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569734900.h5
# The average best performance after k-fold 1 is: Recall = 0.3860613810741688, Jaccard score = 0.2959513773159494
# 
# Performing k-fold 2
# Init: Recall = 0.0292, Jaccard score = 0.0177
# Iteration 0 fit: [24.7 s]: Recall = 0.19519, Jaccard score = 0.1318, loss = 0.439130, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 1 fit: [23.0 s]: Recall = 0.22110, Jaccard score = 0.1520, loss = 0.406705, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 2 fit: [23.1 s]: Recall = 0.24651, Jaccard score = 0.1725, loss = 0.383658, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 3 fit: [23.0 s]: Recall = 0.25972, Jaccard score = 0.1834, loss = 0.361580, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 4 fit: [23.0 s]: Recall = 0.26985, Jaccard score = 0.1919, loss = 0.342905, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 5 fit: [22.8 s]: Recall = 0.27899, Jaccard score = 0.1997, loss = 0.327000, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 6 fit: [23.2 s]: Recall = 0.29132, Jaccard score = 0.2104, loss = 0.312025, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 7 fit: [22.7 s]: Recall = 0.29464, Jaccard score = 0.2133, loss = 0.298354, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 8 fit: [23.1 s]: Recall = 0.30146, Jaccard score = 0.2193, loss = 0.286509, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 9 fit: [23.1 s]: Recall = 0.30891, Jaccard score = 0.2260, loss = 0.275938, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 10 fit: [23.4 s]: Recall = 0.31066, Jaccard score = 0.2275, loss = 0.265222, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 11 fit: [22.8 s]: Recall = 0.31667, Jaccard score = 0.2330, loss = 0.256825, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 12 fit: [23.2 s]: Recall = 0.31785, Jaccard score = 0.2341, loss = 0.248292, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 13 fit: [23.1 s]: Recall = 0.31836, Jaccard score = 0.2345, loss = 0.240295, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 14 fit: [23.0 s]: Recall = 0.32249, Jaccard score = 0.2383, loss = 0.233455, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 15 fit: [23.5 s]: Recall = 0.32874, Jaccard score = 0.2440, loss = 0.225572, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 16 fit: [23.1 s]: Recall = 0.32536, Jaccard score = 0.2409, loss = 0.218814, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 17 fit: [23.0 s]: Recall = 0.32411, Jaccard score = 0.2398, loss = 0.213496, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 18 fit: [23.2 s]: Recall = 0.33169, Jaccard score = 0.2468, loss = 0.207231, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 19 fit: [23.1 s]: Recall = 0.33682, Jaccard score = 0.2515, loss = 0.200983, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 20 fit: [23.1 s]: Recall = 0.33851, Jaccard score = 0.2531, loss = 0.196462, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 21 fit: [23.1 s]: Recall = 0.33963, Jaccard score = 0.2542, loss = 0.191663, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 22 fit: [22.9 s]: Recall = 0.34107, Jaccard score = 0.2555, loss = 0.186861, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 23 fit: [22.9 s]: Recall = 0.34038, Jaccard score = 0.2549, loss = 0.182482, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 24 fit: [23.1 s]: Recall = 0.34326, Jaccard score = 0.2576, loss = 0.177730, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 25 fit: [23.1 s]: Recall = 0.34877, Jaccard score = 0.2628, loss = 0.174672, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 26 fit: [23.0 s]: Recall = 0.34683, Jaccard score = 0.2610, loss = 0.169655, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 27 fit: [22.8 s]: Recall = 0.35046, Jaccard score = 0.2644, loss = 0.165672, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 28 fit: [22.7 s]: Recall = 0.35340, Jaccard score = 0.2672, loss = 0.162289, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 29 fit: [23.1 s]: Recall = 0.35102, Jaccard score = 0.2650, loss = 0.159284, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 30 fit: [23.0 s]: Recall = 0.35278, Jaccard score = 0.2666, loss = 0.155588, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 31 fit: [23.1 s]: Recall = 0.35140, Jaccard score = 0.2653, loss = 0.153003, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 32 fit: [23.1 s]: Recall = 0.35240, Jaccard score = 0.2663, loss = 0.149728, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 33 fit: [22.9 s]: Recall = 0.35265, Jaccard score = 0.2665, loss = 0.147511, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 34 fit: [23.5 s]: Recall = 0.35684, Jaccard score = 0.2705, loss = 0.144474, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 35 fit: [23.2 s]: Recall = 0.35897, Jaccard score = 0.2726, loss = 0.142336, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 36 fit: [23.0 s]: Recall = 0.35853, Jaccard score = 0.2722, loss = 0.139158, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 37 fit: [22.8 s]: Recall = 0.35878, Jaccard score = 0.2724, loss = 0.137112, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 38 fit: [22.9 s]: Recall = 0.35628, Jaccard score = 0.2700, loss = 0.135428, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 39 fit: [22.8 s]: Recall = 0.35747, Jaccard score = 0.2711, loss = 0.132472, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 40 fit: [23.2 s]: Recall = 0.35728, Jaccard score = 0.2710, loss = 0.130582, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 41 fit: [22.9 s]: Recall = 0.36122, Jaccard score = 0.2748, loss = 0.129435, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 42 fit: [23.0 s]: Recall = 0.35816, Jaccard score = 0.2718, loss = 0.126889, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 43 fit: [22.8 s]: Recall = 0.36091, Jaccard score = 0.2745, loss = 0.124397, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 44 fit: [22.9 s]: Recall = 0.35559, Jaccard score = 0.2693, loss = 0.121969, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 45 fit: [23.4 s]: Recall = 0.36241, Jaccard score = 0.2759, loss = 0.121349, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 46 fit: [23.0 s]: Recall = 0.36022, Jaccard score = 0.2738, loss = 0.119439, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 47 fit: [23.1 s]: Recall = 0.36586, Jaccard score = 0.2793, loss = 0.118805, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 48 fit: [23.2 s]: Recall = 0.36654, Jaccard score = 0.2799, loss = 0.116703, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 49 fit: [22.9 s]: Recall = 0.36116, Jaccard score = 0.2747, loss = 0.114620, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 50 fit: [23.1 s]: Recall = 0.36611, Jaccard score = 0.2795, loss = 0.112955, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 51 fit: [23.1 s]: Recall = 0.36517, Jaccard score = 0.2786, loss = 0.111806, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 52 fit: [23.1 s]: Recall = 0.36410, Jaccard score = 0.2776, loss = 0.110539, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 53 fit: [23.1 s]: Recall = 0.36661, Jaccard score = 0.2800, loss = 0.108998, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 54 fit: [22.7 s]: Recall = 0.36542, Jaccard score = 0.2788, loss = 0.108142, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 55 fit: [23.1 s]: Recall = 0.36855, Jaccard score = 0.2819, loss = 0.106537, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 56 fit: [23.2 s]: Recall = 0.36842, Jaccard score = 0.2818, loss = 0.105862, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 57 fit: [22.9 s]: Recall = 0.36729, Jaccard score = 0.2807, loss = 0.104624, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 58 fit: [23.1 s]: Recall = 0.36586, Jaccard score = 0.2793, loss = 0.103280, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 59 fit: [23.0 s]: Recall = 0.36805, Jaccard score = 0.2814, loss = 0.101749, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 60 fit: [22.9 s]: Recall = 0.36880, Jaccard score = 0.2822, loss = 0.101088, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 61 fit: [22.8 s]: Recall = 0.36999, Jaccard score = 0.2833, loss = 0.101268, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 62 fit: [22.8 s]: Recall = 0.37011, Jaccard score = 0.2834, loss = 0.099581, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [22.9 s]: Recall = 0.36786, Jaccard score = 0.2812, loss = 0.098528, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 64 fit: [22.7 s]: Recall = 0.37186, Jaccard score = 0.2852, loss = 0.096633, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 65 fit: [22.8 s]: Recall = 0.36780, Jaccard score = 0.2812, loss = 0.096715, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 66 fit: [23.1 s]: Recall = 0.36880, Jaccard score = 0.2822, loss = 0.095189, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 67 fit: [23.1 s]: Recall = 0.37011, Jaccard score = 0.2834, loss = 0.095023, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 68 fit: [23.1 s]: Recall = 0.37067, Jaccard score = 0.2840, loss = 0.093585, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 69 fit: [22.9 s]: Recall = 0.37105, Jaccard score = 0.2844, loss = 0.093380, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 70 fit: [23.1 s]: Recall = 0.37092, Jaccard score = 0.2842, loss = 0.092355, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 71 fit: [23.1 s]: Recall = 0.37174, Jaccard score = 0.2850, loss = 0.091872, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 72 fit: [23.2 s]: Recall = 0.37230, Jaccard score = 0.2856, loss = 0.091080, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 73 fit: [23.1 s]: Recall = 0.37299, Jaccard score = 0.2863, loss = 0.090111, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 74 fit: [23.1 s]: Recall = 0.37142, Jaccard score = 0.2847, loss = 0.088762, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 75 fit: [23.1 s]: Recall = 0.37268, Jaccard score = 0.2860, loss = 0.087781, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 76 fit: [23.0 s]: Recall = 0.37086, Jaccard score = 0.2842, loss = 0.087308, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 77 fit: [23.0 s]: Recall = 0.37412, Jaccard score = 0.2874, loss = 0.087557, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 78 fit: [23.0 s]: Recall = 0.37142, Jaccard score = 0.2847, loss = 0.086299, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 79 fit: [23.1 s]: Recall = 0.37599, Jaccard score = 0.2892, loss = 0.085672, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 80 fit: [23.4 s]: Recall = 0.37274, Jaccard score = 0.2860, loss = 0.085298, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 81 fit: [23.1 s]: Recall = 0.37424, Jaccard score = 0.2875, loss = 0.084752, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 82 fit: [23.0 s]: Recall = 0.37487, Jaccard score = 0.2881, loss = 0.084011, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 83 fit: [22.9 s]: Recall = 0.37368, Jaccard score = 0.2870, loss = 0.083653, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 84 fit: [23.1 s]: Recall = 0.36761, Jaccard score = 0.2810, loss = 0.082661, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 85 fit: [22.8 s]: Recall = 0.37061, Jaccard score = 0.2839, loss = 0.082530, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 86 fit: [23.0 s]: Recall = 0.37430, Jaccard score = 0.2876, loss = 0.082303, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 87 fit: [23.1 s]: Recall = 0.37136, Jaccard score = 0.2847, loss = 0.081107, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 88 fit: [22.9 s]: Recall = 0.37374, Jaccard score = 0.2870, loss = 0.080625, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 89 fit: [23.1 s]: Recall = 0.37681, Jaccard score = 0.2901, loss = 0.080577, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 90 fit: [23.1 s]: Recall = 0.37699, Jaccard score = 0.2902, loss = 0.080012, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 91 fit: [23.0 s]: Recall = 0.37631, Jaccard score = 0.2896, loss = 0.079633, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 92 fit: [23.1 s]: Recall = 0.37437, Jaccard score = 0.2876, loss = 0.078674, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 93 fit: [23.0 s]: Recall = 0.37349, Jaccard score = 0.2868, loss = 0.077817, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 94 fit: [23.0 s]: Recall = 0.37919, Jaccard score = 0.2924, loss = 0.077532, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 95 fit: [23.1 s]: Recall = 0.37643, Jaccard score = 0.2897, loss = 0.077821, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 96 fit: [22.8 s]: Recall = 0.37499, Jaccard score = 0.2883, loss = 0.077045, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 97 fit: [23.4 s]: Recall = 0.37731, Jaccard score = 0.2906, loss = 0.077509, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 98 fit: [22.9 s]: Recall = 0.37806, Jaccard score = 0.2913, loss = 0.075874, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 99 fit: [23.1 s]: Recall = 0.37743, Jaccard score = 0.2907, loss = 0.075655, gradient norm = 1.0000, eval: [15.4 s]
# End. Best Iteration 94:  Recall = 0.3792, Jaccard score = 0.2924. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569734900.h5
# The average best performance after k-fold 2 is: Recall = 0.38262328081182, Jaccard score = 0.29418707861936466
# 
# Performing k-fold 3
# Init: Recall = 0.0303, Jaccard score = 0.0184
# Iteration 0 fit: [25.0 s]: Recall = 0.19737, Jaccard score = 0.1331, loss = 0.439119, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 1 fit: [22.9 s]: Recall = 0.22602, Jaccard score = 0.1554, loss = 0.406122, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 2 fit: [23.2 s]: Recall = 0.24806, Jaccard score = 0.1732, loss = 0.383900, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 3 fit: [22.9 s]: Recall = 0.25990, Jaccard score = 0.1830, loss = 0.362380, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 4 fit: [23.5 s]: Recall = 0.26973, Jaccard score = 0.1912, loss = 0.343447, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 5 fit: [23.2 s]: Recall = 0.27911, Jaccard score = 0.1992, loss = 0.326989, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 6 fit: [22.9 s]: Recall = 0.28742, Jaccard score = 0.2064, loss = 0.311849, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 7 fit: [23.3 s]: Recall = 0.29290, Jaccard score = 0.2111, loss = 0.299332, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 8 fit: [23.1 s]: Recall = 0.29977, Jaccard score = 0.2172, loss = 0.287784, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 9 fit: [23.2 s]: Recall = 0.30588, Jaccard score = 0.2226, loss = 0.277791, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 10 fit: [23.0 s]: Recall = 0.30921, Jaccard score = 0.2256, loss = 0.267764, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 11 fit: [23.4 s]: Recall = 0.31866, Jaccard score = 0.2341, loss = 0.259360, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 12 fit: [23.1 s]: Recall = 0.31879, Jaccard score = 0.2342, loss = 0.250467, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 13 fit: [23.3 s]: Recall = 0.32225, Jaccard score = 0.2373, loss = 0.241969, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 14 fit: [23.3 s]: Recall = 0.32659, Jaccard score = 0.2413, loss = 0.235235, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 15 fit: [23.3 s]: Recall = 0.33094, Jaccard score = 0.2453, loss = 0.228595, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 16 fit: [22.9 s]: Recall = 0.32993, Jaccard score = 0.2444, loss = 0.222068, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [23.3 s]: Recall = 0.33207, Jaccard score = 0.2463, loss = 0.216041, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 18 fit: [23.2 s]: Recall = 0.33762, Jaccard score = 0.2515, loss = 0.209987, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 19 fit: [23.0 s]: Recall = 0.33000, Jaccard score = 0.2444, loss = 0.204173, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 20 fit: [23.0 s]: Recall = 0.33913, Jaccard score = 0.2529, loss = 0.199113, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 21 fit: [23.2 s]: Recall = 0.33780, Jaccard score = 0.2517, loss = 0.193885, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 22 fit: [23.1 s]: Recall = 0.34234, Jaccard score = 0.2559, loss = 0.189552, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 23 fit: [23.1 s]: Recall = 0.34215, Jaccard score = 0.2557, loss = 0.184428, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 24 fit: [23.2 s]: Recall = 0.34240, Jaccard score = 0.2560, loss = 0.180669, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 25 fit: [23.0 s]: Recall = 0.34656, Jaccard score = 0.2599, loss = 0.176506, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 26 fit: [22.9 s]: Recall = 0.34650, Jaccard score = 0.2598, loss = 0.172356, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 27 fit: [23.2 s]: Recall = 0.35418, Jaccard score = 0.2671, loss = 0.168096, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 28 fit: [23.7 s]: Recall = 0.35090, Jaccard score = 0.2640, loss = 0.164598, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 29 fit: [23.2 s]: Recall = 0.34775, Jaccard score = 0.2610, loss = 0.161118, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 30 fit: [23.1 s]: Recall = 0.35197, Jaccard score = 0.2650, loss = 0.158408, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 31 fit: [23.1 s]: Recall = 0.35342, Jaccard score = 0.2664, loss = 0.154975, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 32 fit: [22.9 s]: Recall = 0.35449, Jaccard score = 0.2674, loss = 0.151816, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 33 fit: [23.1 s]: Recall = 0.35638, Jaccard score = 0.2692, loss = 0.148236, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 34 fit: [23.1 s]: Recall = 0.35802, Jaccard score = 0.2708, loss = 0.145978, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 35 fit: [22.9 s]: Recall = 0.35493, Jaccard score = 0.2678, loss = 0.143366, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 36 fit: [23.1 s]: Recall = 0.35752, Jaccard score = 0.2703, loss = 0.140374, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 37 fit: [22.9 s]: Recall = 0.35966, Jaccard score = 0.2724, loss = 0.139226, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 38 fit: [22.9 s]: Recall = 0.36362, Jaccard score = 0.2762, loss = 0.135755, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 39 fit: [23.1 s]: Recall = 0.36022, Jaccard score = 0.2729, loss = 0.133580, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 40 fit: [22.9 s]: Recall = 0.36274, Jaccard score = 0.2753, loss = 0.131407, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 41 fit: [23.5 s]: Recall = 0.36325, Jaccard score = 0.2758, loss = 0.129974, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 42 fit: [23.0 s]: Recall = 0.36092, Jaccard score = 0.2736, loss = 0.128072, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 43 fit: [22.9 s]: Recall = 0.36507, Jaccard score = 0.2776, loss = 0.126485, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 44 fit: [22.9 s]: Recall = 0.36696, Jaccard score = 0.2794, loss = 0.124360, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 45 fit: [23.2 s]: Recall = 0.36564, Jaccard score = 0.2782, loss = 0.122583, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 46 fit: [23.1 s]: Recall = 0.36866, Jaccard score = 0.2811, loss = 0.120456, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 47 fit: [22.9 s]: Recall = 0.36910, Jaccard score = 0.2815, loss = 0.119222, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 48 fit: [23.3 s]: Recall = 0.36709, Jaccard score = 0.2796, loss = 0.118050, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 49 fit: [22.9 s]: Recall = 0.36766, Jaccard score = 0.2801, loss = 0.116699, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 50 fit: [23.3 s]: Recall = 0.36829, Jaccard score = 0.2807, loss = 0.114718, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 51 fit: [23.0 s]: Recall = 0.36753, Jaccard score = 0.2800, loss = 0.112571, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 52 fit: [23.1 s]: Recall = 0.37074, Jaccard score = 0.2831, loss = 0.112205, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 53 fit: [23.2 s]: Recall = 0.36577, Jaccard score = 0.2783, loss = 0.110820, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 54 fit: [23.3 s]: Recall = 0.37143, Jaccard score = 0.2838, loss = 0.108423, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 55 fit: [23.4 s]: Recall = 0.36803, Jaccard score = 0.2805, loss = 0.108397, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 56 fit: [23.3 s]: Recall = 0.37351, Jaccard score = 0.2859, loss = 0.106658, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 57 fit: [23.0 s]: Recall = 0.37187, Jaccard score = 0.2842, loss = 0.105332, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 58 fit: [22.9 s]: Recall = 0.37282, Jaccard score = 0.2852, loss = 0.104731, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 59 fit: [23.3 s]: Recall = 0.36910, Jaccard score = 0.2815, loss = 0.103194, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 60 fit: [23.3 s]: Recall = 0.37471, Jaccard score = 0.2870, loss = 0.102302, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 61 fit: [23.2 s]: Recall = 0.37540, Jaccard score = 0.2877, loss = 0.101847, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 62 fit: [23.0 s]: Recall = 0.36986, Jaccard score = 0.2823, loss = 0.100325, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 63 fit: [23.0 s]: Recall = 0.36816, Jaccard score = 0.2806, loss = 0.100319, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 64 fit: [23.0 s]: Recall = 0.37433, Jaccard score = 0.2867, loss = 0.098393, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 65 fit: [23.1 s]: Recall = 0.37420, Jaccard score = 0.2865, loss = 0.097974, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 66 fit: [23.0 s]: Recall = 0.37572, Jaccard score = 0.2880, loss = 0.095987, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 67 fit: [23.4 s]: Recall = 0.37509, Jaccard score = 0.2874, loss = 0.095961, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 68 fit: [23.1 s]: Recall = 0.37093, Jaccard score = 0.2833, loss = 0.094961, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 69 fit: [23.1 s]: Recall = 0.37546, Jaccard score = 0.2878, loss = 0.094009, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 70 fit: [23.3 s]: Recall = 0.37534, Jaccard score = 0.2877, loss = 0.094050, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 71 fit: [23.2 s]: Recall = 0.37578, Jaccard score = 0.2881, loss = 0.092679, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 72 fit: [23.4 s]: Recall = 0.37628, Jaccard score = 0.2886, loss = 0.091860, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 73 fit: [23.3 s]: Recall = 0.38094, Jaccard score = 0.2932, loss = 0.092226, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [23.2 s]: Recall = 0.37465, Jaccard score = 0.2870, loss = 0.089916, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 75 fit: [23.4 s]: Recall = 0.37383, Jaccard score = 0.2862, loss = 0.089665, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 76 fit: [23.2 s]: Recall = 0.37502, Jaccard score = 0.2873, loss = 0.089018, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 77 fit: [23.2 s]: Recall = 0.37754, Jaccard score = 0.2898, loss = 0.088580, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 78 fit: [23.4 s]: Recall = 0.37761, Jaccard score = 0.2899, loss = 0.087742, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 79 fit: [23.0 s]: Recall = 0.37704, Jaccard score = 0.2893, loss = 0.087426, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 80 fit: [22.9 s]: Recall = 0.37975, Jaccard score = 0.2920, loss = 0.086244, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 81 fit: [23.0 s]: Recall = 0.37767, Jaccard score = 0.2900, loss = 0.086100, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 82 fit: [23.1 s]: Recall = 0.37748, Jaccard score = 0.2898, loss = 0.085651, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 83 fit: [22.9 s]: Recall = 0.37578, Jaccard score = 0.2881, loss = 0.084025, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 84 fit: [23.3 s]: Recall = 0.37603, Jaccard score = 0.2883, loss = 0.084354, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 85 fit: [23.4 s]: Recall = 0.37786, Jaccard score = 0.2901, loss = 0.083667, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 86 fit: [23.4 s]: Recall = 0.37836, Jaccard score = 0.2906, loss = 0.082848, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 87 fit: [23.3 s]: Recall = 0.37654, Jaccard score = 0.2888, loss = 0.082614, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 88 fit: [23.4 s]: Recall = 0.37880, Jaccard score = 0.2911, loss = 0.081922, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 89 fit: [23.6 s]: Recall = 0.37635, Jaccard score = 0.2887, loss = 0.082055, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 90 fit: [23.2 s]: Recall = 0.37830, Jaccard score = 0.2906, loss = 0.081284, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 91 fit: [23.0 s]: Recall = 0.37716, Jaccard score = 0.2895, loss = 0.080609, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 92 fit: [23.0 s]: Recall = 0.37830, Jaccard score = 0.2906, loss = 0.080586, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 93 fit: [23.1 s]: Recall = 0.37698, Jaccard score = 0.2893, loss = 0.079447, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 94 fit: [22.9 s]: Recall = 0.37786, Jaccard score = 0.2901, loss = 0.079526, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 95 fit: [23.1 s]: Recall = 0.37805, Jaccard score = 0.2903, loss = 0.079107, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 96 fit: [23.0 s]: Recall = 0.37905, Jaccard score = 0.2913, loss = 0.079205, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 97 fit: [23.2 s]: Recall = 0.37836, Jaccard score = 0.2906, loss = 0.078501, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 98 fit: [22.9 s]: Recall = 0.38019, Jaccard score = 0.2925, loss = 0.077497, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 99 fit: [23.1 s]: Recall = 0.37994, Jaccard score = 0.2922, loss = 0.077484, gradient norm = 1.0000, eval: [15.7 s]
# End. Best Iteration 73:  Recall = 0.3809, Jaccard score = 0.2932. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569734900.h5
# The average best performance after k-fold 3 is: Recall = 0.38206331532258075, Jaccard score = 0.2938626411994666
# 
# Performing k-fold 4
# Init: Recall = 0.0307, Jaccard score = 0.0186
# Iteration 0 fit: [25.0 s]: Recall = 0.20645, Jaccard score = 0.1405, loss = 0.439039, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 1 fit: [23.2 s]: Recall = 0.23473, Jaccard score = 0.1629, loss = 0.406079, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 2 fit: [23.0 s]: Recall = 0.25407, Jaccard score = 0.1787, loss = 0.383117, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 3 fit: [23.1 s]: Recall = 0.26433, Jaccard score = 0.1873, loss = 0.362606, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 4 fit: [23.2 s]: Recall = 0.28060, Jaccard score = 0.2011, loss = 0.344171, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 5 fit: [23.5 s]: Recall = 0.28467, Jaccard score = 0.2046, loss = 0.327584, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 6 fit: [23.1 s]: Recall = 0.29318, Jaccard score = 0.2120, loss = 0.312809, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 7 fit: [23.3 s]: Recall = 0.29925, Jaccard score = 0.2174, loss = 0.299828, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 8 fit: [23.0 s]: Recall = 0.30738, Jaccard score = 0.2246, loss = 0.287910, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 9 fit: [23.2 s]: Recall = 0.31514, Jaccard score = 0.2316, loss = 0.277338, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 10 fit: [23.2 s]: Recall = 0.31715, Jaccard score = 0.2334, loss = 0.267336, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 11 fit: [23.7 s]: Recall = 0.31683, Jaccard score = 0.2331, loss = 0.257841, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 12 fit: [23.1 s]: Recall = 0.32259, Jaccard score = 0.2384, loss = 0.249294, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 13 fit: [23.1 s]: Recall = 0.32966, Jaccard score = 0.2449, loss = 0.241040, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 14 fit: [22.9 s]: Recall = 0.32847, Jaccard score = 0.2438, loss = 0.234493, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 15 fit: [23.3 s]: Recall = 0.33235, Jaccard score = 0.2474, loss = 0.226214, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 16 fit: [23.5 s]: Recall = 0.33586, Jaccard score = 0.2506, loss = 0.220065, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 17 fit: [23.2 s]: Recall = 0.33554, Jaccard score = 0.2504, loss = 0.213271, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 18 fit: [23.2 s]: Recall = 0.33786, Jaccard score = 0.2525, loss = 0.207864, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 19 fit: [23.0 s]: Recall = 0.34249, Jaccard score = 0.2569, loss = 0.203385, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 20 fit: [23.1 s]: Recall = 0.33830, Jaccard score = 0.2529, loss = 0.197942, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 21 fit: [23.1 s]: Recall = 0.34568, Jaccard score = 0.2599, loss = 0.192870, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 22 fit: [22.9 s]: Recall = 0.34750, Jaccard score = 0.2616, loss = 0.186759, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 23 fit: [22.9 s]: Recall = 0.35000, Jaccard score = 0.2640, loss = 0.182654, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 24 fit: [22.9 s]: Recall = 0.34912, Jaccard score = 0.2631, loss = 0.178860, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 25 fit: [23.0 s]: Recall = 0.34931, Jaccard score = 0.2633, loss = 0.174978, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 26 fit: [23.1 s]: Recall = 0.35275, Jaccard score = 0.2666, loss = 0.170756, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 27 fit: [23.1 s]: Recall = 0.35181, Jaccard score = 0.2657, loss = 0.167018, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 28 fit: [23.1 s]: Recall = 0.35313, Jaccard score = 0.2670, loss = 0.163245, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 29 fit: [23.7 s]: Recall = 0.35250, Jaccard score = 0.2664, loss = 0.160685, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 30 fit: [23.0 s]: Recall = 0.35657, Jaccard score = 0.2703, loss = 0.157748, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 31 fit: [23.2 s]: Recall = 0.35970, Jaccard score = 0.2733, loss = 0.154529, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 32 fit: [22.8 s]: Recall = 0.35701, Jaccard score = 0.2707, loss = 0.151350, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 33 fit: [23.0 s]: Recall = 0.35788, Jaccard score = 0.2715, loss = 0.148170, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 34 fit: [23.2 s]: Recall = 0.35814, Jaccard score = 0.2718, loss = 0.145781, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 35 fit: [23.1 s]: Recall = 0.35907, Jaccard score = 0.2727, loss = 0.143964, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 36 fit: [23.0 s]: Recall = 0.36220, Jaccard score = 0.2757, loss = 0.140704, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 37 fit: [23.3 s]: Recall = 0.36258, Jaccard score = 0.2761, loss = 0.139220, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 38 fit: [22.9 s]: Recall = 0.36283, Jaccard score = 0.2763, loss = 0.135821, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 39 fit: [23.2 s]: Recall = 0.36708, Jaccard score = 0.2805, loss = 0.134035, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 40 fit: [23.3 s]: Recall = 0.36577, Jaccard score = 0.2792, loss = 0.131733, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 41 fit: [23.2 s]: Recall = 0.36452, Jaccard score = 0.2780, loss = 0.129690, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 42 fit: [23.1 s]: Recall = 0.36314, Jaccard score = 0.2766, loss = 0.129051, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 43 fit: [22.9 s]: Recall = 0.36890, Jaccard score = 0.2823, loss = 0.126292, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 44 fit: [23.2 s]: Recall = 0.37040, Jaccard score = 0.2837, loss = 0.124726, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 45 fit: [23.2 s]: Recall = 0.36915, Jaccard score = 0.2825, loss = 0.122924, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 46 fit: [23.1 s]: Recall = 0.36840, Jaccard score = 0.2818, loss = 0.120591, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 47 fit: [22.8 s]: Recall = 0.36721, Jaccard score = 0.2806, loss = 0.119906, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 48 fit: [23.0 s]: Recall = 0.37096, Jaccard score = 0.2843, loss = 0.118124, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 49 fit: [23.6 s]: Recall = 0.37071, Jaccard score = 0.2840, loss = 0.117311, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 50 fit: [23.4 s]: Recall = 0.36846, Jaccard score = 0.2818, loss = 0.114609, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 51 fit: [23.2 s]: Recall = 0.37403, Jaccard score = 0.2873, loss = 0.112960, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 52 fit: [23.2 s]: Recall = 0.37353, Jaccard score = 0.2868, loss = 0.112471, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 53 fit: [22.9 s]: Recall = 0.37491, Jaccard score = 0.2882, loss = 0.111235, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 54 fit: [23.2 s]: Recall = 0.37203, Jaccard score = 0.2853, loss = 0.108882, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 55 fit: [23.3 s]: Recall = 0.37497, Jaccard score = 0.2882, loss = 0.108051, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 56 fit: [23.3 s]: Recall = 0.37265, Jaccard score = 0.2860, loss = 0.106544, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 57 fit: [23.6 s]: Recall = 0.37528, Jaccard score = 0.2886, loss = 0.106199, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 58 fit: [22.8 s]: Recall = 0.37303, Jaccard score = 0.2863, loss = 0.104723, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 59 fit: [23.1 s]: Recall = 0.37265, Jaccard score = 0.2860, loss = 0.103668, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 60 fit: [23.1 s]: Recall = 0.37322, Jaccard score = 0.2865, loss = 0.102767, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 61 fit: [23.2 s]: Recall = 0.37804, Jaccard score = 0.2913, loss = 0.101519, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 62 fit: [23.0 s]: Recall = 0.37672, Jaccard score = 0.2900, loss = 0.100946, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 63 fit: [23.2 s]: Recall = 0.37472, Jaccard score = 0.2880, loss = 0.099868, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 64 fit: [22.9 s]: Recall = 0.37572, Jaccard score = 0.2890, loss = 0.098216, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 65 fit: [23.2 s]: Recall = 0.37653, Jaccard score = 0.2898, loss = 0.097514, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 66 fit: [23.0 s]: Recall = 0.37472, Jaccard score = 0.2880, loss = 0.096374, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 67 fit: [23.0 s]: Recall = 0.37553, Jaccard score = 0.2888, loss = 0.095560, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 68 fit: [23.3 s]: Recall = 0.37303, Jaccard score = 0.2863, loss = 0.095117, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 69 fit: [23.2 s]: Recall = 0.37716, Jaccard score = 0.2904, loss = 0.094671, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 70 fit: [23.6 s]: Recall = 0.37484, Jaccard score = 0.2881, loss = 0.093606, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 71 fit: [23.3 s]: Recall = 0.37785, Jaccard score = 0.2911, loss = 0.092291, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 72 fit: [23.0 s]: Recall = 0.38135, Jaccard score = 0.2946, loss = 0.091853, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 73 fit: [22.9 s]: Recall = 0.37591, Jaccard score = 0.2892, loss = 0.091343, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [23.0 s]: Recall = 0.37904, Jaccard score = 0.2923, loss = 0.090841, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 75 fit: [23.3 s]: Recall = 0.37641, Jaccard score = 0.2897, loss = 0.090199, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 76 fit: [23.3 s]: Recall = 0.37635, Jaccard score = 0.2896, loss = 0.089916, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 77 fit: [23.3 s]: Recall = 0.37997, Jaccard score = 0.2932, loss = 0.088195, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 78 fit: [23.2 s]: Recall = 0.37416, Jaccard score = 0.2874, loss = 0.087624, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 79 fit: [23.1 s]: Recall = 0.38123, Jaccard score = 0.2945, loss = 0.087639, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 80 fit: [22.9 s]: Recall = 0.37678, Jaccard score = 0.2900, loss = 0.086580, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 81 fit: [23.2 s]: Recall = 0.37816, Jaccard score = 0.2914, loss = 0.085685, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 82 fit: [23.2 s]: Recall = 0.37660, Jaccard score = 0.2899, loss = 0.085433, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 83 fit: [23.0 s]: Recall = 0.37760, Jaccard score = 0.2909, loss = 0.084996, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 84 fit: [22.9 s]: Recall = 0.37791, Jaccard score = 0.2912, loss = 0.083570, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 85 fit: [23.2 s]: Recall = 0.37935, Jaccard score = 0.2926, loss = 0.084416, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 86 fit: [22.9 s]: Recall = 0.38310, Jaccard score = 0.2964, loss = 0.083124, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 87 fit: [23.4 s]: Recall = 0.37979, Jaccard score = 0.2930, loss = 0.082568, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 88 fit: [23.1 s]: Recall = 0.38160, Jaccard score = 0.2948, loss = 0.082321, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 89 fit: [22.9 s]: Recall = 0.38104, Jaccard score = 0.2943, loss = 0.081285, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 90 fit: [23.2 s]: Recall = 0.37885, Jaccard score = 0.2921, loss = 0.081747, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 91 fit: [23.1 s]: Recall = 0.38166, Jaccard score = 0.2949, loss = 0.080485, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 92 fit: [22.9 s]: Recall = 0.38148, Jaccard score = 0.2947, loss = 0.080517, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 93 fit: [23.1 s]: Recall = 0.38141, Jaccard score = 0.2947, loss = 0.080073, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 94 fit: [23.1 s]: Recall = 0.38248, Jaccard score = 0.2957, loss = 0.079959, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 95 fit: [23.2 s]: Recall = 0.38160, Jaccard score = 0.2948, loss = 0.078903, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 96 fit: [23.1 s]: Recall = 0.37954, Jaccard score = 0.2928, loss = 0.078879, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 97 fit: [23.2 s]: Recall = 0.37966, Jaccard score = 0.2929, loss = 0.078540, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 98 fit: [23.4 s]: Recall = 0.38129, Jaccard score = 0.2945, loss = 0.077752, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 99 fit: [23.1 s]: Recall = 0.38166, Jaccard score = 0.2949, loss = 0.076705, gradient norm = 1.0000, eval: [15.8 s]
# End. Best Iteration 86:  Recall = 0.3831, Jaccard score = 0.2964. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569734900.h5
# The average best performance after k-fold 4 is: Recall = 0.38232345645438864, Jaccard score = 0.2944845014727435
# 
# Performing k-fold 5
# Init: Recall = 0.0290, Jaccard score = 0.0176
# Iteration 0 fit: [25.2 s]: Recall = 0.19906, Jaccard score = 0.1346, loss = 0.438600, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 1 fit: [23.7 s]: Recall = 0.23077, Jaccard score = 0.1594, loss = 0.405940, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 2 fit: [23.6 s]: Recall = 0.25218, Jaccard score = 0.1768, loss = 0.382969, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 3 fit: [23.5 s]: Recall = 0.26706, Jaccard score = 0.1893, loss = 0.361707, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 4 fit: [23.6 s]: Recall = 0.27661, Jaccard score = 0.1974, loss = 0.343796, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 5 fit: [23.7 s]: Recall = 0.28565, Jaccard score = 0.2051, loss = 0.327100, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 6 fit: [23.5 s]: Recall = 0.29331, Jaccard score = 0.2118, loss = 0.311816, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 7 fit: [23.4 s]: Recall = 0.29997, Jaccard score = 0.2177, loss = 0.298936, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 8 fit: [23.8 s]: Recall = 0.30148, Jaccard score = 0.2190, loss = 0.286834, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 9 fit: [23.4 s]: Recall = 0.31102, Jaccard score = 0.2275, loss = 0.275481, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 10 fit: [23.6 s]: Recall = 0.31510, Jaccard score = 0.2312, loss = 0.266142, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 11 fit: [23.9 s]: Recall = 0.31837, Jaccard score = 0.2341, loss = 0.256911, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 12 fit: [23.6 s]: Recall = 0.32264, Jaccard score = 0.2380, loss = 0.248782, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 13 fit: [23.7 s]: Recall = 0.32440, Jaccard score = 0.2396, loss = 0.240586, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 14 fit: [23.6 s]: Recall = 0.32590, Jaccard score = 0.2410, loss = 0.233692, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 15 fit: [23.6 s]: Recall = 0.32785, Jaccard score = 0.2428, loss = 0.226608, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 16 fit: [23.4 s]: Recall = 0.33375, Jaccard score = 0.2482, loss = 0.220524, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [23.7 s]: Recall = 0.33765, Jaccard score = 0.2519, loss = 0.214147, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 18 fit: [23.7 s]: Recall = 0.33972, Jaccard score = 0.2538, loss = 0.208585, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 19 fit: [23.4 s]: Recall = 0.34198, Jaccard score = 0.2559, loss = 0.202376, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 20 fit: [23.4 s]: Recall = 0.34179, Jaccard score = 0.2558, loss = 0.198109, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 21 fit: [23.7 s]: Recall = 0.34556, Jaccard score = 0.2593, loss = 0.193157, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 22 fit: [23.4 s]: Recall = 0.34776, Jaccard score = 0.2614, loss = 0.187969, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 23 fit: [23.7 s]: Recall = 0.34518, Jaccard score = 0.2590, loss = 0.182862, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 24 fit: [23.7 s]: Recall = 0.34725, Jaccard score = 0.2609, loss = 0.178798, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 25 fit: [23.7 s]: Recall = 0.35322, Jaccard score = 0.2666, loss = 0.175547, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 26 fit: [23.7 s]: Recall = 0.34976, Jaccard score = 0.2633, loss = 0.172193, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 27 fit: [23.7 s]: Recall = 0.35177, Jaccard score = 0.2652, loss = 0.167863, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 28 fit: [23.7 s]: Recall = 0.35203, Jaccard score = 0.2654, loss = 0.164908, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 29 fit: [23.8 s]: Recall = 0.35435, Jaccard score = 0.2677, loss = 0.161821, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 30 fit: [23.8 s]: Recall = 0.35447, Jaccard score = 0.2678, loss = 0.158842, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 31 fit: [24.1 s]: Recall = 0.35548, Jaccard score = 0.2688, loss = 0.154968, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 32 fit: [23.7 s]: Recall = 0.35874, Jaccard score = 0.2719, loss = 0.152330, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 33 fit: [23.8 s]: Recall = 0.35868, Jaccard score = 0.2718, loss = 0.150023, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 34 fit: [23.8 s]: Recall = 0.35937, Jaccard score = 0.2725, loss = 0.146561, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 35 fit: [23.4 s]: Recall = 0.35692, Jaccard score = 0.2701, loss = 0.144100, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 36 fit: [23.7 s]: Recall = 0.36094, Jaccard score = 0.2740, loss = 0.141275, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 37 fit: [24.2 s]: Recall = 0.35969, Jaccard score = 0.2728, loss = 0.139508, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 38 fit: [24.2 s]: Recall = 0.36490, Jaccard score = 0.2779, loss = 0.137450, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 39 fit: [23.4 s]: Recall = 0.36000, Jaccard score = 0.2731, loss = 0.135227, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 40 fit: [23.7 s]: Recall = 0.36283, Jaccard score = 0.2758, loss = 0.133558, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 41 fit: [23.4 s]: Recall = 0.36088, Jaccard score = 0.2740, loss = 0.131539, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 42 fit: [23.8 s]: Recall = 0.36421, Jaccard score = 0.2772, loss = 0.128955, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 43 fit: [23.8 s]: Recall = 0.36320, Jaccard score = 0.2762, loss = 0.127920, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 44 fit: [23.6 s]: Recall = 0.36691, Jaccard score = 0.2798, loss = 0.125098, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 45 fit: [23.5 s]: Recall = 0.36553, Jaccard score = 0.2785, loss = 0.123629, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 46 fit: [23.6 s]: Recall = 0.36264, Jaccard score = 0.2757, loss = 0.122108, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 47 fit: [23.4 s]: Recall = 0.36433, Jaccard score = 0.2773, loss = 0.120602, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 48 fit: [23.8 s]: Recall = 0.36584, Jaccard score = 0.2788, loss = 0.119301, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 49 fit: [23.7 s]: Recall = 0.36515, Jaccard score = 0.2781, loss = 0.117455, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 50 fit: [23.7 s]: Recall = 0.37068, Jaccard score = 0.2835, loss = 0.116000, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 51 fit: [24.1 s]: Recall = 0.36904, Jaccard score = 0.2819, loss = 0.114504, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 52 fit: [24.1 s]: Recall = 0.36785, Jaccard score = 0.2807, loss = 0.112943, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 53 fit: [23.4 s]: Recall = 0.36848, Jaccard score = 0.2813, loss = 0.112091, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 54 fit: [23.5 s]: Recall = 0.37174, Jaccard score = 0.2845, loss = 0.111078, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 55 fit: [23.5 s]: Recall = 0.37338, Jaccard score = 0.2862, loss = 0.109737, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 56 fit: [23.8 s]: Recall = 0.37143, Jaccard score = 0.2842, loss = 0.107746, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 57 fit: [24.0 s]: Recall = 0.37275, Jaccard score = 0.2855, loss = 0.106823, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 58 fit: [23.7 s]: Recall = 0.37457, Jaccard score = 0.2873, loss = 0.105079, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 59 fit: [24.0 s]: Recall = 0.37105, Jaccard score = 0.2839, loss = 0.104807, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 60 fit: [23.6 s]: Recall = 0.36804, Jaccard score = 0.2809, loss = 0.103829, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 61 fit: [23.7 s]: Recall = 0.37513, Jaccard score = 0.2879, loss = 0.102873, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 62 fit: [23.9 s]: Recall = 0.37545, Jaccard score = 0.2882, loss = 0.101740, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 63 fit: [23.6 s]: Recall = 0.37375, Jaccard score = 0.2865, loss = 0.101078, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 64 fit: [23.6 s]: Recall = 0.37300, Jaccard score = 0.2858, loss = 0.100751, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 65 fit: [23.4 s]: Recall = 0.37526, Jaccard score = 0.2880, loss = 0.098847, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 66 fit: [23.8 s]: Recall = 0.37432, Jaccard score = 0.2871, loss = 0.098276, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 67 fit: [23.4 s]: Recall = 0.37338, Jaccard score = 0.2862, loss = 0.097547, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 68 fit: [23.9 s]: Recall = 0.37199, Jaccard score = 0.2848, loss = 0.097010, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 69 fit: [23.5 s]: Recall = 0.37520, Jaccard score = 0.2880, loss = 0.095610, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 70 fit: [23.5 s]: Recall = 0.37218, Jaccard score = 0.2850, loss = 0.094825, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 71 fit: [23.4 s]: Recall = 0.37356, Jaccard score = 0.2863, loss = 0.093713, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 72 fit: [23.5 s]: Recall = 0.37193, Jaccard score = 0.2847, loss = 0.092830, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 73 fit: [23.4 s]: Recall = 0.37532, Jaccard score = 0.2881, loss = 0.092493, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 74 fit: [23.8 s]: Recall = 0.37608, Jaccard score = 0.2888, loss = 0.091200, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 75 fit: [23.7 s]: Recall = 0.37689, Jaccard score = 0.2896, loss = 0.091376, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 76 fit: [23.4 s]: Recall = 0.37758, Jaccard score = 0.2903, loss = 0.090249, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 77 fit: [24.0 s]: Recall = 0.37708, Jaccard score = 0.2898, loss = 0.089524, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 78 fit: [23.7 s]: Recall = 0.37608, Jaccard score = 0.2888, loss = 0.089114, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 79 fit: [23.4 s]: Recall = 0.37683, Jaccard score = 0.2896, loss = 0.088963, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 80 fit: [23.8 s]: Recall = 0.37633, Jaccard score = 0.2891, loss = 0.087771, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 81 fit: [23.8 s]: Recall = 0.37777, Jaccard score = 0.2905, loss = 0.087721, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 82 fit: [23.8 s]: Recall = 0.37727, Jaccard score = 0.2900, loss = 0.087094, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 83 fit: [23.8 s]: Recall = 0.37664, Jaccard score = 0.2894, loss = 0.087425, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 84 fit: [23.8 s]: Recall = 0.37520, Jaccard score = 0.2880, loss = 0.085745, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 85 fit: [23.7 s]: Recall = 0.37658, Jaccard score = 0.2893, loss = 0.084956, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 86 fit: [24.2 s]: Recall = 0.37664, Jaccard score = 0.2894, loss = 0.084539, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 87 fit: [23.7 s]: Recall = 0.37538, Jaccard score = 0.2881, loss = 0.084234, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 88 fit: [23.4 s]: Recall = 0.37727, Jaccard score = 0.2900, loss = 0.083293, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 89 fit: [23.7 s]: Recall = 0.37633, Jaccard score = 0.2891, loss = 0.083199, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 90 fit: [23.7 s]: Recall = 0.37645, Jaccard score = 0.2892, loss = 0.082426, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 91 fit: [23.5 s]: Recall = 0.37708, Jaccard score = 0.2898, loss = 0.082423, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 92 fit: [23.7 s]: Recall = 0.37796, Jaccard score = 0.2907, loss = 0.081824, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 93 fit: [24.2 s]: Recall = 0.37551, Jaccard score = 0.2883, loss = 0.082614, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 94 fit: [23.4 s]: Recall = 0.37413, Jaccard score = 0.2869, loss = 0.081084, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 95 fit: [23.6 s]: Recall = 0.37965, Jaccard score = 0.2924, loss = 0.080915, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 96 fit: [23.4 s]: Recall = 0.38066, Jaccard score = 0.2934, loss = 0.080460, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 97 fit: [23.5 s]: Recall = 0.37840, Jaccard score = 0.2911, loss = 0.079643, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 98 fit: [23.8 s]: Recall = 0.38110, Jaccard score = 0.2938, loss = 0.079569, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 99 fit: [23.6 s]: Recall = 0.38041, Jaccard score = 0.2931, loss = 0.078636, gradient norm = 1.0000, eval: [15.6 s]
# End. Best Iteration 98:  Recall = 0.3811, Jaccard score = 0.2938. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569734900.h5
# The average best performance after k-fold 5 is: Recall = 0.3820785453832911, Jaccard score = 0.2943501883199454
