--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "100"
--lr: "0.002"
--early_stopping: "35"
--layers: "[512,96]"
--MLP_variant: "dropbn"
--reg_layers: "[0,0]"
--num_k_folds: "5"

# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='dropbn', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1569662838.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1569662838.h5
# Load data done [1.6 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# bn_user (BatchNormalization)    (None, 256)          1024        flatten_1[0][0]                  
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 256)          0           bn_user[0][0]                    
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# bn_item (BatchNormalization)    (None, 256)          1024        flatten_2[0][0]                  
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 256)          0           bn_item[0][0]                    
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_2[0][0]              
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 96)           0           layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_3[0][0]                  
# ==================================================================================================
# Total params: 5,267,393
# Trainable params: 5,266,369
# Non-trainable params: 1,024
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0397, Jaccard score = 0.0241
# Iteration 0 fit: [26.7 s]: Recall = 0.20889, Jaccard score = 0.1410, loss = 0.435366, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 1 fit: [25.7 s]: Recall = 0.24757, Jaccard score = 0.1716, loss = 0.399333, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 2 fit: [25.7 s]: Recall = 0.26790, Jaccard score = 0.1883, loss = 0.374060, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 3 fit: [25.6 s]: Recall = 0.28274, Jaccard score = 0.2008, loss = 0.352125, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 4 fit: [25.7 s]: Recall = 0.29015, Jaccard score = 0.2072, loss = 0.333384, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 5 fit: [25.7 s]: Recall = 0.29859, Jaccard score = 0.2145, loss = 0.317311, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 6 fit: [25.7 s]: Recall = 0.30563, Jaccard score = 0.2207, loss = 0.302970, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 7 fit: [25.6 s]: Recall = 0.30806, Jaccard score = 0.2228, loss = 0.290612, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 8 fit: [25.6 s]: Recall = 0.31336, Jaccard score = 0.2275, loss = 0.278889, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 9 fit: [25.7 s]: Recall = 0.31790, Jaccard score = 0.2316, loss = 0.268292, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 10 fit: [25.7 s]: Recall = 0.31790, Jaccard score = 0.2316, loss = 0.259093, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 11 fit: [25.7 s]: Recall = 0.32590, Jaccard score = 0.2388, loss = 0.249488, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 12 fit: [25.7 s]: Recall = 0.32609, Jaccard score = 0.2390, loss = 0.241006, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 13 fit: [25.8 s]: Recall = 0.32941, Jaccard score = 0.2420, loss = 0.232429, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 14 fit: [25.7 s]: Recall = 0.33037, Jaccard score = 0.2429, loss = 0.225610, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 15 fit: [25.6 s]: Recall = 0.33587, Jaccard score = 0.2479, loss = 0.218465, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 16 fit: [25.7 s]: Recall = 0.33721, Jaccard score = 0.2492, loss = 0.211851, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 17 fit: [25.7 s]: Recall = 0.33779, Jaccard score = 0.2497, loss = 0.206412, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 18 fit: [25.7 s]: Recall = 0.34175, Jaccard score = 0.2534, loss = 0.200427, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 19 fit: [25.7 s]: Recall = 0.34341, Jaccard score = 0.2549, loss = 0.193742, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 20 fit: [25.7 s]: Recall = 0.34373, Jaccard score = 0.2552, loss = 0.189571, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 21 fit: [25.7 s]: Recall = 0.34246, Jaccard score = 0.2540, loss = 0.184250, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 22 fit: [25.7 s]: Recall = 0.34962, Jaccard score = 0.2607, loss = 0.180645, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 23 fit: [25.6 s]: Recall = 0.34840, Jaccard score = 0.2596, loss = 0.175443, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 24 fit: [25.7 s]: Recall = 0.34847, Jaccard score = 0.2596, loss = 0.171445, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 25 fit: [25.7 s]: Recall = 0.35428, Jaccard score = 0.2651, loss = 0.167853, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 26 fit: [25.7 s]: Recall = 0.34872, Jaccard score = 0.2599, loss = 0.163883, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 27 fit: [25.7 s]: Recall = 0.35281, Jaccard score = 0.2637, loss = 0.160347, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 28 fit: [25.7 s]: Recall = 0.35652, Jaccard score = 0.2673, loss = 0.157474, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 29 fit: [25.7 s]: Recall = 0.35339, Jaccard score = 0.2643, loss = 0.154096, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 30 fit: [25.7 s]: Recall = 0.35710, Jaccard score = 0.2678, loss = 0.150774, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 31 fit: [25.7 s]: Recall = 0.35889, Jaccard score = 0.2695, loss = 0.147306, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 32 fit: [25.7 s]: Recall = 0.35665, Jaccard score = 0.2674, loss = 0.145228, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 33 fit: [25.7 s]: Recall = 0.36029, Jaccard score = 0.2708, loss = 0.142785, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 34 fit: [25.7 s]: Recall = 0.36017, Jaccard score = 0.2707, loss = 0.139863, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 35 fit: [25.7 s]: Recall = 0.36036, Jaccard score = 0.2709, loss = 0.137053, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 36 fit: [25.7 s]: Recall = 0.36004, Jaccard score = 0.2706, loss = 0.135548, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 37 fit: [25.6 s]: Recall = 0.36503, Jaccard score = 0.2754, loss = 0.133333, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 38 fit: [25.8 s]: Recall = 0.36081, Jaccard score = 0.2713, loss = 0.131018, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 39 fit: [25.7 s]: Recall = 0.36522, Jaccard score = 0.2756, loss = 0.129007, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 40 fit: [25.7 s]: Recall = 0.36394, Jaccard score = 0.2743, loss = 0.127273, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 41 fit: [25.8 s]: Recall = 0.36221, Jaccard score = 0.2727, loss = 0.125182, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 42 fit: [25.7 s]: Recall = 0.36330, Jaccard score = 0.2737, loss = 0.122854, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 43 fit: [25.7 s]: Recall = 0.36292, Jaccard score = 0.2734, loss = 0.121557, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 44 fit: [25.7 s]: Recall = 0.36061, Jaccard score = 0.2712, loss = 0.120060, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 45 fit: [25.7 s]: Recall = 0.36196, Jaccard score = 0.2724, loss = 0.118113, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 46 fit: [25.8 s]: Recall = 0.36714, Jaccard score = 0.2774, loss = 0.116218, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 47 fit: [25.7 s]: Recall = 0.36598, Jaccard score = 0.2763, loss = 0.115993, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 48 fit: [25.6 s]: Recall = 0.36618, Jaccard score = 0.2765, loss = 0.113892, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 49 fit: [25.7 s]: Recall = 0.36503, Jaccard score = 0.2754, loss = 0.112258, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 50 fit: [25.7 s]: Recall = 0.36515, Jaccard score = 0.2755, loss = 0.111011, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 51 fit: [25.7 s]: Recall = 0.37014, Jaccard score = 0.2803, loss = 0.110196, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 52 fit: [25.6 s]: Recall = 0.36835, Jaccard score = 0.2786, loss = 0.109232, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 53 fit: [25.7 s]: Recall = 0.37059, Jaccard score = 0.2808, loss = 0.107190, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 54 fit: [25.7 s]: Recall = 0.37091, Jaccard score = 0.2811, loss = 0.105310, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 55 fit: [25.7 s]: Recall = 0.36957, Jaccard score = 0.2798, loss = 0.104300, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 56 fit: [25.8 s]: Recall = 0.36867, Jaccard score = 0.2789, loss = 0.104385, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 57 fit: [25.7 s]: Recall = 0.37033, Jaccard score = 0.2805, loss = 0.103004, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 58 fit: [25.7 s]: Recall = 0.37385, Jaccard score = 0.2839, loss = 0.101445, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 59 fit: [25.7 s]: Recall = 0.37238, Jaccard score = 0.2825, loss = 0.100476, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 60 fit: [25.6 s]: Recall = 0.36886, Jaccard score = 0.2791, loss = 0.100338, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 61 fit: [25.7 s]: Recall = 0.37033, Jaccard score = 0.2805, loss = 0.099250, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 62 fit: [25.6 s]: Recall = 0.37251, Jaccard score = 0.2826, loss = 0.098190, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [25.7 s]: Recall = 0.37142, Jaccard score = 0.2816, loss = 0.097050, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 64 fit: [25.7 s]: Recall = 0.36816, Jaccard score = 0.2784, loss = 0.095979, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 65 fit: [25.7 s]: Recall = 0.37276, Jaccard score = 0.2829, loss = 0.095362, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 66 fit: [25.7 s]: Recall = 0.37602, Jaccard score = 0.2861, loss = 0.094476, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 67 fit: [25.8 s]: Recall = 0.37500, Jaccard score = 0.2851, loss = 0.094435, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 68 fit: [25.6 s]: Recall = 0.37391, Jaccard score = 0.2840, loss = 0.092637, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 69 fit: [25.6 s]: Recall = 0.37628, Jaccard score = 0.2863, loss = 0.092155, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 70 fit: [25.6 s]: Recall = 0.37730, Jaccard score = 0.2873, loss = 0.091302, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 71 fit: [25.7 s]: Recall = 0.37615, Jaccard score = 0.2862, loss = 0.090465, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 72 fit: [25.7 s]: Recall = 0.37577, Jaccard score = 0.2858, loss = 0.090335, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 73 fit: [25.6 s]: Recall = 0.37545, Jaccard score = 0.2855, loss = 0.089765, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 74 fit: [25.6 s]: Recall = 0.37602, Jaccard score = 0.2861, loss = 0.088692, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 75 fit: [25.7 s]: Recall = 0.37385, Jaccard score = 0.2839, loss = 0.088080, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 76 fit: [25.6 s]: Recall = 0.37653, Jaccard score = 0.2866, loss = 0.087565, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 77 fit: [25.6 s]: Recall = 0.37551, Jaccard score = 0.2856, loss = 0.087015, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 78 fit: [25.6 s]: Recall = 0.37641, Jaccard score = 0.2864, loss = 0.086190, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 79 fit: [25.7 s]: Recall = 0.37602, Jaccard score = 0.2861, loss = 0.085278, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 80 fit: [25.6 s]: Recall = 0.37781, Jaccard score = 0.2878, loss = 0.084974, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 81 fit: [25.6 s]: Recall = 0.37653, Jaccard score = 0.2866, loss = 0.084403, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 82 fit: [25.7 s]: Recall = 0.37775, Jaccard score = 0.2877, loss = 0.084587, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 83 fit: [25.9 s]: Recall = 0.37730, Jaccard score = 0.2873, loss = 0.083325, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 84 fit: [25.7 s]: Recall = 0.37960, Jaccard score = 0.2896, loss = 0.083721, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 85 fit: [25.8 s]: Recall = 0.37449, Jaccard score = 0.2846, loss = 0.083386, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 86 fit: [25.7 s]: Recall = 0.37839, Jaccard score = 0.2884, loss = 0.081714, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 87 fit: [25.7 s]: Recall = 0.37749, Jaccard score = 0.2875, loss = 0.081223, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 88 fit: [25.7 s]: Recall = 0.38069, Jaccard score = 0.2906, loss = 0.081369, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 89 fit: [25.7 s]: Recall = 0.38050, Jaccard score = 0.2904, loss = 0.080906, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 90 fit: [25.6 s]: Recall = 0.37813, Jaccard score = 0.2881, loss = 0.079774, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 91 fit: [25.7 s]: Recall = 0.38197, Jaccard score = 0.2919, loss = 0.078841, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 92 fit: [25.7 s]: Recall = 0.37941, Jaccard score = 0.2894, loss = 0.078582, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 93 fit: [25.7 s]: Recall = 0.37858, Jaccard score = 0.2886, loss = 0.078965, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 94 fit: [25.7 s]: Recall = 0.37858, Jaccard score = 0.2886, loss = 0.078814, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 95 fit: [25.7 s]: Recall = 0.37647, Jaccard score = 0.2865, loss = 0.077873, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 96 fit: [25.6 s]: Recall = 0.38331, Jaccard score = 0.2932, loss = 0.077555, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 97 fit: [25.8 s]: Recall = 0.38114, Jaccard score = 0.2911, loss = 0.076767, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 98 fit: [25.7 s]: Recall = 0.37807, Jaccard score = 0.2881, loss = 0.076822, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 99 fit: [25.7 s]: Recall = 0.37884, Jaccard score = 0.2888, loss = 0.077140, gradient norm = 1.0000, eval: [15.3 s]
# End. Best Iteration 96:  Recall = 0.3833, Jaccard score = 0.2932. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569662838.h5
# The average best performance after k-fold 1 is: Recall = 0.38331202046035806, Jaccard score = 0.293225727561751
# 
# Performing k-fold 2
# Init: Recall = 0.0384, Jaccard score = 0.0235
# Iteration 0 fit: [26.6 s]: Recall = 0.20633, Jaccard score = 0.1404, loss = 0.435097, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 1 fit: [25.3 s]: Recall = 0.23944, Jaccard score = 0.1667, loss = 0.399882, gradient norm = 1.0000, eval: [15.8 s]


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='dropbn', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,96]_1569692081.h5
--weights_path: Pretrain/_MLP_8_[512,96]_1569692081.h5
# Load data done [1.8 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# bn_user (BatchNormalization)    (None, 256)          1024        flatten_1[0][0]                  
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 256)          0           bn_user[0][0]                    
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# bn_item (BatchNormalization)    (None, 256)          1024        flatten_2[0][0]                  
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_1[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 256)          0           bn_item[0][0]                    
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_2[0][0]              
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 96)           0           layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_3[0][0]                  
# ==================================================================================================
# Total params: 5,267,393
# Trainable params: 5,266,369
# Non-trainable params: 1,024
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0260, Jaccard score = 0.0156
# Iteration 0 fit: [26.3 s]: Recall = 0.21279, Jaccard score = 0.1440, loss = 0.434479, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 1 fit: [25.2 s]: Recall = 0.24546, Jaccard score = 0.1699, loss = 0.398052, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 2 fit: [25.3 s]: Recall = 0.27001, Jaccard score = 0.1901, loss = 0.372866, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 3 fit: [25.3 s]: Recall = 0.27813, Jaccard score = 0.1969, loss = 0.351388, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 4 fit: [25.2 s]: Recall = 0.28804, Jaccard score = 0.2054, loss = 0.332663, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 5 fit: [25.3 s]: Recall = 0.29949, Jaccard score = 0.2153, loss = 0.317046, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 6 fit: [25.2 s]: Recall = 0.30428, Jaccard score = 0.2195, loss = 0.302624, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 7 fit: [25.3 s]: Recall = 0.30908, Jaccard score = 0.2237, loss = 0.290087, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 8 fit: [25.2 s]: Recall = 0.31068, Jaccard score = 0.2252, loss = 0.278963, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 9 fit: [25.2 s]: Recall = 0.31701, Jaccard score = 0.2308, loss = 0.268737, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 10 fit: [25.2 s]: Recall = 0.31905, Jaccard score = 0.2326, loss = 0.259599, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 11 fit: [25.2 s]: Recall = 0.32302, Jaccard score = 0.2362, loss = 0.250185, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 12 fit: [25.2 s]: Recall = 0.32340, Jaccard score = 0.2366, loss = 0.242119, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 13 fit: [25.2 s]: Recall = 0.32756, Jaccard score = 0.2403, loss = 0.233790, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 14 fit: [25.3 s]: Recall = 0.33127, Jaccard score = 0.2437, loss = 0.226162, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 15 fit: [25.2 s]: Recall = 0.33427, Jaccard score = 0.2465, loss = 0.219003, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 16 fit: [25.2 s]: Recall = 0.33740, Jaccard score = 0.2494, loss = 0.212145, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 17 fit: [25.2 s]: Recall = 0.33517, Jaccard score = 0.2473, loss = 0.206804, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 18 fit: [25.2 s]: Recall = 0.33267, Jaccard score = 0.2450, loss = 0.200963, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 19 fit: [25.3 s]: Recall = 0.34035, Jaccard score = 0.2521, loss = 0.195005, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 20 fit: [25.2 s]: Recall = 0.34054, Jaccard score = 0.2522, loss = 0.189915, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 21 fit: [25.3 s]: Recall = 0.34361, Jaccard score = 0.2551, loss = 0.185434, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 22 fit: [25.3 s]: Recall = 0.34271, Jaccard score = 0.2543, loss = 0.180494, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 23 fit: [25.2 s]: Recall = 0.34469, Jaccard score = 0.2561, loss = 0.175866, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 24 fit: [25.2 s]: Recall = 0.34508, Jaccard score = 0.2565, loss = 0.172705, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 25 fit: [25.2 s]: Recall = 0.34476, Jaccard score = 0.2562, loss = 0.168751, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 26 fit: [25.2 s]: Recall = 0.34731, Jaccard score = 0.2586, loss = 0.165685, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 27 fit: [25.3 s]: Recall = 0.35307, Jaccard score = 0.2640, loss = 0.160839, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 28 fit: [25.2 s]: Recall = 0.34655, Jaccard score = 0.2578, loss = 0.158464, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 29 fit: [25.3 s]: Recall = 0.35147, Jaccard score = 0.2625, loss = 0.154871, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 30 fit: [25.2 s]: Recall = 0.35179, Jaccard score = 0.2628, loss = 0.151314, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 31 fit: [25.3 s]: Recall = 0.35313, Jaccard score = 0.2640, loss = 0.148563, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 32 fit: [25.2 s]: Recall = 0.35684, Jaccard score = 0.2676, loss = 0.145841, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 33 fit: [25.2 s]: Recall = 0.35428, Jaccard score = 0.2651, loss = 0.143428, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 34 fit: [25.2 s]: Recall = 0.35326, Jaccard score = 0.2642, loss = 0.141234, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 35 fit: [25.2 s]: Recall = 0.35543, Jaccard score = 0.2662, loss = 0.138910, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 36 fit: [25.2 s]: Recall = 0.35857, Jaccard score = 0.2692, loss = 0.136187, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 37 fit: [25.3 s]: Recall = 0.35953, Jaccard score = 0.2701, loss = 0.133888, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 38 fit: [25.2 s]: Recall = 0.35844, Jaccard score = 0.2691, loss = 0.131279, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 39 fit: [25.2 s]: Recall = 0.35972, Jaccard score = 0.2703, loss = 0.130343, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 40 fit: [25.3 s]: Recall = 0.35876, Jaccard score = 0.2694, loss = 0.127542, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 41 fit: [25.2 s]: Recall = 0.35959, Jaccard score = 0.2702, loss = 0.125876, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 42 fit: [25.2 s]: Recall = 0.35620, Jaccard score = 0.2670, loss = 0.124039, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 43 fit: [25.2 s]: Recall = 0.36208, Jaccard score = 0.2726, loss = 0.122474, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 44 fit: [25.3 s]: Recall = 0.35946, Jaccard score = 0.2701, loss = 0.121725, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 45 fit: [25.2 s]: Recall = 0.36368, Jaccard score = 0.2741, loss = 0.119136, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 46 fit: [25.2 s]: Recall = 0.36202, Jaccard score = 0.2725, loss = 0.117569, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 47 fit: [25.2 s]: Recall = 0.36272, Jaccard score = 0.2732, loss = 0.116433, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 48 fit: [25.2 s]: Recall = 0.36292, Jaccard score = 0.2734, loss = 0.114880, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 49 fit: [25.2 s]: Recall = 0.36407, Jaccard score = 0.2745, loss = 0.112983, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 50 fit: [25.2 s]: Recall = 0.36253, Jaccard score = 0.2730, loss = 0.112247, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 51 fit: [25.2 s]: Recall = 0.36451, Jaccard score = 0.2749, loss = 0.110647, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 52 fit: [25.2 s]: Recall = 0.36049, Jaccard score = 0.2710, loss = 0.109801, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 53 fit: [25.2 s]: Recall = 0.36081, Jaccard score = 0.2713, loss = 0.107673, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 54 fit: [25.3 s]: Recall = 0.36573, Jaccard score = 0.2761, loss = 0.106046, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 55 fit: [25.2 s]: Recall = 0.36752, Jaccard score = 0.2778, loss = 0.105669, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 56 fit: [25.2 s]: Recall = 0.36720, Jaccard score = 0.2775, loss = 0.104487, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 57 fit: [25.3 s]: Recall = 0.36560, Jaccard score = 0.2759, loss = 0.103122, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 58 fit: [25.2 s]: Recall = 0.36707, Jaccard score = 0.2774, loss = 0.102693, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 59 fit: [25.2 s]: Recall = 0.36841, Jaccard score = 0.2787, loss = 0.101095, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 60 fit: [25.3 s]: Recall = 0.36726, Jaccard score = 0.2775, loss = 0.100224, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 61 fit: [25.2 s]: Recall = 0.36662, Jaccard score = 0.2769, loss = 0.099454, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 62 fit: [25.2 s]: Recall = 0.36822, Jaccard score = 0.2785, loss = 0.099364, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 63 fit: [25.2 s]: Recall = 0.36503, Jaccard score = 0.2754, loss = 0.097755, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 64 fit: [25.2 s]: Recall = 0.37008, Jaccard score = 0.2803, loss = 0.097323, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 65 fit: [25.6 s]: Recall = 0.36976, Jaccard score = 0.2800, loss = 0.096568, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 66 fit: [25.2 s]: Recall = 0.36918, Jaccard score = 0.2794, loss = 0.095662, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 67 fit: [25.2 s]: Recall = 0.36982, Jaccard score = 0.2800, loss = 0.094752, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 68 fit: [25.3 s]: Recall = 0.36803, Jaccard score = 0.2783, loss = 0.093280, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 69 fit: [25.3 s]: Recall = 0.36790, Jaccard score = 0.2782, loss = 0.092031, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 70 fit: [25.2 s]: Recall = 0.36969, Jaccard score = 0.2799, loss = 0.091802, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 71 fit: [25.2 s]: Recall = 0.37193, Jaccard score = 0.2821, loss = 0.091292, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 72 fit: [25.3 s]: Recall = 0.36912, Jaccard score = 0.2793, loss = 0.090825, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 73 fit: [25.2 s]: Recall = 0.37046, Jaccard score = 0.2806, loss = 0.089706, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 74 fit: [25.2 s]: Recall = 0.37033, Jaccard score = 0.2805, loss = 0.089296, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 75 fit: [25.2 s]: Recall = 0.37097, Jaccard score = 0.2811, loss = 0.088188, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 76 fit: [25.2 s]: Recall = 0.37040, Jaccard score = 0.2806, loss = 0.087320, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 77 fit: [25.2 s]: Recall = 0.37129, Jaccard score = 0.2814, loss = 0.087473, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 78 fit: [25.2 s]: Recall = 0.37129, Jaccard score = 0.2814, loss = 0.087165, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 79 fit: [25.2 s]: Recall = 0.37180, Jaccard score = 0.2819, loss = 0.086594, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 80 fit: [25.2 s]: Recall = 0.37410, Jaccard score = 0.2842, loss = 0.086384, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 81 fit: [25.3 s]: Recall = 0.36899, Jaccard score = 0.2792, loss = 0.084884, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 82 fit: [25.3 s]: Recall = 0.37091, Jaccard score = 0.2811, loss = 0.084601, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 83 fit: [25.2 s]: Recall = 0.37417, Jaccard score = 0.2842, loss = 0.083693, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 84 fit: [25.2 s]: Recall = 0.37193, Jaccard score = 0.2821, loss = 0.083753, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 85 fit: [25.2 s]: Recall = 0.37174, Jaccard score = 0.2819, loss = 0.083056, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 86 fit: [25.2 s]: Recall = 0.37251, Jaccard score = 0.2826, loss = 0.082718, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 87 fit: [25.2 s]: Recall = 0.37091, Jaccard score = 0.2811, loss = 0.081597, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 88 fit: [25.2 s]: Recall = 0.37398, Jaccard score = 0.2841, loss = 0.082199, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 89 fit: [25.2 s]: Recall = 0.37155, Jaccard score = 0.2817, loss = 0.081068, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 90 fit: [25.2 s]: Recall = 0.37564, Jaccard score = 0.2857, loss = 0.079982, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 91 fit: [25.2 s]: Recall = 0.37468, Jaccard score = 0.2847, loss = 0.079403, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 92 fit: [25.2 s]: Recall = 0.37410, Jaccard score = 0.2842, loss = 0.079212, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 93 fit: [25.2 s]: Recall = 0.37372, Jaccard score = 0.2838, loss = 0.079591, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 94 fit: [25.2 s]: Recall = 0.37442, Jaccard score = 0.2845, loss = 0.078503, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 95 fit: [25.2 s]: Recall = 0.37404, Jaccard score = 0.2841, loss = 0.078039, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 96 fit: [25.3 s]: Recall = 0.37756, Jaccard score = 0.2876, loss = 0.078020, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 97 fit: [25.2 s]: Recall = 0.37430, Jaccard score = 0.2844, loss = 0.078041, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 98 fit: [25.2 s]: Recall = 0.37545, Jaccard score = 0.2855, loss = 0.077157, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 99 fit: [25.2 s]: Recall = 0.37788, Jaccard score = 0.2879, loss = 0.077391, gradient norm = 1.0000, eval: [15.2 s]
# End. Best Iteration 99:  Recall = 0.3779, Jaccard score = 0.2879. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569692081.h5
# The average best performance after k-fold 1 is: Recall = 0.3778772378516624, Jaccard score = 0.28787140769605457
# 
# Performing k-fold 2
# Init: Recall = 0.0261, Jaccard score = 0.0158
# Iteration 0 fit: [26.5 s]: Recall = 0.21103, Jaccard score = 0.1441, loss = 0.434112, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 1 fit: [25.7 s]: Recall = 0.24044, Jaccard score = 0.1675, loss = 0.397570, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 2 fit: [25.7 s]: Recall = 0.25978, Jaccard score = 0.1834, loss = 0.372563, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 3 fit: [25.7 s]: Recall = 0.27186, Jaccard score = 0.1936, loss = 0.351740, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 4 fit: [25.7 s]: Recall = 0.27912, Jaccard score = 0.1998, loss = 0.333944, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 5 fit: [25.7 s]: Recall = 0.28475, Jaccard score = 0.2047, loss = 0.318285, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 6 fit: [25.7 s]: Recall = 0.29389, Jaccard score = 0.2127, loss = 0.303986, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 7 fit: [25.7 s]: Recall = 0.29895, Jaccard score = 0.2171, loss = 0.291723, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 8 fit: [25.7 s]: Recall = 0.30509, Jaccard score = 0.2226, loss = 0.280024, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 9 fit: [25.7 s]: Recall = 0.30809, Jaccard score = 0.2252, loss = 0.270299, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 10 fit: [25.7 s]: Recall = 0.30778, Jaccard score = 0.2250, loss = 0.259959, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 11 fit: [25.7 s]: Recall = 0.31235, Jaccard score = 0.2291, loss = 0.251582, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 12 fit: [25.7 s]: Recall = 0.31773, Jaccard score = 0.2339, loss = 0.242902, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 13 fit: [25.7 s]: Recall = 0.32036, Jaccard score = 0.2363, loss = 0.234359, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 14 fit: [25.7 s]: Recall = 0.32474, Jaccard score = 0.2403, loss = 0.228132, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 15 fit: [25.7 s]: Recall = 0.32574, Jaccard score = 0.2413, loss = 0.219319, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 16 fit: [25.7 s]: Recall = 0.32837, Jaccard score = 0.2437, loss = 0.213415, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [25.7 s]: Recall = 0.32436, Jaccard score = 0.2400, loss = 0.208005, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 18 fit: [25.7 s]: Recall = 0.33519, Jaccard score = 0.2500, loss = 0.200912, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 19 fit: [25.7 s]: Recall = 0.33118, Jaccard score = 0.2463, loss = 0.195141, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 20 fit: [25.7 s]: Recall = 0.33363, Jaccard score = 0.2486, loss = 0.191111, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 21 fit: [25.7 s]: Recall = 0.33582, Jaccard score = 0.2506, loss = 0.185800, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 22 fit: [25.7 s]: Recall = 0.33869, Jaccard score = 0.2533, loss = 0.181365, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 23 fit: [25.7 s]: Recall = 0.33757, Jaccard score = 0.2522, loss = 0.177322, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 24 fit: [25.7 s]: Recall = 0.33438, Jaccard score = 0.2493, loss = 0.172491, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 25 fit: [25.7 s]: Recall = 0.34608, Jaccard score = 0.2602, loss = 0.169104, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 26 fit: [25.7 s]: Recall = 0.33844, Jaccard score = 0.2531, loss = 0.164883, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 27 fit: [25.7 s]: Recall = 0.34339, Jaccard score = 0.2577, loss = 0.160814, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 28 fit: [25.7 s]: Recall = 0.34527, Jaccard score = 0.2595, loss = 0.157894, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 29 fit: [25.7 s]: Recall = 0.34514, Jaccard score = 0.2594, loss = 0.154810, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 30 fit: [25.7 s]: Recall = 0.34451, Jaccard score = 0.2588, loss = 0.151566, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 31 fit: [25.7 s]: Recall = 0.34451, Jaccard score = 0.2588, loss = 0.148916, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 32 fit: [25.7 s]: Recall = 0.34376, Jaccard score = 0.2581, loss = 0.145753, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 33 fit: [25.7 s]: Recall = 0.34602, Jaccard score = 0.2602, loss = 0.143423, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 34 fit: [25.7 s]: Recall = 0.35096, Jaccard score = 0.2649, loss = 0.141065, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 35 fit: [25.7 s]: Recall = 0.34839, Jaccard score = 0.2624, loss = 0.139208, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 36 fit: [25.7 s]: Recall = 0.35071, Jaccard score = 0.2647, loss = 0.135895, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 37 fit: [25.7 s]: Recall = 0.34664, Jaccard score = 0.2608, loss = 0.133640, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 38 fit: [25.7 s]: Recall = 0.34758, Jaccard score = 0.2617, loss = 0.131953, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 39 fit: [25.7 s]: Recall = 0.34940, Jaccard score = 0.2634, loss = 0.129106, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 40 fit: [25.7 s]: Recall = 0.35421, Jaccard score = 0.2680, loss = 0.127415, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 41 fit: [25.7 s]: Recall = 0.35365, Jaccard score = 0.2675, loss = 0.125698, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 42 fit: [25.7 s]: Recall = 0.35409, Jaccard score = 0.2679, loss = 0.124201, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 43 fit: [25.7 s]: Recall = 0.35253, Jaccard score = 0.2664, loss = 0.121732, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 44 fit: [25.7 s]: Recall = 0.35296, Jaccard score = 0.2668, loss = 0.119936, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 45 fit: [25.7 s]: Recall = 0.35703, Jaccard score = 0.2707, loss = 0.119066, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 46 fit: [25.7 s]: Recall = 0.35284, Jaccard score = 0.2667, loss = 0.116743, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 47 fit: [25.7 s]: Recall = 0.35641, Jaccard score = 0.2701, loss = 0.116128, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 48 fit: [25.7 s]: Recall = 0.36047, Jaccard score = 0.2740, loss = 0.115324, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 49 fit: [25.7 s]: Recall = 0.35528, Jaccard score = 0.2690, loss = 0.112791, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 50 fit: [25.7 s]: Recall = 0.35872, Jaccard score = 0.2723, loss = 0.110563, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 51 fit: [25.7 s]: Recall = 0.35741, Jaccard score = 0.2711, loss = 0.110012, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 52 fit: [25.7 s]: Recall = 0.35935, Jaccard score = 0.2729, loss = 0.108961, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 53 fit: [25.7 s]: Recall = 0.36335, Jaccard score = 0.2768, loss = 0.107621, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 54 fit: [25.7 s]: Recall = 0.35753, Jaccard score = 0.2712, loss = 0.106439, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 55 fit: [25.7 s]: Recall = 0.36179, Jaccard score = 0.2753, loss = 0.105602, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 56 fit: [25.7 s]: Recall = 0.35841, Jaccard score = 0.2720, loss = 0.104137, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 57 fit: [25.7 s]: Recall = 0.35922, Jaccard score = 0.2728, loss = 0.103449, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 58 fit: [25.7 s]: Recall = 0.36091, Jaccard score = 0.2745, loss = 0.101829, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 59 fit: [25.7 s]: Recall = 0.36366, Jaccard score = 0.2771, loss = 0.101195, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 60 fit: [25.7 s]: Recall = 0.36310, Jaccard score = 0.2766, loss = 0.100960, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 61 fit: [25.7 s]: Recall = 0.36266, Jaccard score = 0.2762, loss = 0.099886, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 62 fit: [25.7 s]: Recall = 0.36254, Jaccard score = 0.2760, loss = 0.098292, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 63 fit: [25.7 s]: Recall = 0.36385, Jaccard score = 0.2773, loss = 0.097838, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 64 fit: [25.7 s]: Recall = 0.36385, Jaccard score = 0.2773, loss = 0.096305, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 65 fit: [25.7 s]: Recall = 0.36229, Jaccard score = 0.2758, loss = 0.096786, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 66 fit: [25.7 s]: Recall = 0.36560, Jaccard score = 0.2790, loss = 0.094783, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 67 fit: [25.7 s]: Recall = 0.36354, Jaccard score = 0.2770, loss = 0.094039, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 68 fit: [25.7 s]: Recall = 0.36392, Jaccard score = 0.2774, loss = 0.093168, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 69 fit: [25.7 s]: Recall = 0.36617, Jaccard score = 0.2796, loss = 0.092196, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.36542, Jaccard score = 0.2788, loss = 0.091631, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 71 fit: [25.7 s]: Recall = 0.36448, Jaccard score = 0.2779, loss = 0.090706, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 72 fit: [25.7 s]: Recall = 0.36310, Jaccard score = 0.2766, loss = 0.089820, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 73 fit: [25.7 s]: Recall = 0.36679, Jaccard score = 0.2802, loss = 0.089103, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 74 fit: [25.7 s]: Recall = 0.36729, Jaccard score = 0.2807, loss = 0.089562, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 75 fit: [25.7 s]: Recall = 0.36235, Jaccard score = 0.2759, loss = 0.088134, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 76 fit: [25.7 s]: Recall = 0.36542, Jaccard score = 0.2788, loss = 0.087562, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 77 fit: [25.7 s]: Recall = 0.36742, Jaccard score = 0.2808, loss = 0.087138, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 78 fit: [25.7 s]: Recall = 0.36692, Jaccard score = 0.2803, loss = 0.086853, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 79 fit: [25.7 s]: Recall = 0.36266, Jaccard score = 0.2762, loss = 0.086318, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 80 fit: [25.7 s]: Recall = 0.36836, Jaccard score = 0.2817, loss = 0.085157, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 81 fit: [25.7 s]: Recall = 0.36886, Jaccard score = 0.2822, loss = 0.084226, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 82 fit: [25.7 s]: Recall = 0.36535, Jaccard score = 0.2788, loss = 0.084191, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 83 fit: [25.7 s]: Recall = 0.36560, Jaccard score = 0.2790, loss = 0.083539, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 84 fit: [25.7 s]: Recall = 0.36548, Jaccard score = 0.2789, loss = 0.082892, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 85 fit: [25.7 s]: Recall = 0.36773, Jaccard score = 0.2811, loss = 0.082218, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 86 fit: [25.7 s]: Recall = 0.36923, Jaccard score = 0.2826, loss = 0.082953, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 87 fit: [25.7 s]: Recall = 0.36360, Jaccard score = 0.2771, loss = 0.081180, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 88 fit: [25.7 s]: Recall = 0.36560, Jaccard score = 0.2790, loss = 0.080478, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 89 fit: [25.7 s]: Recall = 0.36598, Jaccard score = 0.2794, loss = 0.080758, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 90 fit: [25.7 s]: Recall = 0.37149, Jaccard score = 0.2848, loss = 0.080638, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 91 fit: [25.7 s]: Recall = 0.37005, Jaccard score = 0.2834, loss = 0.079445, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 92 fit: [25.7 s]: Recall = 0.36961, Jaccard score = 0.2829, loss = 0.079302, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 93 fit: [25.7 s]: Recall = 0.36842, Jaccard score = 0.2818, loss = 0.077954, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 94 fit: [25.7 s]: Recall = 0.36999, Jaccard score = 0.2833, loss = 0.078367, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 95 fit: [25.7 s]: Recall = 0.36967, Jaccard score = 0.2830, loss = 0.077779, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 96 fit: [25.7 s]: Recall = 0.37005, Jaccard score = 0.2834, loss = 0.077589, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 97 fit: [25.7 s]: Recall = 0.37274, Jaccard score = 0.2860, loss = 0.077265, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 98 fit: [25.7 s]: Recall = 0.37174, Jaccard score = 0.2850, loss = 0.076875, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 99 fit: [25.7 s]: Recall = 0.37111, Jaccard score = 0.2844, loss = 0.075858, gradient norm = 1.0000, eval: [15.7 s]
# End. Best Iteration 97:  Recall = 0.3727, Jaccard score = 0.2860. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569692081.h5
# The average best performance after k-fold 2 is: Recall = 0.3753082290391049, Jaccard score = 0.2869506392559896
# 
# Performing k-fold 3
# Init: Recall = 0.0251, Jaccard score = 0.0151
# Iteration 0 fit: [27.0 s]: Recall = 0.21494, Jaccard score = 0.1467, loss = 0.434152, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 1 fit: [25.7 s]: Recall = 0.24410, Jaccard score = 0.1700, loss = 0.397073, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 2 fit: [25.7 s]: Recall = 0.26003, Jaccard score = 0.1831, loss = 0.372438, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 3 fit: [25.7 s]: Recall = 0.27584, Jaccard score = 0.1964, loss = 0.351396, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 4 fit: [25.8 s]: Recall = 0.28081, Jaccard score = 0.2007, loss = 0.332991, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 5 fit: [25.7 s]: Recall = 0.28553, Jaccard score = 0.2047, loss = 0.316615, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 6 fit: [25.8 s]: Recall = 0.29404, Jaccard score = 0.2121, loss = 0.302275, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 7 fit: [25.7 s]: Recall = 0.29605, Jaccard score = 0.2139, loss = 0.289805, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 8 fit: [25.8 s]: Recall = 0.30443, Jaccard score = 0.2213, loss = 0.278055, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 9 fit: [25.7 s]: Recall = 0.30745, Jaccard score = 0.2240, loss = 0.267173, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 10 fit: [25.8 s]: Recall = 0.31438, Jaccard score = 0.2302, loss = 0.257017, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 11 fit: [25.7 s]: Recall = 0.31457, Jaccard score = 0.2304, loss = 0.248187, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 12 fit: [25.8 s]: Recall = 0.31879, Jaccard score = 0.2342, loss = 0.240195, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 13 fit: [25.7 s]: Recall = 0.32433, Jaccard score = 0.2392, loss = 0.230939, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 14 fit: [25.8 s]: Recall = 0.32256, Jaccard score = 0.2376, loss = 0.224371, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 15 fit: [25.7 s]: Recall = 0.32798, Jaccard score = 0.2426, loss = 0.217522, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 16 fit: [25.8 s]: Recall = 0.33069, Jaccard score = 0.2451, loss = 0.211073, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 17 fit: [25.7 s]: Recall = 0.32899, Jaccard score = 0.2435, loss = 0.204019, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 18 fit: [25.7 s]: Recall = 0.33302, Jaccard score = 0.2472, loss = 0.199649, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 19 fit: [25.7 s]: Recall = 0.33724, Jaccard score = 0.2511, loss = 0.193461, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 20 fit: [25.7 s]: Recall = 0.33642, Jaccard score = 0.2504, loss = 0.188961, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 21 fit: [25.7 s]: Recall = 0.33843, Jaccard score = 0.2522, loss = 0.183373, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 22 fit: [25.8 s]: Recall = 0.33976, Jaccard score = 0.2535, loss = 0.179299, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 23 fit: [25.7 s]: Recall = 0.34032, Jaccard score = 0.2540, loss = 0.174608, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 24 fit: [25.8 s]: Recall = 0.34076, Jaccard score = 0.2544, loss = 0.170749, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 25 fit: [25.7 s]: Recall = 0.34234, Jaccard score = 0.2559, loss = 0.166768, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 26 fit: [25.7 s]: Recall = 0.34782, Jaccard score = 0.2611, loss = 0.162963, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 27 fit: [25.7 s]: Recall = 0.34775, Jaccard score = 0.2610, loss = 0.158909, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 28 fit: [25.7 s]: Recall = 0.34914, Jaccard score = 0.2623, loss = 0.155361, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 29 fit: [25.7 s]: Recall = 0.34681, Jaccard score = 0.2601, loss = 0.152595, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 30 fit: [25.7 s]: Recall = 0.34826, Jaccard score = 0.2615, loss = 0.150273, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 31 fit: [25.7 s]: Recall = 0.34731, Jaccard score = 0.2606, loss = 0.147207, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 32 fit: [25.8 s]: Recall = 0.35021, Jaccard score = 0.2633, loss = 0.144102, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 33 fit: [25.7 s]: Recall = 0.34807, Jaccard score = 0.2613, loss = 0.141384, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 34 fit: [25.8 s]: Recall = 0.35298, Jaccard score = 0.2660, loss = 0.139275, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 35 fit: [25.7 s]: Recall = 0.34876, Jaccard score = 0.2620, loss = 0.136860, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 36 fit: [25.8 s]: Recall = 0.35116, Jaccard score = 0.2642, loss = 0.133890, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 37 fit: [25.7 s]: Recall = 0.35626, Jaccard score = 0.2691, loss = 0.133064, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 38 fit: [25.8 s]: Recall = 0.35701, Jaccard score = 0.2698, loss = 0.130382, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 39 fit: [25.7 s]: Recall = 0.35141, Jaccard score = 0.2645, loss = 0.128263, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 40 fit: [25.8 s]: Recall = 0.35487, Jaccard score = 0.2678, loss = 0.126088, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 41 fit: [25.7 s]: Recall = 0.35833, Jaccard score = 0.2711, loss = 0.124163, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 42 fit: [25.8 s]: Recall = 0.35997, Jaccard score = 0.2727, loss = 0.122779, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 43 fit: [25.7 s]: Recall = 0.35582, Jaccard score = 0.2687, loss = 0.120982, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 44 fit: [25.8 s]: Recall = 0.35500, Jaccard score = 0.2679, loss = 0.118202, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 45 fit: [25.7 s]: Recall = 0.36407, Jaccard score = 0.2766, loss = 0.118026, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 46 fit: [25.7 s]: Recall = 0.35859, Jaccard score = 0.2713, loss = 0.116132, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 47 fit: [25.7 s]: Recall = 0.35771, Jaccard score = 0.2705, loss = 0.114291, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 48 fit: [25.7 s]: Recall = 0.35758, Jaccard score = 0.2704, loss = 0.113116, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 49 fit: [25.7 s]: Recall = 0.35815, Jaccard score = 0.2709, loss = 0.112212, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 50 fit: [25.8 s]: Recall = 0.36180, Jaccard score = 0.2744, loss = 0.110049, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 51 fit: [25.7 s]: Recall = 0.35890, Jaccard score = 0.2716, loss = 0.109617, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 52 fit: [25.7 s]: Recall = 0.36029, Jaccard score = 0.2730, loss = 0.107578, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 53 fit: [25.7 s]: Recall = 0.35972, Jaccard score = 0.2724, loss = 0.106289, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 54 fit: [25.8 s]: Recall = 0.36526, Jaccard score = 0.2778, loss = 0.105339, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 55 fit: [25.7 s]: Recall = 0.36199, Jaccard score = 0.2746, loss = 0.103992, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 56 fit: [25.7 s]: Recall = 0.36274, Jaccard score = 0.2753, loss = 0.104028, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 57 fit: [25.7 s]: Recall = 0.36129, Jaccard score = 0.2739, loss = 0.102741, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 58 fit: [25.8 s]: Recall = 0.36476, Jaccard score = 0.2773, loss = 0.101788, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 59 fit: [25.7 s]: Recall = 0.36048, Jaccard score = 0.2732, loss = 0.099671, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 60 fit: [25.8 s]: Recall = 0.36633, Jaccard score = 0.2788, loss = 0.099296, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 61 fit: [25.7 s]: Recall = 0.36381, Jaccard score = 0.2764, loss = 0.099009, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 62 fit: [25.8 s]: Recall = 0.36381, Jaccard score = 0.2764, loss = 0.097674, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 63 fit: [25.7 s]: Recall = 0.36161, Jaccard score = 0.2743, loss = 0.097590, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 64 fit: [25.8 s]: Recall = 0.36495, Jaccard score = 0.2775, loss = 0.096327, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 65 fit: [25.7 s]: Recall = 0.36891, Jaccard score = 0.2814, loss = 0.095594, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 66 fit: [25.8 s]: Recall = 0.36810, Jaccard score = 0.2806, loss = 0.094696, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 67 fit: [25.7 s]: Recall = 0.36929, Jaccard score = 0.2817, loss = 0.093951, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 68 fit: [25.7 s]: Recall = 0.36866, Jaccard score = 0.2811, loss = 0.093114, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 69 fit: [25.7 s]: Recall = 0.36747, Jaccard score = 0.2799, loss = 0.091933, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.36835, Jaccard score = 0.2808, loss = 0.090933, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 71 fit: [25.7 s]: Recall = 0.36665, Jaccard score = 0.2791, loss = 0.090440, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 72 fit: [25.8 s]: Recall = 0.36879, Jaccard score = 0.2812, loss = 0.089946, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 73 fit: [25.7 s]: Recall = 0.37112, Jaccard score = 0.2835, loss = 0.090258, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [25.8 s]: Recall = 0.37112, Jaccard score = 0.2835, loss = 0.088653, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 75 fit: [25.7 s]: Recall = 0.36810, Jaccard score = 0.2806, loss = 0.087861, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 76 fit: [25.8 s]: Recall = 0.37162, Jaccard score = 0.2840, loss = 0.087493, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 77 fit: [25.7 s]: Recall = 0.36715, Jaccard score = 0.2796, loss = 0.086244, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 78 fit: [25.8 s]: Recall = 0.36463, Jaccard score = 0.2772, loss = 0.086253, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 79 fit: [25.7 s]: Recall = 0.37313, Jaccard score = 0.2855, loss = 0.085276, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 80 fit: [25.8 s]: Recall = 0.37024, Jaccard score = 0.2826, loss = 0.084713, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 81 fit: [25.7 s]: Recall = 0.37358, Jaccard score = 0.2859, loss = 0.084004, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 82 fit: [25.7 s]: Recall = 0.36803, Jaccard score = 0.2805, loss = 0.083911, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 83 fit: [25.7 s]: Recall = 0.37181, Jaccard score = 0.2842, loss = 0.082207, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 84 fit: [25.8 s]: Recall = 0.37062, Jaccard score = 0.2830, loss = 0.083585, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 85 fit: [25.7 s]: Recall = 0.36671, Jaccard score = 0.2792, loss = 0.082228, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 86 fit: [25.8 s]: Recall = 0.37118, Jaccard score = 0.2836, loss = 0.080986, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 87 fit: [25.7 s]: Recall = 0.36803, Jaccard score = 0.2805, loss = 0.080661, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 88 fit: [25.7 s]: Recall = 0.37062, Jaccard score = 0.2830, loss = 0.081074, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 89 fit: [25.7 s]: Recall = 0.37074, Jaccard score = 0.2831, loss = 0.079914, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 90 fit: [25.8 s]: Recall = 0.36873, Jaccard score = 0.2812, loss = 0.080200, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 91 fit: [25.7 s]: Recall = 0.37036, Jaccard score = 0.2828, loss = 0.079468, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 92 fit: [25.8 s]: Recall = 0.36797, Jaccard score = 0.2804, loss = 0.078506, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 93 fit: [25.7 s]: Recall = 0.36860, Jaccard score = 0.2810, loss = 0.078678, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 94 fit: [25.7 s]: Recall = 0.37112, Jaccard score = 0.2835, loss = 0.078688, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 95 fit: [25.7 s]: Recall = 0.36847, Jaccard score = 0.2809, loss = 0.078021, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 96 fit: [25.7 s]: Recall = 0.37181, Jaccard score = 0.2842, loss = 0.077544, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 97 fit: [25.7 s]: Recall = 0.37187, Jaccard score = 0.2842, loss = 0.077466, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 98 fit: [25.7 s]: Recall = 0.37345, Jaccard score = 0.2858, loss = 0.076716, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 99 fit: [25.7 s]: Recall = 0.37169, Jaccard score = 0.2841, loss = 0.075618, gradient norm = 1.0000, eval: [15.9 s]
# End. Best Iteration 81:  Recall = 0.3736, Jaccard score = 0.2859. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569692081.h5
# The average best performance after k-fold 3 is: Recall = 0.37473054008069134, Jaccard score = 0.28660737817978554
# 
# Performing k-fold 4
# Init: Recall = 0.0243, Jaccard score = 0.0147
# Iteration 0 fit: [26.7 s]: Recall = 0.21627, Jaccard score = 0.1482, loss = 0.434927, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 1 fit: [25.4 s]: Recall = 0.25131, Jaccard score = 0.1764, loss = 0.397749, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 2 fit: [25.4 s]: Recall = 0.26577, Jaccard score = 0.1885, loss = 0.372668, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 3 fit: [25.4 s]: Recall = 0.27804, Jaccard score = 0.1989, loss = 0.351791, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 4 fit: [25.5 s]: Recall = 0.29030, Jaccard score = 0.2095, loss = 0.333719, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 5 fit: [25.4 s]: Recall = 0.29537, Jaccard score = 0.2140, loss = 0.317145, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 6 fit: [25.4 s]: Recall = 0.30401, Jaccard score = 0.2216, loss = 0.302727, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 7 fit: [25.4 s]: Recall = 0.31008, Jaccard score = 0.2270, loss = 0.290176, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 8 fit: [25.4 s]: Recall = 0.31076, Jaccard score = 0.2277, loss = 0.278064, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 9 fit: [25.4 s]: Recall = 0.32096, Jaccard score = 0.2369, loss = 0.268504, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 10 fit: [25.4 s]: Recall = 0.32034, Jaccard score = 0.2363, loss = 0.257965, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 11 fit: [25.4 s]: Recall = 0.32103, Jaccard score = 0.2370, loss = 0.249060, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 12 fit: [25.4 s]: Recall = 0.32503, Jaccard score = 0.2406, loss = 0.241317, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 13 fit: [25.4 s]: Recall = 0.33223, Jaccard score = 0.2473, loss = 0.232335, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 14 fit: [25.4 s]: Recall = 0.32866, Jaccard score = 0.2440, loss = 0.226408, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 15 fit: [25.4 s]: Recall = 0.33292, Jaccard score = 0.2479, loss = 0.217803, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 16 fit: [25.4 s]: Recall = 0.33429, Jaccard score = 0.2492, loss = 0.212109, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 17 fit: [25.4 s]: Recall = 0.33523, Jaccard score = 0.2501, loss = 0.206159, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 18 fit: [25.4 s]: Recall = 0.33780, Jaccard score = 0.2525, loss = 0.199443, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 19 fit: [25.4 s]: Recall = 0.33836, Jaccard score = 0.2530, loss = 0.194661, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 20 fit: [25.4 s]: Recall = 0.33748, Jaccard score = 0.2522, loss = 0.189643, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 21 fit: [25.4 s]: Recall = 0.34287, Jaccard score = 0.2572, loss = 0.184510, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 22 fit: [25.4 s]: Recall = 0.34243, Jaccard score = 0.2568, loss = 0.178628, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 23 fit: [25.4 s]: Recall = 0.34675, Jaccard score = 0.2609, loss = 0.174597, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 24 fit: [25.4 s]: Recall = 0.34506, Jaccard score = 0.2593, loss = 0.171921, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 25 fit: [25.4 s]: Recall = 0.34387, Jaccard score = 0.2582, loss = 0.167512, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 26 fit: [25.4 s]: Recall = 0.34881, Jaccard score = 0.2629, loss = 0.163250, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 27 fit: [25.4 s]: Recall = 0.35044, Jaccard score = 0.2644, loss = 0.159450, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 28 fit: [25.4 s]: Recall = 0.35106, Jaccard score = 0.2650, loss = 0.156715, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 29 fit: [25.4 s]: Recall = 0.35013, Jaccard score = 0.2641, loss = 0.153610, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 30 fit: [25.4 s]: Recall = 0.35325, Jaccard score = 0.2671, loss = 0.150823, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 31 fit: [25.4 s]: Recall = 0.35238, Jaccard score = 0.2663, loss = 0.147410, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 32 fit: [25.4 s]: Recall = 0.35369, Jaccard score = 0.2675, loss = 0.144315, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 33 fit: [25.4 s]: Recall = 0.35444, Jaccard score = 0.2682, loss = 0.142006, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 34 fit: [25.4 s]: Recall = 0.35526, Jaccard score = 0.2690, loss = 0.138827, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 35 fit: [25.4 s]: Recall = 0.35438, Jaccard score = 0.2682, loss = 0.136371, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 36 fit: [25.4 s]: Recall = 0.35551, Jaccard score = 0.2693, loss = 0.134584, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 37 fit: [25.4 s]: Recall = 0.35563, Jaccard score = 0.2694, loss = 0.132359, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 38 fit: [25.4 s]: Recall = 0.35770, Jaccard score = 0.2714, loss = 0.129995, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 39 fit: [25.4 s]: Recall = 0.35482, Jaccard score = 0.2686, loss = 0.127705, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 40 fit: [25.4 s]: Recall = 0.35682, Jaccard score = 0.2705, loss = 0.125582, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 41 fit: [25.4 s]: Recall = 0.35582, Jaccard score = 0.2696, loss = 0.123779, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 42 fit: [25.5 s]: Recall = 0.36064, Jaccard score = 0.2742, loss = 0.122854, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 43 fit: [25.4 s]: Recall = 0.36014, Jaccard score = 0.2737, loss = 0.120729, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 44 fit: [25.4 s]: Recall = 0.36408, Jaccard score = 0.2775, loss = 0.118747, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 45 fit: [25.4 s]: Recall = 0.35745, Jaccard score = 0.2711, loss = 0.117297, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 46 fit: [25.4 s]: Recall = 0.36001, Jaccard score = 0.2736, loss = 0.116570, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 47 fit: [25.4 s]: Recall = 0.35864, Jaccard score = 0.2723, loss = 0.115044, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 48 fit: [25.4 s]: Recall = 0.36427, Jaccard score = 0.2777, loss = 0.112730, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 49 fit: [25.4 s]: Recall = 0.36370, Jaccard score = 0.2772, loss = 0.111517, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 50 fit: [25.4 s]: Recall = 0.36151, Jaccard score = 0.2751, loss = 0.109075, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 51 fit: [25.4 s]: Recall = 0.36646, Jaccard score = 0.2799, loss = 0.108210, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 52 fit: [25.4 s]: Recall = 0.36677, Jaccard score = 0.2802, loss = 0.107579, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 53 fit: [25.4 s]: Recall = 0.36496, Jaccard score = 0.2784, loss = 0.106662, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 54 fit: [25.4 s]: Recall = 0.36452, Jaccard score = 0.2780, loss = 0.104535, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 55 fit: [25.4 s]: Recall = 0.36715, Jaccard score = 0.2805, loss = 0.104056, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 56 fit: [25.4 s]: Recall = 0.36458, Jaccard score = 0.2780, loss = 0.103323, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 57 fit: [25.4 s]: Recall = 0.36890, Jaccard score = 0.2823, loss = 0.101196, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 58 fit: [25.4 s]: Recall = 0.36646, Jaccard score = 0.2799, loss = 0.100782, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 59 fit: [25.4 s]: Recall = 0.36946, Jaccard score = 0.2828, loss = 0.100009, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 60 fit: [25.4 s]: Recall = 0.36965, Jaccard score = 0.2830, loss = 0.098349, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 61 fit: [25.4 s]: Recall = 0.37372, Jaccard score = 0.2870, loss = 0.098028, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 62 fit: [25.4 s]: Recall = 0.36834, Jaccard score = 0.2817, loss = 0.097404, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 63 fit: [25.4 s]: Recall = 0.37384, Jaccard score = 0.2871, loss = 0.096296, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 64 fit: [25.4 s]: Recall = 0.37140, Jaccard score = 0.2847, loss = 0.095153, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 65 fit: [25.4 s]: Recall = 0.37040, Jaccard score = 0.2837, loss = 0.094217, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 66 fit: [25.4 s]: Recall = 0.36959, Jaccard score = 0.2829, loss = 0.094168, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 67 fit: [25.4 s]: Recall = 0.37228, Jaccard score = 0.2856, loss = 0.093074, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 68 fit: [25.4 s]: Recall = 0.37090, Jaccard score = 0.2842, loss = 0.092025, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 69 fit: [25.4 s]: Recall = 0.37247, Jaccard score = 0.2858, loss = 0.091686, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 70 fit: [25.4 s]: Recall = 0.36984, Jaccard score = 0.2832, loss = 0.090209, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 71 fit: [25.4 s]: Recall = 0.37103, Jaccard score = 0.2844, loss = 0.089823, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 72 fit: [25.4 s]: Recall = 0.36909, Jaccard score = 0.2824, loss = 0.089644, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 73 fit: [25.4 s]: Recall = 0.37484, Jaccard score = 0.2881, loss = 0.087976, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 74 fit: [25.4 s]: Recall = 0.37622, Jaccard score = 0.2895, loss = 0.088031, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 75 fit: [25.4 s]: Recall = 0.37240, Jaccard score = 0.2857, loss = 0.087086, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 76 fit: [25.4 s]: Recall = 0.37090, Jaccard score = 0.2842, loss = 0.086415, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 77 fit: [25.4 s]: Recall = 0.37203, Jaccard score = 0.2853, loss = 0.086253, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 78 fit: [25.4 s]: Recall = 0.37228, Jaccard score = 0.2856, loss = 0.085271, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 79 fit: [25.4 s]: Recall = 0.37184, Jaccard score = 0.2852, loss = 0.085287, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 80 fit: [25.4 s]: Recall = 0.37315, Jaccard score = 0.2864, loss = 0.083930, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 81 fit: [25.4 s]: Recall = 0.37109, Jaccard score = 0.2844, loss = 0.083846, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 82 fit: [25.4 s]: Recall = 0.37203, Jaccard score = 0.2853, loss = 0.083353, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 83 fit: [25.4 s]: Recall = 0.37422, Jaccard score = 0.2875, loss = 0.082987, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 84 fit: [25.4 s]: Recall = 0.37547, Jaccard score = 0.2887, loss = 0.082394, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 85 fit: [25.4 s]: Recall = 0.36959, Jaccard score = 0.2829, loss = 0.081396, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 86 fit: [25.4 s]: Recall = 0.37403, Jaccard score = 0.2873, loss = 0.081265, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 87 fit: [25.4 s]: Recall = 0.37547, Jaccard score = 0.2887, loss = 0.080901, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 88 fit: [25.4 s]: Recall = 0.37647, Jaccard score = 0.2897, loss = 0.080323, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 89 fit: [25.4 s]: Recall = 0.37522, Jaccard score = 0.2885, loss = 0.079103, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 90 fit: [25.4 s]: Recall = 0.37328, Jaccard score = 0.2866, loss = 0.079599, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 91 fit: [25.4 s]: Recall = 0.37722, Jaccard score = 0.2905, loss = 0.078754, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 92 fit: [25.4 s]: Recall = 0.37666, Jaccard score = 0.2899, loss = 0.077847, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 93 fit: [25.4 s]: Recall = 0.37453, Jaccard score = 0.2878, loss = 0.077986, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 94 fit: [25.4 s]: Recall = 0.37741, Jaccard score = 0.2907, loss = 0.077748, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 95 fit: [25.4 s]: Recall = 0.37628, Jaccard score = 0.2895, loss = 0.077232, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 96 fit: [25.4 s]: Recall = 0.37647, Jaccard score = 0.2897, loss = 0.077097, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 97 fit: [25.4 s]: Recall = 0.37359, Jaccard score = 0.2869, loss = 0.076472, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 98 fit: [25.4 s]: Recall = 0.38010, Jaccard score = 0.2933, loss = 0.075700, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 99 fit: [25.4 s]: Recall = 0.37591, Jaccard score = 0.2892, loss = 0.075408, gradient norm = 1.0000, eval: [16.0 s]
# End. Best Iteration 98:  Recall = 0.3801, Jaccard score = 0.2933. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569692081.h5
# The average best performance after k-fold 4 is: Recall = 0.3760729363496299, Jaccard score = 0.28829176467898093
# 
# Performing k-fold 5
# Init: Recall = 0.0227, Jaccard score = 0.0137
# Iteration 0 fit: [27.3 s]: Recall = 0.21181, Jaccard score = 0.1444, loss = 0.434303, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 1 fit: [26.0 s]: Recall = 0.24823, Jaccard score = 0.1736, loss = 0.397263, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 2 fit: [26.0 s]: Recall = 0.26675, Jaccard score = 0.1890, loss = 0.372284, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 3 fit: [25.9 s]: Recall = 0.27623, Jaccard score = 0.1970, loss = 0.351350, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 4 fit: [25.9 s]: Recall = 0.28766, Jaccard score = 0.2069, loss = 0.333569, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 5 fit: [25.9 s]: Recall = 0.29538, Jaccard score = 0.2136, loss = 0.317290, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 6 fit: [25.9 s]: Recall = 0.30129, Jaccard score = 0.2188, loss = 0.303370, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 7 fit: [25.9 s]: Recall = 0.30907, Jaccard score = 0.2257, loss = 0.290323, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 8 fit: [26.0 s]: Recall = 0.30857, Jaccard score = 0.2253, loss = 0.277883, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 9 fit: [25.9 s]: Recall = 0.31686, Jaccard score = 0.2328, loss = 0.267407, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 10 fit: [25.9 s]: Recall = 0.31611, Jaccard score = 0.2321, loss = 0.258656, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 11 fit: [25.9 s]: Recall = 0.31736, Jaccard score = 0.2332, loss = 0.249256, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 12 fit: [26.0 s]: Recall = 0.32276, Jaccard score = 0.2381, loss = 0.240324, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 13 fit: [25.9 s]: Recall = 0.32251, Jaccard score = 0.2379, loss = 0.232450, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 14 fit: [25.9 s]: Recall = 0.32471, Jaccard score = 0.2399, loss = 0.225163, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 15 fit: [25.9 s]: Recall = 0.33074, Jaccard score = 0.2455, loss = 0.218442, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 16 fit: [25.9 s]: Recall = 0.33049, Jaccard score = 0.2452, loss = 0.211838, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 17 fit: [25.9 s]: Recall = 0.33501, Jaccard score = 0.2494, loss = 0.205324, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 18 fit: [26.0 s]: Recall = 0.33281, Jaccard score = 0.2474, loss = 0.199605, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 19 fit: [25.9 s]: Recall = 0.33582, Jaccard score = 0.2502, loss = 0.193909, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 20 fit: [25.9 s]: Recall = 0.33658, Jaccard score = 0.2509, loss = 0.189593, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 21 fit: [26.0 s]: Recall = 0.33928, Jaccard score = 0.2534, loss = 0.184047, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 22 fit: [25.9 s]: Recall = 0.34192, Jaccard score = 0.2559, loss = 0.180185, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 23 fit: [26.0 s]: Recall = 0.34022, Jaccard score = 0.2543, loss = 0.175599, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 24 fit: [25.9 s]: Recall = 0.34374, Jaccard score = 0.2576, loss = 0.170887, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 25 fit: [25.9 s]: Recall = 0.34436, Jaccard score = 0.2582, loss = 0.167778, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 26 fit: [25.9 s]: Recall = 0.34436, Jaccard score = 0.2582, loss = 0.163834, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 27 fit: [26.0 s]: Recall = 0.34882, Jaccard score = 0.2624, loss = 0.159809, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 28 fit: [25.9 s]: Recall = 0.34462, Jaccard score = 0.2584, loss = 0.156411, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 29 fit: [25.9 s]: Recall = 0.34801, Jaccard score = 0.2616, loss = 0.152969, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 30 fit: [25.9 s]: Recall = 0.34807, Jaccard score = 0.2617, loss = 0.150541, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 31 fit: [26.0 s]: Recall = 0.34876, Jaccard score = 0.2623, loss = 0.147729, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 32 fit: [26.0 s]: Recall = 0.35385, Jaccard score = 0.2672, loss = 0.144257, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 33 fit: [26.0 s]: Recall = 0.35177, Jaccard score = 0.2652, loss = 0.142348, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 34 fit: [25.9 s]: Recall = 0.35140, Jaccard score = 0.2648, loss = 0.138740, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 35 fit: [26.0 s]: Recall = 0.35240, Jaccard score = 0.2658, loss = 0.137148, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 36 fit: [25.9 s]: Recall = 0.35259, Jaccard score = 0.2660, loss = 0.134037, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 37 fit: [25.9 s]: Recall = 0.35385, Jaccard score = 0.2672, loss = 0.132457, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 38 fit: [25.9 s]: Recall = 0.35755, Jaccard score = 0.2707, loss = 0.129972, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 39 fit: [25.9 s]: Recall = 0.35780, Jaccard score = 0.2710, loss = 0.128478, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 40 fit: [25.9 s]: Recall = 0.35579, Jaccard score = 0.2691, loss = 0.126286, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 41 fit: [26.0 s]: Recall = 0.35661, Jaccard score = 0.2698, loss = 0.124570, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 42 fit: [25.9 s]: Recall = 0.35648, Jaccard score = 0.2697, loss = 0.122328, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 43 fit: [26.0 s]: Recall = 0.36000, Jaccard score = 0.2731, loss = 0.121425, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 44 fit: [25.9 s]: Recall = 0.36170, Jaccard score = 0.2747, loss = 0.118986, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 45 fit: [25.9 s]: Recall = 0.35711, Jaccard score = 0.2703, loss = 0.118513, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 46 fit: [25.9 s]: Recall = 0.35667, Jaccard score = 0.2699, loss = 0.116103, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 47 fit: [25.9 s]: Recall = 0.35711, Jaccard score = 0.2703, loss = 0.115049, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 48 fit: [25.9 s]: Recall = 0.36119, Jaccard score = 0.2743, loss = 0.113209, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 49 fit: [25.9 s]: Recall = 0.35799, Jaccard score = 0.2712, loss = 0.112308, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 50 fit: [25.9 s]: Recall = 0.36031, Jaccard score = 0.2734, loss = 0.109970, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 51 fit: [26.0 s]: Recall = 0.36339, Jaccard score = 0.2764, loss = 0.109070, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 52 fit: [25.9 s]: Recall = 0.36100, Jaccard score = 0.2741, loss = 0.106800, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 53 fit: [26.0 s]: Recall = 0.36220, Jaccard score = 0.2752, loss = 0.106582, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 54 fit: [25.9 s]: Recall = 0.36132, Jaccard score = 0.2744, loss = 0.105140, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 55 fit: [25.9 s]: Recall = 0.36163, Jaccard score = 0.2747, loss = 0.104161, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 56 fit: [25.9 s]: Recall = 0.36314, Jaccard score = 0.2761, loss = 0.102995, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 57 fit: [25.9 s]: Recall = 0.36659, Jaccard score = 0.2795, loss = 0.102278, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 58 fit: [26.0 s]: Recall = 0.36465, Jaccard score = 0.2776, loss = 0.101276, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 59 fit: [25.9 s]: Recall = 0.36396, Jaccard score = 0.2769, loss = 0.099781, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 60 fit: [25.9 s]: Recall = 0.36358, Jaccard score = 0.2766, loss = 0.098914, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 61 fit: [25.9 s]: Recall = 0.36628, Jaccard score = 0.2792, loss = 0.098030, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 62 fit: [25.9 s]: Recall = 0.36622, Jaccard score = 0.2791, loss = 0.097291, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 63 fit: [25.9 s]: Recall = 0.37155, Jaccard score = 0.2844, loss = 0.097128, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 64 fit: [26.0 s]: Recall = 0.36565, Jaccard score = 0.2786, loss = 0.095845, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 65 fit: [25.9 s]: Recall = 0.36597, Jaccard score = 0.2789, loss = 0.094174, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 66 fit: [25.9 s]: Recall = 0.36710, Jaccard score = 0.2800, loss = 0.094498, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 67 fit: [25.9 s]: Recall = 0.36458, Jaccard score = 0.2775, loss = 0.092693, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 68 fit: [25.9 s]: Recall = 0.37005, Jaccard score = 0.2829, loss = 0.092480, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 69 fit: [25.9 s]: Recall = 0.36427, Jaccard score = 0.2772, loss = 0.091646, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 70 fit: [25.9 s]: Recall = 0.36716, Jaccard score = 0.2801, loss = 0.090629, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 71 fit: [26.0 s]: Recall = 0.37011, Jaccard score = 0.2829, loss = 0.089708, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 72 fit: [25.9 s]: Recall = 0.36797, Jaccard score = 0.2809, loss = 0.089305, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 73 fit: [25.9 s]: Recall = 0.36848, Jaccard score = 0.2813, loss = 0.088571, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 74 fit: [25.9 s]: Recall = 0.37061, Jaccard score = 0.2834, loss = 0.087870, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 75 fit: [25.9 s]: Recall = 0.37017, Jaccard score = 0.2830, loss = 0.087364, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 76 fit: [25.9 s]: Recall = 0.36791, Jaccard score = 0.2808, loss = 0.086377, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 77 fit: [25.9 s]: Recall = 0.37111, Jaccard score = 0.2839, loss = 0.086909, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 78 fit: [26.0 s]: Recall = 0.37137, Jaccard score = 0.2842, loss = 0.085995, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 79 fit: [25.9 s]: Recall = 0.37356, Jaccard score = 0.2863, loss = 0.085682, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 80 fit: [25.9 s]: Recall = 0.37049, Jaccard score = 0.2833, loss = 0.084309, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 81 fit: [25.9 s]: Recall = 0.37042, Jaccard score = 0.2833, loss = 0.084697, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 82 fit: [26.0 s]: Recall = 0.37250, Jaccard score = 0.2853, loss = 0.083614, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 83 fit: [25.9 s]: Recall = 0.37137, Jaccard score = 0.2842, loss = 0.083542, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 84 fit: [25.9 s]: Recall = 0.36973, Jaccard score = 0.2826, loss = 0.082354, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 85 fit: [26.0 s]: Recall = 0.37005, Jaccard score = 0.2829, loss = 0.081856, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 86 fit: [25.9 s]: Recall = 0.37363, Jaccard score = 0.2864, loss = 0.081426, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 87 fit: [26.0 s]: Recall = 0.37118, Jaccard score = 0.2840, loss = 0.081273, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 88 fit: [25.9 s]: Recall = 0.37262, Jaccard score = 0.2854, loss = 0.080426, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 89 fit: [26.0 s]: Recall = 0.37105, Jaccard score = 0.2839, loss = 0.079451, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 90 fit: [25.9 s]: Recall = 0.37381, Jaccard score = 0.2866, loss = 0.079717, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 91 fit: [26.0 s]: Recall = 0.37187, Jaccard score = 0.2847, loss = 0.079100, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 92 fit: [25.9 s]: Recall = 0.37124, Jaccard score = 0.2841, loss = 0.078968, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 93 fit: [25.9 s]: Recall = 0.37218, Jaccard score = 0.2850, loss = 0.078270, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 94 fit: [25.9 s]: Recall = 0.37080, Jaccard score = 0.2836, loss = 0.077706, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 95 fit: [25.9 s]: Recall = 0.37438, Jaccard score = 0.2871, loss = 0.077027, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 96 fit: [26.0 s]: Recall = 0.37432, Jaccard score = 0.2871, loss = 0.077778, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 97 fit: [25.9 s]: Recall = 0.37419, Jaccard score = 0.2870, loss = 0.076702, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 98 fit: [25.9 s]: Recall = 0.37262, Jaccard score = 0.2854, loss = 0.075926, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 99 fit: [25.9 s]: Recall = 0.37338, Jaccard score = 0.2862, loss = 0.075844, gradient norm = 1.0000, eval: [16.1 s]
# End. Best Iteration 95:  Recall = 0.3744, Jaccard score = 0.2871. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,96]_1569692081.h5
# The average best performance after k-fold 5 is: Recall = 0.37573433024139935, Jaccard score = 0.2880624923192094
