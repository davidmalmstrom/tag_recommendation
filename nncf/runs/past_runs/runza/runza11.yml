--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "100"
--lr: "0.002"
--early_stopping: "35"
--layers: "[512,750,350,96]"
--MLP_variant: "drop"
--reg_layers: "[0,0,0,0]"
--num_k_folds: "5"

# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_4 (Dropout)             (None, 256)          0           flatten_3[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 1256)         0           dropout_4[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_5 (Dropout)             (None, 256)          0           flatten_4[0][0]                  
# __________________________________________________________________________________________________
# concatenate_4 (Concatenate)     (None, 1512)         0           concatenate_3[0][0]              
#                                                                  dropout_5[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_4[0][0]              
# __________________________________________________________________________________________________
# dropout_6 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_6[0][0]                  
# __________________________________________________________________________________________________
# dropout_7 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_7[0][0]                  
# __________________________________________________________________________________________________
# dropout_8 (Dropout)             (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_8[0][0]                  
# ==================================================================================================
# Total params: 6,551,393
# Trainable params: 6,551,393
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0297, Jaccard score = 0.0179
# Iteration 0 fit: [29.1 s]: Recall = 0.21362, Jaccard score = 0.1446, loss = 0.437136, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 1 fit: [28.2 s]: Recall = 0.24629, Jaccard score = 0.1705, loss = 0.403357, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 2 fit: [28.4 s]: Recall = 0.26554, Jaccard score = 0.1863, loss = 0.381654, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 3 fit: [28.1 s]: Recall = 0.27781, Jaccard score = 0.1967, loss = 0.362297, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 4 fit: [27.8 s]: Recall = 0.28223, Jaccard score = 0.2004, loss = 0.345614, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 5 fit: [28.1 s]: Recall = 0.29226, Jaccard score = 0.2090, loss = 0.331028, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 6 fit: [28.2 s]: Recall = 0.29987, Jaccard score = 0.2156, loss = 0.317811, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 7 fit: [28.1 s]: Recall = 0.30569, Jaccard score = 0.2207, loss = 0.304455, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 8 fit: [28.1 s]: Recall = 0.30480, Jaccard score = 0.2200, loss = 0.292314, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 9 fit: [27.9 s]: Recall = 0.31164, Jaccard score = 0.2260, loss = 0.281009, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 10 fit: [28.3 s]: Recall = 0.31221, Jaccard score = 0.2265, loss = 0.269887, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 11 fit: [28.1 s]: Recall = 0.31765, Jaccard score = 0.2314, loss = 0.260264, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 12 fit: [28.4 s]: Recall = 0.32283, Jaccard score = 0.2360, loss = 0.250211, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 13 fit: [28.1 s]: Recall = 0.32820, Jaccard score = 0.2409, loss = 0.240051, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 14 fit: [28.0 s]: Recall = 0.33037, Jaccard score = 0.2429, loss = 0.231377, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 15 fit: [28.0 s]: Recall = 0.33024, Jaccard score = 0.2428, loss = 0.221837, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 16 fit: [28.2 s]: Recall = 0.33657, Jaccard score = 0.2486, loss = 0.214381, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 17 fit: [28.3 s]: Recall = 0.33504, Jaccard score = 0.2472, loss = 0.206497, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 18 fit: [28.3 s]: Recall = 0.33926, Jaccard score = 0.2511, loss = 0.198340, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 19 fit: [28.6 s]: Recall = 0.34003, Jaccard score = 0.2518, loss = 0.191532, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 20 fit: [28.0 s]: Recall = 0.34290, Jaccard score = 0.2544, loss = 0.184152, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 21 fit: [28.3 s]: Recall = 0.34386, Jaccard score = 0.2553, loss = 0.178074, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 22 fit: [28.0 s]: Recall = 0.34763, Jaccard score = 0.2589, loss = 0.172059, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 23 fit: [28.2 s]: Recall = 0.35192, Jaccard score = 0.2629, loss = 0.166691, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 24 fit: [28.3 s]: Recall = 0.35166, Jaccard score = 0.2627, loss = 0.161558, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 25 fit: [28.0 s]: Recall = 0.35582, Jaccard score = 0.2666, loss = 0.156724, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 26 fit: [28.0 s]: Recall = 0.35243, Jaccard score = 0.2634, loss = 0.151511, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.35448, Jaccard score = 0.2653, loss = 0.147013, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 28 fit: [28.2 s]: Recall = 0.35761, Jaccard score = 0.2683, loss = 0.142464, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 29 fit: [28.3 s]: Recall = 0.36125, Jaccard score = 0.2718, loss = 0.137934, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 30 fit: [28.0 s]: Recall = 0.35876, Jaccard score = 0.2694, loss = 0.133742, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 31 fit: [28.1 s]: Recall = 0.35876, Jaccard score = 0.2694, loss = 0.130238, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 32 fit: [28.0 s]: Recall = 0.36579, Jaccard score = 0.2761, loss = 0.126522, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 33 fit: [28.0 s]: Recall = 0.36816, Jaccard score = 0.2784, loss = 0.123196, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 34 fit: [28.0 s]: Recall = 0.36554, Jaccard score = 0.2759, loss = 0.120934, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 35 fit: [27.9 s]: Recall = 0.36509, Jaccard score = 0.2754, loss = 0.117934, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 36 fit: [28.1 s]: Recall = 0.36950, Jaccard score = 0.2797, loss = 0.113701, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 37 fit: [27.9 s]: Recall = 0.37123, Jaccard score = 0.2814, loss = 0.111997, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 38 fit: [28.1 s]: Recall = 0.37059, Jaccard score = 0.2808, loss = 0.109106, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 39 fit: [28.0 s]: Recall = 0.37468, Jaccard score = 0.2847, loss = 0.106659, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 40 fit: [28.0 s]: Recall = 0.37136, Jaccard score = 0.2815, loss = 0.104748, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 41 fit: [28.3 s]: Recall = 0.37526, Jaccard score = 0.2853, loss = 0.100786, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 42 fit: [28.0 s]: Recall = 0.37532, Jaccard score = 0.2854, loss = 0.099543, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 43 fit: [28.2 s]: Recall = 0.37506, Jaccard score = 0.2851, loss = 0.098414, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 44 fit: [28.0 s]: Recall = 0.37935, Jaccard score = 0.2893, loss = 0.095853, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 45 fit: [28.4 s]: Recall = 0.37673, Jaccard score = 0.2867, loss = 0.092752, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 46 fit: [27.9 s]: Recall = 0.37705, Jaccard score = 0.2871, loss = 0.092198, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 47 fit: [28.4 s]: Recall = 0.37775, Jaccard score = 0.2877, loss = 0.089908, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 48 fit: [28.1 s]: Recall = 0.37641, Jaccard score = 0.2864, loss = 0.088620, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 49 fit: [28.2 s]: Recall = 0.37602, Jaccard score = 0.2861, loss = 0.086271, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 50 fit: [27.7 s]: Recall = 0.37813, Jaccard score = 0.2881, loss = 0.084824, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 51 fit: [28.5 s]: Recall = 0.37973, Jaccard score = 0.2897, loss = 0.083476, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 52 fit: [27.9 s]: Recall = 0.38088, Jaccard score = 0.2908, loss = 0.082249, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 53 fit: [28.0 s]: Recall = 0.38056, Jaccard score = 0.2905, loss = 0.080653, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 54 fit: [28.0 s]: Recall = 0.38485, Jaccard score = 0.2947, loss = 0.078865, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 55 fit: [28.2 s]: Recall = 0.38549, Jaccard score = 0.2954, loss = 0.077742, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 56 fit: [28.3 s]: Recall = 0.37986, Jaccard score = 0.2898, loss = 0.075949, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 57 fit: [28.6 s]: Recall = 0.38555, Jaccard score = 0.2954, loss = 0.075562, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 58 fit: [28.1 s]: Recall = 0.38312, Jaccard score = 0.2930, loss = 0.074245, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 59 fit: [27.9 s]: Recall = 0.38593, Jaccard score = 0.2958, loss = 0.072986, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 60 fit: [28.1 s]: Recall = 0.38766, Jaccard score = 0.2975, loss = 0.072042, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 61 fit: [28.3 s]: Recall = 0.38542, Jaccard score = 0.2953, loss = 0.071999, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 62 fit: [27.8 s]: Recall = 0.38753, Jaccard score = 0.2974, loss = 0.069762, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 63 fit: [28.1 s]: Recall = 0.38862, Jaccard score = 0.2985, loss = 0.069235, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 64 fit: [28.0 s]: Recall = 0.38747, Jaccard score = 0.2974, loss = 0.067731, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 65 fit: [28.1 s]: Recall = 0.38792, Jaccard score = 0.2978, loss = 0.067275, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 66 fit: [28.0 s]: Recall = 0.39060, Jaccard score = 0.3005, loss = 0.065850, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 67 fit: [28.0 s]: Recall = 0.39041, Jaccard score = 0.3003, loss = 0.065163, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 68 fit: [28.2 s]: Recall = 0.38836, Jaccard score = 0.2982, loss = 0.063928, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 69 fit: [28.1 s]: Recall = 0.38517, Jaccard score = 0.2951, loss = 0.063236, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 70 fit: [28.4 s]: Recall = 0.38964, Jaccard score = 0.2995, loss = 0.062956, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 71 fit: [28.2 s]: Recall = 0.39092, Jaccard score = 0.3008, loss = 0.061812, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 72 fit: [28.1 s]: Recall = 0.38939, Jaccard score = 0.2993, loss = 0.062061, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 73 fit: [28.1 s]: Recall = 0.38900, Jaccard score = 0.2989, loss = 0.060798, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 74 fit: [28.0 s]: Recall = 0.39361, Jaccard score = 0.3035, loss = 0.061010, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 75 fit: [28.2 s]: Recall = 0.38983, Jaccard score = 0.2997, loss = 0.059467, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 76 fit: [28.2 s]: Recall = 0.39246, Jaccard score = 0.3023, loss = 0.058979, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 77 fit: [28.2 s]: Recall = 0.39220, Jaccard score = 0.3021, loss = 0.058438, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 78 fit: [28.1 s]: Recall = 0.39252, Jaccard score = 0.3024, loss = 0.057046, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 79 fit: [28.2 s]: Recall = 0.39393, Jaccard score = 0.3038, loss = 0.056610, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 80 fit: [28.1 s]: Recall = 0.38983, Jaccard score = 0.2997, loss = 0.056992, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 81 fit: [27.9 s]: Recall = 0.39169, Jaccard score = 0.3016, loss = 0.056304, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 82 fit: [28.2 s]: Recall = 0.39393, Jaccard score = 0.3038, loss = 0.055417, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 83 fit: [28.1 s]: Recall = 0.39514, Jaccard score = 0.3050, loss = 0.054893, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 84 fit: [28.4 s]: Recall = 0.39412, Jaccard score = 0.3040, loss = 0.054452, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 85 fit: [28.0 s]: Recall = 0.39079, Jaccard score = 0.3007, loss = 0.054642, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 86 fit: [28.1 s]: Recall = 0.39182, Jaccard score = 0.3017, loss = 0.052861, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 87 fit: [28.1 s]: Recall = 0.39054, Jaccard score = 0.3004, loss = 0.052758, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 88 fit: [27.9 s]: Recall = 0.39412, Jaccard score = 0.3040, loss = 0.052805, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 89 fit: [28.1 s]: Recall = 0.39597, Jaccard score = 0.3059, loss = 0.051477, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 90 fit: [28.0 s]: Recall = 0.39565, Jaccard score = 0.3056, loss = 0.050927, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 91 fit: [28.2 s]: Recall = 0.39533, Jaccard score = 0.3052, loss = 0.051180, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 92 fit: [27.9 s]: Recall = 0.39463, Jaccard score = 0.3045, loss = 0.051405, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 93 fit: [28.1 s]: Recall = 0.39060, Jaccard score = 0.3005, loss = 0.051230, gradient norm = 1.0000, eval: [15.1 s]
# Iteration 94 fit: [28.0 s]: Recall = 0.39380, Jaccard score = 0.3037, loss = 0.051128, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 95 fit: [28.1 s]: Recall = 0.39303, Jaccard score = 0.3029, loss = 0.049890, gradient norm = 1.0000, eval: [15.0 s]
# Iteration 96 fit: [28.1 s]: Recall = 0.39239, Jaccard score = 0.3023, loss = 0.050438, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 97 fit: [28.3 s]: Recall = 0.39386, Jaccard score = 0.3037, loss = 0.049526, gradient norm = 1.0000, eval: [15.2 s]
# Iteration 98 fit: [28.2 s]: Recall = 0.39552, Jaccard score = 0.3054, loss = 0.048747, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 99 fit: [27.8 s]: Recall = 0.39501, Jaccard score = 0.3049, loss = 0.049158, gradient norm = 1.0000, eval: [15.1 s]
# End. Best Iteration 89:  Recall = 0.3960, Jaccard score = 0.3059. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
# The average best performance after k-fold 1 is: Recall = 0.3959718670076726, Jaccard score = 0.3058724749345582
# 
# Performing k-fold 2
# Init: Recall = 0.0270, Jaccard score = 0.0164
# Iteration 0 fit: [29.4 s]: Recall = 0.20708, Jaccard score = 0.1410, loss = 0.437665, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 1 fit: [28.1 s]: Recall = 0.23875, Jaccard score = 0.1661, loss = 0.403810, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 2 fit: [28.0 s]: Recall = 0.25790, Jaccard score = 0.1819, loss = 0.381149, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 3 fit: [28.3 s]: Recall = 0.26892, Jaccard score = 0.1911, loss = 0.361268, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 4 fit: [28.3 s]: Recall = 0.27887, Jaccard score = 0.1996, loss = 0.343782, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 5 fit: [28.1 s]: Recall = 0.28550, Jaccard score = 0.2053, loss = 0.328883, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 6 fit: [27.9 s]: Recall = 0.29182, Jaccard score = 0.2108, loss = 0.314327, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 7 fit: [28.6 s]: Recall = 0.29464, Jaccard score = 0.2133, loss = 0.301218, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 8 fit: [28.0 s]: Recall = 0.30202, Jaccard score = 0.2198, loss = 0.288661, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 9 fit: [28.1 s]: Recall = 0.30878, Jaccard score = 0.2259, loss = 0.277260, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 10 fit: [28.3 s]: Recall = 0.31097, Jaccard score = 0.2278, loss = 0.265522, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 11 fit: [28.1 s]: Recall = 0.31579, Jaccard score = 0.2322, loss = 0.256139, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 12 fit: [28.3 s]: Recall = 0.32067, Jaccard score = 0.2366, loss = 0.246106, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 13 fit: [28.3 s]: Recall = 0.32036, Jaccard score = 0.2363, loss = 0.235913, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 14 fit: [28.1 s]: Recall = 0.32680, Jaccard score = 0.2422, loss = 0.227817, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 15 fit: [28.2 s]: Recall = 0.33081, Jaccard score = 0.2459, loss = 0.218173, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 16 fit: [28.0 s]: Recall = 0.33425, Jaccard score = 0.2491, loss = 0.209419, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 17 fit: [28.0 s]: Recall = 0.33056, Jaccard score = 0.2457, loss = 0.202924, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 18 fit: [27.9 s]: Recall = 0.33807, Jaccard score = 0.2527, loss = 0.195244, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 19 fit: [28.3 s]: Recall = 0.33832, Jaccard score = 0.2529, loss = 0.187831, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 20 fit: [28.4 s]: Recall = 0.34132, Jaccard score = 0.2558, loss = 0.181758, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 21 fit: [28.1 s]: Recall = 0.34445, Jaccard score = 0.2587, loss = 0.175403, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 22 fit: [28.1 s]: Recall = 0.34752, Jaccard score = 0.2616, loss = 0.169619, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 23 fit: [27.9 s]: Recall = 0.34483, Jaccard score = 0.2591, loss = 0.163540, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 24 fit: [27.9 s]: Recall = 0.34746, Jaccard score = 0.2616, loss = 0.157497, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 25 fit: [28.1 s]: Recall = 0.35196, Jaccard score = 0.2658, loss = 0.153961, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 26 fit: [28.2 s]: Recall = 0.35071, Jaccard score = 0.2647, loss = 0.147339, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 27 fit: [28.2 s]: Recall = 0.35096, Jaccard score = 0.2649, loss = 0.142630, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 28 fit: [28.0 s]: Recall = 0.35371, Jaccard score = 0.2675, loss = 0.138112, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 29 fit: [28.0 s]: Recall = 0.35497, Jaccard score = 0.2687, loss = 0.133193, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 30 fit: [28.2 s]: Recall = 0.35928, Jaccard score = 0.2729, loss = 0.131646, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 31 fit: [28.0 s]: Recall = 0.35985, Jaccard score = 0.2734, loss = 0.127158, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 32 fit: [28.1 s]: Recall = 0.35885, Jaccard score = 0.2725, loss = 0.123047, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 33 fit: [28.3 s]: Recall = 0.35972, Jaccard score = 0.2733, loss = 0.119402, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 34 fit: [28.7 s]: Recall = 0.36341, Jaccard score = 0.2769, loss = 0.116896, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 35 fit: [28.2 s]: Recall = 0.36004, Jaccard score = 0.2736, loss = 0.113822, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 36 fit: [28.5 s]: Recall = 0.36754, Jaccard score = 0.2809, loss = 0.110585, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 37 fit: [28.3 s]: Recall = 0.36385, Jaccard score = 0.2773, loss = 0.108357, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 38 fit: [28.0 s]: Recall = 0.36786, Jaccard score = 0.2812, loss = 0.106247, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 39 fit: [27.8 s]: Recall = 0.36586, Jaccard score = 0.2793, loss = 0.103256, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 40 fit: [28.3 s]: Recall = 0.36911, Jaccard score = 0.2825, loss = 0.101253, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 41 fit: [28.3 s]: Recall = 0.36686, Jaccard score = 0.2803, loss = 0.098736, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 42 fit: [28.2 s]: Recall = 0.36886, Jaccard score = 0.2822, loss = 0.096643, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 43 fit: [28.4 s]: Recall = 0.37355, Jaccard score = 0.2868, loss = 0.093964, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 44 fit: [28.0 s]: Recall = 0.37130, Jaccard score = 0.2846, loss = 0.092173, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 45 fit: [28.2 s]: Recall = 0.37080, Jaccard score = 0.2841, loss = 0.091056, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 46 fit: [27.9 s]: Recall = 0.36936, Jaccard score = 0.2827, loss = 0.088031, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 47 fit: [28.0 s]: Recall = 0.36767, Jaccard score = 0.2810, loss = 0.087309, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 48 fit: [28.2 s]: Recall = 0.37518, Jaccard score = 0.2884, loss = 0.085556, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 49 fit: [28.0 s]: Recall = 0.37268, Jaccard score = 0.2860, loss = 0.083459, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 50 fit: [28.0 s]: Recall = 0.37374, Jaccard score = 0.2870, loss = 0.081635, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 51 fit: [27.9 s]: Recall = 0.37631, Jaccard score = 0.2896, loss = 0.081199, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 52 fit: [28.2 s]: Recall = 0.37380, Jaccard score = 0.2871, loss = 0.079212, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 53 fit: [28.1 s]: Recall = 0.37994, Jaccard score = 0.2932, loss = 0.078015, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 54 fit: [28.0 s]: Recall = 0.37499, Jaccard score = 0.2883, loss = 0.076775, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 55 fit: [28.1 s]: Recall = 0.37549, Jaccard score = 0.2888, loss = 0.074978, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 56 fit: [27.9 s]: Recall = 0.37656, Jaccard score = 0.2898, loss = 0.073519, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 57 fit: [28.1 s]: Recall = 0.37831, Jaccard score = 0.2916, loss = 0.073126, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 58 fit: [28.0 s]: Recall = 0.38006, Jaccard score = 0.2933, loss = 0.071203, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 59 fit: [28.1 s]: Recall = 0.37806, Jaccard score = 0.2913, loss = 0.070506, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 60 fit: [28.0 s]: Recall = 0.37725, Jaccard score = 0.2905, loss = 0.069343, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 61 fit: [28.0 s]: Recall = 0.37912, Jaccard score = 0.2924, loss = 0.068661, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 62 fit: [27.9 s]: Recall = 0.37919, Jaccard score = 0.2924, loss = 0.067919, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [28.1 s]: Recall = 0.37681, Jaccard score = 0.2901, loss = 0.066118, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 64 fit: [27.9 s]: Recall = 0.38131, Jaccard score = 0.2945, loss = 0.065006, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 65 fit: [28.6 s]: Recall = 0.38507, Jaccard score = 0.2983, loss = 0.064115, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 66 fit: [28.2 s]: Recall = 0.38000, Jaccard score = 0.2932, loss = 0.064332, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 67 fit: [28.2 s]: Recall = 0.38231, Jaccard score = 0.2955, loss = 0.062882, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 68 fit: [28.0 s]: Recall = 0.38213, Jaccard score = 0.2954, loss = 0.062327, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 69 fit: [28.1 s]: Recall = 0.38375, Jaccard score = 0.2970, loss = 0.060266, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 70 fit: [28.3 s]: Recall = 0.38450, Jaccard score = 0.2977, loss = 0.059923, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 71 fit: [28.0 s]: Recall = 0.38037, Jaccard score = 0.2936, loss = 0.059943, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 72 fit: [28.1 s]: Recall = 0.38400, Jaccard score = 0.2972, loss = 0.059385, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 73 fit: [28.2 s]: Recall = 0.38194, Jaccard score = 0.2952, loss = 0.058381, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 74 fit: [27.9 s]: Recall = 0.38388, Jaccard score = 0.2971, loss = 0.057787, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 75 fit: [28.3 s]: Recall = 0.38263, Jaccard score = 0.2959, loss = 0.057312, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 76 fit: [28.2 s]: Recall = 0.38357, Jaccard score = 0.2968, loss = 0.055679, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 77 fit: [28.1 s]: Recall = 0.38269, Jaccard score = 0.2959, loss = 0.057111, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 78 fit: [28.0 s]: Recall = 0.38225, Jaccard score = 0.2955, loss = 0.055776, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 79 fit: [28.2 s]: Recall = 0.38526, Jaccard score = 0.2985, loss = 0.054280, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 80 fit: [27.9 s]: Recall = 0.38156, Jaccard score = 0.2948, loss = 0.054136, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 81 fit: [28.5 s]: Recall = 0.38763, Jaccard score = 0.3009, loss = 0.053648, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 82 fit: [28.3 s]: Recall = 0.38100, Jaccard score = 0.2942, loss = 0.053444, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 83 fit: [28.2 s]: Recall = 0.38357, Jaccard score = 0.2968, loss = 0.054079, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 84 fit: [28.3 s]: Recall = 0.37994, Jaccard score = 0.2932, loss = 0.052686, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 85 fit: [28.3 s]: Recall = 0.38288, Jaccard score = 0.2961, loss = 0.050993, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 86 fit: [27.9 s]: Recall = 0.38188, Jaccard score = 0.2951, loss = 0.051332, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 87 fit: [27.9 s]: Recall = 0.38751, Jaccard score = 0.3008, loss = 0.050846, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 88 fit: [27.8 s]: Recall = 0.38319, Jaccard score = 0.2964, loss = 0.050638, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 89 fit: [28.5 s]: Recall = 0.38513, Jaccard score = 0.2984, loss = 0.049851, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 90 fit: [28.0 s]: Recall = 0.38419, Jaccard score = 0.2974, loss = 0.048685, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 91 fit: [28.2 s]: Recall = 0.38231, Jaccard score = 0.2955, loss = 0.049671, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 92 fit: [28.1 s]: Recall = 0.38438, Jaccard score = 0.2976, loss = 0.049378, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 93 fit: [28.2 s]: Recall = 0.38569, Jaccard score = 0.2989, loss = 0.046783, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 94 fit: [28.2 s]: Recall = 0.38544, Jaccard score = 0.2987, loss = 0.047099, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 95 fit: [28.5 s]: Recall = 0.38382, Jaccard score = 0.2971, loss = 0.047277, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 96 fit: [28.1 s]: Recall = 0.38344, Jaccard score = 0.2967, loss = 0.048305, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 97 fit: [28.3 s]: Recall = 0.38319, Jaccard score = 0.2964, loss = 0.046119, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 98 fit: [28.0 s]: Recall = 0.38619, Jaccard score = 0.2994, loss = 0.047791, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 99 fit: [28.0 s]: Recall = 0.38551, Jaccard score = 0.2988, loss = 0.046542, gradient norm = 1.0000, eval: [15.5 s]
# End. Best Iteration 81:  Recall = 0.3876, Jaccard score = 0.3009. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
# The average best performance after k-fold 2 is: Recall = 0.391802818164954, Jaccard score = 0.303385593794702
# 
# Performing k-fold 3
# Init: Recall = 0.0290, Jaccard score = 0.0175
# Iteration 0 fit: [29.9 s]: Recall = 0.20864, Jaccard score = 0.1418, loss = 0.437492, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 1 fit: [28.2 s]: Recall = 0.23969, Jaccard score = 0.1664, loss = 0.402482, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 2 fit: [28.1 s]: Recall = 0.25833, Jaccard score = 0.1817, loss = 0.380136, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 3 fit: [28.6 s]: Recall = 0.27288, Jaccard score = 0.1939, loss = 0.360711, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 4 fit: [27.9 s]: Recall = 0.27949, Jaccard score = 0.1995, loss = 0.343191, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 5 fit: [28.1 s]: Recall = 0.28239, Jaccard score = 0.2020, loss = 0.328632, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 6 fit: [28.4 s]: Recall = 0.29007, Jaccard score = 0.2087, loss = 0.314477, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 7 fit: [28.4 s]: Recall = 0.29939, Jaccard score = 0.2168, loss = 0.301532, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 8 fit: [28.1 s]: Recall = 0.30525, Jaccard score = 0.2220, loss = 0.289521, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 9 fit: [28.2 s]: Recall = 0.30758, Jaccard score = 0.2241, loss = 0.277719, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 10 fit: [28.1 s]: Recall = 0.31595, Jaccard score = 0.2316, loss = 0.266978, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 11 fit: [28.5 s]: Recall = 0.31948, Jaccard score = 0.2348, loss = 0.256635, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 12 fit: [28.4 s]: Recall = 0.32363, Jaccard score = 0.2386, loss = 0.247323, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 13 fit: [28.1 s]: Recall = 0.32653, Jaccard score = 0.2412, loss = 0.237182, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 14 fit: [27.8 s]: Recall = 0.32918, Jaccard score = 0.2437, loss = 0.229115, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 15 fit: [28.2 s]: Recall = 0.33006, Jaccard score = 0.2445, loss = 0.220492, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 16 fit: [28.2 s]: Recall = 0.33453, Jaccard score = 0.2486, loss = 0.212369, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [28.3 s]: Recall = 0.33686, Jaccard score = 0.2508, loss = 0.204820, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 18 fit: [28.1 s]: Recall = 0.33888, Jaccard score = 0.2527, loss = 0.198160, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 19 fit: [28.5 s]: Recall = 0.34209, Jaccard score = 0.2557, loss = 0.190612, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 20 fit: [28.4 s]: Recall = 0.34480, Jaccard score = 0.2582, loss = 0.184431, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 21 fit: [28.3 s]: Recall = 0.34713, Jaccard score = 0.2604, loss = 0.177510, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 22 fit: [28.0 s]: Recall = 0.34901, Jaccard score = 0.2622, loss = 0.171517, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 23 fit: [28.4 s]: Recall = 0.35027, Jaccard score = 0.2634, loss = 0.165218, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 24 fit: [28.2 s]: Recall = 0.34807, Jaccard score = 0.2613, loss = 0.160547, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 25 fit: [28.4 s]: Recall = 0.35273, Jaccard score = 0.2657, loss = 0.155611, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 26 fit: [28.0 s]: Recall = 0.35600, Jaccard score = 0.2689, loss = 0.150690, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 27 fit: [28.0 s]: Recall = 0.35726, Jaccard score = 0.2701, loss = 0.145623, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 28 fit: [28.1 s]: Recall = 0.35840, Jaccard score = 0.2712, loss = 0.142017, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 29 fit: [28.2 s]: Recall = 0.35638, Jaccard score = 0.2692, loss = 0.137009, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 30 fit: [28.2 s]: Recall = 0.35777, Jaccard score = 0.2705, loss = 0.134139, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 31 fit: [28.3 s]: Recall = 0.36098, Jaccard score = 0.2736, loss = 0.130972, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 32 fit: [28.3 s]: Recall = 0.36274, Jaccard score = 0.2753, loss = 0.126317, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 33 fit: [28.2 s]: Recall = 0.36098, Jaccard score = 0.2736, loss = 0.122782, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 34 fit: [28.0 s]: Recall = 0.36255, Jaccard score = 0.2752, loss = 0.120371, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 35 fit: [28.7 s]: Recall = 0.36362, Jaccard score = 0.2762, loss = 0.116242, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 36 fit: [28.3 s]: Recall = 0.36690, Jaccard score = 0.2794, loss = 0.113451, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 37 fit: [28.3 s]: Recall = 0.37187, Jaccard score = 0.2842, loss = 0.111722, gradient norm = 1.0000, eval: [15.3 s]
# Iteration 38 fit: [28.2 s]: Recall = 0.37080, Jaccard score = 0.2832, loss = 0.108512, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 39 fit: [28.3 s]: Recall = 0.36910, Jaccard score = 0.2815, loss = 0.105889, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 40 fit: [28.3 s]: Recall = 0.37011, Jaccard score = 0.2825, loss = 0.103244, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 41 fit: [28.5 s]: Recall = 0.37213, Jaccard score = 0.2845, loss = 0.101399, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 42 fit: [28.6 s]: Recall = 0.36942, Jaccard score = 0.2818, loss = 0.099324, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 43 fit: [28.3 s]: Recall = 0.37295, Jaccard score = 0.2853, loss = 0.097866, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 44 fit: [28.6 s]: Recall = 0.37257, Jaccard score = 0.2849, loss = 0.094861, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 45 fit: [28.3 s]: Recall = 0.37767, Jaccard score = 0.2900, loss = 0.093476, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 46 fit: [27.9 s]: Recall = 0.37559, Jaccard score = 0.2879, loss = 0.090565, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 47 fit: [28.4 s]: Recall = 0.37452, Jaccard score = 0.2869, loss = 0.089956, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 48 fit: [28.2 s]: Recall = 0.37761, Jaccard score = 0.2899, loss = 0.088427, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 49 fit: [28.4 s]: Recall = 0.37313, Jaccard score = 0.2855, loss = 0.085876, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 50 fit: [28.1 s]: Recall = 0.37912, Jaccard score = 0.2914, loss = 0.084503, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 51 fit: [28.3 s]: Recall = 0.37893, Jaccard score = 0.2912, loss = 0.083589, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 52 fit: [28.1 s]: Recall = 0.37742, Jaccard score = 0.2897, loss = 0.082071, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 53 fit: [28.4 s]: Recall = 0.37899, Jaccard score = 0.2913, loss = 0.080362, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 54 fit: [28.1 s]: Recall = 0.38145, Jaccard score = 0.2937, loss = 0.079072, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 55 fit: [28.0 s]: Recall = 0.38038, Jaccard score = 0.2926, loss = 0.077455, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 56 fit: [28.0 s]: Recall = 0.37887, Jaccard score = 0.2911, loss = 0.076674, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 57 fit: [28.1 s]: Recall = 0.38416, Jaccard score = 0.2964, loss = 0.075328, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 58 fit: [28.1 s]: Recall = 0.37931, Jaccard score = 0.2916, loss = 0.074624, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 59 fit: [28.4 s]: Recall = 0.37987, Jaccard score = 0.2921, loss = 0.073316, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 60 fit: [28.2 s]: Recall = 0.38579, Jaccard score = 0.2981, loss = 0.072750, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 61 fit: [28.2 s]: Recall = 0.38321, Jaccard score = 0.2955, loss = 0.071611, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 62 fit: [28.2 s]: Recall = 0.38138, Jaccard score = 0.2937, loss = 0.070148, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 63 fit: [28.5 s]: Recall = 0.38145, Jaccard score = 0.2937, loss = 0.069367, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 64 fit: [28.1 s]: Recall = 0.38378, Jaccard score = 0.2960, loss = 0.067971, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 65 fit: [28.4 s]: Recall = 0.38453, Jaccard score = 0.2968, loss = 0.067689, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 66 fit: [28.0 s]: Recall = 0.37905, Jaccard score = 0.2913, loss = 0.066711, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 67 fit: [28.3 s]: Recall = 0.38214, Jaccard score = 0.2944, loss = 0.065069, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 68 fit: [28.2 s]: Recall = 0.38132, Jaccard score = 0.2936, loss = 0.065216, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 69 fit: [28.8 s]: Recall = 0.38416, Jaccard score = 0.2964, loss = 0.064107, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 70 fit: [28.1 s]: Recall = 0.38453, Jaccard score = 0.2968, loss = 0.062926, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 71 fit: [28.2 s]: Recall = 0.38812, Jaccard score = 0.3004, loss = 0.062561, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 72 fit: [28.6 s]: Recall = 0.38680, Jaccard score = 0.2991, loss = 0.061966, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 73 fit: [28.2 s]: Recall = 0.38649, Jaccard score = 0.2988, loss = 0.061569, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 74 fit: [28.5 s]: Recall = 0.38579, Jaccard score = 0.2981, loss = 0.060466, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 75 fit: [28.2 s]: Recall = 0.38535, Jaccard score = 0.2976, loss = 0.059238, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 76 fit: [28.1 s]: Recall = 0.38598, Jaccard score = 0.2982, loss = 0.058377, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 77 fit: [28.2 s]: Recall = 0.38447, Jaccard score = 0.2967, loss = 0.058516, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 78 fit: [28.4 s]: Recall = 0.38762, Jaccard score = 0.2999, loss = 0.057310, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 79 fit: [28.2 s]: Recall = 0.38730, Jaccard score = 0.2996, loss = 0.056796, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 80 fit: [28.4 s]: Recall = 0.38774, Jaccard score = 0.3000, loss = 0.056278, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 81 fit: [28.1 s]: Recall = 0.38938, Jaccard score = 0.3017, loss = 0.056790, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 82 fit: [28.1 s]: Recall = 0.38825, Jaccard score = 0.3005, loss = 0.054990, gradient norm = 1.0000, eval: [15.5 s]
# Iteration 83 fit: [28.4 s]: Recall = 0.38951, Jaccard score = 0.3018, loss = 0.054446, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 84 fit: [28.0 s]: Recall = 0.38686, Jaccard score = 0.2991, loss = 0.053718, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 85 fit: [28.2 s]: Recall = 0.38926, Jaccard score = 0.3015, loss = 0.054737, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 86 fit: [28.3 s]: Recall = 0.38787, Jaccard score = 0.3001, loss = 0.053319, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 87 fit: [28.4 s]: Recall = 0.38982, Jaccard score = 0.3021, loss = 0.052883, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 88 fit: [28.1 s]: Recall = 0.38636, Jaccard score = 0.2986, loss = 0.053044, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 89 fit: [28.5 s]: Recall = 0.38762, Jaccard score = 0.2999, loss = 0.050943, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 90 fit: [27.9 s]: Recall = 0.38932, Jaccard score = 0.3016, loss = 0.052714, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 91 fit: [28.1 s]: Recall = 0.38472, Jaccard score = 0.2970, loss = 0.051816, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 92 fit: [28.2 s]: Recall = 0.39045, Jaccard score = 0.3027, loss = 0.050355, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 93 fit: [28.4 s]: Recall = 0.38913, Jaccard score = 0.3014, loss = 0.050877, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 94 fit: [28.0 s]: Recall = 0.38749, Jaccard score = 0.2998, loss = 0.049853, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 95 fit: [28.2 s]: Recall = 0.38712, Jaccard score = 0.2994, loss = 0.049273, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 96 fit: [28.4 s]: Recall = 0.39190, Jaccard score = 0.3042, loss = 0.048444, gradient norm = 1.0000, eval: [15.4 s]
# Iteration 97 fit: [28.4 s]: Recall = 0.38693, Jaccard score = 0.2992, loss = 0.049436, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 98 fit: [28.2 s]: Recall = 0.39146, Jaccard score = 0.3038, loss = 0.048082, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 99 fit: [28.5 s]: Recall = 0.38800, Jaccard score = 0.3003, loss = 0.048307, gradient norm = 1.0000, eval: [15.6 s]
# End. Best Iteration 96:  Recall = 0.3919, Jaccard score = 0.3042. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
# The average best performance after k-fold 3 is: Recall = 0.3918356298524804, Jaccard score = 0.3036617033849701
# 
# Performing k-fold 4
# Init: Recall = 0.0302, Jaccard score = 0.0183
# Iteration 0 fit: [29.6 s]: Recall = 0.21339, Jaccard score = 0.1459, loss = 0.437406, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 1 fit: [28.1 s]: Recall = 0.24650, Jaccard score = 0.1725, loss = 0.403388, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 2 fit: [28.3 s]: Recall = 0.26283, Jaccard score = 0.1860, loss = 0.381384, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 3 fit: [28.3 s]: Recall = 0.27215, Jaccard score = 0.1939, loss = 0.362119, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 4 fit: [27.9 s]: Recall = 0.28223, Jaccard score = 0.2025, loss = 0.345049, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 5 fit: [28.4 s]: Recall = 0.29186, Jaccard score = 0.2109, loss = 0.329598, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 6 fit: [28.2 s]: Recall = 0.29919, Jaccard score = 0.2173, loss = 0.315718, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 7 fit: [28.0 s]: Recall = 0.30338, Jaccard score = 0.2210, loss = 0.303127, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 8 fit: [28.3 s]: Recall = 0.30820, Jaccard score = 0.2253, loss = 0.290424, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 9 fit: [28.4 s]: Recall = 0.31564, Jaccard score = 0.2321, loss = 0.279291, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 10 fit: [28.2 s]: Recall = 0.31602, Jaccard score = 0.2324, loss = 0.268346, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 11 fit: [28.1 s]: Recall = 0.31990, Jaccard score = 0.2359, loss = 0.257350, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 12 fit: [27.9 s]: Recall = 0.32534, Jaccard score = 0.2409, loss = 0.247520, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 13 fit: [28.6 s]: Recall = 0.32954, Jaccard score = 0.2448, loss = 0.237453, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 14 fit: [28.6 s]: Recall = 0.33210, Jaccard score = 0.2471, loss = 0.229997, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 15 fit: [28.1 s]: Recall = 0.33404, Jaccard score = 0.2490, loss = 0.219880, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 16 fit: [28.5 s]: Recall = 0.33949, Jaccard score = 0.2540, loss = 0.212783, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 17 fit: [28.6 s]: Recall = 0.33792, Jaccard score = 0.2526, loss = 0.204192, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 18 fit: [28.5 s]: Recall = 0.33730, Jaccard score = 0.2520, loss = 0.197066, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 19 fit: [28.0 s]: Recall = 0.34193, Jaccard score = 0.2563, loss = 0.190394, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 20 fit: [28.2 s]: Recall = 0.34305, Jaccard score = 0.2574, loss = 0.184320, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 21 fit: [28.2 s]: Recall = 0.34862, Jaccard score = 0.2627, loss = 0.178095, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 22 fit: [28.3 s]: Recall = 0.34768, Jaccard score = 0.2618, loss = 0.170336, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 23 fit: [28.1 s]: Recall = 0.35069, Jaccard score = 0.2646, loss = 0.165142, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 24 fit: [28.5 s]: Recall = 0.35263, Jaccard score = 0.2665, loss = 0.160884, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 25 fit: [28.4 s]: Recall = 0.35620, Jaccard score = 0.2699, loss = 0.154547, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 26 fit: [28.1 s]: Recall = 0.35476, Jaccard score = 0.2685, loss = 0.149287, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 27 fit: [28.4 s]: Recall = 0.35469, Jaccard score = 0.2685, loss = 0.145224, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 28 fit: [28.5 s]: Recall = 0.35826, Jaccard score = 0.2719, loss = 0.141765, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 29 fit: [28.1 s]: Recall = 0.35982, Jaccard score = 0.2734, loss = 0.136871, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 30 fit: [28.4 s]: Recall = 0.35932, Jaccard score = 0.2729, loss = 0.132435, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 31 fit: [28.3 s]: Recall = 0.36364, Jaccard score = 0.2771, loss = 0.129580, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 32 fit: [28.1 s]: Recall = 0.35982, Jaccard score = 0.2734, loss = 0.125545, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 33 fit: [28.4 s]: Recall = 0.36333, Jaccard score = 0.2768, loss = 0.122520, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 34 fit: [28.3 s]: Recall = 0.36439, Jaccard score = 0.2779, loss = 0.119348, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 35 fit: [28.4 s]: Recall = 0.36777, Jaccard score = 0.2812, loss = 0.115951, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 36 fit: [28.2 s]: Recall = 0.36564, Jaccard score = 0.2791, loss = 0.114095, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 37 fit: [28.0 s]: Recall = 0.36959, Jaccard score = 0.2829, loss = 0.111548, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 38 fit: [28.2 s]: Recall = 0.36977, Jaccard score = 0.2831, loss = 0.108364, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 39 fit: [28.4 s]: Recall = 0.37334, Jaccard score = 0.2866, loss = 0.105824, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 40 fit: [28.6 s]: Recall = 0.37247, Jaccard score = 0.2858, loss = 0.103069, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 41 fit: [28.5 s]: Recall = 0.36959, Jaccard score = 0.2829, loss = 0.100749, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 42 fit: [28.5 s]: Recall = 0.37365, Jaccard score = 0.2869, loss = 0.098991, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 43 fit: [28.3 s]: Recall = 0.37728, Jaccard score = 0.2905, loss = 0.097868, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 44 fit: [28.3 s]: Recall = 0.37459, Jaccard score = 0.2879, loss = 0.094871, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 45 fit: [28.7 s]: Recall = 0.37628, Jaccard score = 0.2895, loss = 0.092781, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 46 fit: [28.5 s]: Recall = 0.37641, Jaccard score = 0.2897, loss = 0.091010, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 47 fit: [28.3 s]: Recall = 0.37372, Jaccard score = 0.2870, loss = 0.089632, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 48 fit: [28.1 s]: Recall = 0.37916, Jaccard score = 0.2924, loss = 0.087498, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 49 fit: [28.2 s]: Recall = 0.37472, Jaccard score = 0.2880, loss = 0.086808, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 50 fit: [28.3 s]: Recall = 0.37829, Jaccard score = 0.2915, loss = 0.084340, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 51 fit: [28.6 s]: Recall = 0.38041, Jaccard score = 0.2937, loss = 0.082978, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 52 fit: [28.4 s]: Recall = 0.37553, Jaccard score = 0.2888, loss = 0.081319, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 53 fit: [28.2 s]: Recall = 0.37753, Jaccard score = 0.2908, loss = 0.079945, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 54 fit: [28.2 s]: Recall = 0.38029, Jaccard score = 0.2935, loss = 0.078142, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 55 fit: [28.2 s]: Recall = 0.38242, Jaccard score = 0.2957, loss = 0.078068, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 56 fit: [28.1 s]: Recall = 0.37979, Jaccard score = 0.2930, loss = 0.076991, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 57 fit: [28.4 s]: Recall = 0.38154, Jaccard score = 0.2948, loss = 0.075658, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 58 fit: [28.3 s]: Recall = 0.38116, Jaccard score = 0.2944, loss = 0.073774, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 59 fit: [28.3 s]: Recall = 0.38041, Jaccard score = 0.2937, loss = 0.073491, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 60 fit: [28.2 s]: Recall = 0.37929, Jaccard score = 0.2925, loss = 0.071692, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 61 fit: [28.1 s]: Recall = 0.38373, Jaccard score = 0.2970, loss = 0.071507, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 62 fit: [28.2 s]: Recall = 0.38592, Jaccard score = 0.2992, loss = 0.071604, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 63 fit: [28.4 s]: Recall = 0.38179, Jaccard score = 0.2950, loss = 0.068996, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 64 fit: [28.2 s]: Recall = 0.38492, Jaccard score = 0.2982, loss = 0.067839, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 65 fit: [28.4 s]: Recall = 0.38229, Jaccard score = 0.2955, loss = 0.066478, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 66 fit: [28.2 s]: Recall = 0.38335, Jaccard score = 0.2966, loss = 0.065986, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 67 fit: [28.2 s]: Recall = 0.38849, Jaccard score = 0.3018, loss = 0.065816, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 68 fit: [28.4 s]: Recall = 0.38154, Jaccard score = 0.2948, loss = 0.065362, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 69 fit: [28.3 s]: Recall = 0.38579, Jaccard score = 0.2991, loss = 0.063973, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 70 fit: [28.2 s]: Recall = 0.38661, Jaccard score = 0.2999, loss = 0.062622, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 71 fit: [28.3 s]: Recall = 0.38586, Jaccard score = 0.2991, loss = 0.062386, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 72 fit: [28.3 s]: Recall = 0.38229, Jaccard score = 0.2955, loss = 0.061508, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 73 fit: [28.4 s]: Recall = 0.38429, Jaccard score = 0.2975, loss = 0.061085, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [28.0 s]: Recall = 0.38792, Jaccard score = 0.3012, loss = 0.060104, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 75 fit: [28.2 s]: Recall = 0.38667, Jaccard score = 0.2999, loss = 0.059869, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 76 fit: [28.4 s]: Recall = 0.38636, Jaccard score = 0.2996, loss = 0.058569, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 77 fit: [28.2 s]: Recall = 0.38855, Jaccard score = 0.3018, loss = 0.057635, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 78 fit: [28.1 s]: Recall = 0.38755, Jaccard score = 0.3008, loss = 0.057262, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 79 fit: [28.2 s]: Recall = 0.38798, Jaccard score = 0.3013, loss = 0.057878, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 80 fit: [28.1 s]: Recall = 0.38442, Jaccard score = 0.2977, loss = 0.056072, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 81 fit: [28.3 s]: Recall = 0.38717, Jaccard score = 0.3004, loss = 0.056075, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 82 fit: [28.3 s]: Recall = 0.38517, Jaccard score = 0.2984, loss = 0.055654, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 83 fit: [28.2 s]: Recall = 0.39005, Jaccard score = 0.3034, loss = 0.054846, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 84 fit: [28.4 s]: Recall = 0.38617, Jaccard score = 0.2994, loss = 0.054293, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 85 fit: [28.3 s]: Recall = 0.38692, Jaccard score = 0.3002, loss = 0.054189, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 86 fit: [28.1 s]: Recall = 0.38849, Jaccard score = 0.3018, loss = 0.052917, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 87 fit: [28.5 s]: Recall = 0.38949, Jaccard score = 0.3028, loss = 0.052475, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 88 fit: [28.3 s]: Recall = 0.38761, Jaccard score = 0.3009, loss = 0.052245, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 89 fit: [28.2 s]: Recall = 0.39068, Jaccard score = 0.3040, loss = 0.051421, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 90 fit: [28.5 s]: Recall = 0.38780, Jaccard score = 0.3011, loss = 0.053706, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 91 fit: [28.2 s]: Recall = 0.38773, Jaccard score = 0.3010, loss = 0.051492, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 92 fit: [28.0 s]: Recall = 0.38373, Jaccard score = 0.2970, loss = 0.050134, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 93 fit: [28.1 s]: Recall = 0.39161, Jaccard score = 0.3049, loss = 0.049637, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 94 fit: [28.6 s]: Recall = 0.38636, Jaccard score = 0.2996, loss = 0.049980, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 95 fit: [28.0 s]: Recall = 0.38886, Jaccard score = 0.3021, loss = 0.049852, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 96 fit: [28.4 s]: Recall = 0.38961, Jaccard score = 0.3029, loss = 0.049373, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 97 fit: [28.3 s]: Recall = 0.38648, Jaccard score = 0.2997, loss = 0.048924, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 98 fit: [28.4 s]: Recall = 0.39030, Jaccard score = 0.3036, loss = 0.048133, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 99 fit: [28.0 s]: Recall = 0.39305, Jaccard score = 0.3064, loss = 0.048768, gradient norm = 1.0000, eval: [15.8 s]
# End. Best Iteration 99:  Recall = 0.3931, Jaccard score = 0.3064. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
# The average best performance after k-fold 4 is: Recall = 0.39214017670725765, Jaccard score = 0.3043475751630019
# 
# Performing k-fold 5
# Init: Recall = 0.0274, Jaccard score = 0.0166
# Iteration 0 fit: [29.8 s]: Recall = 0.21218, Jaccard score = 0.1447, loss = 0.436374, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 1 fit: [28.7 s]: Recall = 0.24641, Jaccard score = 0.1721, loss = 0.402173, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 2 fit: [28.6 s]: Recall = 0.26367, Jaccard score = 0.1864, loss = 0.380897, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 3 fit: [28.4 s]: Recall = 0.27667, Jaccard score = 0.1974, loss = 0.361935, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 4 fit: [28.3 s]: Recall = 0.28816, Jaccard score = 0.2073, loss = 0.345520, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 5 fit: [28.3 s]: Recall = 0.29495, Jaccard score = 0.2132, loss = 0.330275, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 6 fit: [28.4 s]: Recall = 0.30210, Jaccard score = 0.2195, loss = 0.316272, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 7 fit: [28.7 s]: Recall = 0.30851, Jaccard score = 0.2252, loss = 0.303712, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 8 fit: [28.6 s]: Recall = 0.30845, Jaccard score = 0.2252, loss = 0.291314, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 9 fit: [29.1 s]: Recall = 0.31611, Jaccard score = 0.2321, loss = 0.279285, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 10 fit: [28.3 s]: Recall = 0.32069, Jaccard score = 0.2362, loss = 0.268291, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 11 fit: [28.4 s]: Recall = 0.32013, Jaccard score = 0.2357, loss = 0.257440, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 12 fit: [28.6 s]: Recall = 0.32628, Jaccard score = 0.2413, loss = 0.248226, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 13 fit: [28.7 s]: Recall = 0.32823, Jaccard score = 0.2431, loss = 0.238367, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 14 fit: [28.6 s]: Recall = 0.33187, Jaccard score = 0.2465, loss = 0.228866, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 15 fit: [28.5 s]: Recall = 0.33407, Jaccard score = 0.2485, loss = 0.221301, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 16 fit: [29.1 s]: Recall = 0.33507, Jaccard score = 0.2495, loss = 0.212813, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 17 fit: [28.5 s]: Recall = 0.33965, Jaccard score = 0.2538, loss = 0.204918, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 18 fit: [28.4 s]: Recall = 0.34091, Jaccard score = 0.2549, loss = 0.197117, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 19 fit: [28.6 s]: Recall = 0.34349, Jaccard score = 0.2574, loss = 0.190248, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 20 fit: [28.9 s]: Recall = 0.34449, Jaccard score = 0.2583, loss = 0.184192, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 21 fit: [28.7 s]: Recall = 0.34556, Jaccard score = 0.2593, loss = 0.177219, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 22 fit: [28.6 s]: Recall = 0.35027, Jaccard score = 0.2638, loss = 0.172682, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 23 fit: [28.6 s]: Recall = 0.34537, Jaccard score = 0.2591, loss = 0.165976, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 24 fit: [28.5 s]: Recall = 0.35077, Jaccard score = 0.2643, loss = 0.160305, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 25 fit: [28.6 s]: Recall = 0.35385, Jaccard score = 0.2672, loss = 0.155493, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 26 fit: [28.3 s]: Recall = 0.35359, Jaccard score = 0.2669, loss = 0.150390, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 27 fit: [28.6 s]: Recall = 0.35699, Jaccard score = 0.2702, loss = 0.146389, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 28 fit: [28.5 s]: Recall = 0.35824, Jaccard score = 0.2714, loss = 0.142225, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 29 fit: [28.9 s]: Recall = 0.35667, Jaccard score = 0.2699, loss = 0.137715, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 30 fit: [28.7 s]: Recall = 0.36358, Jaccard score = 0.2766, loss = 0.133045, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 31 fit: [28.9 s]: Recall = 0.36320, Jaccard score = 0.2762, loss = 0.130418, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 32 fit: [29.1 s]: Recall = 0.36308, Jaccard score = 0.2761, loss = 0.126645, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 33 fit: [28.9 s]: Recall = 0.36295, Jaccard score = 0.2760, loss = 0.123865, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 34 fit: [28.5 s]: Recall = 0.36396, Jaccard score = 0.2769, loss = 0.119469, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 35 fit: [28.4 s]: Recall = 0.36603, Jaccard score = 0.2790, loss = 0.116750, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 36 fit: [28.5 s]: Recall = 0.36433, Jaccard score = 0.2773, loss = 0.113849, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 37 fit: [28.4 s]: Recall = 0.36584, Jaccard score = 0.2788, loss = 0.112325, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 38 fit: [28.6 s]: Recall = 0.36904, Jaccard score = 0.2819, loss = 0.108762, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 39 fit: [28.7 s]: Recall = 0.36917, Jaccard score = 0.2820, loss = 0.107648, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 40 fit: [28.9 s]: Recall = 0.37124, Jaccard score = 0.2841, loss = 0.104941, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 41 fit: [28.7 s]: Recall = 0.36760, Jaccard score = 0.2805, loss = 0.101929, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 42 fit: [28.6 s]: Recall = 0.37231, Jaccard score = 0.2851, loss = 0.100082, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 43 fit: [28.3 s]: Recall = 0.37111, Jaccard score = 0.2839, loss = 0.097511, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 44 fit: [28.4 s]: Recall = 0.37388, Jaccard score = 0.2866, loss = 0.095549, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 45 fit: [28.8 s]: Recall = 0.36998, Jaccard score = 0.2828, loss = 0.093911, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 46 fit: [28.5 s]: Recall = 0.37538, Jaccard score = 0.2881, loss = 0.091402, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 47 fit: [28.4 s]: Recall = 0.37476, Jaccard score = 0.2875, loss = 0.090314, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 48 fit: [28.6 s]: Recall = 0.37589, Jaccard score = 0.2886, loss = 0.088566, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 49 fit: [28.5 s]: Recall = 0.37758, Jaccard score = 0.2903, loss = 0.086259, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 50 fit: [28.6 s]: Recall = 0.37846, Jaccard score = 0.2912, loss = 0.085221, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 51 fit: [28.9 s]: Recall = 0.37840, Jaccard score = 0.2911, loss = 0.083167, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 52 fit: [28.4 s]: Recall = 0.37865, Jaccard score = 0.2914, loss = 0.081209, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 53 fit: [28.8 s]: Recall = 0.38009, Jaccard score = 0.2928, loss = 0.080286, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 54 fit: [28.6 s]: Recall = 0.37702, Jaccard score = 0.2898, loss = 0.078711, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 55 fit: [28.6 s]: Recall = 0.37752, Jaccard score = 0.2903, loss = 0.078117, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 56 fit: [28.7 s]: Recall = 0.37959, Jaccard score = 0.2923, loss = 0.075656, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 57 fit: [28.6 s]: Recall = 0.37783, Jaccard score = 0.2906, loss = 0.076147, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 58 fit: [28.4 s]: Recall = 0.38135, Jaccard score = 0.2941, loss = 0.074246, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 59 fit: [28.7 s]: Recall = 0.37940, Jaccard score = 0.2921, loss = 0.073136, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 60 fit: [28.3 s]: Recall = 0.38053, Jaccard score = 0.2932, loss = 0.072211, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 61 fit: [28.9 s]: Recall = 0.38549, Jaccard score = 0.2982, loss = 0.070930, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 62 fit: [28.5 s]: Recall = 0.38166, Jaccard score = 0.2944, loss = 0.069629, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 63 fit: [28.7 s]: Recall = 0.38556, Jaccard score = 0.2983, loss = 0.069174, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 64 fit: [28.9 s]: Recall = 0.38468, Jaccard score = 0.2974, loss = 0.068418, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 65 fit: [28.7 s]: Recall = 0.38305, Jaccard score = 0.2958, loss = 0.066861, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 66 fit: [28.5 s]: Recall = 0.38424, Jaccard score = 0.2970, loss = 0.066437, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 67 fit: [28.6 s]: Recall = 0.38600, Jaccard score = 0.2987, loss = 0.066231, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 68 fit: [28.7 s]: Recall = 0.38386, Jaccard score = 0.2966, loss = 0.064738, gradient norm = 1.0000, eval: [15.9 s]
# Iteration 69 fit: [28.2 s]: Recall = 0.38575, Jaccard score = 0.2985, loss = 0.064351, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 70 fit: [28.2 s]: Recall = 0.38380, Jaccard score = 0.2965, loss = 0.061986, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 71 fit: [28.4 s]: Recall = 0.38769, Jaccard score = 0.3004, loss = 0.061777, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 72 fit: [28.9 s]: Recall = 0.38706, Jaccard score = 0.2998, loss = 0.061788, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 73 fit: [28.8 s]: Recall = 0.38568, Jaccard score = 0.2984, loss = 0.060227, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 74 fit: [28.5 s]: Recall = 0.38229, Jaccard score = 0.2950, loss = 0.060110, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 75 fit: [28.3 s]: Recall = 0.38374, Jaccard score = 0.2964, loss = 0.059749, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 76 fit: [28.7 s]: Recall = 0.38374, Jaccard score = 0.2964, loss = 0.057103, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 77 fit: [28.6 s]: Recall = 0.38794, Jaccard score = 0.3007, loss = 0.058257, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 78 fit: [28.4 s]: Recall = 0.38662, Jaccard score = 0.2993, loss = 0.056875, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 79 fit: [28.7 s]: Recall = 0.38920, Jaccard score = 0.3019, loss = 0.056153, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 80 fit: [28.8 s]: Recall = 0.38851, Jaccard score = 0.3012, loss = 0.055509, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 81 fit: [28.2 s]: Recall = 0.38518, Jaccard score = 0.2979, loss = 0.055192, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 82 fit: [28.7 s]: Recall = 0.38675, Jaccard score = 0.2995, loss = 0.056425, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 83 fit: [28.5 s]: Recall = 0.38857, Jaccard score = 0.3013, loss = 0.056838, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 84 fit: [28.9 s]: Recall = 0.38644, Jaccard score = 0.2992, loss = 0.053453, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 85 fit: [28.3 s]: Recall = 0.38845, Jaccard score = 0.3012, loss = 0.053649, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 86 fit: [28.3 s]: Recall = 0.38487, Jaccard score = 0.2976, loss = 0.053268, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 87 fit: [28.6 s]: Recall = 0.38851, Jaccard score = 0.3012, loss = 0.052818, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 88 fit: [28.6 s]: Recall = 0.38826, Jaccard score = 0.3010, loss = 0.052823, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 89 fit: [28.5 s]: Recall = 0.38857, Jaccard score = 0.3013, loss = 0.051677, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 90 fit: [28.8 s]: Recall = 0.39140, Jaccard score = 0.3042, loss = 0.052703, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 91 fit: [28.7 s]: Recall = 0.38976, Jaccard score = 0.3025, loss = 0.051212, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 92 fit: [28.5 s]: Recall = 0.38832, Jaccard score = 0.3011, loss = 0.050877, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 93 fit: [29.2 s]: Recall = 0.38593, Jaccard score = 0.2987, loss = 0.050930, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 94 fit: [28.7 s]: Recall = 0.38694, Jaccard score = 0.2997, loss = 0.051124, gradient norm = 1.0000, eval: [15.6 s]
# Iteration 95 fit: [28.3 s]: Recall = 0.38819, Jaccard score = 0.3009, loss = 0.050082, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 96 fit: [28.5 s]: Recall = 0.38826, Jaccard score = 0.3010, loss = 0.049173, gradient norm = 1.0000, eval: [15.8 s]
# Iteration 97 fit: [28.5 s]: Recall = 0.38757, Jaccard score = 0.3003, loss = 0.049972, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 98 fit: [28.5 s]: Recall = 0.39253, Jaccard score = 0.3053, loss = 0.050442, gradient norm = 1.0000, eval: [15.7 s]
# Iteration 99 fit: [28.8 s]: Recall = 0.39033, Jaccard score = 0.3031, loss = 0.048285, gradient norm = 1.0000, eval: [15.7 s]
# End. Best Iteration 98:  Recall = 0.3925, Jaccard score = 0.3053. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569712872.h5
# The average best performance after k-fold 5 is: Recall = 0.39221763587130065, Jaccard score = 0.30454087150092024
