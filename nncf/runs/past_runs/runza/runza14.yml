--nn_model: NeuMF
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "400"
--lr: "0.000003"
--num_factors: "94"
--early_stopping: "400"
--layers: "[512,750,350,96]"
--reg_layers: "[0,0,0,0]"
--test_dataset: "1"
--mf_pretrain: "Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5"
--mlp_pretrain: "Pretrain/_MLP_8_[512,750,350,96]_1569796063.h5"

# Launched by terminal.
# NeuMF arguments: Namespace(MLP_variant='', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=1e-05, mf_pretrain='Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5', mlp_pretrain='Pretrain/_MLP_8_[512,750,350,96]_1569796063.h5', nn_model='NeuMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_94_[512,750,350,96]_1569832218.h5
# --weights_path: Pretrain/_NeuMF_94_[512,750,350,96]_1569832218.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# Load pretrained GMF (Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5) and MLP (Pretrain/_MLP_8_[512,750,350,96]_1569796063.h5) models done. 
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# mlp_embedding_user (Embedding)  (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           mlp_embedding_user[0][0]         
# __________________________________________________________________________________________________
# mlp_embedding_item (Embedding)  (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 256)          0           flatten_3[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           mlp_embedding_item[0][0]         
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_3[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_4 (Dropout)             (None, 256)          0           flatten_4[0][0]                  
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_4[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_2[0][0]              
# __________________________________________________________________________________________________
# mf_embedding_user (Embedding)   (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# mf_embedding_item (Embedding)   (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_5 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           mf_embedding_user[0][0]          
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           mf_embedding_item[0][0]          
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_5[0][0]                  
# __________________________________________________________________________________________________
# mf_bn_user (BatchNormalization) (None, 94)           376         flatten_1[0][0]                  
# __________________________________________________________________________________________________
# mf_bn_item (BatchNormalization) (None, 94)           376         flatten_2[0][0]                  
# __________________________________________________________________________________________________
# dropout_6 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 94)           0           mf_bn_user[0][0]                 
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 94)           0           mf_bn_item[0][0]                 
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_6[0][0]                  
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           dropout_1[0][0]                  
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# dropout_7 (Dropout)             (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 190)          0           multiply_1[0][0]                 
#                                                                  dropout_7[0][0]                  
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            191         concatenate_3[0][0]              
# ==================================================================================================
# Total params: 9,132,239
# Trainable params: 9,131,863
# Non-trainable params: 376
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.2082, Jaccard score = 0.1410
# Model test performed 
# Recall score: 0.20787770586922563     Jaccard score: 0.1422245972975036# Model test performed 
# Recall score: 0.3833965632671279     Jaccard score: 0.13460785081877302


# Launched by terminal.
# NeuMF arguments: Namespace(MLP_variant='', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=400, epochs=400, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=3e-06, mf_pretrain='Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5', mlp_pretrain='Pretrain/_MLP_8_[512,750,350,96]_1569796063.h5', nn_model='NeuMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_94_[512,750,350,96]_1569834026.h5
--weights_path: Pretrain/_NeuMF_94_[512,750,350,96]_1569834026.h5
# Load data done [1.6 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# Load pretrained GMF (Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5) and MLP (Pretrain/_MLP_8_[512,750,350,96]_1569796063.h5) models done. 
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# mlp_embedding_user (Embedding)  (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           mlp_embedding_user[0][0]         
# __________________________________________________________________________________________________
# mlp_embedding_item (Embedding)  (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_3 (Dropout)             (None, 256)          0           flatten_3[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           mlp_embedding_item[0][0]         
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           dropout_3[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_4 (Dropout)             (None, 256)          0           flatten_4[0][0]                  
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  dropout_4[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_2[0][0]              
# __________________________________________________________________________________________________
# mf_embedding_user (Embedding)   (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# mf_embedding_item (Embedding)   (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_5 (Dropout)             (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           mf_embedding_user[0][0]          
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           mf_embedding_item[0][0]          
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_5[0][0]                  
# __________________________________________________________________________________________________
# mf_bn_user (BatchNormalization) (None, 94)           376         flatten_1[0][0]                  
# __________________________________________________________________________________________________
# mf_bn_item (BatchNormalization) (None, 94)           376         flatten_2[0][0]                  
# __________________________________________________________________________________________________
# dropout_6 (Dropout)             (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 94)           0           mf_bn_user[0][0]                 
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 94)           0           mf_bn_item[0][0]                 
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_6[0][0]                  
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           dropout_1[0][0]                  
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# dropout_7 (Dropout)             (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 190)          0           multiply_1[0][0]                 
#                                                                  dropout_7[0][0]                  
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            191         concatenate_3[0][0]              
# ==================================================================================================
# Total params: 9,132,239
# Trainable params: 9,131,863
# Non-trainable params: 376
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.3765, Jaccard score = 0.1295
# Iteration 0 fit: [41.6 s]: Recall = 0.37366, Jaccard score = 0.1284, loss = 0.016244, gradient norm = 1.0000, eval: [51.4 s]
# Iteration 1 fit: [40.0 s]: Recall = 0.37274, Jaccard score = 0.1280, loss = 0.014935, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 2 fit: [40.0 s]: Recall = 0.37263, Jaccard score = 0.1280, loss = 0.016007, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 3 fit: [40.1 s]: Recall = 0.37194, Jaccard score = 0.1277, loss = 0.015392, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 4 fit: [40.0 s]: Recall = 0.37229, Jaccard score = 0.1278, loss = 0.015558, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 5 fit: [40.1 s]: Recall = 0.37274, Jaccard score = 0.1280, loss = 0.015941, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 6 fit: [40.0 s]: Recall = 0.37229, Jaccard score = 0.1278, loss = 0.015656, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 7 fit: [40.0 s]: Recall = 0.37229, Jaccard score = 0.1278, loss = 0.015176, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 8 fit: [40.0 s]: Recall = 0.37172, Jaccard score = 0.1276, loss = 0.015064, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 9 fit: [40.0 s]: Recall = 0.37183, Jaccard score = 0.1277, loss = 0.015086, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 10 fit: [40.0 s]: Recall = 0.37172, Jaccard score = 0.1276, loss = 0.015523, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 11 fit: [40.0 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.014590, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 12 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014633, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 13 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014687, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 14 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014323, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 15 fit: [40.1 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.015079, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 16 fit: [40.7 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014984, gradient norm = 1.0000, eval: [51.4 s]
# Iteration 17 fit: [40.5 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.015036, gradient norm = 1.0000, eval: [52.0 s]
# Iteration 18 fit: [40.2 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.015161, gradient norm = 1.0000, eval: [52.0 s]
# Iteration 19 fit: [40.7 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.015157, gradient norm = 1.0000, eval: [52.2 s]
# Iteration 20 fit: [40.7 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014515, gradient norm = 1.0000, eval: [51.2 s]
# Iteration 21 fit: [40.7 s]: Recall = 0.37183, Jaccard score = 0.1277, loss = 0.014833, gradient norm = 1.0000, eval: [53.1 s]
# Iteration 22 fit: [41.1 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.014682, gradient norm = 1.0000, eval: [53.9 s]
# Iteration 23 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.014740, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 24 fit: [40.1 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.015020, gradient norm = 1.0000, eval: [52.1 s]
# Iteration 25 fit: [40.9 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.014782, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 26 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.014678, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 27 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.014846, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 28 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.015443, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 29 fit: [40.1 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.015128, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 30 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.014804, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 31 fit: [40.1 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.014264, gradient norm = 1.0000, eval: [54.5 s]
# Iteration 32 fit: [41.3 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.014471, gradient norm = 1.0000, eval: [54.9 s]
# Iteration 33 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.014651, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 34 fit: [40.3 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.014432, gradient norm = 1.0000, eval: [51.2 s]
# Iteration 35 fit: [40.1 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.014849, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 36 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.014190, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 37 fit: [40.0 s]: Recall = 0.37172, Jaccard score = 0.1276, loss = 0.014894, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 38 fit: [40.0 s]: Recall = 0.37194, Jaccard score = 0.1277, loss = 0.014681, gradient norm = 1.0000, eval: [54.8 s]
# Iteration 39 fit: [40.2 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.014487, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 40 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.014770, gradient norm = 1.0000, eval: [53.8 s]
# Iteration 41 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.014397, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 42 fit: [40.1 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.014558, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 43 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.014575, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 44 fit: [40.7 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.014531, gradient norm = 1.0000, eval: [58.2 s]
# Iteration 45 fit: [40.1 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.014115, gradient norm = 1.0000, eval: [54.9 s]
# Iteration 46 fit: [40.5 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.013722, gradient norm = 1.0000, eval: [55.5 s]
# Iteration 47 fit: [40.1 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014220, gradient norm = 1.0000, eval: [53.4 s]
# Iteration 48 fit: [40.1 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.014112, gradient norm = 1.0000, eval: [52.5 s]
# Iteration 49 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.014084, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 50 fit: [40.0 s]: Recall = 0.37183, Jaccard score = 0.1277, loss = 0.013878, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 51 fit: [40.0 s]: Recall = 0.37206, Jaccard score = 0.1277, loss = 0.014791, gradient norm = 1.0000, eval: [52.2 s]
# Iteration 52 fit: [40.3 s]: Recall = 0.37183, Jaccard score = 0.1277, loss = 0.014460, gradient norm = 1.0000, eval: [56.9 s]
# Iteration 53 fit: [41.3 s]: Recall = 0.37229, Jaccard score = 0.1278, loss = 0.014279, gradient norm = 1.0000, eval: [52.8 s]
# Iteration 54 fit: [40.0 s]: Recall = 0.37194, Jaccard score = 0.1277, loss = 0.013922, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 55 fit: [40.6 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.014157, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 56 fit: [40.2 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014479, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 57 fit: [40.1 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.014063, gradient norm = 1.0000, eval: [52.4 s]
# Iteration 58 fit: [40.0 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.014009, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 59 fit: [40.1 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.014043, gradient norm = 1.0000, eval: [58.9 s]
# Iteration 60 fit: [40.1 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.013343, gradient norm = 1.0000, eval: [57.8 s]
# Iteration 61 fit: [41.4 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.013868, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 62 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.013976, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 63 fit: [40.1 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.013700, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 64 fit: [40.1 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.013508, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 65 fit: [40.1 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.013640, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 66 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014241, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 67 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.014204, gradient norm = 1.0000, eval: [51.2 s]
# Iteration 68 fit: [40.2 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.014131, gradient norm = 1.0000, eval: [51.7 s]
# Iteration 69 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.013753, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 70 fit: [40.0 s]: Recall = 0.37183, Jaccard score = 0.1277, loss = 0.014365, gradient norm = 1.0000, eval: [51.3 s]
# Iteration 71 fit: [40.2 s]: Recall = 0.37183, Jaccard score = 0.1277, loss = 0.013712, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 72 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.013361, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 73 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.013479, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 74 fit: [40.0 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.013992, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 75 fit: [40.0 s]: Recall = 0.37194, Jaccard score = 0.1277, loss = 0.013397, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 76 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.013736, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 77 fit: [40.0 s]: Recall = 0.37172, Jaccard score = 0.1276, loss = 0.013625, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 78 fit: [40.1 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.014158, gradient norm = 1.0000, eval: [51.0 s]
# Iteration 79 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.013624, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 80 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.014302, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 81 fit: [40.3 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.014104, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 82 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013912, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 83 fit: [40.3 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.014028, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 84 fit: [40.1 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013827, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 85 fit: [40.1 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.013521, gradient norm = 1.0000, eval: [51.8 s]
# Iteration 86 fit: [40.1 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013797, gradient norm = 1.0000, eval: [51.4 s]
# Iteration 87 fit: [40.1 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.013451, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 88 fit: [41.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.013863, gradient norm = 1.0000, eval: [51.4 s]
# Iteration 89 fit: [40.2 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.013654, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 90 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013877, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 91 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.013777, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 92 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013666, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 93 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.013733, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 94 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.013486, gradient norm = 1.0000, eval: [52.1 s]
# Iteration 95 fit: [40.1 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012714, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 96 fit: [40.2 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013351, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 97 fit: [40.1 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013755, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 98 fit: [40.1 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013856, gradient norm = 1.0000, eval: [51.4 s]
# Iteration 99 fit: [40.2 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013237, gradient norm = 1.0000, eval: [52.2 s]
# Iteration 100 fit: [40.3 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.013646, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 101 fit: [40.1 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013672, gradient norm = 1.0000, eval: [51.2 s]
# Iteration 102 fit: [40.3 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013759, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 103 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012647, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 104 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013120, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 105 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013318, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 106 fit: [40.3 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013260, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 107 fit: [40.4 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013762, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 108 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.013220, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 109 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.013701, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 110 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013797, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 111 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013306, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 112 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012877, gradient norm = 1.0000, eval: [51.0 s]
# Iteration 113 fit: [40.3 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.013170, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 114 fit: [40.2 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013258, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 115 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013513, gradient norm = 1.0000, eval: [51.5 s]
# Iteration 116 fit: [40.1 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013281, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 117 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.013025, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 118 fit: [40.2 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012999, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 119 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012974, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 120 fit: [40.1 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.012778, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 121 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.013000, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 122 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013044, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 123 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.013078, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 124 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012997, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 125 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012989, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 126 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.013090, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 127 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012735, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 128 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012728, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 129 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012834, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 130 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013073, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 131 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012680, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 132 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012589, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 133 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012820, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 134 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.012517, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 135 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012903, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 136 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012486, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 137 fit: [40.1 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.013070, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 138 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012973, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 139 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.012875, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 140 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.013046, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 141 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012874, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 142 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.013143, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 143 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012480, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 144 fit: [40.1 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.013116, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 145 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.013014, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 146 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012856, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 147 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012613, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 148 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012543, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 149 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012620, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 150 fit: [40.1 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012803, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 151 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.013113, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 152 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012057, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 153 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012998, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 154 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.012585, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 155 fit: [40.2 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012603, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 156 fit: [40.0 s]: Recall = 0.37160, Jaccard score = 0.1276, loss = 0.012685, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 157 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.012919, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 158 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012270, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 159 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012991, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 160 fit: [40.0 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.012645, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 161 fit: [40.1 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012909, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 162 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.012556, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 163 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012773, gradient norm = 1.0000, eval: [51.2 s]
# Iteration 164 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012785, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 165 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.013004, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 166 fit: [40.1 s]: Recall = 0.37137, Jaccard score = 0.1275, loss = 0.012704, gradient norm = 1.0000, eval: [51.4 s]
# Iteration 167 fit: [40.1 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012762, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 168 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012279, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 169 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012777, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 170 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.012120, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 171 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.012531, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 172 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012631, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 173 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012869, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 174 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012103, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 175 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.012668, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 176 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012685, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 177 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012814, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 178 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012469, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 179 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012754, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 180 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.012687, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 181 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012454, gradient norm = 1.0000, eval: [51.0 s]
# Iteration 182 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012726, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 183 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012300, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 184 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012179, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 185 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012732, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 186 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.013148, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 187 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.012463, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 188 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012683, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 189 fit: [40.3 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012743, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 190 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012167, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 191 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.012213, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 192 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012764, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 193 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012302, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 194 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012257, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 195 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.012363, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 196 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012019, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 197 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.012295, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 198 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.012068, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 199 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.012163, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 200 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012265, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 201 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012580, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 202 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012363, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 203 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.012403, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 204 fit: [40.1 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011960, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 205 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.012215, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 206 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012301, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 207 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012658, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 208 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012180, gradient norm = 1.0000, eval: [51.0 s]
# Iteration 209 fit: [40.1 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.012411, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 210 fit: [40.3 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011754, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 211 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.012282, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 212 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.012074, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 213 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.012346, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 214 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012201, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 215 fit: [40.1 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012155, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 216 fit: [40.1 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012083, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 217 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012157, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 218 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012203, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 219 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012042, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 220 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.012063, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 221 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012244, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 222 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012013, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 223 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012151, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 224 fit: [41.1 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012304, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 225 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011990, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 226 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012164, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 227 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.012242, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 228 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012033, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 229 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012260, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 230 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011893, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 231 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012031, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 232 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012661, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 233 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.012008, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 234 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.012311, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 235 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.012428, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 236 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.011765, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 237 fit: [40.0 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.012486, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 238 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.011889, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 239 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.012195, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 240 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012055, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 241 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012171, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 242 fit: [40.4 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.012215, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 243 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.011916, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 244 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012139, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 245 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011686, gradient norm = 1.0000, eval: [51.0 s]
# Iteration 246 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012528, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 247 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012169, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 248 fit: [40.0 s]: Recall = 0.36955, Jaccard score = 0.1268, loss = 0.012324, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 249 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012022, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 250 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011711, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 251 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.012274, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 252 fit: [40.1 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012329, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 253 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.012184, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 254 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011818, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 255 fit: [40.1 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012091, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 256 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012101, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 257 fit: [40.0 s]: Recall = 0.36920, Jaccard score = 0.1266, loss = 0.011355, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 258 fit: [40.1 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011607, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 259 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.012110, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 260 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011452, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 261 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.012066, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 262 fit: [40.0 s]: Recall = 0.36909, Jaccard score = 0.1266, loss = 0.011693, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 263 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011929, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 264 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011722, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 265 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012032, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 266 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012015, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 267 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012071, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 268 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012046, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 269 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011732, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 270 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011881, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 271 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011661, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 272 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011229, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 273 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011765, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 274 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.012105, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 275 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.012155, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 276 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011711, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 277 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011860, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 278 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011577, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 279 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011596, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 280 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011683, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 281 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011672, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 282 fit: [40.1 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011984, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 283 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011821, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 284 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011980, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 285 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011657, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 286 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.011841, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 287 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.011960, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 288 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011926, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 289 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.011826, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 290 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.011978, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 291 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011438, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 292 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011796, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 293 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011870, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 294 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.011800, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 295 fit: [40.0 s]: Recall = 0.37092, Jaccard score = 0.1273, loss = 0.011135, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 296 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.012086, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 297 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011640, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 298 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011955, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 299 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011513, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 300 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011312, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 301 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011453, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 302 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011345, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 303 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011216, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 304 fit: [40.0 s]: Recall = 0.37103, Jaccard score = 0.1273, loss = 0.012037, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 305 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011739, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 306 fit: [40.1 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.011674, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 307 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011629, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 308 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011768, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 309 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011701, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 310 fit: [40.0 s]: Recall = 0.37149, Jaccard score = 0.1275, loss = 0.011967, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 311 fit: [40.0 s]: Recall = 0.37172, Jaccard score = 0.1276, loss = 0.011576, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 312 fit: [40.1 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011652, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 313 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.011778, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 314 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011846, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 315 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011772, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 316 fit: [40.0 s]: Recall = 0.37126, Jaccard score = 0.1274, loss = 0.011481, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 317 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.011205, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 318 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011665, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 319 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011678, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 320 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.011390, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 321 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011744, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 322 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011776, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 323 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.012129, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 324 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011908, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 325 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.011383, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 326 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011665, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 327 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011421, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 328 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011685, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 329 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011503, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 330 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.011244, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 331 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011743, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 332 fit: [40.0 s]: Recall = 0.37046, Jaccard score = 0.1271, loss = 0.011380, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 333 fit: [40.0 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.011134, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 334 fit: [40.0 s]: Recall = 0.36886, Jaccard score = 0.1265, loss = 0.011423, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 335 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011734, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 336 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011528, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 337 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011259, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 338 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011148, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 339 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011661, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 340 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011353, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 341 fit: [40.0 s]: Recall = 0.36955, Jaccard score = 0.1268, loss = 0.011516, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 342 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011183, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 343 fit: [40.0 s]: Recall = 0.37114, Jaccard score = 0.1274, loss = 0.011675, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 344 fit: [40.0 s]: Recall = 0.37057, Jaccard score = 0.1272, loss = 0.011179, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 345 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.011630, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 346 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011562, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 347 fit: [40.0 s]: Recall = 0.37069, Jaccard score = 0.1272, loss = 0.011582, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 348 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011273, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 349 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011765, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 350 fit: [40.0 s]: Recall = 0.37012, Jaccard score = 0.1270, loss = 0.011758, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 351 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.011156, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 352 fit: [40.0 s]: Recall = 0.37034, Jaccard score = 0.1271, loss = 0.010965, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 353 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011135, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 354 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011442, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 355 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.010933, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 356 fit: [40.0 s]: Recall = 0.36909, Jaccard score = 0.1266, loss = 0.011490, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 357 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.011265, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 358 fit: [40.0 s]: Recall = 0.37023, Jaccard score = 0.1270, loss = 0.011279, gradient norm = 1.0000, eval: [50.9 s]
# Iteration 359 fit: [40.0 s]: Recall = 0.36989, Jaccard score = 0.1269, loss = 0.011781, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 360 fit: [40.0 s]: Recall = 0.36955, Jaccard score = 0.1268, loss = 0.011211, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 361 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011525, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 362 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011403, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 363 fit: [40.1 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011235, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 364 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011325, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 365 fit: [40.0 s]: Recall = 0.36909, Jaccard score = 0.1266, loss = 0.011450, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 366 fit: [40.1 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011783, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 367 fit: [40.0 s]: Recall = 0.37080, Jaccard score = 0.1273, loss = 0.011235, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 368 fit: [40.0 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.011288, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 369 fit: [40.0 s]: Recall = 0.36909, Jaccard score = 0.1266, loss = 0.011203, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 370 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.010697, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 371 fit: [40.0 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.011298, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 372 fit: [40.0 s]: Recall = 0.36920, Jaccard score = 0.1266, loss = 0.011498, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 373 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.011151, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 374 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011583, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 375 fit: [40.1 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011280, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 376 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011181, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 377 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.011558, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 378 fit: [40.0 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.011059, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 379 fit: [40.0 s]: Recall = 0.36875, Jaccard score = 0.1265, loss = 0.011171, gradient norm = 1.0000, eval: [51.0 s]
# Iteration 380 fit: [40.0 s]: Recall = 0.36863, Jaccard score = 0.1264, loss = 0.010960, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 381 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011268, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 382 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.010742, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 383 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.011040, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 384 fit: [40.1 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011718, gradient norm = 1.0000, eval: [50.7 s]
# Iteration 385 fit: [40.0 s]: Recall = 0.36955, Jaccard score = 0.1268, loss = 0.010916, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 386 fit: [40.0 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.010966, gradient norm = 1.0000, eval: [50.4 s]
# Iteration 387 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011256, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 388 fit: [40.0 s]: Recall = 0.36977, Jaccard score = 0.1269, loss = 0.011068, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 389 fit: [40.1 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.011048, gradient norm = 1.0000, eval: [51.1 s]
# Iteration 390 fit: [40.0 s]: Recall = 0.36932, Jaccard score = 0.1267, loss = 0.011169, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 391 fit: [40.0 s]: Recall = 0.36886, Jaccard score = 0.1265, loss = 0.010856, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 392 fit: [40.0 s]: Recall = 0.36943, Jaccard score = 0.1267, loss = 0.011092, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 393 fit: [40.0 s]: Recall = 0.36909, Jaccard score = 0.1266, loss = 0.011069, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 394 fit: [40.0 s]: Recall = 0.36897, Jaccard score = 0.1265, loss = 0.010998, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 395 fit: [40.0 s]: Recall = 0.36955, Jaccard score = 0.1268, loss = 0.010990, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 396 fit: [40.1 s]: Recall = 0.36875, Jaccard score = 0.1265, loss = 0.011089, gradient norm = 1.0000, eval: [50.6 s]
# Iteration 397 fit: [40.0 s]: Recall = 0.36909, Jaccard score = 0.1266, loss = 0.011562, gradient norm = 1.0000, eval: [50.8 s]
# Iteration 398 fit: [40.1 s]: Recall = 0.36966, Jaccard score = 0.1268, loss = 0.011564, gradient norm = 1.0000, eval: [50.5 s]
# Iteration 399 fit: [40.0 s]: Recall = 0.37000, Jaccard score = 0.1269, loss = 0.011290, gradient norm = 1.0000, eval: [50.5 s]
# End. Best Iteration -1:  Recall = 0.3765, Jaccard score = 0.1295. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,750,350,96]_1569834026.h5
# Model test performed as in AutoML: 
# Recall_one score: 0.29346128096407054    Recall_zero score: 0.9981031019861638