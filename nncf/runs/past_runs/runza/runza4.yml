--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "100"
--lr: "0.002"
--early_stopping: "35"
--layers: "[512,750,350,96]"
--MLP_variant: "dropbn"
--reg_layers: "[0,0,0,0]"
--num_k_folds: "5"


# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='dropbn', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,750,350,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0, test_dataset=0, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
--weights_path: Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
# Load data done [1.6 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_7 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# bn_user (BatchNormalization)    (None, 256)          1024        flatten_7[0][0]                  
# __________________________________________________________________________________________________
# flatten_8 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# dropout_16 (Dropout)            (None, 256)          0           bn_user[0][0]                    
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# bn_item (BatchNormalization)    (None, 256)          1024        flatten_8[0][0]                  
# __________________________________________________________________________________________________
# concatenate_7 (Concatenate)     (None, 1256)         0           dropout_16[0][0]                 
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_17 (Dropout)            (None, 256)          0           bn_item[0][0]                    
# __________________________________________________________________________________________________
# concatenate_8 (Concatenate)     (None, 1512)         0           concatenate_7[0][0]              
#                                                                  dropout_17[0][0]                 
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 750)          1134750     concatenate_8[0][0]              
# __________________________________________________________________________________________________
# dropout_18 (Dropout)            (None, 750)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 350)          262850      dropout_18[0][0]                 
# __________________________________________________________________________________________________
# dropout_19 (Dropout)            (None, 350)          0           layer2[0][0]                     
# __________________________________________________________________________________________________
# layer3 (Dense)                  (None, 96)           33696       dropout_19[0][0]                 
# __________________________________________________________________________________________________
# dropout_20 (Dropout)            (None, 96)           0           layer3[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_20[0][0]                 
# ==================================================================================================
# Total params: 6,553,441
# Trainable params: 6,552,417
# Non-trainable params: 1,024
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0953, Jaccard score = 0.0297
# Iteration 0 fit: [33.8 s]: Recall = 0.43977, Jaccard score = 0.1537, loss = 0.435044, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 1 fit: [31.3 s]: Recall = 0.49457, Jaccard score = 0.1762, loss = 0.394392, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 2 fit: [30.7 s]: Recall = 0.52430, Jaccard score = 0.1888, loss = 0.367671, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 3 fit: [31.2 s]: Recall = 0.53587, Jaccard score = 0.1937, loss = 0.345716, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 4 fit: [31.2 s]: Recall = 0.54668, Jaccard score = 0.1984, loss = 0.326941, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 5 fit: [30.8 s]: Recall = 0.56029, Jaccard score = 0.2044, loss = 0.310183, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 6 fit: [31.1 s]: Recall = 0.56797, Jaccard score = 0.2078, loss = 0.294627, gradient norm = 1.0000, eval: [18.3 s]
# Iteration 7 fit: [31.2 s]: Recall = 0.57148, Jaccard score = 0.2093, loss = 0.279601, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 8 fit: [31.2 s]: Recall = 0.57852, Jaccard score = 0.2124, loss = 0.266173, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 9 fit: [30.8 s]: Recall = 0.57967, Jaccard score = 0.2129, loss = 0.252790, gradient norm = 1.0000, eval: [18.7 s]
# Iteration 10 fit: [31.2 s]: Recall = 0.58772, Jaccard score = 0.2165, loss = 0.240738, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 11 fit: [31.2 s]: Recall = 0.59060, Jaccard score = 0.2178, loss = 0.229004, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 12 fit: [31.3 s]: Recall = 0.59361, Jaccard score = 0.2192, loss = 0.217779, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 13 fit: [30.8 s]: Recall = 0.59693, Jaccard score = 0.2207, loss = 0.208319, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 14 fit: [31.3 s]: Recall = 0.59648, Jaccard score = 0.2205, loss = 0.198958, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 15 fit: [31.2 s]: Recall = 0.60141, Jaccard score = 0.2227, loss = 0.190325, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 16 fit: [31.3 s]: Recall = 0.60454, Jaccard score = 0.2241, loss = 0.181966, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 17 fit: [30.8 s]: Recall = 0.60774, Jaccard score = 0.2256, loss = 0.174934, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 18 fit: [31.3 s]: Recall = 0.61164, Jaccard score = 0.2274, loss = 0.167630, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 19 fit: [31.2 s]: Recall = 0.61560, Jaccard score = 0.2292, loss = 0.160802, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 20 fit: [31.3 s]: Recall = 0.61285, Jaccard score = 0.2279, loss = 0.154690, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 21 fit: [30.8 s]: Recall = 0.61777, Jaccard score = 0.2302, loss = 0.149880, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 22 fit: [31.3 s]: Recall = 0.61746, Jaccard score = 0.2300, loss = 0.144245, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 23 fit: [31.2 s]: Recall = 0.62609, Jaccard score = 0.2340, loss = 0.138502, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 24 fit: [31.3 s]: Recall = 0.62398, Jaccard score = 0.2330, loss = 0.134899, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 25 fit: [30.8 s]: Recall = 0.62398, Jaccard score = 0.2330, loss = 0.131300, gradient norm = 1.0000, eval: [18.6 s]
# Iteration 26 fit: [31.3 s]: Recall = 0.62513, Jaccard score = 0.2335, loss = 0.126632, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 27 fit: [31.2 s]: Recall = 0.62839, Jaccard score = 0.2351, loss = 0.122968, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 28 fit: [31.3 s]: Recall = 0.63018, Jaccard score = 0.2359, loss = 0.119300, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 29 fit: [30.8 s]: Recall = 0.62775, Jaccard score = 0.2348, loss = 0.116045, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 30 fit: [31.3 s]: Recall = 0.63031, Jaccard score = 0.2359, loss = 0.113550, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 31 fit: [31.2 s]: Recall = 0.63242, Jaccard score = 0.2369, loss = 0.109208, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 32 fit: [31.3 s]: Recall = 0.63216, Jaccard score = 0.2368, loss = 0.107156, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 33 fit: [30.8 s]: Recall = 0.63338, Jaccard score = 0.2374, loss = 0.104118, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 34 fit: [31.3 s]: Recall = 0.63434, Jaccard score = 0.2378, loss = 0.101941, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 35 fit: [31.2 s]: Recall = 0.63600, Jaccard score = 0.2386, loss = 0.099900, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 36 fit: [31.3 s]: Recall = 0.63951, Jaccard score = 0.2402, loss = 0.096996, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 37 fit: [30.8 s]: Recall = 0.63817, Jaccard score = 0.2396, loss = 0.095565, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 38 fit: [31.2 s]: Recall = 0.64022, Jaccard score = 0.2405, loss = 0.093404, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 39 fit: [31.2 s]: Recall = 0.63510, Jaccard score = 0.2382, loss = 0.090985, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 40 fit: [31.3 s]: Recall = 0.63862, Jaccard score = 0.2398, loss = 0.089387, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 41 fit: [30.8 s]: Recall = 0.64124, Jaccard score = 0.2410, loss = 0.087138, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 42 fit: [31.3 s]: Recall = 0.64162, Jaccard score = 0.2412, loss = 0.085169, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 43 fit: [31.2 s]: Recall = 0.64303, Jaccard score = 0.2419, loss = 0.083433, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 44 fit: [31.3 s]: Recall = 0.64118, Jaccard score = 0.2410, loss = 0.082816, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 45 fit: [30.8 s]: Recall = 0.64086, Jaccard score = 0.2408, loss = 0.080217, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 46 fit: [31.3 s]: Recall = 0.64214, Jaccard score = 0.2414, loss = 0.079961, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 47 fit: [31.2 s]: Recall = 0.64508, Jaccard score = 0.2428, loss = 0.077195, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 48 fit: [31.3 s]: Recall = 0.64207, Jaccard score = 0.2414, loss = 0.077111, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 49 fit: [30.8 s]: Recall = 0.64687, Jaccard score = 0.2436, loss = 0.075573, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 50 fit: [31.2 s]: Recall = 0.64923, Jaccard score = 0.2448, loss = 0.074113, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 51 fit: [31.2 s]: Recall = 0.64674, Jaccard score = 0.2436, loss = 0.072714, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 52 fit: [31.3 s]: Recall = 0.64655, Jaccard score = 0.2435, loss = 0.071927, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 53 fit: [30.8 s]: Recall = 0.64655, Jaccard score = 0.2435, loss = 0.070094, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 54 fit: [31.2 s]: Recall = 0.64169, Jaccard score = 0.2412, loss = 0.069035, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 55 fit: [31.2 s]: Recall = 0.64949, Jaccard score = 0.2449, loss = 0.067834, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 56 fit: [31.3 s]: Recall = 0.64354, Jaccard score = 0.2421, loss = 0.067366, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 57 fit: [30.8 s]: Recall = 0.64572, Jaccard score = 0.2431, loss = 0.066426, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 58 fit: [31.3 s]: Recall = 0.65090, Jaccard score = 0.2455, loss = 0.065276, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 59 fit: [31.2 s]: Recall = 0.65288, Jaccard score = 0.2465, loss = 0.064234, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 60 fit: [31.3 s]: Recall = 0.65243, Jaccard score = 0.2463, loss = 0.064226, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 61 fit: [30.8 s]: Recall = 0.64968, Jaccard score = 0.2450, loss = 0.062460, gradient norm = 1.0000, eval: [18.6 s]
# Iteration 62 fit: [31.2 s]: Recall = 0.65134, Jaccard score = 0.2457, loss = 0.062363, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 63 fit: [31.2 s]: Recall = 0.65134, Jaccard score = 0.2457, loss = 0.061771, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 64 fit: [31.3 s]: Recall = 0.65518, Jaccard score = 0.2476, loss = 0.061140, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 65 fit: [30.8 s]: Recall = 0.65083, Jaccard score = 0.2455, loss = 0.060148, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 66 fit: [31.3 s]: Recall = 0.65262, Jaccard score = 0.2463, loss = 0.059001, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 67 fit: [31.1 s]: Recall = 0.65480, Jaccard score = 0.2474, loss = 0.059123, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 68 fit: [31.3 s]: Recall = 0.65115, Jaccard score = 0.2457, loss = 0.057803, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 69 fit: [30.8 s]: Recall = 0.64834, Jaccard score = 0.2443, loss = 0.056906, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 70 fit: [31.3 s]: Recall = 0.65192, Jaccard score = 0.2460, loss = 0.057144, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 71 fit: [31.2 s]: Recall = 0.64412, Jaccard score = 0.2424, loss = 0.056206, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 72 fit: [31.2 s]: Recall = 0.64802, Jaccard score = 0.2442, loss = 0.055942, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 73 fit: [30.8 s]: Recall = 0.65288, Jaccard score = 0.2465, loss = 0.054241, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 74 fit: [31.2 s]: Recall = 0.65026, Jaccard score = 0.2452, loss = 0.054933, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 75 fit: [31.2 s]: Recall = 0.64923, Jaccard score = 0.2448, loss = 0.053851, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 76 fit: [31.3 s]: Recall = 0.65230, Jaccard score = 0.2462, loss = 0.053414, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 77 fit: [30.8 s]: Recall = 0.65045, Jaccard score = 0.2453, loss = 0.052483, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 78 fit: [31.3 s]: Recall = 0.65038, Jaccard score = 0.2453, loss = 0.052371, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 79 fit: [31.2 s]: Recall = 0.65243, Jaccard score = 0.2463, loss = 0.051739, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 80 fit: [31.3 s]: Recall = 0.64949, Jaccard score = 0.2449, loss = 0.051328, gradient norm = 1.0000, eval: [18.6 s]
# Iteration 81 fit: [30.8 s]: Recall = 0.65301, Jaccard score = 0.2465, loss = 0.050148, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 82 fit: [31.3 s]: Recall = 0.65275, Jaccard score = 0.2464, loss = 0.050838, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 83 fit: [31.2 s]: Recall = 0.65281, Jaccard score = 0.2464, loss = 0.049698, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 84 fit: [31.3 s]: Recall = 0.65051, Jaccard score = 0.2454, loss = 0.049487, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 85 fit: [30.8 s]: Recall = 0.65173, Jaccard score = 0.2459, loss = 0.049087, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 86 fit: [31.3 s]: Recall = 0.65147, Jaccard score = 0.2458, loss = 0.047752, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 87 fit: [31.2 s]: Recall = 0.65339, Jaccard score = 0.2467, loss = 0.048126, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 88 fit: [31.3 s]: Recall = 0.65588, Jaccard score = 0.2479, loss = 0.048282, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 89 fit: [30.8 s]: Recall = 0.65026, Jaccard score = 0.2452, loss = 0.047592, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 90 fit: [31.3 s]: Recall = 0.65000, Jaccard score = 0.2451, loss = 0.046674, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 91 fit: [31.2 s]: Recall = 0.64642, Jaccard score = 0.2434, loss = 0.046574, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 92 fit: [31.3 s]: Recall = 0.64994, Jaccard score = 0.2451, loss = 0.046268, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 93 fit: [30.8 s]: Recall = 0.64687, Jaccard score = 0.2436, loss = 0.045646, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 94 fit: [31.3 s]: Recall = 0.64879, Jaccard score = 0.2445, loss = 0.045796, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 95 fit: [31.2 s]: Recall = 0.63996, Jaccard score = 0.2404, loss = 0.045698, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 96 fit: [31.3 s]: Recall = 0.65288, Jaccard score = 0.2465, loss = 0.044551, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 97 fit: [30.8 s]: Recall = 0.65006, Jaccard score = 0.2451, loss = 0.044297, gradient norm = 1.0000, eval: [18.5 s]
# Iteration 98 fit: [31.3 s]: Recall = 0.65090, Jaccard score = 0.2455, loss = 0.044301, gradient norm = 1.0000, eval: [18.4 s]
# Iteration 99 fit: [31.2 s]: Recall = 0.65006, Jaccard score = 0.2451, loss = 0.043844, gradient norm = 1.0000, eval: [18.4 s]
# End. Best Iteration 88:  Recall = 0.6559, Jaccard score = 0.2479. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
# The average best performance after k-fold 1 is: Recall = 0.6558823529411765, Jaccard score = 0.2478855541056498
# 
# Performing k-fold 2
# Init: Recall = 0.0954, Jaccard score = 0.0302
# Iteration 0 fit: [33.8 s]: Recall = 0.43470, Jaccard score = 0.1542, loss = 0.434855, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 1 fit: [30.8 s]: Recall = 0.48658, Jaccard score = 0.1759, loss = 0.393624, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 2 fit: [30.8 s]: Recall = 0.51067, Jaccard score = 0.1862, loss = 0.367331, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 3 fit: [30.8 s]: Recall = 0.52826, Jaccard score = 0.1939, loss = 0.345898, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 4 fit: [30.8 s]: Recall = 0.54115, Jaccard score = 0.1996, loss = 0.327030, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 5 fit: [30.8 s]: Recall = 0.54991, Jaccard score = 0.2034, loss = 0.310610, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 6 fit: [30.8 s]: Recall = 0.55961, Jaccard score = 0.2078, loss = 0.293844, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 7 fit: [30.8 s]: Recall = 0.56787, Jaccard score = 0.2115, loss = 0.278858, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 8 fit: [30.8 s]: Recall = 0.57200, Jaccard score = 0.2134, loss = 0.265183, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 9 fit: [30.8 s]: Recall = 0.57813, Jaccard score = 0.2161, loss = 0.253243, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 10 fit: [30.8 s]: Recall = 0.57838, Jaccard score = 0.2163, loss = 0.240294, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 11 fit: [30.8 s]: Recall = 0.58740, Jaccard score = 0.2204, loss = 0.229946, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 12 fit: [30.8 s]: Recall = 0.58952, Jaccard score = 0.2213, loss = 0.219614, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 13 fit: [30.8 s]: Recall = 0.59365, Jaccard score = 0.2232, loss = 0.209182, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 14 fit: [30.8 s]: Recall = 0.59628, Jaccard score = 0.2244, loss = 0.201237, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 15 fit: [30.8 s]: Recall = 0.60141, Jaccard score = 0.2268, loss = 0.190661, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 16 fit: [30.8 s]: Recall = 0.60179, Jaccard score = 0.2270, loss = 0.183376, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 17 fit: [30.8 s]: Recall = 0.59954, Jaccard score = 0.2259, loss = 0.176855, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 18 fit: [30.8 s]: Recall = 0.60993, Jaccard score = 0.2308, loss = 0.169388, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 19 fit: [30.8 s]: Recall = 0.60799, Jaccard score = 0.2299, loss = 0.162507, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 20 fit: [30.8 s]: Recall = 0.61337, Jaccard score = 0.2324, loss = 0.158025, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 21 fit: [30.8 s]: Recall = 0.61293, Jaccard score = 0.2322, loss = 0.151864, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 22 fit: [30.8 s]: Recall = 0.61956, Jaccard score = 0.2353, loss = 0.146344, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 23 fit: [30.8 s]: Recall = 0.61794, Jaccard score = 0.2345, loss = 0.141047, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 24 fit: [30.8 s]: Recall = 0.62081, Jaccard score = 0.2359, loss = 0.136718, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 25 fit: [30.8 s]: Recall = 0.62463, Jaccard score = 0.2377, loss = 0.133796, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 26 fit: [30.8 s]: Recall = 0.62219, Jaccard score = 0.2365, loss = 0.128277, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 27 fit: [30.8 s]: Recall = 0.62601, Jaccard score = 0.2383, loss = 0.124093, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 28 fit: [30.8 s]: Recall = 0.62901, Jaccard score = 0.2397, loss = 0.120377, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 29 fit: [30.8 s]: Recall = 0.62545, Jaccard score = 0.2380, loss = 0.117507, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 30 fit: [30.8 s]: Recall = 0.62983, Jaccard score = 0.2401, loss = 0.114485, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 31 fit: [30.8 s]: Recall = 0.63371, Jaccard score = 0.2419, loss = 0.111510, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 32 fit: [30.8 s]: Recall = 0.63433, Jaccard score = 0.2422, loss = 0.108315, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 33 fit: [30.8 s]: Recall = 0.63120, Jaccard score = 0.2408, loss = 0.105532, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 34 fit: [30.7 s]: Recall = 0.63446, Jaccard score = 0.2423, loss = 0.103128, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 35 fit: [30.8 s]: Recall = 0.63358, Jaccard score = 0.2419, loss = 0.100593, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 36 fit: [30.7 s]: Recall = 0.63915, Jaccard score = 0.2445, loss = 0.098316, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 37 fit: [30.8 s]: Recall = 0.64322, Jaccard score = 0.2465, loss = 0.095544, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 38 fit: [30.8 s]: Recall = 0.64234, Jaccard score = 0.2461, loss = 0.094713, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 39 fit: [30.8 s]: Recall = 0.63971, Jaccard score = 0.2448, loss = 0.091792, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 40 fit: [30.8 s]: Recall = 0.64216, Jaccard score = 0.2460, loss = 0.089756, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 41 fit: [30.8 s]: Recall = 0.64247, Jaccard score = 0.2461, loss = 0.088384, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 42 fit: [30.8 s]: Recall = 0.64422, Jaccard score = 0.2469, loss = 0.087049, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 43 fit: [30.8 s]: Recall = 0.64034, Jaccard score = 0.2451, loss = 0.084310, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 44 fit: [30.8 s]: Recall = 0.64322, Jaccard score = 0.2465, loss = 0.082402, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 45 fit: [30.8 s]: Recall = 0.64247, Jaccard score = 0.2461, loss = 0.081294, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 46 fit: [30.8 s]: Recall = 0.63959, Jaccard score = 0.2447, loss = 0.079713, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 47 fit: [30.8 s]: Recall = 0.64159, Jaccard score = 0.2457, loss = 0.079703, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 48 fit: [30.8 s]: Recall = 0.64522, Jaccard score = 0.2474, loss = 0.077345, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 49 fit: [30.8 s]: Recall = 0.64097, Jaccard score = 0.2454, loss = 0.075402, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 50 fit: [30.8 s]: Recall = 0.64178, Jaccard score = 0.2458, loss = 0.073875, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 51 fit: [30.8 s]: Recall = 0.64328, Jaccard score = 0.2465, loss = 0.073196, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 52 fit: [30.8 s]: Recall = 0.64172, Jaccard score = 0.2458, loss = 0.072684, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 53 fit: [30.8 s]: Recall = 0.64541, Jaccard score = 0.2475, loss = 0.070615, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 54 fit: [30.8 s]: Recall = 0.64272, Jaccard score = 0.2462, loss = 0.070194, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 55 fit: [30.8 s]: Recall = 0.64773, Jaccard score = 0.2486, loss = 0.068841, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 56 fit: [30.8 s]: Recall = 0.64516, Jaccard score = 0.2474, loss = 0.067530, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 57 fit: [30.8 s]: Recall = 0.64910, Jaccard score = 0.2493, loss = 0.066808, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 58 fit: [30.8 s]: Recall = 0.65204, Jaccard score = 0.2507, loss = 0.065347, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 59 fit: [30.8 s]: Recall = 0.64647, Jaccard score = 0.2480, loss = 0.064261, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 60 fit: [30.8 s]: Recall = 0.64866, Jaccard score = 0.2491, loss = 0.063531, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 61 fit: [30.8 s]: Recall = 0.64591, Jaccard score = 0.2478, loss = 0.063400, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 62 fit: [30.8 s]: Recall = 0.64816, Jaccard score = 0.2488, loss = 0.062784, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 63 fit: [30.8 s]: Recall = 0.64773, Jaccard score = 0.2486, loss = 0.061482, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 64 fit: [30.8 s]: Recall = 0.64954, Jaccard score = 0.2495, loss = 0.060624, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 65 fit: [30.8 s]: Recall = 0.65073, Jaccard score = 0.2501, loss = 0.060224, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 66 fit: [30.8 s]: Recall = 0.65167, Jaccard score = 0.2505, loss = 0.059178, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 67 fit: [30.8 s]: Recall = 0.64791, Jaccard score = 0.2487, loss = 0.058990, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 68 fit: [30.8 s]: Recall = 0.64510, Jaccard score = 0.2474, loss = 0.058670, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 69 fit: [30.8 s]: Recall = 0.65042, Jaccard score = 0.2499, loss = 0.057298, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 70 fit: [30.8 s]: Recall = 0.64948, Jaccard score = 0.2495, loss = 0.056348, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 71 fit: [30.8 s]: Recall = 0.64910, Jaccard score = 0.2493, loss = 0.055891, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 72 fit: [30.8 s]: Recall = 0.65204, Jaccard score = 0.2507, loss = 0.054937, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 73 fit: [30.8 s]: Recall = 0.64754, Jaccard score = 0.2485, loss = 0.055014, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 74 fit: [30.8 s]: Recall = 0.64222, Jaccard score = 0.2460, loss = 0.053872, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 75 fit: [30.8 s]: Recall = 0.64747, Jaccard score = 0.2485, loss = 0.053824, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 76 fit: [30.8 s]: Recall = 0.64747, Jaccard score = 0.2485, loss = 0.053228, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 77 fit: [30.8 s]: Recall = 0.64735, Jaccard score = 0.2484, loss = 0.052896, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 78 fit: [30.8 s]: Recall = 0.64610, Jaccard score = 0.2478, loss = 0.051857, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 79 fit: [30.8 s]: Recall = 0.64528, Jaccard score = 0.2475, loss = 0.051924, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 80 fit: [30.8 s]: Recall = 0.64960, Jaccard score = 0.2495, loss = 0.051362, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 81 fit: [30.8 s]: Recall = 0.64679, Jaccard score = 0.2482, loss = 0.050491, gradient norm = 1.0000, eval: [18.8 s]
# Iteration 82 fit: [30.8 s]: Recall = 0.64278, Jaccard score = 0.2463, loss = 0.049913, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 83 fit: [30.8 s]: Recall = 0.64779, Jaccard score = 0.2487, loss = 0.049402, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 84 fit: [30.8 s]: Recall = 0.64485, Jaccard score = 0.2472, loss = 0.048939, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 85 fit: [30.8 s]: Recall = 0.64773, Jaccard score = 0.2486, loss = 0.048852, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 86 fit: [30.8 s]: Recall = 0.64585, Jaccard score = 0.2477, loss = 0.048585, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 87 fit: [30.8 s]: Recall = 0.64422, Jaccard score = 0.2469, loss = 0.047994, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 88 fit: [30.8 s]: Recall = 0.64666, Jaccard score = 0.2481, loss = 0.047809, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 89 fit: [30.8 s]: Recall = 0.65060, Jaccard score = 0.2500, loss = 0.047341, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 90 fit: [30.8 s]: Recall = 0.64960, Jaccard score = 0.2495, loss = 0.046888, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 91 fit: [30.8 s]: Recall = 0.64541, Jaccard score = 0.2475, loss = 0.047457, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 92 fit: [30.8 s]: Recall = 0.64222, Jaccard score = 0.2460, loss = 0.046812, gradient norm = 1.0000, eval: [18.9 s]
# Iteration 93 fit: [30.8 s]: Recall = 0.64666, Jaccard score = 0.2481, loss = 0.045085, gradient norm = 1.0000, eval: [18.9 s]
# End. Best Iteration 58:  Recall = 0.6520, Jaccard score = 0.2507. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
# The average best performance after k-fold 2 is: Recall = 0.6539628298907021, Jaccard score = 0.24929167021933113
# 
# Performing k-fold 3
# Init: Recall = 0.0953, Jaccard score = 0.0301
# Iteration 0 fit: [34.4 s]: Recall = 0.43737, Jaccard score = 0.1546, loss = 0.434707, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 1 fit: [31.3 s]: Recall = 0.48687, Jaccard score = 0.1751, loss = 0.394115, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 2 fit: [31.4 s]: Recall = 0.51288, Jaccard score = 0.1862, loss = 0.367588, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 3 fit: [31.3 s]: Recall = 0.53920, Jaccard score = 0.1977, loss = 0.345516, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 4 fit: [31.4 s]: Recall = 0.54915, Jaccard score = 0.2020, loss = 0.327192, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 5 fit: [31.3 s]: Recall = 0.55167, Jaccard score = 0.2032, loss = 0.310260, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 6 fit: [31.4 s]: Recall = 0.56206, Jaccard score = 0.2078, loss = 0.295091, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 7 fit: [31.3 s]: Recall = 0.56962, Jaccard score = 0.2112, loss = 0.280312, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 8 fit: [31.4 s]: Recall = 0.57434, Jaccard score = 0.2133, loss = 0.266545, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 9 fit: [31.3 s]: Recall = 0.57869, Jaccard score = 0.2152, loss = 0.253815, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 10 fit: [31.3 s]: Recall = 0.58385, Jaccard score = 0.2176, loss = 0.241855, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 11 fit: [31.3 s]: Recall = 0.58404, Jaccard score = 0.2177, loss = 0.231156, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 12 fit: [31.4 s]: Recall = 0.59223, Jaccard score = 0.2214, loss = 0.219820, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 13 fit: [31.3 s]: Recall = 0.59361, Jaccard score = 0.2220, loss = 0.210711, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 14 fit: [31.3 s]: Recall = 0.59689, Jaccard score = 0.2235, loss = 0.201584, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 15 fit: [31.3 s]: Recall = 0.59834, Jaccard score = 0.2242, loss = 0.192153, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 16 fit: [31.4 s]: Recall = 0.59746, Jaccard score = 0.2238, loss = 0.184063, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 17 fit: [31.3 s]: Recall = 0.59972, Jaccard score = 0.2248, loss = 0.176988, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 18 fit: [31.4 s]: Recall = 0.60778, Jaccard score = 0.2285, loss = 0.169695, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 19 fit: [31.3 s]: Recall = 0.61144, Jaccard score = 0.2302, loss = 0.163383, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 20 fit: [31.4 s]: Recall = 0.61288, Jaccard score = 0.2309, loss = 0.156873, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 21 fit: [31.4 s]: Recall = 0.61345, Jaccard score = 0.2312, loss = 0.152118, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 22 fit: [31.4 s]: Recall = 0.61742, Jaccard score = 0.2330, loss = 0.145941, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 23 fit: [31.3 s]: Recall = 0.61471, Jaccard score = 0.2318, loss = 0.141056, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 24 fit: [31.4 s]: Recall = 0.61685, Jaccard score = 0.2327, loss = 0.136643, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 25 fit: [31.3 s]: Recall = 0.61874, Jaccard score = 0.2336, loss = 0.132676, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 26 fit: [31.4 s]: Recall = 0.62246, Jaccard score = 0.2354, loss = 0.127961, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 27 fit: [31.3 s]: Recall = 0.62296, Jaccard score = 0.2356, loss = 0.123995, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 28 fit: [31.4 s]: Recall = 0.62548, Jaccard score = 0.2368, loss = 0.120691, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 29 fit: [31.3 s]: Recall = 0.62258, Jaccard score = 0.2354, loss = 0.117285, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 30 fit: [31.4 s]: Recall = 0.63046, Jaccard score = 0.2391, loss = 0.114429, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 31 fit: [31.3 s]: Recall = 0.62731, Jaccard score = 0.2376, loss = 0.110675, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 32 fit: [31.3 s]: Recall = 0.63285, Jaccard score = 0.2402, loss = 0.108274, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 33 fit: [31.3 s]: Recall = 0.62781, Jaccard score = 0.2379, loss = 0.104783, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 34 fit: [31.4 s]: Recall = 0.63008, Jaccard score = 0.2389, loss = 0.102784, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 35 fit: [31.4 s]: Recall = 0.63184, Jaccard score = 0.2398, loss = 0.100757, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 36 fit: [31.4 s]: Recall = 0.63392, Jaccard score = 0.2407, loss = 0.098372, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 37 fit: [31.3 s]: Recall = 0.63329, Jaccard score = 0.2404, loss = 0.096121, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 38 fit: [31.4 s]: Recall = 0.63682, Jaccard score = 0.2421, loss = 0.093385, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 39 fit: [31.3 s]: Recall = 0.63342, Jaccard score = 0.2405, loss = 0.092612, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 40 fit: [31.4 s]: Recall = 0.63461, Jaccard score = 0.2411, loss = 0.089544, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 41 fit: [31.3 s]: Recall = 0.63902, Jaccard score = 0.2431, loss = 0.088790, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 42 fit: [31.3 s]: Recall = 0.63285, Jaccard score = 0.2402, loss = 0.086593, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 43 fit: [31.3 s]: Recall = 0.63845, Jaccard score = 0.2429, loss = 0.084357, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 44 fit: [31.4 s]: Recall = 0.63965, Jaccard score = 0.2434, loss = 0.082994, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 45 fit: [31.3 s]: Recall = 0.64015, Jaccard score = 0.2437, loss = 0.081432, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 46 fit: [31.2 s]: Recall = 0.63833, Jaccard score = 0.2428, loss = 0.079595, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 47 fit: [31.3 s]: Recall = 0.64355, Jaccard score = 0.2453, loss = 0.078525, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 48 fit: [31.4 s]: Recall = 0.64299, Jaccard score = 0.2450, loss = 0.077569, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 49 fit: [31.3 s]: Recall = 0.64286, Jaccard score = 0.2450, loss = 0.075796, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 50 fit: [31.3 s]: Recall = 0.63883, Jaccard score = 0.2431, loss = 0.075169, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 51 fit: [31.3 s]: Recall = 0.64462, Jaccard score = 0.2458, loss = 0.073137, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 52 fit: [31.3 s]: Recall = 0.64601, Jaccard score = 0.2465, loss = 0.072017, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 53 fit: [31.4 s]: Recall = 0.64752, Jaccard score = 0.2472, loss = 0.071094, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 54 fit: [31.3 s]: Recall = 0.64576, Jaccard score = 0.2463, loss = 0.069209, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 55 fit: [31.3 s]: Recall = 0.64400, Jaccard score = 0.2455, loss = 0.069037, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 56 fit: [31.3 s]: Recall = 0.64576, Jaccard score = 0.2463, loss = 0.068643, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 57 fit: [31.3 s]: Recall = 0.64834, Jaccard score = 0.2476, loss = 0.067159, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 58 fit: [31.3 s]: Recall = 0.64173, Jaccard score = 0.2444, loss = 0.066379, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 59 fit: [31.3 s]: Recall = 0.64651, Jaccard score = 0.2467, loss = 0.065378, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 60 fit: [31.3 s]: Recall = 0.64670, Jaccard score = 0.2468, loss = 0.064871, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 61 fit: [31.3 s]: Recall = 0.64614, Jaccard score = 0.2465, loss = 0.063401, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 62 fit: [31.3 s]: Recall = 0.64299, Jaccard score = 0.2450, loss = 0.063365, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 63 fit: [31.3 s]: Recall = 0.64784, Jaccard score = 0.2473, loss = 0.062363, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 64 fit: [31.3 s]: Recall = 0.64910, Jaccard score = 0.2479, loss = 0.061450, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 65 fit: [31.3 s]: Recall = 0.64607, Jaccard score = 0.2465, loss = 0.060680, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 66 fit: [31.3 s]: Recall = 0.64947, Jaccard score = 0.2481, loss = 0.059743, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 67 fit: [31.4 s]: Recall = 0.64381, Jaccard score = 0.2454, loss = 0.059377, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 68 fit: [31.3 s]: Recall = 0.64721, Jaccard score = 0.2470, loss = 0.058960, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 69 fit: [31.3 s]: Recall = 0.65036, Jaccard score = 0.2485, loss = 0.057633, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 70 fit: [31.3 s]: Recall = 0.64651, Jaccard score = 0.2467, loss = 0.057358, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 71 fit: [31.3 s]: Recall = 0.64488, Jaccard score = 0.2459, loss = 0.056737, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 72 fit: [31.3 s]: Recall = 0.64576, Jaccard score = 0.2463, loss = 0.055739, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 73 fit: [31.4 s]: Recall = 0.64866, Jaccard score = 0.2477, loss = 0.056037, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 74 fit: [31.3 s]: Recall = 0.65174, Jaccard score = 0.2492, loss = 0.053714, gradient norm = 1.0000, eval: [19.2 s]
# Iteration 75 fit: [31.3 s]: Recall = 0.64645, Jaccard score = 0.2467, loss = 0.053691, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 76 fit: [31.3 s]: Recall = 0.64714, Jaccard score = 0.2470, loss = 0.053621, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 77 fit: [31.4 s]: Recall = 0.65036, Jaccard score = 0.2485, loss = 0.052284, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 78 fit: [31.3 s]: Recall = 0.65155, Jaccard score = 0.2491, loss = 0.052366, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 79 fit: [31.3 s]: Recall = 0.64840, Jaccard score = 0.2476, loss = 0.052073, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 80 fit: [31.2 s]: Recall = 0.64897, Jaccard score = 0.2479, loss = 0.051345, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 81 fit: [31.3 s]: Recall = 0.64670, Jaccard score = 0.2468, loss = 0.050930, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 82 fit: [31.3 s]: Recall = 0.64973, Jaccard score = 0.2482, loss = 0.050992, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 83 fit: [31.3 s]: Recall = 0.64746, Jaccard score = 0.2472, loss = 0.049015, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 84 fit: [31.3 s]: Recall = 0.64809, Jaccard score = 0.2475, loss = 0.050736, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 85 fit: [31.3 s]: Recall = 0.64664, Jaccard score = 0.2468, loss = 0.049462, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 86 fit: [31.3 s]: Recall = 0.65231, Jaccard score = 0.2495, loss = 0.048830, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 87 fit: [31.4 s]: Recall = 0.65061, Jaccard score = 0.2487, loss = 0.048025, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 88 fit: [31.2 s]: Recall = 0.65703, Jaccard score = 0.2517, loss = 0.047506, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 89 fit: [31.4 s]: Recall = 0.65143, Jaccard score = 0.2490, loss = 0.047970, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 90 fit: [31.3 s]: Recall = 0.65476, Jaccard score = 0.2506, loss = 0.047355, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 91 fit: [31.4 s]: Recall = 0.64400, Jaccard score = 0.2455, loss = 0.046907, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 92 fit: [31.3 s]: Recall = 0.64721, Jaccard score = 0.2470, loss = 0.047362, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 93 fit: [31.3 s]: Recall = 0.64217, Jaccard score = 0.2446, loss = 0.046400, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 94 fit: [31.3 s]: Recall = 0.64475, Jaccard score = 0.2459, loss = 0.045599, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 95 fit: [31.4 s]: Recall = 0.64469, Jaccard score = 0.2458, loss = 0.044789, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 96 fit: [31.4 s]: Recall = 0.64941, Jaccard score = 0.2481, loss = 0.045036, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 97 fit: [31.4 s]: Recall = 0.64853, Jaccard score = 0.2477, loss = 0.045237, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 98 fit: [31.3 s]: Recall = 0.65010, Jaccard score = 0.2484, loss = 0.044484, gradient norm = 1.0000, eval: [19.1 s]
# Iteration 99 fit: [31.3 s]: Recall = 0.64784, Jaccard score = 0.2473, loss = 0.044399, gradient norm = 1.0000, eval: [19.1 s]
# End. Best Iteration 88:  Recall = 0.6570, Jaccard score = 0.2517. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
# The average best performance after k-fold 3 is: Recall = 0.6549856529938686, Jaccard score = 0.25010282558687447
# 
# Performing k-fold 4
# Init: Recall = 0.0972, Jaccard score = 0.0308
# Iteration 0 fit: [34.5 s]: Recall = 0.44631, Jaccard score = 0.1590, loss = 0.435246, gradient norm = 1.0000, eval: [19.0 s]
# Iteration 1 fit: [31.6 s]: Recall = 0.49656, Jaccard score = 0.1802, loss = 0.394451, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 2 fit: [31.6 s]: Recall = 0.51627, Jaccard score = 0.1887, loss = 0.367569, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 3 fit: [31.6 s]: Recall = 0.53548, Jaccard score = 0.1971, loss = 0.345654, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 4 fit: [31.6 s]: Recall = 0.54593, Jaccard score = 0.2017, loss = 0.327457, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 5 fit: [31.6 s]: Recall = 0.55482, Jaccard score = 0.2056, loss = 0.310752, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 6 fit: [31.6 s]: Recall = 0.56702, Jaccard score = 0.2111, loss = 0.294498, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 7 fit: [31.6 s]: Recall = 0.57215, Jaccard score = 0.2134, loss = 0.280965, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 8 fit: [31.6 s]: Recall = 0.57597, Jaccard score = 0.2152, loss = 0.267019, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 9 fit: [31.6 s]: Recall = 0.58129, Jaccard score = 0.2176, loss = 0.254166, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 10 fit: [31.6 s]: Recall = 0.58335, Jaccard score = 0.2185, loss = 0.242122, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 11 fit: [31.6 s]: Recall = 0.58817, Jaccard score = 0.2207, loss = 0.230013, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 12 fit: [31.6 s]: Recall = 0.59161, Jaccard score = 0.2223, loss = 0.219760, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 13 fit: [31.6 s]: Recall = 0.59518, Jaccard score = 0.2240, loss = 0.209709, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 14 fit: [31.6 s]: Recall = 0.60375, Jaccard score = 0.2279, loss = 0.200842, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 15 fit: [31.6 s]: Recall = 0.60369, Jaccard score = 0.2279, loss = 0.191090, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 16 fit: [31.6 s]: Recall = 0.60601, Jaccard score = 0.2290, loss = 0.182967, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 17 fit: [31.6 s]: Recall = 0.61076, Jaccard score = 0.2312, loss = 0.176615, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 18 fit: [31.6 s]: Recall = 0.60870, Jaccard score = 0.2302, loss = 0.168825, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 19 fit: [31.6 s]: Recall = 0.61252, Jaccard score = 0.2320, loss = 0.163032, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 20 fit: [31.6 s]: Recall = 0.61865, Jaccard score = 0.2349, loss = 0.157391, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 21 fit: [31.6 s]: Recall = 0.61990, Jaccard score = 0.2354, loss = 0.152025, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 22 fit: [31.6 s]: Recall = 0.62209, Jaccard score = 0.2365, loss = 0.145023, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 23 fit: [31.6 s]: Recall = 0.62196, Jaccard score = 0.2364, loss = 0.140771, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 24 fit: [31.5 s]: Recall = 0.62441, Jaccard score = 0.2376, loss = 0.137054, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 25 fit: [31.7 s]: Recall = 0.63217, Jaccard score = 0.2412, loss = 0.132919, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 26 fit: [31.6 s]: Recall = 0.62966, Jaccard score = 0.2400, loss = 0.128793, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 27 fit: [31.6 s]: Recall = 0.62872, Jaccard score = 0.2396, loss = 0.124949, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 28 fit: [31.6 s]: Recall = 0.62935, Jaccard score = 0.2399, loss = 0.120810, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 29 fit: [31.6 s]: Recall = 0.63473, Jaccard score = 0.2424, loss = 0.117610, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 30 fit: [31.6 s]: Recall = 0.63548, Jaccard score = 0.2428, loss = 0.114785, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 31 fit: [31.6 s]: Recall = 0.64055, Jaccard score = 0.2452, loss = 0.111683, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 32 fit: [31.6 s]: Recall = 0.63661, Jaccard score = 0.2433, loss = 0.108216, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 33 fit: [31.6 s]: Recall = 0.63924, Jaccard score = 0.2446, loss = 0.105545, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 34 fit: [31.5 s]: Recall = 0.63855, Jaccard score = 0.2443, loss = 0.103027, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 35 fit: [31.6 s]: Recall = 0.63786, Jaccard score = 0.2439, loss = 0.100389, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 36 fit: [31.5 s]: Recall = 0.63880, Jaccard score = 0.2444, loss = 0.098378, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 37 fit: [31.6 s]: Recall = 0.64155, Jaccard score = 0.2457, loss = 0.096558, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 38 fit: [31.6 s]: Recall = 0.64537, Jaccard score = 0.2475, loss = 0.093305, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 39 fit: [31.7 s]: Recall = 0.64399, Jaccard score = 0.2469, loss = 0.091199, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 40 fit: [31.6 s]: Recall = 0.64919, Jaccard score = 0.2493, loss = 0.090316, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 41 fit: [31.6 s]: Recall = 0.64712, Jaccard score = 0.2483, loss = 0.088300, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 42 fit: [31.6 s]: Recall = 0.64950, Jaccard score = 0.2495, loss = 0.085880, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 43 fit: [31.6 s]: Recall = 0.64975, Jaccard score = 0.2496, loss = 0.085558, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 44 fit: [31.6 s]: Recall = 0.64781, Jaccard score = 0.2487, loss = 0.083116, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 45 fit: [31.6 s]: Recall = 0.64869, Jaccard score = 0.2491, loss = 0.080995, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 46 fit: [31.6 s]: Recall = 0.64549, Jaccard score = 0.2476, loss = 0.080226, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 47 fit: [31.6 s]: Recall = 0.64731, Jaccard score = 0.2484, loss = 0.079177, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 48 fit: [31.6 s]: Recall = 0.65225, Jaccard score = 0.2508, loss = 0.077247, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 49 fit: [31.6 s]: Recall = 0.65081, Jaccard score = 0.2501, loss = 0.076858, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 50 fit: [31.6 s]: Recall = 0.64825, Jaccard score = 0.2489, loss = 0.074992, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 51 fit: [31.6 s]: Recall = 0.65257, Jaccard score = 0.2510, loss = 0.073274, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 52 fit: [31.6 s]: Recall = 0.64937, Jaccard score = 0.2494, loss = 0.072490, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 53 fit: [31.6 s]: Recall = 0.65238, Jaccard score = 0.2509, loss = 0.071757, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 54 fit: [31.6 s]: Recall = 0.65325, Jaccard score = 0.2513, loss = 0.069849, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 55 fit: [31.6 s]: Recall = 0.65319, Jaccard score = 0.2513, loss = 0.069347, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 56 fit: [31.6 s]: Recall = 0.64556, Jaccard score = 0.2476, loss = 0.068158, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 57 fit: [31.6 s]: Recall = 0.65357, Jaccard score = 0.2514, loss = 0.067160, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 58 fit: [31.6 s]: Recall = 0.65394, Jaccard score = 0.2516, loss = 0.066474, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 59 fit: [31.6 s]: Recall = 0.65313, Jaccard score = 0.2512, loss = 0.065335, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 60 fit: [31.6 s]: Recall = 0.64850, Jaccard score = 0.2490, loss = 0.064255, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 61 fit: [31.6 s]: Recall = 0.65444, Jaccard score = 0.2519, loss = 0.064080, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 62 fit: [31.6 s]: Recall = 0.65113, Jaccard score = 0.2503, loss = 0.062998, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 63 fit: [31.7 s]: Recall = 0.65025, Jaccard score = 0.2498, loss = 0.061982, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 64 fit: [31.6 s]: Recall = 0.65507, Jaccard score = 0.2522, loss = 0.061042, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 65 fit: [31.6 s]: Recall = 0.65363, Jaccard score = 0.2515, loss = 0.060640, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 66 fit: [31.6 s]: Recall = 0.65282, Jaccard score = 0.2511, loss = 0.059755, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 67 fit: [31.6 s]: Recall = 0.64981, Jaccard score = 0.2496, loss = 0.059022, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 68 fit: [31.6 s]: Recall = 0.65457, Jaccard score = 0.2519, loss = 0.059124, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 69 fit: [31.6 s]: Recall = 0.64987, Jaccard score = 0.2497, loss = 0.057760, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 70 fit: [31.6 s]: Recall = 0.64793, Jaccard score = 0.2487, loss = 0.056776, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 71 fit: [31.6 s]: Recall = 0.65419, Jaccard score = 0.2517, loss = 0.055897, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 72 fit: [31.6 s]: Recall = 0.65670, Jaccard score = 0.2530, loss = 0.056533, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 73 fit: [31.6 s]: Recall = 0.65150, Jaccard score = 0.2505, loss = 0.055601, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 74 fit: [31.6 s]: Recall = 0.64875, Jaccard score = 0.2491, loss = 0.054642, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 75 fit: [31.6 s]: Recall = 0.65081, Jaccard score = 0.2501, loss = 0.054723, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 76 fit: [31.6 s]: Recall = 0.65113, Jaccard score = 0.2503, loss = 0.053957, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 77 fit: [31.6 s]: Recall = 0.65169, Jaccard score = 0.2505, loss = 0.052697, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 78 fit: [31.6 s]: Recall = 0.64950, Jaccard score = 0.2495, loss = 0.052661, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 79 fit: [31.6 s]: Recall = 0.64731, Jaccard score = 0.2484, loss = 0.053042, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 80 fit: [31.6 s]: Recall = 0.65263, Jaccard score = 0.2510, loss = 0.051666, gradient norm = 1.0000, eval: [19.3 s]
# Iteration 81 fit: [31.6 s]: Recall = 0.65194, Jaccard score = 0.2507, loss = 0.050434, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 82 fit: [31.6 s]: Recall = 0.64806, Jaccard score = 0.2488, loss = 0.050059, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 83 fit: [31.6 s]: Recall = 0.64643, Jaccard score = 0.2480, loss = 0.050430, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 84 fit: [31.6 s]: Recall = 0.65175, Jaccard score = 0.2506, loss = 0.050180, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 85 fit: [31.6 s]: Recall = 0.65200, Jaccard score = 0.2507, loss = 0.049218, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 86 fit: [31.6 s]: Recall = 0.65038, Jaccard score = 0.2499, loss = 0.048738, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 87 fit: [31.6 s]: Recall = 0.65225, Jaccard score = 0.2508, loss = 0.049136, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 88 fit: [31.6 s]: Recall = 0.64912, Jaccard score = 0.2493, loss = 0.048647, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 89 fit: [31.6 s]: Recall = 0.65000, Jaccard score = 0.2497, loss = 0.047805, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 90 fit: [31.6 s]: Recall = 0.64862, Jaccard score = 0.2491, loss = 0.047543, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 91 fit: [31.6 s]: Recall = 0.65225, Jaccard score = 0.2508, loss = 0.046964, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 92 fit: [31.6 s]: Recall = 0.65494, Jaccard score = 0.2521, loss = 0.046251, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 93 fit: [31.6 s]: Recall = 0.64581, Jaccard score = 0.2477, loss = 0.045982, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 94 fit: [31.6 s]: Recall = 0.65244, Jaccard score = 0.2509, loss = 0.045606, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 95 fit: [31.6 s]: Recall = 0.64981, Jaccard score = 0.2496, loss = 0.045999, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 96 fit: [31.6 s]: Recall = 0.65263, Jaccard score = 0.2510, loss = 0.045072, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 97 fit: [31.6 s]: Recall = 0.64912, Jaccard score = 0.2493, loss = 0.045442, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 98 fit: [31.6 s]: Recall = 0.65106, Jaccard score = 0.2502, loss = 0.044340, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 99 fit: [31.6 s]: Recall = 0.64806, Jaccard score = 0.2488, loss = 0.043725, gradient norm = 1.0000, eval: [19.4 s]
# End. Best Iteration 72:  Recall = 0.6567, Jaccard score = 0.2530. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
# The average best performance after k-fold 4 is: Recall = 0.6554132072047256, Jaccard score = 0.25081532002899304
# 
# Performing k-fold 5
# Init: Recall = 0.0960, Jaccard score = 0.0303
# Iteration 0 fit: [35.0 s]: Recall = 0.44132, Jaccard score = 0.1565, loss = 0.435205, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 1 fit: [31.7 s]: Recall = 0.49061, Jaccard score = 0.1771, loss = 0.393880, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 2 fit: [31.1 s]: Recall = 0.52320, Jaccard score = 0.1911, loss = 0.366978, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 3 fit: [31.6 s]: Recall = 0.53708, Jaccard score = 0.1972, loss = 0.344966, gradient norm = 1.0000, eval: [19.4 s]
# Iteration 4 fit: [31.1 s]: Recall = 0.55102, Jaccard score = 0.2034, loss = 0.325501, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 5 fit: [31.6 s]: Recall = 0.56283, Jaccard score = 0.2086, loss = 0.308511, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 6 fit: [31.1 s]: Recall = 0.56923, Jaccard score = 0.2115, loss = 0.292304, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 7 fit: [31.6 s]: Recall = 0.57626, Jaccard score = 0.2147, loss = 0.278114, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 8 fit: [31.1 s]: Recall = 0.57965, Jaccard score = 0.2162, loss = 0.265031, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 9 fit: [31.6 s]: Recall = 0.58323, Jaccard score = 0.2178, loss = 0.251334, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 10 fit: [31.1 s]: Recall = 0.58725, Jaccard score = 0.2197, loss = 0.239266, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 11 fit: [31.6 s]: Recall = 0.59115, Jaccard score = 0.2214, loss = 0.228482, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 12 fit: [31.1 s]: Recall = 0.59347, Jaccard score = 0.2225, loss = 0.217523, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 13 fit: [31.6 s]: Recall = 0.59724, Jaccard score = 0.2242, loss = 0.207749, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 14 fit: [31.1 s]: Recall = 0.60182, Jaccard score = 0.2264, loss = 0.198805, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 15 fit: [31.6 s]: Recall = 0.60609, Jaccard score = 0.2283, loss = 0.190751, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 16 fit: [31.1 s]: Recall = 0.60590, Jaccard score = 0.2282, loss = 0.182129, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 17 fit: [31.6 s]: Recall = 0.61105, Jaccard score = 0.2306, loss = 0.174792, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 18 fit: [31.1 s]: Recall = 0.61174, Jaccard score = 0.2309, loss = 0.167760, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 19 fit: [31.6 s]: Recall = 0.61407, Jaccard score = 0.2320, loss = 0.161251, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 20 fit: [31.1 s]: Recall = 0.61846, Jaccard score = 0.2341, loss = 0.155151, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 21 fit: [31.6 s]: Recall = 0.61532, Jaccard score = 0.2326, loss = 0.150079, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 22 fit: [31.1 s]: Recall = 0.61903, Jaccard score = 0.2343, loss = 0.145140, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 23 fit: [31.6 s]: Recall = 0.61771, Jaccard score = 0.2337, loss = 0.139386, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 24 fit: [31.1 s]: Recall = 0.62757, Jaccard score = 0.2383, loss = 0.135568, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 25 fit: [31.6 s]: Recall = 0.62424, Jaccard score = 0.2368, loss = 0.131201, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 26 fit: [31.1 s]: Recall = 0.62537, Jaccard score = 0.2373, loss = 0.126611, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 27 fit: [31.6 s]: Recall = 0.62556, Jaccard score = 0.2374, loss = 0.122741, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 28 fit: [31.1 s]: Recall = 0.62863, Jaccard score = 0.2388, loss = 0.120192, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 29 fit: [31.6 s]: Recall = 0.62926, Jaccard score = 0.2391, loss = 0.116263, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 30 fit: [31.1 s]: Recall = 0.63190, Jaccard score = 0.2404, loss = 0.113606, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 31 fit: [31.6 s]: Recall = 0.63215, Jaccard score = 0.2405, loss = 0.110422, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 32 fit: [31.1 s]: Recall = 0.63611, Jaccard score = 0.2424, loss = 0.108098, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 33 fit: [31.6 s]: Recall = 0.63064, Jaccard score = 0.2398, loss = 0.105196, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 34 fit: [31.1 s]: Recall = 0.63290, Jaccard score = 0.2409, loss = 0.101482, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 35 fit: [31.6 s]: Recall = 0.63730, Jaccard score = 0.2429, loss = 0.099835, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 36 fit: [31.1 s]: Recall = 0.63579, Jaccard score = 0.2422, loss = 0.098031, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 37 fit: [31.6 s]: Recall = 0.63950, Jaccard score = 0.2440, loss = 0.096498, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 38 fit: [31.1 s]: Recall = 0.64069, Jaccard score = 0.2445, loss = 0.093694, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 39 fit: [31.6 s]: Recall = 0.63994, Jaccard score = 0.2442, loss = 0.091414, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 40 fit: [31.1 s]: Recall = 0.64239, Jaccard score = 0.2454, loss = 0.090259, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 41 fit: [31.6 s]: Recall = 0.64245, Jaccard score = 0.2454, loss = 0.087718, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 42 fit: [31.1 s]: Recall = 0.64251, Jaccard score = 0.2454, loss = 0.086634, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 43 fit: [31.6 s]: Recall = 0.64333, Jaccard score = 0.2458, loss = 0.084292, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 44 fit: [31.1 s]: Recall = 0.64257, Jaccard score = 0.2454, loss = 0.083103, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 45 fit: [31.6 s]: Recall = 0.64214, Jaccard score = 0.2452, loss = 0.080950, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 46 fit: [31.1 s]: Recall = 0.64163, Jaccard score = 0.2450, loss = 0.079406, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 47 fit: [31.6 s]: Recall = 0.64226, Jaccard score = 0.2453, loss = 0.079209, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 48 fit: [31.1 s]: Recall = 0.64471, Jaccard score = 0.2465, loss = 0.077063, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 49 fit: [31.6 s]: Recall = 0.64684, Jaccard score = 0.2475, loss = 0.076104, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 50 fit: [31.1 s]: Recall = 0.64898, Jaccard score = 0.2485, loss = 0.074298, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 51 fit: [31.6 s]: Recall = 0.64490, Jaccard score = 0.2465, loss = 0.072959, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 52 fit: [31.1 s]: Recall = 0.64132, Jaccard score = 0.2448, loss = 0.071757, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 53 fit: [31.6 s]: Recall = 0.64992, Jaccard score = 0.2489, loss = 0.071463, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 54 fit: [31.1 s]: Recall = 0.64923, Jaccard score = 0.2486, loss = 0.069575, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 55 fit: [31.6 s]: Recall = 0.64320, Jaccard score = 0.2457, loss = 0.069101, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 56 fit: [31.1 s]: Recall = 0.64986, Jaccard score = 0.2489, loss = 0.068473, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 57 fit: [31.6 s]: Recall = 0.64477, Jaccard score = 0.2465, loss = 0.066848, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 58 fit: [31.1 s]: Recall = 0.64553, Jaccard score = 0.2468, loss = 0.065770, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 59 fit: [31.6 s]: Recall = 0.64779, Jaccard score = 0.2479, loss = 0.065144, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 60 fit: [31.1 s]: Recall = 0.64484, Jaccard score = 0.2465, loss = 0.065040, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 61 fit: [31.6 s]: Recall = 0.65036, Jaccard score = 0.2492, loss = 0.063865, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 62 fit: [31.1 s]: Recall = 0.64684, Jaccard score = 0.2475, loss = 0.062951, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 63 fit: [31.6 s]: Recall = 0.65325, Jaccard score = 0.2505, loss = 0.062355, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 64 fit: [31.1 s]: Recall = 0.64885, Jaccard score = 0.2484, loss = 0.060910, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 65 fit: [31.6 s]: Recall = 0.64986, Jaccard score = 0.2489, loss = 0.060642, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 66 fit: [31.1 s]: Recall = 0.64973, Jaccard score = 0.2489, loss = 0.059792, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 67 fit: [31.6 s]: Recall = 0.65199, Jaccard score = 0.2499, loss = 0.058910, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 68 fit: [31.1 s]: Recall = 0.65250, Jaccard score = 0.2502, loss = 0.058462, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 69 fit: [31.7 s]: Recall = 0.65143, Jaccard score = 0.2497, loss = 0.057872, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 70 fit: [31.1 s]: Recall = 0.65105, Jaccard score = 0.2495, loss = 0.056960, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 71 fit: [31.6 s]: Recall = 0.64666, Jaccard score = 0.2474, loss = 0.056169, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 72 fit: [31.1 s]: Recall = 0.65218, Jaccard score = 0.2500, loss = 0.055467, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 73 fit: [31.6 s]: Recall = 0.65375, Jaccard score = 0.2508, loss = 0.055806, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 74 fit: [31.1 s]: Recall = 0.64992, Jaccard score = 0.2489, loss = 0.054562, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 75 fit: [31.6 s]: Recall = 0.65532, Jaccard score = 0.2515, loss = 0.054667, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 76 fit: [31.1 s]: Recall = 0.64961, Jaccard score = 0.2488, loss = 0.053339, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 77 fit: [31.6 s]: Recall = 0.65042, Jaccard score = 0.2492, loss = 0.053271, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 78 fit: [31.1 s]: Recall = 0.65011, Jaccard score = 0.2490, loss = 0.053594, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 79 fit: [31.6 s]: Recall = 0.65482, Jaccard score = 0.2513, loss = 0.051811, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 80 fit: [31.1 s]: Recall = 0.65137, Jaccard score = 0.2496, loss = 0.050786, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 81 fit: [31.6 s]: Recall = 0.65394, Jaccard score = 0.2509, loss = 0.050966, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 82 fit: [31.1 s]: Recall = 0.65024, Jaccard score = 0.2491, loss = 0.050999, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 83 fit: [31.6 s]: Recall = 0.64923, Jaccard score = 0.2486, loss = 0.050290, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 84 fit: [31.1 s]: Recall = 0.64810, Jaccard score = 0.2481, loss = 0.049135, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 85 fit: [31.6 s]: Recall = 0.65287, Jaccard score = 0.2504, loss = 0.049320, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 86 fit: [31.1 s]: Recall = 0.65319, Jaccard score = 0.2505, loss = 0.048415, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 87 fit: [31.6 s]: Recall = 0.64898, Jaccard score = 0.2485, loss = 0.048983, gradient norm = 1.0000, eval: [19.7 s]
# Iteration 88 fit: [31.1 s]: Recall = 0.64967, Jaccard score = 0.2488, loss = 0.048628, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 89 fit: [31.6 s]: Recall = 0.65582, Jaccard score = 0.2518, loss = 0.047908, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 90 fit: [31.2 s]: Recall = 0.65080, Jaccard score = 0.2494, loss = 0.047917, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 91 fit: [31.6 s]: Recall = 0.65256, Jaccard score = 0.2502, loss = 0.046691, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 92 fit: [31.1 s]: Recall = 0.64590, Jaccard score = 0.2470, loss = 0.046523, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 93 fit: [31.6 s]: Recall = 0.64754, Jaccard score = 0.2478, loss = 0.046022, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 94 fit: [31.1 s]: Recall = 0.65187, Jaccard score = 0.2499, loss = 0.045593, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 95 fit: [31.7 s]: Recall = 0.65174, Jaccard score = 0.2498, loss = 0.045082, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 96 fit: [31.1 s]: Recall = 0.64854, Jaccard score = 0.2483, loss = 0.046152, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 97 fit: [31.6 s]: Recall = 0.65224, Jaccard score = 0.2501, loss = 0.045046, gradient norm = 1.0000, eval: [19.5 s]
# Iteration 98 fit: [31.1 s]: Recall = 0.65224, Jaccard score = 0.2501, loss = 0.045233, gradient norm = 1.0000, eval: [19.6 s]
# Iteration 99 fit: [31.6 s]: Recall = 0.64634, Jaccard score = 0.2472, loss = 0.044654, gradient norm = 1.0000, eval: [19.5 s]
# End. Best Iteration 89:  Recall = 0.6558, Jaccard score = 0.2518. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,750,350,96]_1569575779.h5
# The average best performance after k-fold 5 is: Recall = 0.6554954009286157, Jaccard score = 0.2510078405076572
