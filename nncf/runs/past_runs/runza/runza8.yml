--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "100"
--lr: "0.002"
--early_stopping: "35"
--layers: "[512,350,96]"
--MLP_variant: "drop"
--reg_layers: "[0,0,0]"
--num_k_folds: "5"

# Launched by terminal.
# MLP arguments: Namespace(MLP_variant='drop', batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=100, eval_recall=1, is_tag=1, layers='[512,350,96]', learner='adam', lr=0.002, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[512,350,96]_1569754420.h5
--weights_path: Pretrain/_MLP_8_[512,350,96]_1569754420.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# flatten_7 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# dropout_12 (Dropout)            (None, 256)          0           flatten_7[0][0]                  
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# flatten_8 (Flatten)             (None, 256)          0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_7 (Concatenate)     (None, 1256)         0           dropout_12[0][0]                 
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# dropout_13 (Dropout)            (None, 256)          0           flatten_8[0][0]                  
# __________________________________________________________________________________________________
# concatenate_8 (Concatenate)     (None, 1512)         0           concatenate_7[0][0]              
#                                                                  dropout_13[0][0]                 
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 350)          529550      concatenate_8[0][0]              
# __________________________________________________________________________________________________
# dropout_14 (Dropout)            (None, 350)          0           layer1[0][0]                     
# __________________________________________________________________________________________________
# layer2 (Dense)                  (None, 96)           33696       dropout_14[0][0]                 
# __________________________________________________________________________________________________
# dropout_15 (Dropout)            (None, 96)           0           layer2[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            97          dropout_15[0][0]                 
# ==================================================================================================
# Total params: 5,683,343
# Trainable params: 5,683,343
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0265, Jaccard score = 0.0159
# Iteration 0 fit: [27.6 s]: Recall = 0.21515, Jaccard score = 0.1458, loss = 0.437221, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 1 fit: [25.7 s]: Recall = 0.24821, Jaccard score = 0.1721, loss = 0.403847, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 2 fit: [25.7 s]: Recall = 0.26151, Jaccard score = 0.1830, loss = 0.381880, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 3 fit: [25.8 s]: Recall = 0.27673, Jaccard score = 0.1957, loss = 0.361743, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 4 fit: [25.9 s]: Recall = 0.28229, Jaccard score = 0.2005, loss = 0.344409, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 5 fit: [25.7 s]: Recall = 0.29073, Jaccard score = 0.2077, loss = 0.330159, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 6 fit: [26.0 s]: Recall = 0.29917, Jaccard score = 0.2150, loss = 0.316555, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 7 fit: [25.8 s]: Recall = 0.30173, Jaccard score = 0.2173, loss = 0.304682, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 8 fit: [26.2 s]: Recall = 0.30524, Jaccard score = 0.2203, loss = 0.293263, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 9 fit: [25.6 s]: Recall = 0.30844, Jaccard score = 0.2232, loss = 0.283493, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 10 fit: [25.8 s]: Recall = 0.31285, Jaccard score = 0.2271, loss = 0.273539, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 11 fit: [25.5 s]: Recall = 0.31886, Jaccard score = 0.2325, loss = 0.263901, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 12 fit: [26.0 s]: Recall = 0.32379, Jaccard score = 0.2369, loss = 0.254727, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 13 fit: [25.9 s]: Recall = 0.32628, Jaccard score = 0.2392, loss = 0.246645, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 14 fit: [26.0 s]: Recall = 0.32877, Jaccard score = 0.2414, loss = 0.238742, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 15 fit: [25.9 s]: Recall = 0.33318, Jaccard score = 0.2455, loss = 0.230823, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 16 fit: [26.2 s]: Recall = 0.33465, Jaccard score = 0.2468, loss = 0.223652, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 17 fit: [26.0 s]: Recall = 0.33402, Jaccard score = 0.2462, loss = 0.217849, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 18 fit: [25.8 s]: Recall = 0.33561, Jaccard score = 0.2477, loss = 0.211679, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 19 fit: [25.4 s]: Recall = 0.33900, Jaccard score = 0.2508, loss = 0.204661, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 20 fit: [25.6 s]: Recall = 0.34150, Jaccard score = 0.2531, loss = 0.199189, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 21 fit: [25.9 s]: Recall = 0.34156, Jaccard score = 0.2532, loss = 0.194344, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 22 fit: [26.0 s]: Recall = 0.34744, Jaccard score = 0.2587, loss = 0.188417, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 23 fit: [25.9 s]: Recall = 0.34712, Jaccard score = 0.2584, loss = 0.183154, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 24 fit: [25.4 s]: Recall = 0.34668, Jaccard score = 0.2580, loss = 0.179374, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 25 fit: [25.9 s]: Recall = 0.34789, Jaccard score = 0.2591, loss = 0.174975, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 26 fit: [26.1 s]: Recall = 0.35051, Jaccard score = 0.2616, loss = 0.169968, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 27 fit: [26.3 s]: Recall = 0.35409, Jaccard score = 0.2650, loss = 0.165495, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 28 fit: [25.6 s]: Recall = 0.35908, Jaccard score = 0.2697, loss = 0.162259, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 29 fit: [25.8 s]: Recall = 0.35575, Jaccard score = 0.2665, loss = 0.157567, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 30 fit: [26.2 s]: Recall = 0.35563, Jaccard score = 0.2664, loss = 0.154081, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 31 fit: [26.0 s]: Recall = 0.35467, Jaccard score = 0.2655, loss = 0.149988, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 32 fit: [25.2 s]: Recall = 0.36093, Jaccard score = 0.2715, loss = 0.147022, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 33 fit: [26.0 s]: Recall = 0.35895, Jaccard score = 0.2696, loss = 0.143494, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 34 fit: [25.9 s]: Recall = 0.35793, Jaccard score = 0.2686, loss = 0.141142, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 35 fit: [25.7 s]: Recall = 0.35997, Jaccard score = 0.2705, loss = 0.138196, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 36 fit: [25.5 s]: Recall = 0.36247, Jaccard score = 0.2729, loss = 0.135024, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 37 fit: [25.7 s]: Recall = 0.36579, Jaccard score = 0.2761, loss = 0.132370, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 38 fit: [26.0 s]: Recall = 0.36419, Jaccard score = 0.2746, loss = 0.129801, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 39 fit: [26.2 s]: Recall = 0.36535, Jaccard score = 0.2757, loss = 0.126410, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 40 fit: [25.3 s]: Recall = 0.36739, Jaccard score = 0.2777, loss = 0.124674, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 41 fit: [25.7 s]: Recall = 0.36835, Jaccard score = 0.2786, loss = 0.122331, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 42 fit: [25.8 s]: Recall = 0.36714, Jaccard score = 0.2774, loss = 0.119476, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 43 fit: [26.1 s]: Recall = 0.37065, Jaccard score = 0.2808, loss = 0.118103, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 44 fit: [25.8 s]: Recall = 0.36982, Jaccard score = 0.2800, loss = 0.115943, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 45 fit: [25.7 s]: Recall = 0.37289, Jaccard score = 0.2830, loss = 0.113787, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 46 fit: [25.8 s]: Recall = 0.37206, Jaccard score = 0.2822, loss = 0.111163, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 47 fit: [25.7 s]: Recall = 0.37372, Jaccard score = 0.2838, loss = 0.108871, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 48 fit: [26.0 s]: Recall = 0.37353, Jaccard score = 0.2836, loss = 0.108018, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 49 fit: [25.9 s]: Recall = 0.37590, Jaccard score = 0.2859, loss = 0.106158, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 50 fit: [25.3 s]: Recall = 0.37717, Jaccard score = 0.2872, loss = 0.104013, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 51 fit: [26.1 s]: Recall = 0.37653, Jaccard score = 0.2866, loss = 0.102745, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 52 fit: [25.6 s]: Recall = 0.37551, Jaccard score = 0.2856, loss = 0.100704, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 53 fit: [25.5 s]: Recall = 0.37474, Jaccard score = 0.2848, loss = 0.099370, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 54 fit: [25.4 s]: Recall = 0.37532, Jaccard score = 0.2854, loss = 0.097650, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 55 fit: [25.6 s]: Recall = 0.37717, Jaccard score = 0.2872, loss = 0.095715, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 56 fit: [25.5 s]: Recall = 0.37724, Jaccard score = 0.2872, loss = 0.095171, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 57 fit: [26.0 s]: Recall = 0.37583, Jaccard score = 0.2859, loss = 0.093321, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 58 fit: [25.6 s]: Recall = 0.37871, Jaccard score = 0.2887, loss = 0.092054, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 59 fit: [26.1 s]: Recall = 0.37884, Jaccard score = 0.2888, loss = 0.090082, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 60 fit: [25.6 s]: Recall = 0.38184, Jaccard score = 0.2918, loss = 0.089209, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 61 fit: [25.5 s]: Recall = 0.37474, Jaccard score = 0.2848, loss = 0.088450, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 62 fit: [25.5 s]: Recall = 0.38229, Jaccard score = 0.2922, loss = 0.087109, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 63 fit: [25.7 s]: Recall = 0.37724, Jaccard score = 0.2872, loss = 0.086040, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 64 fit: [25.4 s]: Recall = 0.38120, Jaccard score = 0.2911, loss = 0.085185, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 65 fit: [26.0 s]: Recall = 0.38274, Jaccard score = 0.2927, loss = 0.083223, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 66 fit: [25.5 s]: Recall = 0.38274, Jaccard score = 0.2927, loss = 0.082830, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 67 fit: [25.7 s]: Recall = 0.38286, Jaccard score = 0.2928, loss = 0.081477, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 68 fit: [25.6 s]: Recall = 0.38114, Jaccard score = 0.2911, loss = 0.080557, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 69 fit: [25.9 s]: Recall = 0.38210, Jaccard score = 0.2920, loss = 0.078672, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 70 fit: [25.6 s]: Recall = 0.38408, Jaccard score = 0.2940, loss = 0.079041, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 71 fit: [25.6 s]: Recall = 0.38120, Jaccard score = 0.2911, loss = 0.077343, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 72 fit: [25.4 s]: Recall = 0.38114, Jaccard score = 0.2911, loss = 0.077535, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 73 fit: [25.7 s]: Recall = 0.38459, Jaccard score = 0.2945, loss = 0.075446, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 74 fit: [26.1 s]: Recall = 0.38606, Jaccard score = 0.2960, loss = 0.074912, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 75 fit: [25.9 s]: Recall = 0.38581, Jaccard score = 0.2957, loss = 0.073565, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 76 fit: [25.9 s]: Recall = 0.38478, Jaccard score = 0.2947, loss = 0.073346, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 77 fit: [26.0 s]: Recall = 0.38638, Jaccard score = 0.2963, loss = 0.072513, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 78 fit: [26.2 s]: Recall = 0.38632, Jaccard score = 0.2962, loss = 0.071598, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 79 fit: [25.9 s]: Recall = 0.38613, Jaccard score = 0.2960, loss = 0.070967, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 80 fit: [25.7 s]: Recall = 0.38261, Jaccard score = 0.2925, loss = 0.069907, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 81 fit: [25.9 s]: Recall = 0.38427, Jaccard score = 0.2942, loss = 0.069699, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 82 fit: [25.8 s]: Recall = 0.38561, Jaccard score = 0.2955, loss = 0.069695, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 83 fit: [26.1 s]: Recall = 0.38964, Jaccard score = 0.2995, loss = 0.067330, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 84 fit: [26.0 s]: Recall = 0.38613, Jaccard score = 0.2960, loss = 0.067494, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 85 fit: [25.7 s]: Recall = 0.38223, Jaccard score = 0.2922, loss = 0.066849, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 86 fit: [25.5 s]: Recall = 0.38267, Jaccard score = 0.2926, loss = 0.065808, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 87 fit: [25.6 s]: Recall = 0.38849, Jaccard score = 0.2984, loss = 0.065868, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 88 fit: [25.5 s]: Recall = 0.38593, Jaccard score = 0.2958, loss = 0.064601, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 89 fit: [26.3 s]: Recall = 0.38696, Jaccard score = 0.2968, loss = 0.063548, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 90 fit: [26.1 s]: Recall = 0.38651, Jaccard score = 0.2964, loss = 0.063429, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 91 fit: [25.7 s]: Recall = 0.38855, Jaccard score = 0.2984, loss = 0.062519, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 92 fit: [25.5 s]: Recall = 0.38721, Jaccard score = 0.2971, loss = 0.061392, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 93 fit: [25.9 s]: Recall = 0.38625, Jaccard score = 0.2961, loss = 0.061676, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 94 fit: [25.7 s]: Recall = 0.38824, Jaccard score = 0.2981, loss = 0.060486, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 95 fit: [25.8 s]: Recall = 0.38702, Jaccard score = 0.2969, loss = 0.060312, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 96 fit: [25.3 s]: Recall = 0.38804, Jaccard score = 0.2979, loss = 0.059273, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 97 fit: [25.9 s]: Recall = 0.38913, Jaccard score = 0.2990, loss = 0.059841, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 98 fit: [25.5 s]: Recall = 0.38932, Jaccard score = 0.2992, loss = 0.059127, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 99 fit: [25.7 s]: Recall = 0.38683, Jaccard score = 0.2967, loss = 0.058963, gradient norm = 1.0000, eval: [16.4 s]
# End. Best Iteration 83:  Recall = 0.3896, Jaccard score = 0.2995. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,350,96]_1569754420.h5
# The average best performance after k-fold 1 is: Recall = 0.38964194373401534, Jaccard score = 0.2995183328418362
# 
# Performing k-fold 2
# Init: Recall = 0.0245, Jaccard score = 0.0148
# Iteration 0 fit: [27.9 s]: Recall = 0.21653, Jaccard score = 0.1484, loss = 0.436201, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 1 fit: [25.5 s]: Recall = 0.24032, Jaccard score = 0.1674, loss = 0.402010, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 2 fit: [25.8 s]: Recall = 0.25871, Jaccard score = 0.1826, loss = 0.381114, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 3 fit: [25.6 s]: Recall = 0.26929, Jaccard score = 0.1914, loss = 0.362555, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 4 fit: [25.3 s]: Recall = 0.27805, Jaccard score = 0.1989, loss = 0.345519, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 5 fit: [25.4 s]: Recall = 0.28387, Jaccard score = 0.2039, loss = 0.331320, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 6 fit: [25.4 s]: Recall = 0.29076, Jaccard score = 0.2099, loss = 0.317537, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 7 fit: [25.6 s]: Recall = 0.29614, Jaccard score = 0.2146, loss = 0.304837, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 8 fit: [25.5 s]: Recall = 0.30484, Jaccard score = 0.2223, loss = 0.293109, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 9 fit: [25.1 s]: Recall = 0.30246, Jaccard score = 0.2202, loss = 0.282611, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 10 fit: [25.1 s]: Recall = 0.30765, Jaccard score = 0.2249, loss = 0.272728, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 11 fit: [25.5 s]: Recall = 0.31228, Jaccard score = 0.2290, loss = 0.263733, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 12 fit: [26.3 s]: Recall = 0.31579, Jaccard score = 0.2322, loss = 0.255270, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 13 fit: [25.5 s]: Recall = 0.31529, Jaccard score = 0.2317, loss = 0.245994, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 14 fit: [25.3 s]: Recall = 0.32117, Jaccard score = 0.2371, loss = 0.239331, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 15 fit: [25.8 s]: Recall = 0.32874, Jaccard score = 0.2440, loss = 0.230014, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 16 fit: [25.3 s]: Recall = 0.32887, Jaccard score = 0.2441, loss = 0.222491, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 17 fit: [26.0 s]: Recall = 0.32843, Jaccard score = 0.2437, loss = 0.216620, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 18 fit: [25.8 s]: Recall = 0.33100, Jaccard score = 0.2461, loss = 0.209442, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 19 fit: [25.7 s]: Recall = 0.33844, Jaccard score = 0.2531, loss = 0.203256, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 20 fit: [25.7 s]: Recall = 0.33532, Jaccard score = 0.2501, loss = 0.197600, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 21 fit: [25.8 s]: Recall = 0.34157, Jaccard score = 0.2560, loss = 0.192185, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 22 fit: [25.5 s]: Recall = 0.34095, Jaccard score = 0.2554, loss = 0.187035, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 23 fit: [25.5 s]: Recall = 0.34401, Jaccard score = 0.2583, loss = 0.181330, gradient norm = 1.0000, eval: [16.1 s]
# Iteration 24 fit: [25.7 s]: Recall = 0.34495, Jaccard score = 0.2592, loss = 0.175557, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 25 fit: [25.9 s]: Recall = 0.34871, Jaccard score = 0.2627, loss = 0.171526, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 26 fit: [25.9 s]: Recall = 0.34846, Jaccard score = 0.2625, loss = 0.166946, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 27 fit: [25.6 s]: Recall = 0.34846, Jaccard score = 0.2625, loss = 0.162834, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 28 fit: [25.9 s]: Recall = 0.35140, Jaccard score = 0.2653, loss = 0.158789, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 29 fit: [25.8 s]: Recall = 0.35109, Jaccard score = 0.2650, loss = 0.153710, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 30 fit: [26.2 s]: Recall = 0.35215, Jaccard score = 0.2660, loss = 0.150554, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 31 fit: [25.8 s]: Recall = 0.34858, Jaccard score = 0.2626, loss = 0.146489, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 32 fit: [25.5 s]: Recall = 0.35447, Jaccard score = 0.2682, loss = 0.143277, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 33 fit: [26.2 s]: Recall = 0.35384, Jaccard score = 0.2676, loss = 0.139480, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 34 fit: [25.9 s]: Recall = 0.35653, Jaccard score = 0.2702, loss = 0.136188, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 35 fit: [25.8 s]: Recall = 0.36004, Jaccard score = 0.2736, loss = 0.133920, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 36 fit: [25.8 s]: Recall = 0.35947, Jaccard score = 0.2731, loss = 0.130116, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 37 fit: [25.4 s]: Recall = 0.36210, Jaccard score = 0.2756, loss = 0.127446, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 38 fit: [25.4 s]: Recall = 0.35847, Jaccard score = 0.2721, loss = 0.125097, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 39 fit: [25.4 s]: Recall = 0.36573, Jaccard score = 0.2791, loss = 0.122107, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 40 fit: [25.6 s]: Recall = 0.36679, Jaccard score = 0.2802, loss = 0.120263, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 41 fit: [25.7 s]: Recall = 0.36448, Jaccard score = 0.2779, loss = 0.117838, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 42 fit: [25.3 s]: Recall = 0.36642, Jaccard score = 0.2798, loss = 0.115318, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 43 fit: [25.7 s]: Recall = 0.36398, Jaccard score = 0.2774, loss = 0.112294, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 44 fit: [25.7 s]: Recall = 0.36204, Jaccard score = 0.2756, loss = 0.110507, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 45 fit: [25.5 s]: Recall = 0.36711, Jaccard score = 0.2805, loss = 0.109190, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 46 fit: [25.4 s]: Recall = 0.36667, Jaccard score = 0.2801, loss = 0.106672, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 47 fit: [25.6 s]: Recall = 0.36366, Jaccard score = 0.2771, loss = 0.105781, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 48 fit: [25.7 s]: Recall = 0.37149, Jaccard score = 0.2848, loss = 0.102705, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 49 fit: [25.6 s]: Recall = 0.36930, Jaccard score = 0.2826, loss = 0.101824, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 50 fit: [25.5 s]: Recall = 0.36898, Jaccard score = 0.2823, loss = 0.099219, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 51 fit: [25.6 s]: Recall = 0.37399, Jaccard score = 0.2873, loss = 0.097221, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 52 fit: [25.3 s]: Recall = 0.37049, Jaccard score = 0.2838, loss = 0.096282, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 53 fit: [25.9 s]: Recall = 0.37017, Jaccard score = 0.2835, loss = 0.094537, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 54 fit: [25.5 s]: Recall = 0.37186, Jaccard score = 0.2852, loss = 0.093888, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 55 fit: [25.4 s]: Recall = 0.37017, Jaccard score = 0.2835, loss = 0.091761, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 56 fit: [25.6 s]: Recall = 0.37067, Jaccard score = 0.2840, loss = 0.089621, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 57 fit: [26.0 s]: Recall = 0.37311, Jaccard score = 0.2864, loss = 0.089200, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 58 fit: [25.7 s]: Recall = 0.37042, Jaccard score = 0.2837, loss = 0.087032, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 59 fit: [25.4 s]: Recall = 0.37274, Jaccard score = 0.2860, loss = 0.086045, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 60 fit: [25.7 s]: Recall = 0.36942, Jaccard score = 0.2828, loss = 0.084796, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 61 fit: [25.9 s]: Recall = 0.37430, Jaccard score = 0.2876, loss = 0.083897, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 62 fit: [26.1 s]: Recall = 0.37474, Jaccard score = 0.2880, loss = 0.082151, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 63 fit: [25.7 s]: Recall = 0.37480, Jaccard score = 0.2881, loss = 0.082159, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 64 fit: [25.6 s]: Recall = 0.37637, Jaccard score = 0.2896, loss = 0.079731, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 65 fit: [25.3 s]: Recall = 0.37487, Jaccard score = 0.2881, loss = 0.079477, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 66 fit: [25.7 s]: Recall = 0.37706, Jaccard score = 0.2903, loss = 0.078084, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 67 fit: [25.4 s]: Recall = 0.37887, Jaccard score = 0.2921, loss = 0.076270, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 68 fit: [25.6 s]: Recall = 0.37812, Jaccard score = 0.2914, loss = 0.075673, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 69 fit: [25.5 s]: Recall = 0.38188, Jaccard score = 0.2951, loss = 0.074917, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.38106, Jaccard score = 0.2943, loss = 0.074066, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 71 fit: [25.9 s]: Recall = 0.37875, Jaccard score = 0.2920, loss = 0.073161, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 72 fit: [25.7 s]: Recall = 0.37850, Jaccard score = 0.2917, loss = 0.071877, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 73 fit: [25.4 s]: Recall = 0.38194, Jaccard score = 0.2952, loss = 0.071931, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 74 fit: [25.5 s]: Recall = 0.37962, Jaccard score = 0.2929, loss = 0.069914, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 75 fit: [26.0 s]: Recall = 0.37994, Jaccard score = 0.2932, loss = 0.069969, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 76 fit: [25.8 s]: Recall = 0.37593, Jaccard score = 0.2892, loss = 0.069571, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 77 fit: [25.5 s]: Recall = 0.37944, Jaccard score = 0.2927, loss = 0.068921, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 78 fit: [25.6 s]: Recall = 0.38206, Jaccard score = 0.2953, loss = 0.067359, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 79 fit: [25.8 s]: Recall = 0.38444, Jaccard score = 0.2977, loss = 0.067450, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 80 fit: [25.9 s]: Recall = 0.38450, Jaccard score = 0.2977, loss = 0.065546, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 81 fit: [26.2 s]: Recall = 0.38119, Jaccard score = 0.2944, loss = 0.066433, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 82 fit: [25.4 s]: Recall = 0.37643, Jaccard score = 0.2897, loss = 0.064857, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 83 fit: [25.3 s]: Recall = 0.38275, Jaccard score = 0.2960, loss = 0.064466, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 84 fit: [25.5 s]: Recall = 0.37875, Jaccard score = 0.2920, loss = 0.064458, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 85 fit: [25.5 s]: Recall = 0.38156, Jaccard score = 0.2948, loss = 0.063544, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 86 fit: [25.2 s]: Recall = 0.37850, Jaccard score = 0.2917, loss = 0.062357, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 87 fit: [25.5 s]: Recall = 0.38031, Jaccard score = 0.2935, loss = 0.061704, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 88 fit: [25.4 s]: Recall = 0.38100, Jaccard score = 0.2942, loss = 0.061279, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 89 fit: [25.5 s]: Recall = 0.38419, Jaccard score = 0.2974, loss = 0.060774, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 90 fit: [25.6 s]: Recall = 0.38275, Jaccard score = 0.2960, loss = 0.060603, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 91 fit: [25.6 s]: Recall = 0.38069, Jaccard score = 0.2939, loss = 0.059183, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 92 fit: [25.7 s]: Recall = 0.38450, Jaccard score = 0.2977, loss = 0.059210, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 93 fit: [25.3 s]: Recall = 0.38463, Jaccard score = 0.2979, loss = 0.057960, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 94 fit: [25.5 s]: Recall = 0.38200, Jaccard score = 0.2952, loss = 0.057960, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 95 fit: [25.7 s]: Recall = 0.37944, Jaccard score = 0.2927, loss = 0.058064, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 96 fit: [25.5 s]: Recall = 0.38163, Jaccard score = 0.2949, loss = 0.057313, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 97 fit: [25.4 s]: Recall = 0.38125, Jaccard score = 0.2945, loss = 0.056503, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 98 fit: [25.5 s]: Recall = 0.38601, Jaccard score = 0.2993, loss = 0.056054, gradient norm = 1.0000, eval: [16.2 s]
# Iteration 99 fit: [25.5 s]: Recall = 0.38488, Jaccard score = 0.2981, loss = 0.055122, gradient norm = 1.0000, eval: [16.2 s]
# End. Best Iteration 98:  Recall = 0.3860, Jaccard score = 0.2993. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,350,96]_1569754420.h5
# The average best performance after k-fold 2 is: Recall = 0.3878242887203777, Jaccard score = 0.29938800539040045
# 
# Performing k-fold 3
# Init: Recall = 0.0258, Jaccard score = 0.0156
# Iteration 0 fit: [28.6 s]: Recall = 0.21248, Jaccard score = 0.1448, loss = 0.436666, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 1 fit: [26.1 s]: Recall = 0.24057, Jaccard score = 0.1671, loss = 0.401843, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 2 fit: [26.1 s]: Recall = 0.25128, Jaccard score = 0.1759, loss = 0.380278, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 3 fit: [25.8 s]: Recall = 0.27011, Jaccard score = 0.1916, loss = 0.361200, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 4 fit: [25.8 s]: Recall = 0.27672, Jaccard score = 0.1972, loss = 0.344909, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 5 fit: [26.0 s]: Recall = 0.28131, Jaccard score = 0.2011, loss = 0.330644, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 6 fit: [26.0 s]: Recall = 0.29145, Jaccard score = 0.2099, loss = 0.318479, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 7 fit: [25.7 s]: Recall = 0.29744, Jaccard score = 0.2151, loss = 0.306490, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 8 fit: [25.8 s]: Recall = 0.29989, Jaccard score = 0.2173, loss = 0.294591, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 9 fit: [25.7 s]: Recall = 0.30884, Jaccard score = 0.2252, loss = 0.284418, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 10 fit: [25.6 s]: Recall = 0.31028, Jaccard score = 0.2265, loss = 0.274341, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 11 fit: [26.2 s]: Recall = 0.31419, Jaccard score = 0.2300, loss = 0.265832, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 12 fit: [25.6 s]: Recall = 0.31608, Jaccard score = 0.2317, loss = 0.256699, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 13 fit: [25.7 s]: Recall = 0.32206, Jaccard score = 0.2371, loss = 0.247951, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 14 fit: [25.7 s]: Recall = 0.31860, Jaccard score = 0.2340, loss = 0.240466, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 15 fit: [25.8 s]: Recall = 0.32112, Jaccard score = 0.2363, loss = 0.232562, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 16 fit: [25.8 s]: Recall = 0.32527, Jaccard score = 0.2401, loss = 0.226233, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 17 fit: [25.9 s]: Recall = 0.32678, Jaccard score = 0.2415, loss = 0.219251, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 18 fit: [25.8 s]: Recall = 0.33264, Jaccard score = 0.2469, loss = 0.212896, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 19 fit: [26.0 s]: Recall = 0.33214, Jaccard score = 0.2464, loss = 0.206438, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 20 fit: [26.2 s]: Recall = 0.33541, Jaccard score = 0.2494, loss = 0.201325, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 21 fit: [25.8 s]: Recall = 0.33762, Jaccard score = 0.2515, loss = 0.195742, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 22 fit: [25.9 s]: Recall = 0.34246, Jaccard score = 0.2560, loss = 0.191166, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 23 fit: [25.8 s]: Recall = 0.34398, Jaccard score = 0.2574, loss = 0.184761, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 24 fit: [25.7 s]: Recall = 0.34316, Jaccard score = 0.2567, loss = 0.180321, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 25 fit: [25.7 s]: Recall = 0.34076, Jaccard score = 0.2544, loss = 0.175917, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 26 fit: [26.0 s]: Recall = 0.34593, Jaccard score = 0.2593, loss = 0.171518, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 27 fit: [26.0 s]: Recall = 0.34990, Jaccard score = 0.2630, loss = 0.167102, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 28 fit: [26.0 s]: Recall = 0.34675, Jaccard score = 0.2600, loss = 0.163346, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 29 fit: [25.6 s]: Recall = 0.34788, Jaccard score = 0.2611, loss = 0.159605, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 30 fit: [25.8 s]: Recall = 0.34813, Jaccard score = 0.2614, loss = 0.156356, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 31 fit: [26.1 s]: Recall = 0.35506, Jaccard score = 0.2680, loss = 0.152526, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 32 fit: [25.8 s]: Recall = 0.35563, Jaccard score = 0.2685, loss = 0.149061, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 33 fit: [25.9 s]: Recall = 0.35374, Jaccard score = 0.2667, loss = 0.145553, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 34 fit: [25.8 s]: Recall = 0.35941, Jaccard score = 0.2721, loss = 0.142455, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 35 fit: [26.0 s]: Recall = 0.35594, Jaccard score = 0.2688, loss = 0.139393, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 36 fit: [26.4 s]: Recall = 0.35771, Jaccard score = 0.2705, loss = 0.136081, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 37 fit: [26.3 s]: Recall = 0.35821, Jaccard score = 0.2710, loss = 0.134191, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 38 fit: [25.8 s]: Recall = 0.36180, Jaccard score = 0.2744, loss = 0.130793, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 39 fit: [26.4 s]: Recall = 0.35771, Jaccard score = 0.2705, loss = 0.128464, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 40 fit: [25.6 s]: Recall = 0.36463, Jaccard score = 0.2772, loss = 0.125721, gradient norm = 1.0000, eval: [16.3 s]
# Iteration 41 fit: [25.8 s]: Recall = 0.36577, Jaccard score = 0.2783, loss = 0.123773, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 42 fit: [25.7 s]: Recall = 0.36520, Jaccard score = 0.2777, loss = 0.120762, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 43 fit: [25.8 s]: Recall = 0.36614, Jaccard score = 0.2786, loss = 0.119396, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 44 fit: [26.1 s]: Recall = 0.36022, Jaccard score = 0.2729, loss = 0.116477, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 45 fit: [26.0 s]: Recall = 0.36891, Jaccard score = 0.2814, loss = 0.115024, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 46 fit: [26.1 s]: Recall = 0.36721, Jaccard score = 0.2797, loss = 0.112229, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 47 fit: [25.5 s]: Recall = 0.36633, Jaccard score = 0.2788, loss = 0.110827, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 48 fit: [25.8 s]: Recall = 0.36482, Jaccard score = 0.2774, loss = 0.109771, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 49 fit: [26.0 s]: Recall = 0.36558, Jaccard score = 0.2781, loss = 0.107219, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 50 fit: [26.0 s]: Recall = 0.36696, Jaccard score = 0.2794, loss = 0.105346, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 51 fit: [26.0 s]: Recall = 0.36526, Jaccard score = 0.2778, loss = 0.103252, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 52 fit: [26.0 s]: Recall = 0.36860, Jaccard score = 0.2810, loss = 0.102206, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 53 fit: [26.1 s]: Recall = 0.37030, Jaccard score = 0.2827, loss = 0.100037, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 54 fit: [25.9 s]: Recall = 0.36715, Jaccard score = 0.2796, loss = 0.098391, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 55 fit: [26.0 s]: Recall = 0.37326, Jaccard score = 0.2856, loss = 0.097141, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 56 fit: [26.3 s]: Recall = 0.36822, Jaccard score = 0.2807, loss = 0.095791, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 57 fit: [25.8 s]: Recall = 0.37080, Jaccard score = 0.2832, loss = 0.094432, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 58 fit: [26.0 s]: Recall = 0.37358, Jaccard score = 0.2859, loss = 0.093168, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 59 fit: [26.2 s]: Recall = 0.36973, Jaccard score = 0.2822, loss = 0.092037, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 60 fit: [26.0 s]: Recall = 0.37427, Jaccard score = 0.2866, loss = 0.090347, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 61 fit: [26.0 s]: Recall = 0.37483, Jaccard score = 0.2872, loss = 0.089774, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 62 fit: [26.2 s]: Recall = 0.37540, Jaccard score = 0.2877, loss = 0.087512, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 63 fit: [26.4 s]: Recall = 0.37257, Jaccard score = 0.2849, loss = 0.087108, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 64 fit: [25.9 s]: Recall = 0.37313, Jaccard score = 0.2855, loss = 0.085786, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 65 fit: [25.9 s]: Recall = 0.37433, Jaccard score = 0.2867, loss = 0.084853, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 66 fit: [26.2 s]: Recall = 0.37490, Jaccard score = 0.2872, loss = 0.082804, gradient norm = 1.0000, eval: [16.5 s]
# Iteration 67 fit: [26.1 s]: Recall = 0.37446, Jaccard score = 0.2868, loss = 0.082874, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 68 fit: [25.7 s]: Recall = 0.37332, Jaccard score = 0.2857, loss = 0.081490, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 69 fit: [25.7 s]: Recall = 0.37868, Jaccard score = 0.2910, loss = 0.080025, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.37830, Jaccard score = 0.2906, loss = 0.079591, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 71 fit: [25.9 s]: Recall = 0.37937, Jaccard score = 0.2916, loss = 0.078486, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 72 fit: [26.1 s]: Recall = 0.37572, Jaccard score = 0.2880, loss = 0.077611, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 73 fit: [25.8 s]: Recall = 0.37691, Jaccard score = 0.2892, loss = 0.077075, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 74 fit: [26.3 s]: Recall = 0.38057, Jaccard score = 0.2928, loss = 0.075722, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 75 fit: [26.1 s]: Recall = 0.37968, Jaccard score = 0.2920, loss = 0.075000, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 76 fit: [25.9 s]: Recall = 0.37723, Jaccard score = 0.2895, loss = 0.073799, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 77 fit: [26.3 s]: Recall = 0.37842, Jaccard score = 0.2907, loss = 0.072654, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 78 fit: [26.1 s]: Recall = 0.38019, Jaccard score = 0.2925, loss = 0.073177, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 79 fit: [25.9 s]: Recall = 0.38050, Jaccard score = 0.2928, loss = 0.071866, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 80 fit: [26.0 s]: Recall = 0.38069, Jaccard score = 0.2930, loss = 0.070394, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 81 fit: [25.9 s]: Recall = 0.37924, Jaccard score = 0.2915, loss = 0.069875, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 82 fit: [25.9 s]: Recall = 0.38195, Jaccard score = 0.2942, loss = 0.068435, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 83 fit: [26.1 s]: Recall = 0.37981, Jaccard score = 0.2921, loss = 0.068270, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 84 fit: [25.9 s]: Recall = 0.37949, Jaccard score = 0.2918, loss = 0.068036, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 85 fit: [25.9 s]: Recall = 0.38239, Jaccard score = 0.2947, loss = 0.067439, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 86 fit: [25.9 s]: Recall = 0.37994, Jaccard score = 0.2922, loss = 0.065718, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 87 fit: [26.2 s]: Recall = 0.38132, Jaccard score = 0.2936, loss = 0.066248, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 88 fit: [26.3 s]: Recall = 0.38019, Jaccard score = 0.2925, loss = 0.065231, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 89 fit: [25.9 s]: Recall = 0.38340, Jaccard score = 0.2957, loss = 0.064556, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 90 fit: [25.9 s]: Recall = 0.38485, Jaccard score = 0.2971, loss = 0.064119, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 91 fit: [25.9 s]: Recall = 0.37824, Jaccard score = 0.2905, loss = 0.063583, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 92 fit: [25.9 s]: Recall = 0.38132, Jaccard score = 0.2936, loss = 0.062412, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 93 fit: [26.2 s]: Recall = 0.38258, Jaccard score = 0.2948, loss = 0.062046, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 94 fit: [25.9 s]: Recall = 0.37861, Jaccard score = 0.2909, loss = 0.061859, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 95 fit: [25.8 s]: Recall = 0.38308, Jaccard score = 0.2953, loss = 0.060664, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 96 fit: [25.7 s]: Recall = 0.38686, Jaccard score = 0.2991, loss = 0.060968, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 97 fit: [25.6 s]: Recall = 0.38044, Jaccard score = 0.2927, loss = 0.060576, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 98 fit: [26.2 s]: Recall = 0.38239, Jaccard score = 0.2947, loss = 0.060146, gradient norm = 1.0000, eval: [16.4 s]
# Iteration 99 fit: [25.8 s]: Recall = 0.38271, Jaccard score = 0.2950, loss = 0.059167, gradient norm = 1.0000, eval: [16.4 s]
# End. Best Iteration 96:  Recall = 0.3869, Jaccard score = 0.2991. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,350,96]_1569754420.h5
# The average best performance after k-fold 3 is: Recall = 0.3875039100107428, Jaccard score = 0.2993030800771739
# 
# Performing k-fold 4
# Init: Recall = 0.0260, Jaccard score = 0.0157
# Iteration 0 fit: [28.3 s]: Recall = 0.22347, Jaccard score = 0.1539, loss = 0.436309, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 1 fit: [26.0 s]: Recall = 0.24881, Jaccard score = 0.1744, loss = 0.401091, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 2 fit: [25.7 s]: Recall = 0.26439, Jaccard score = 0.1873, loss = 0.380176, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 3 fit: [25.9 s]: Recall = 0.27309, Jaccard score = 0.1947, loss = 0.362170, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 4 fit: [26.1 s]: Recall = 0.28317, Jaccard score = 0.2033, loss = 0.346459, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 5 fit: [25.8 s]: Recall = 0.28999, Jaccard score = 0.2092, loss = 0.331042, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 6 fit: [26.2 s]: Recall = 0.29906, Jaccard score = 0.2172, loss = 0.317499, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 7 fit: [26.5 s]: Recall = 0.30407, Jaccard score = 0.2217, loss = 0.305636, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 8 fit: [25.8 s]: Recall = 0.30413, Jaccard score = 0.2217, loss = 0.292910, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 9 fit: [26.0 s]: Recall = 0.31101, Jaccard score = 0.2279, loss = 0.282892, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 10 fit: [25.7 s]: Recall = 0.31790, Jaccard score = 0.2341, loss = 0.272902, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 11 fit: [26.2 s]: Recall = 0.31552, Jaccard score = 0.2319, loss = 0.263350, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 12 fit: [25.9 s]: Recall = 0.32046, Jaccard score = 0.2364, loss = 0.255304, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 13 fit: [26.2 s]: Recall = 0.32478, Jaccard score = 0.2404, loss = 0.246034, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 14 fit: [25.6 s]: Recall = 0.32666, Jaccard score = 0.2421, loss = 0.239843, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 15 fit: [26.0 s]: Recall = 0.32747, Jaccard score = 0.2429, loss = 0.230925, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 16 fit: [26.6 s]: Recall = 0.33360, Jaccard score = 0.2485, loss = 0.224654, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 17 fit: [25.9 s]: Recall = 0.33129, Jaccard score = 0.2464, loss = 0.217714, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 18 fit: [25.8 s]: Recall = 0.33542, Jaccard score = 0.2502, loss = 0.210848, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 19 fit: [26.2 s]: Recall = 0.34099, Jaccard score = 0.2554, loss = 0.206274, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 20 fit: [26.2 s]: Recall = 0.34061, Jaccard score = 0.2551, loss = 0.200601, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 21 fit: [26.0 s]: Recall = 0.34299, Jaccard score = 0.2573, loss = 0.195055, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 22 fit: [25.7 s]: Recall = 0.34443, Jaccard score = 0.2587, loss = 0.188859, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 23 fit: [25.8 s]: Recall = 0.34625, Jaccard score = 0.2604, loss = 0.184238, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 24 fit: [26.2 s]: Recall = 0.34518, Jaccard score = 0.2594, loss = 0.180843, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 25 fit: [25.6 s]: Recall = 0.35025, Jaccard score = 0.2642, loss = 0.175676, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 26 fit: [25.8 s]: Recall = 0.34894, Jaccard score = 0.2630, loss = 0.170336, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 27 fit: [25.9 s]: Recall = 0.35075, Jaccard score = 0.2647, loss = 0.166109, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 28 fit: [25.9 s]: Recall = 0.35175, Jaccard score = 0.2657, loss = 0.162687, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 29 fit: [25.9 s]: Recall = 0.35344, Jaccard score = 0.2673, loss = 0.158610, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 30 fit: [26.0 s]: Recall = 0.35494, Jaccard score = 0.2687, loss = 0.154314, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 31 fit: [26.3 s]: Recall = 0.35876, Jaccard score = 0.2724, loss = 0.151819, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 32 fit: [26.0 s]: Recall = 0.35601, Jaccard score = 0.2697, loss = 0.147601, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 33 fit: [25.9 s]: Recall = 0.35832, Jaccard score = 0.2720, loss = 0.144174, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 34 fit: [26.1 s]: Recall = 0.35926, Jaccard score = 0.2729, loss = 0.141779, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 35 fit: [25.7 s]: Recall = 0.36227, Jaccard score = 0.2758, loss = 0.137966, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 36 fit: [26.1 s]: Recall = 0.35857, Jaccard score = 0.2722, loss = 0.135810, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 37 fit: [25.9 s]: Recall = 0.35895, Jaccard score = 0.2726, loss = 0.133456, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 38 fit: [25.8 s]: Recall = 0.36483, Jaccard score = 0.2783, loss = 0.130690, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 39 fit: [25.9 s]: Recall = 0.36408, Jaccard score = 0.2775, loss = 0.127541, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 40 fit: [25.3 s]: Recall = 0.36646, Jaccard score = 0.2799, loss = 0.124603, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 41 fit: [26.0 s]: Recall = 0.36658, Jaccard score = 0.2800, loss = 0.122278, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 42 fit: [25.9 s]: Recall = 0.36852, Jaccard score = 0.2819, loss = 0.120372, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 43 fit: [26.0 s]: Recall = 0.37115, Jaccard score = 0.2845, loss = 0.118429, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 44 fit: [25.9 s]: Recall = 0.36383, Jaccard score = 0.2773, loss = 0.115344, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 45 fit: [25.4 s]: Recall = 0.36965, Jaccard score = 0.2830, loss = 0.114379, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 46 fit: [25.5 s]: Recall = 0.37109, Jaccard score = 0.2844, loss = 0.110331, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 47 fit: [26.0 s]: Recall = 0.37222, Jaccard score = 0.2855, loss = 0.109902, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 48 fit: [26.0 s]: Recall = 0.37303, Jaccard score = 0.2863, loss = 0.107747, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 49 fit: [26.2 s]: Recall = 0.37328, Jaccard score = 0.2866, loss = 0.105719, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 50 fit: [26.3 s]: Recall = 0.36884, Jaccard score = 0.2822, loss = 0.103591, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 51 fit: [25.7 s]: Recall = 0.36884, Jaccard score = 0.2822, loss = 0.102160, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 52 fit: [25.4 s]: Recall = 0.37234, Jaccard score = 0.2856, loss = 0.101358, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 53 fit: [25.5 s]: Recall = 0.37497, Jaccard score = 0.2882, loss = 0.099189, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 54 fit: [26.1 s]: Recall = 0.37265, Jaccard score = 0.2860, loss = 0.097482, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 55 fit: [25.7 s]: Recall = 0.37578, Jaccard score = 0.2890, loss = 0.096815, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 56 fit: [25.9 s]: Recall = 0.37584, Jaccard score = 0.2891, loss = 0.095154, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 57 fit: [25.7 s]: Recall = 0.37991, Jaccard score = 0.2932, loss = 0.093930, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 58 fit: [25.5 s]: Recall = 0.37453, Jaccard score = 0.2878, loss = 0.092348, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 59 fit: [26.4 s]: Recall = 0.37872, Jaccard score = 0.2920, loss = 0.090589, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 60 fit: [25.7 s]: Recall = 0.37428, Jaccard score = 0.2876, loss = 0.089252, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 61 fit: [25.6 s]: Recall = 0.37753, Jaccard score = 0.2908, loss = 0.089156, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 62 fit: [25.5 s]: Recall = 0.37985, Jaccard score = 0.2931, loss = 0.088036, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 63 fit: [25.9 s]: Recall = 0.37910, Jaccard score = 0.2923, loss = 0.085932, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 64 fit: [26.1 s]: Recall = 0.37866, Jaccard score = 0.2919, loss = 0.084952, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 65 fit: [25.6 s]: Recall = 0.37722, Jaccard score = 0.2905, loss = 0.083358, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 66 fit: [25.5 s]: Recall = 0.37941, Jaccard score = 0.2927, loss = 0.082757, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 67 fit: [25.7 s]: Recall = 0.38148, Jaccard score = 0.2947, loss = 0.081157, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 68 fit: [26.2 s]: Recall = 0.37797, Jaccard score = 0.2912, loss = 0.080676, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 69 fit: [25.5 s]: Recall = 0.38041, Jaccard score = 0.2937, loss = 0.079773, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 70 fit: [25.7 s]: Recall = 0.37897, Jaccard score = 0.2922, loss = 0.078421, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 71 fit: [25.4 s]: Recall = 0.38166, Jaccard score = 0.2949, loss = 0.078210, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 72 fit: [26.4 s]: Recall = 0.37979, Jaccard score = 0.2930, loss = 0.077002, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 73 fit: [25.6 s]: Recall = 0.38166, Jaccard score = 0.2949, loss = 0.076340, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 74 fit: [25.9 s]: Recall = 0.37985, Jaccard score = 0.2931, loss = 0.075163, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 75 fit: [25.5 s]: Recall = 0.37753, Jaccard score = 0.2908, loss = 0.074046, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 76 fit: [26.1 s]: Recall = 0.37954, Jaccard score = 0.2928, loss = 0.073541, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 77 fit: [26.1 s]: Recall = 0.38335, Jaccard score = 0.2966, loss = 0.072230, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 78 fit: [25.9 s]: Recall = 0.37960, Jaccard score = 0.2928, loss = 0.071390, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 79 fit: [25.4 s]: Recall = 0.38010, Jaccard score = 0.2933, loss = 0.071223, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 80 fit: [25.7 s]: Recall = 0.37935, Jaccard score = 0.2926, loss = 0.070062, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 81 fit: [25.5 s]: Recall = 0.38129, Jaccard score = 0.2945, loss = 0.069114, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 82 fit: [26.0 s]: Recall = 0.38054, Jaccard score = 0.2938, loss = 0.068911, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 83 fit: [25.9 s]: Recall = 0.38479, Jaccard score = 0.2980, loss = 0.068072, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 84 fit: [26.2 s]: Recall = 0.38617, Jaccard score = 0.2994, loss = 0.068006, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 85 fit: [26.2 s]: Recall = 0.38079, Jaccard score = 0.2940, loss = 0.066415, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 86 fit: [25.9 s]: Recall = 0.38148, Jaccard score = 0.2947, loss = 0.065154, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 87 fit: [25.5 s]: Recall = 0.38279, Jaccard score = 0.2960, loss = 0.066163, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 88 fit: [25.9 s]: Recall = 0.38360, Jaccard score = 0.2969, loss = 0.065309, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 89 fit: [26.4 s]: Recall = 0.38561, Jaccard score = 0.2989, loss = 0.063706, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 90 fit: [25.9 s]: Recall = 0.38104, Jaccard score = 0.2943, loss = 0.064072, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 91 fit: [26.0 s]: Recall = 0.38473, Jaccard score = 0.2980, loss = 0.063130, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 92 fit: [25.3 s]: Recall = 0.38467, Jaccard score = 0.2979, loss = 0.062840, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 93 fit: [25.9 s]: Recall = 0.38692, Jaccard score = 0.3002, loss = 0.061627, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 94 fit: [25.8 s]: Recall = 0.38698, Jaccard score = 0.3003, loss = 0.061014, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 95 fit: [25.6 s]: Recall = 0.38861, Jaccard score = 0.3019, loss = 0.060819, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 96 fit: [26.1 s]: Recall = 0.38773, Jaccard score = 0.3010, loss = 0.060883, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 97 fit: [25.9 s]: Recall = 0.38467, Jaccard score = 0.2979, loss = 0.060320, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 98 fit: [26.3 s]: Recall = 0.38242, Jaccard score = 0.2957, loss = 0.058468, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 99 fit: [25.4 s]: Recall = 0.39161, Jaccard score = 0.3049, loss = 0.058853, gradient norm = 1.0000, eval: [16.8 s]
# End. Best Iteration 99:  Recall = 0.3916, Jaccard score = 0.3049. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,350,96]_1569754420.h5
# The average best performance after k-fold 4 is: Recall = 0.38853156204497824, Jaccard score = 0.30071256977915517
# 
# Performing k-fold 5
# Init: Recall = 0.0250, Jaccard score = 0.0151
# Iteration 0 fit: [28.9 s]: Recall = 0.21608, Jaccard score = 0.1478, loss = 0.435903, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 1 fit: [26.3 s]: Recall = 0.24421, Jaccard score = 0.1703, loss = 0.401554, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 2 fit: [26.1 s]: Recall = 0.26449, Jaccard score = 0.1871, loss = 0.380186, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 3 fit: [25.9 s]: Recall = 0.27102, Jaccard score = 0.1926, loss = 0.361591, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 4 fit: [26.5 s]: Recall = 0.28622, Jaccard score = 0.2056, loss = 0.345115, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 5 fit: [26.3 s]: Recall = 0.29538, Jaccard score = 0.2136, loss = 0.330812, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 6 fit: [26.4 s]: Recall = 0.29677, Jaccard score = 0.2148, loss = 0.317293, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 7 fit: [26.3 s]: Recall = 0.30261, Jaccard score = 0.2200, loss = 0.304983, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 8 fit: [26.6 s]: Recall = 0.30581, Jaccard score = 0.2228, loss = 0.293325, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 9 fit: [26.6 s]: Recall = 0.31228, Jaccard score = 0.2286, loss = 0.282091, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 10 fit: [26.2 s]: Recall = 0.31793, Jaccard score = 0.2337, loss = 0.272742, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 11 fit: [26.2 s]: Recall = 0.31761, Jaccard score = 0.2334, loss = 0.263843, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 12 fit: [26.1 s]: Recall = 0.32050, Jaccard score = 0.2361, loss = 0.254921, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 13 fit: [26.2 s]: Recall = 0.31918, Jaccard score = 0.2349, loss = 0.246691, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 14 fit: [25.8 s]: Recall = 0.33024, Jaccard score = 0.2450, loss = 0.239095, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 15 fit: [26.3 s]: Recall = 0.33024, Jaccard score = 0.2450, loss = 0.231608, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 16 fit: [26.0 s]: Recall = 0.33369, Jaccard score = 0.2482, loss = 0.225118, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 17 fit: [26.1 s]: Recall = 0.33595, Jaccard score = 0.2503, loss = 0.217682, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 18 fit: [25.9 s]: Recall = 0.33790, Jaccard score = 0.2521, loss = 0.211030, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 19 fit: [26.0 s]: Recall = 0.34016, Jaccard score = 0.2542, loss = 0.205314, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 20 fit: [26.3 s]: Recall = 0.34003, Jaccard score = 0.2541, loss = 0.199994, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 21 fit: [25.8 s]: Recall = 0.34606, Jaccard score = 0.2598, loss = 0.194365, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 22 fit: [26.2 s]: Recall = 0.34958, Jaccard score = 0.2631, loss = 0.189422, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 23 fit: [26.1 s]: Recall = 0.34298, Jaccard score = 0.2569, loss = 0.184454, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 24 fit: [26.2 s]: Recall = 0.34958, Jaccard score = 0.2631, loss = 0.180112, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 25 fit: [26.1 s]: Recall = 0.35046, Jaccard score = 0.2640, loss = 0.174713, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 26 fit: [26.4 s]: Recall = 0.34631, Jaccard score = 0.2600, loss = 0.170864, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 27 fit: [26.2 s]: Recall = 0.35039, Jaccard score = 0.2639, loss = 0.166645, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 28 fit: [26.1 s]: Recall = 0.35353, Jaccard score = 0.2669, loss = 0.162547, gradient norm = 1.0000, eval: [17.0 s]
# Iteration 29 fit: [26.4 s]: Recall = 0.35203, Jaccard score = 0.2654, loss = 0.158754, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 30 fit: [27.0 s]: Recall = 0.35667, Jaccard score = 0.2699, loss = 0.155255, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 31 fit: [26.3 s]: Recall = 0.35717, Jaccard score = 0.2704, loss = 0.151010, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 32 fit: [26.1 s]: Recall = 0.35856, Jaccard score = 0.2717, loss = 0.148489, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 33 fit: [26.0 s]: Recall = 0.36100, Jaccard score = 0.2741, loss = 0.144609, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 34 fit: [25.9 s]: Recall = 0.35969, Jaccard score = 0.2728, loss = 0.141066, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 35 fit: [25.8 s]: Recall = 0.35969, Jaccard score = 0.2728, loss = 0.138635, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 36 fit: [25.9 s]: Recall = 0.36075, Jaccard score = 0.2738, loss = 0.135586, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 37 fit: [26.1 s]: Recall = 0.36239, Jaccard score = 0.2754, loss = 0.134294, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 38 fit: [26.3 s]: Recall = 0.36703, Jaccard score = 0.2799, loss = 0.130320, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 39 fit: [26.1 s]: Recall = 0.36578, Jaccard score = 0.2787, loss = 0.128021, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 40 fit: [26.1 s]: Recall = 0.36653, Jaccard score = 0.2794, loss = 0.124738, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 41 fit: [26.2 s]: Recall = 0.36358, Jaccard score = 0.2766, loss = 0.122937, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 42 fit: [26.1 s]: Recall = 0.36358, Jaccard score = 0.2766, loss = 0.120068, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 43 fit: [25.8 s]: Recall = 0.36923, Jaccard score = 0.2821, loss = 0.117493, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 44 fit: [26.3 s]: Recall = 0.36791, Jaccard score = 0.2808, loss = 0.115695, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 45 fit: [25.9 s]: Recall = 0.36980, Jaccard score = 0.2826, loss = 0.114011, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 46 fit: [26.1 s]: Recall = 0.36791, Jaccard score = 0.2808, loss = 0.111899, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 47 fit: [26.0 s]: Recall = 0.36634, Jaccard score = 0.2793, loss = 0.110830, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 48 fit: [25.9 s]: Recall = 0.36841, Jaccard score = 0.2813, loss = 0.108098, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 49 fit: [26.2 s]: Recall = 0.37425, Jaccard score = 0.2870, loss = 0.105452, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 50 fit: [26.1 s]: Recall = 0.37407, Jaccard score = 0.2868, loss = 0.103533, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 51 fit: [26.4 s]: Recall = 0.37206, Jaccard score = 0.2849, loss = 0.103094, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 52 fit: [26.0 s]: Recall = 0.37294, Jaccard score = 0.2857, loss = 0.100823, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 53 fit: [26.1 s]: Recall = 0.37545, Jaccard score = 0.2882, loss = 0.099870, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 54 fit: [25.6 s]: Recall = 0.37394, Jaccard score = 0.2867, loss = 0.097282, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 55 fit: [25.8 s]: Recall = 0.37287, Jaccard score = 0.2857, loss = 0.095950, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 56 fit: [26.2 s]: Recall = 0.37425, Jaccard score = 0.2870, loss = 0.095251, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 57 fit: [25.6 s]: Recall = 0.37394, Jaccard score = 0.2867, loss = 0.093997, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 58 fit: [26.1 s]: Recall = 0.37608, Jaccard score = 0.2888, loss = 0.092280, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 59 fit: [26.3 s]: Recall = 0.37400, Jaccard score = 0.2868, loss = 0.091183, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 60 fit: [25.7 s]: Recall = 0.37407, Jaccard score = 0.2868, loss = 0.088903, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 61 fit: [25.7 s]: Recall = 0.37702, Jaccard score = 0.2898, loss = 0.087876, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 62 fit: [26.0 s]: Recall = 0.37708, Jaccard score = 0.2898, loss = 0.086985, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 63 fit: [26.5 s]: Recall = 0.37708, Jaccard score = 0.2898, loss = 0.085918, gradient norm = 1.0000, eval: [16.6 s]
# Iteration 64 fit: [26.3 s]: Recall = 0.37790, Jaccard score = 0.2906, loss = 0.085853, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 65 fit: [26.0 s]: Recall = 0.37765, Jaccard score = 0.2904, loss = 0.084179, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 66 fit: [26.1 s]: Recall = 0.37683, Jaccard score = 0.2896, loss = 0.082950, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 67 fit: [26.3 s]: Recall = 0.38041, Jaccard score = 0.2931, loss = 0.081552, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 68 fit: [26.1 s]: Recall = 0.37991, Jaccard score = 0.2926, loss = 0.081002, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 69 fit: [25.9 s]: Recall = 0.37702, Jaccard score = 0.2898, loss = 0.079558, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 70 fit: [25.8 s]: Recall = 0.37922, Jaccard score = 0.2919, loss = 0.078865, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 71 fit: [26.1 s]: Recall = 0.37821, Jaccard score = 0.2909, loss = 0.077953, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 72 fit: [25.6 s]: Recall = 0.37658, Jaccard score = 0.2893, loss = 0.077003, gradient norm = 1.0000, eval: [16.7 s]
# Iteration 73 fit: [26.1 s]: Recall = 0.37909, Jaccard score = 0.2918, loss = 0.075492, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 74 fit: [25.8 s]: Recall = 0.38072, Jaccard score = 0.2934, loss = 0.074492, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 75 fit: [25.9 s]: Recall = 0.37614, Jaccard score = 0.2889, loss = 0.073821, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 76 fit: [25.9 s]: Recall = 0.38047, Jaccard score = 0.2932, loss = 0.073415, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 77 fit: [26.2 s]: Recall = 0.38179, Jaccard score = 0.2945, loss = 0.072503, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 78 fit: [26.4 s]: Recall = 0.38173, Jaccard score = 0.2944, loss = 0.071502, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 79 fit: [26.2 s]: Recall = 0.38286, Jaccard score = 0.2956, loss = 0.070870, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 80 fit: [26.1 s]: Recall = 0.38116, Jaccard score = 0.2939, loss = 0.069185, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 81 fit: [25.8 s]: Recall = 0.38154, Jaccard score = 0.2943, loss = 0.069824, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 82 fit: [25.9 s]: Recall = 0.38273, Jaccard score = 0.2954, loss = 0.068759, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 83 fit: [25.9 s]: Recall = 0.38110, Jaccard score = 0.2938, loss = 0.068773, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 84 fit: [26.2 s]: Recall = 0.38066, Jaccard score = 0.2934, loss = 0.066689, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 85 fit: [26.1 s]: Recall = 0.38405, Jaccard score = 0.2968, loss = 0.066323, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 86 fit: [26.4 s]: Recall = 0.38424, Jaccard score = 0.2970, loss = 0.065080, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 87 fit: [26.0 s]: Recall = 0.38047, Jaccard score = 0.2932, loss = 0.065820, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 88 fit: [26.0 s]: Recall = 0.38185, Jaccard score = 0.2946, loss = 0.063901, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 89 fit: [25.8 s]: Recall = 0.38568, Jaccard score = 0.2984, loss = 0.064130, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 90 fit: [25.8 s]: Recall = 0.38430, Jaccard score = 0.2970, loss = 0.063679, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 91 fit: [25.9 s]: Recall = 0.38085, Jaccard score = 0.2936, loss = 0.063096, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 92 fit: [26.2 s]: Recall = 0.38305, Jaccard score = 0.2958, loss = 0.062556, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 93 fit: [26.1 s]: Recall = 0.37689, Jaccard score = 0.2896, loss = 0.061907, gradient norm = 1.0000, eval: [17.1 s]
# Iteration 94 fit: [26.1 s]: Recall = 0.38587, Jaccard score = 0.2986, loss = 0.061631, gradient norm = 1.0000, eval: [16.9 s]
# Iteration 95 fit: [26.0 s]: Recall = 0.38261, Jaccard score = 0.2953, loss = 0.060650, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 96 fit: [26.2 s]: Recall = 0.38298, Jaccard score = 0.2957, loss = 0.060544, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 97 fit: [26.1 s]: Recall = 0.38342, Jaccard score = 0.2961, loss = 0.059747, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 98 fit: [26.0 s]: Recall = 0.38581, Jaccard score = 0.2985, loss = 0.059902, gradient norm = 1.0000, eval: [16.8 s]
# Iteration 99 fit: [26.1 s]: Recall = 0.38349, Jaccard score = 0.2962, loss = 0.058927, gradient norm = 1.0000, eval: [16.9 s]
# End. Best Iteration 94:  Recall = 0.3859, Jaccard score = 0.2986. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[512,350,96]_1569754420.h5
# The average best performance after k-fold 5 is: Recall = 0.38799950395309407, Jaccard score = 0.3002882288068032
