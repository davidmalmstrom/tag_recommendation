--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "400"
--layers: "[64,32]"
--reg_layers: "[0,0]"
--early_stopping: "150"
--num_k_folds: "5"


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=150, epochs=400, eval_recall=1, is_tag=1, layers='[64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[64,32]_1568368838.h5
--weights_path: Pretrain/_MLP_8_[64,32]_1568368838.h5
# Load data done [1.8 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 32)        576000      user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 32)        64000       item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 32)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 32)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 64)           0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 32)           2080        concatenate_1[0][0]              
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            33          layer1[0][0]                     
# ==================================================================================================
# Total params: 642,113
# Trainable params: 642,113
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0249, Jaccard score = 0.0149
# Iteration 0 fit: [11.3 s]: Recall = 0.1710, Jaccard score = 0.1125, loss = 0.4666, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 1 fit: [11.1 s]: Recall = 0.1712, Jaccard score = 0.1127, loss = 0.4213, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 2 fit: [10.9 s]: Recall = 0.1707, Jaccard score = 0.1123, loss = 0.4190, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 3 fit: [10.9 s]: Recall = 0.1738, Jaccard score = 0.1146, loss = 0.4173, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 4 fit: [10.9 s]: Recall = 0.1698, Jaccard score = 0.1116, loss = 0.4150, gradient norm = 1.0000, eval: [13.2 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=150, epochs=400, eval_recall=1, is_tag=1, layers='[64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[64,32]_1568369343.h5
--weights_path: Pretrain/_MLP_8_[64,32]_1568369343.h5
# Load data done [1.8 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 32)        64000       item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 32)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 288)          0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 70)           20230       concatenate_1[0][0]              
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            71          layer1[0][0]                     
# ==================================================================================================
# Total params: 4,692,301
# Trainable params: 4,692,301
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0292, Jaccard score = 0.0176
# Iteration 0 fit: [20.3 s]: Recall = 0.1720, Jaccard score = 0.1133, loss = 0.4596, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 1 fit: [20.5 s]: Recall = 0.1720, Jaccard score = 0.1133, loss = 0.4218, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 2 fit: [20.4 s]: Recall = 0.1738, Jaccard score = 0.1146, loss = 0.4178, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 3 fit: [20.4 s]: Recall = 0.1744, Jaccard score = 0.1150, loss = 0.4137, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 4 fit: [20.3 s]: Recall = 0.1750, Jaccard score = 0.1155, loss = 0.4094, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 5 fit: [20.3 s]: Recall = 0.1725, Jaccard score = 0.1136, loss = 0.4040, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 6 fit: [20.1 s]: Recall = 0.1732, Jaccard score = 0.1142, loss = 0.3963, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 7 fit: [20.5 s]: Recall = 0.1730, Jaccard score = 0.1140, loss = 0.3849, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 8 fit: [20.2 s]: Recall = 0.1682, Jaccard score = 0.1105, loss = 0.3708, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 9 fit: [20.5 s]: Recall = 0.1716, Jaccard score = 0.1130, loss = 0.3549, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 10 fit: [20.4 s]: Recall = 0.1694, Jaccard score = 0.1114, loss = 0.3383, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 11 fit: [20.3 s]: Recall = 0.1641, Jaccard score = 0.1075, loss = 0.3220, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 12 fit: [20.7 s]: Recall = 0.1648, Jaccard score = 0.1080, loss = 0.3061, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 13 fit: [20.5 s]: Recall = 0.1707, Jaccard score = 0.1123, loss = 0.2902, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 14 fit: [20.4 s]: Recall = 0.1726, Jaccard score = 0.1137, loss = 0.2754, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 15 fit: [20.5 s]: Recall = 0.1727, Jaccard score = 0.1138, loss = 0.2608, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 16 fit: [20.5 s]: Recall = 0.1763, Jaccard score = 0.1164, loss = 0.2468, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 17 fit: [20.3 s]: Recall = 0.1794, Jaccard score = 0.1187, loss = 0.2340, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 18 fit: [20.2 s]: Recall = 0.1782, Jaccard score = 0.1178, loss = 0.2218, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 19 fit: [20.3 s]: Recall = 0.1796, Jaccard score = 0.1189, loss = 0.2093, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 20 fit: [20.4 s]: Recall = 0.1844, Jaccard score = 0.1224, loss = 0.1992, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 21 fit: [20.4 s]: Recall = 0.1841, Jaccard score = 0.1222, loss = 0.1890, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 22 fit: [20.4 s]: Recall = 0.1829, Jaccard score = 0.1213, loss = 0.1798, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 23 fit: [20.3 s]: Recall = 0.1854, Jaccard score = 0.1232, loss = 0.1695, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 24 fit: [20.3 s]: Recall = 0.1865, Jaccard score = 0.1240, loss = 0.1620, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 25 fit: [20.2 s]: Recall = 0.1903, Jaccard score = 0.1269, loss = 0.1539, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 26 fit: [20.5 s]: Recall = 0.1997, Jaccard score = 0.1340, loss = 0.1463, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 27 fit: [20.4 s]: Recall = 0.1980, Jaccard score = 0.1326, loss = 0.1398, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 28 fit: [20.5 s]: Recall = 0.2015, Jaccard score = 0.1353, loss = 0.1322, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 29 fit: [20.5 s]: Recall = 0.2004, Jaccard score = 0.1345, loss = 0.1274, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 30 fit: [20.2 s]: Recall = 0.2073, Jaccard score = 0.1398, loss = 0.1224, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 31 fit: [20.5 s]: Recall = 0.2036, Jaccard score = 0.1370, loss = 0.1165, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 32 fit: [20.1 s]: Recall = 0.2085, Jaccard score = 0.1407, loss = 0.1113, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 33 fit: [20.5 s]: Recall = 0.2094, Jaccard score = 0.1414, loss = 0.1074, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 34 fit: [20.5 s]: Recall = 0.2098, Jaccard score = 0.1417, loss = 0.1036, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 35 fit: [20.4 s]: Recall = 0.2113, Jaccard score = 0.1428, loss = 0.0986, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 36 fit: [20.2 s]: Recall = 0.2113, Jaccard score = 0.1429, loss = 0.0958, gradient norm = 1.0000, eval: [13.5 s]
# Iteration 37 fit: [20.4 s]: Recall = 0.2175, Jaccard score = 0.1477, loss = 0.0925, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 38 fit: [20.5 s]: Recall = 0.2177, Jaccard score = 0.1478, loss = 0.0886, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 39 fit: [20.5 s]: Recall = 0.2210, Jaccard score = 0.1504, loss = 0.0856, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 40 fit: [20.2 s]: Recall = 0.2195, Jaccard score = 0.1492, loss = 0.0823, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 41 fit: [20.5 s]: Recall = 0.2235, Jaccard score = 0.1524, loss = 0.0798, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 42 fit: [20.2 s]: Recall = 0.2256, Jaccard score = 0.1540, loss = 0.0769, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 43 fit: [20.5 s]: Recall = 0.2234, Jaccard score = 0.1523, loss = 0.0749, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 44 fit: [20.5 s]: Recall = 0.2247, Jaccard score = 0.1533, loss = 0.0734, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 45 fit: [20.3 s]: Recall = 0.2227, Jaccard score = 0.1517, loss = 0.0714, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 46 fit: [20.5 s]: Recall = 0.2261, Jaccard score = 0.1544, loss = 0.0694, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 47 fit: [20.5 s]: Recall = 0.2321, Jaccard score = 0.1591, loss = 0.0674, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 48 fit: [20.2 s]: Recall = 0.2316, Jaccard score = 0.1588, loss = 0.0660, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 49 fit: [20.4 s]: Recall = 0.2306, Jaccard score = 0.1579, loss = 0.0641, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 50 fit: [20.3 s]: Recall = 0.2359, Jaccard score = 0.1622, loss = 0.0614, gradient norm = 1.0000, eval: [13.5 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=150, epochs=400, eval_recall=1, is_tag=1, layers='[64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[64,32]_1568372775.h5
--weights_path: Pretrain/_MLP_8_[64,32]_1568372775.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 32)        64000       item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 32)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 288)          0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 70)           20230       concatenate_1[0][0]              
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            71          layer1[0][0]                     
# ==================================================================================================
# Total params: 4,692,301
# Trainable params: 4,692,301
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0296, Jaccard score = 0.0178
# Iteration 0 fit: [20.6 s]: Recall = 0.1737, Jaccard score = 0.1145, loss = 0.4672, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 1 fit: [20.0 s]: Recall = 0.1726, Jaccard score = 0.1137, loss = 0.4222, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 2 fit: [19.8 s]: Recall = 0.1733, Jaccard score = 0.1142, loss = 0.4180, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 3 fit: [19.9 s]: Recall = 0.1754, Jaccard score = 0.1158, loss = 0.4137, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 4 fit: [19.8 s]: Recall = 0.1742, Jaccard score = 0.1149, loss = 0.4091, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 5 fit: [19.8 s]: Recall = 0.1712, Jaccard score = 0.1127, loss = 0.4037, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 6 fit: [19.9 s]: Recall = 0.1708, Jaccard score = 0.1124, loss = 0.3953, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 7 fit: [20.0 s]: Recall = 0.1677, Jaccard score = 0.1101, loss = 0.3827, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 8 fit: [19.8 s]: Recall = 0.1632, Jaccard score = 0.1068, loss = 0.3672, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 9 fit: [20.1 s]: Recall = 0.1636, Jaccard score = 0.1071, loss = 0.3507, gradient norm = 1.0000, eval: [13.5 s]
# Iteration 10 fit: [20.0 s]: Recall = 0.1639, Jaccard score = 0.1073, loss = 0.3332, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 11 fit: [20.0 s]: Recall = 0.1622, Jaccard score = 0.1061, loss = 0.3161, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 12 fit: [20.0 s]: Recall = 0.1673, Jaccard score = 0.1098, loss = 0.3002, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 13 fit: [19.9 s]: Recall = 0.1694, Jaccard score = 0.1113, loss = 0.2841, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 14 fit: [19.9 s]: Recall = 0.1753, Jaccard score = 0.1157, loss = 0.2686, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 15 fit: [20.1 s]: Recall = 0.1748, Jaccard score = 0.1153, loss = 0.2543, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 16 fit: [19.8 s]: Recall = 0.1840, Jaccard score = 0.1221, loss = 0.2407, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 17 fit: [19.8 s]: Recall = 0.1838, Jaccard score = 0.1220, loss = 0.2282, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 18 fit: [20.0 s]: Recall = 0.1841, Jaccard score = 0.1222, loss = 0.2168, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 19 fit: [20.0 s]: Recall = 0.1926, Jaccard score = 0.1286, loss = 0.2053, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 20 fit: [19.9 s]: Recall = 0.1857, Jaccard score = 0.1234, loss = 0.1946, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 21 fit: [19.9 s]: Recall = 0.1876, Jaccard score = 0.1248, loss = 0.1853, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 22 fit: [20.0 s]: Recall = 0.1931, Jaccard score = 0.1289, loss = 0.1758, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 23 fit: [19.8 s]: Recall = 0.1948, Jaccard score = 0.1303, loss = 0.1677, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 24 fit: [19.9 s]: Recall = 0.1932, Jaccard score = 0.1290, loss = 0.1588, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 25 fit: [19.9 s]: Recall = 0.1987, Jaccard score = 0.1332, loss = 0.1520, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 26 fit: [19.8 s]: Recall = 0.1999, Jaccard score = 0.1341, loss = 0.1449, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 27 fit: [20.1 s]: Recall = 0.2031, Jaccard score = 0.1366, loss = 0.1379, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 28 fit: [20.0 s]: Recall = 0.2016, Jaccard score = 0.1354, loss = 0.1315, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 29 fit: [20.1 s]: Recall = 0.1990, Jaccard score = 0.1334, loss = 0.1268, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 30 fit: [19.8 s]: Recall = 0.2070, Jaccard score = 0.1396, loss = 0.1208, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 31 fit: [20.2 s]: Recall = 0.2061, Jaccard score = 0.1388, loss = 0.1166, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 32 fit: [19.8 s]: Recall = 0.2137, Jaccard score = 0.1447, loss = 0.1114, gradient norm = 1.0000, eval: [16.0 s]
# Iteration 33 fit: [20.1 s]: Recall = 0.2112, Jaccard score = 0.1428, loss = 0.1076, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 34 fit: [19.9 s]: Recall = 0.2158, Jaccard score = 0.1463, loss = 0.1025, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 35 fit: [20.0 s]: Recall = 0.2111, Jaccard score = 0.1427, loss = 0.1002, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 36 fit: [19.9 s]: Recall = 0.2125, Jaccard score = 0.1438, loss = 0.0959, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 37 fit: [19.8 s]: Recall = 0.2201, Jaccard score = 0.1497, loss = 0.0927, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 38 fit: [19.9 s]: Recall = 0.2152, Jaccard score = 0.1458, loss = 0.0901, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 39 fit: [19.9 s]: Recall = 0.2237, Jaccard score = 0.1525, loss = 0.0872, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 40 fit: [19.9 s]: Recall = 0.2235, Jaccard score = 0.1523, loss = 0.0843, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 41 fit: [20.1 s]: Recall = 0.2281, Jaccard score = 0.1559, loss = 0.0819, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 42 fit: [19.9 s]: Recall = 0.2235, Jaccard score = 0.1524, loss = 0.0799, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 43 fit: [19.7 s]: Recall = 0.2264, Jaccard score = 0.1546, loss = 0.0772, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 44 fit: [20.0 s]: Recall = 0.2287, Jaccard score = 0.1565, loss = 0.0747, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 45 fit: [19.9 s]: Recall = 0.2277, Jaccard score = 0.1557, loss = 0.0729, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 46 fit: [19.7 s]: Recall = 0.2291, Jaccard score = 0.1568, loss = 0.0710, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 47 fit: [19.8 s]: Recall = 0.2325, Jaccard score = 0.1594, loss = 0.0687, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 48 fit: [19.9 s]: Recall = 0.2356, Jaccard score = 0.1619, loss = 0.0689, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 49 fit: [19.9 s]: Recall = 0.2290, Jaccard score = 0.1567, loss = 0.0665, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 50 fit: [20.0 s]: Recall = 0.2355, Jaccard score = 0.1619, loss = 0.0644, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 51 fit: [20.0 s]: Recall = 0.2352, Jaccard score = 0.1616, loss = 0.0637, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 52 fit: [20.1 s]: Recall = 0.2377, Jaccard score = 0.1636, loss = 0.0618, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 53 fit: [19.9 s]: Recall = 0.2386, Jaccard score = 0.1643, loss = 0.0594, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 54 fit: [20.0 s]: Recall = 0.2398, Jaccard score = 0.1653, loss = 0.0587, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 55 fit: [19.9 s]: Recall = 0.2357, Jaccard score = 0.1620, loss = 0.0583, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 56 fit: [20.3 s]: Recall = 0.2407, Jaccard score = 0.1660, loss = 0.0569, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 57 fit: [19.9 s]: Recall = 0.2414, Jaccard score = 0.1666, loss = 0.0571, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 58 fit: [19.8 s]: Recall = 0.2406, Jaccard score = 0.1659, loss = 0.0549, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 59 fit: [19.8 s]: Recall = 0.2432, Jaccard score = 0.1681, loss = 0.0533, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 60 fit: [20.1 s]: Recall = 0.2448, Jaccard score = 0.1693, loss = 0.0532, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 61 fit: [19.8 s]: Recall = 0.2434, Jaccard score = 0.1682, loss = 0.0522, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 62 fit: [20.1 s]: Recall = 0.2428, Jaccard score = 0.1677, loss = 0.0508, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 63 fit: [20.0 s]: Recall = 0.2470, Jaccard score = 0.1711, loss = 0.0510, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 64 fit: [20.0 s]: Recall = 0.2480, Jaccard score = 0.1719, loss = 0.0502, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 65 fit: [19.9 s]: Recall = 0.2450, Jaccard score = 0.1695, loss = 0.0487, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 66 fit: [19.9 s]: Recall = 0.2491, Jaccard score = 0.1728, loss = 0.0486, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 67 fit: [19.9 s]: Recall = 0.2503, Jaccard score = 0.1738, loss = 0.0476, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 68 fit: [20.0 s]: Recall = 0.2477, Jaccard score = 0.1717, loss = 0.0470, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 69 fit: [19.9 s]: Recall = 0.2520, Jaccard score = 0.1752, loss = 0.0451, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 70 fit: [19.8 s]: Recall = 0.2581, Jaccard score = 0.1801, loss = 0.0460, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 71 fit: [20.1 s]: Recall = 0.2509, Jaccard score = 0.1743, loss = 0.0457, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 72 fit: [19.8 s]: Recall = 0.2515, Jaccard score = 0.1747, loss = 0.0454, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 73 fit: [20.0 s]: Recall = 0.2575, Jaccard score = 0.1797, loss = 0.0444, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 74 fit: [19.8 s]: Recall = 0.2550, Jaccard score = 0.1776, loss = 0.0436, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 75 fit: [19.9 s]: Recall = 0.2525, Jaccard score = 0.1756, loss = 0.0420, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 76 fit: [20.1 s]: Recall = 0.2551, Jaccard score = 0.1777, loss = 0.0427, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 77 fit: [19.8 s]: Recall = 0.2558, Jaccard score = 0.1783, loss = 0.0432, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 78 fit: [20.0 s]: Recall = 0.2595, Jaccard score = 0.1813, loss = 0.0424, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 79 fit: [19.8 s]: Recall = 0.2592, Jaccard score = 0.1811, loss = 0.0416, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 80 fit: [20.0 s]: Recall = 0.2588, Jaccard score = 0.1807, loss = 0.0418, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 81 fit: [19.9 s]: Recall = 0.2639, Jaccard score = 0.1850, loss = 0.0408, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 82 fit: [19.7 s]: Recall = 0.2596, Jaccard score = 0.1814, loss = 0.0413, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 83 fit: [19.7 s]: Recall = 0.2617, Jaccard score = 0.1832, loss = 0.0398, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 84 fit: [20.0 s]: Recall = 0.2618, Jaccard score = 0.1833, loss = 0.0401, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 85 fit: [19.8 s]: Recall = 0.2620, Jaccard score = 0.1834, loss = 0.0398, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 86 fit: [19.9 s]: Recall = 0.2665, Jaccard score = 0.1871, loss = 0.0389, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 87 fit: [20.1 s]: Recall = 0.2595, Jaccard score = 0.1813, loss = 0.0389, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 88 fit: [20.1 s]: Recall = 0.2611, Jaccard score = 0.1826, loss = 0.0389, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 89 fit: [20.2 s]: Recall = 0.2572, Jaccard score = 0.1795, loss = 0.0381, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 90 fit: [19.9 s]: Recall = 0.2642, Jaccard score = 0.1852, loss = 0.0381, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 91 fit: [20.0 s]: Recall = 0.2620, Jaccard score = 0.1834, loss = 0.0378, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 92 fit: [20.1 s]: Recall = 0.2639, Jaccard score = 0.1850, loss = 0.0374, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 93 fit: [19.9 s]: Recall = 0.2657, Jaccard score = 0.1864, loss = 0.0372, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 94 fit: [20.1 s]: Recall = 0.2659, Jaccard score = 0.1866, loss = 0.0372, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 95 fit: [20.0 s]: Recall = 0.2618, Jaccard score = 0.1832, loss = 0.0366, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 96 fit: [20.0 s]: Recall = 0.2712, Jaccard score = 0.1911, loss = 0.0368, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 97 fit: [19.9 s]: Recall = 0.2666, Jaccard score = 0.1872, loss = 0.0362, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 98 fit: [19.8 s]: Recall = 0.2671, Jaccard score = 0.1877, loss = 0.0366, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 99 fit: [20.0 s]: Recall = 0.2673, Jaccard score = 0.1878, loss = 0.0359, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 100 fit: [19.9 s]: Recall = 0.2675, Jaccard score = 0.1880, loss = 0.0358, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 101 fit: [19.9 s]: Recall = 0.2678, Jaccard score = 0.1883, loss = 0.0359, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 102 fit: [19.8 s]: Recall = 0.2726, Jaccard score = 0.1922, loss = 0.0356, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 103 fit: [19.8 s]: Recall = 0.2715, Jaccard score = 0.1914, loss = 0.0346, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 104 fit: [20.0 s]: Recall = 0.2712, Jaccard score = 0.1910, loss = 0.0349, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 105 fit: [20.1 s]: Recall = 0.2707, Jaccard score = 0.1907, loss = 0.0351, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 106 fit: [20.0 s]: Recall = 0.2734, Jaccard score = 0.1929, loss = 0.0350, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 107 fit: [20.0 s]: Recall = 0.2751, Jaccard score = 0.1944, loss = 0.0344, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 108 fit: [20.0 s]: Recall = 0.2756, Jaccard score = 0.1948, loss = 0.0349, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 109 fit: [19.8 s]: Recall = 0.2751, Jaccard score = 0.1943, loss = 0.0346, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 110 fit: [20.1 s]: Recall = 0.2714, Jaccard score = 0.1912, loss = 0.0340, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 111 fit: [19.9 s]: Recall = 0.2721, Jaccard score = 0.1918, loss = 0.0338, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 112 fit: [20.1 s]: Recall = 0.2760, Jaccard score = 0.1951, loss = 0.0334, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 113 fit: [19.9 s]: Recall = 0.2738, Jaccard score = 0.1932, loss = 0.0334, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 114 fit: [20.0 s]: Recall = 0.2753, Jaccard score = 0.1945, loss = 0.0337, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 115 fit: [19.9 s]: Recall = 0.2753, Jaccard score = 0.1945, loss = 0.0329, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 116 fit: [19.7 s]: Recall = 0.2760, Jaccard score = 0.1951, loss = 0.0336, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 117 fit: [19.9 s]: Recall = 0.2772, Jaccard score = 0.1961, loss = 0.0330, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 118 fit: [20.1 s]: Recall = 0.2760, Jaccard score = 0.1951, loss = 0.0332, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 119 fit: [19.8 s]: Recall = 0.2770, Jaccard score = 0.1959, loss = 0.0324, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 120 fit: [19.7 s]: Recall = 0.2755, Jaccard score = 0.1947, loss = 0.0325, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 121 fit: [19.9 s]: Recall = 0.2751, Jaccard score = 0.1944, loss = 0.0331, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 122 fit: [19.9 s]: Recall = 0.2785, Jaccard score = 0.1972, loss = 0.0321, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 123 fit: [19.7 s]: Recall = 0.2807, Jaccard score = 0.1991, loss = 0.0321, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 124 fit: [19.9 s]: Recall = 0.2793, Jaccard score = 0.1980, loss = 0.0321, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 125 fit: [20.0 s]: Recall = 0.2781, Jaccard score = 0.1969, loss = 0.0324, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 126 fit: [19.9 s]: Recall = 0.2790, Jaccard score = 0.1976, loss = 0.0327, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 127 fit: [19.9 s]: Recall = 0.2840, Jaccard score = 0.2019, loss = 0.0319, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 128 fit: [20.1 s]: Recall = 0.2840, Jaccard score = 0.2019, loss = 0.0312, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 129 fit: [19.8 s]: Recall = 0.2813, Jaccard score = 0.1996, loss = 0.0322, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 130 fit: [20.1 s]: Recall = 0.2817, Jaccard score = 0.2000, loss = 0.0322, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 131 fit: [19.8 s]: Recall = 0.2834, Jaccard score = 0.2014, loss = 0.0314, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 132 fit: [19.9 s]: Recall = 0.2820, Jaccard score = 0.2002, loss = 0.0317, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 133 fit: [20.1 s]: Recall = 0.2797, Jaccard score = 0.1983, loss = 0.0314, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 134 fit: [19.8 s]: Recall = 0.2827, Jaccard score = 0.2008, loss = 0.0308, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 135 fit: [20.1 s]: Recall = 0.2850, Jaccard score = 0.2027, loss = 0.0310, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 136 fit: [19.8 s]: Recall = 0.2812, Jaccard score = 0.1995, loss = 0.0309, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 137 fit: [20.0 s]: Recall = 0.2804, Jaccard score = 0.1988, loss = 0.0311, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 138 fit: [20.0 s]: Recall = 0.2832, Jaccard score = 0.2012, loss = 0.0308, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 139 fit: [20.4 s]: Recall = 0.2852, Jaccard score = 0.2030, loss = 0.0306, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 140 fit: [19.8 s]: Recall = 0.2841, Jaccard score = 0.2020, loss = 0.0310, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 141 fit: [20.0 s]: Recall = 0.2827, Jaccard score = 0.2008, loss = 0.0308, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 142 fit: [20.1 s]: Recall = 0.2887, Jaccard score = 0.2059, loss = 0.0297, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 143 fit: [20.0 s]: Recall = 0.2866, Jaccard score = 0.2042, loss = 0.0312, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 144 fit: [19.9 s]: Recall = 0.2884, Jaccard score = 0.2057, loss = 0.0302, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 145 fit: [19.8 s]: Recall = 0.2889, Jaccard score = 0.2061, loss = 0.0297, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 146 fit: [19.9 s]: Recall = 0.2882, Jaccard score = 0.2055, loss = 0.0291, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 147 fit: [19.9 s]: Recall = 0.2855, Jaccard score = 0.2032, loss = 0.0300, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 148 fit: [20.0 s]: Recall = 0.2850, Jaccard score = 0.2027, loss = 0.0296, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 149 fit: [20.0 s]: Recall = 0.2870, Jaccard score = 0.2044, loss = 0.0295, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 150 fit: [19.7 s]: Recall = 0.2875, Jaccard score = 0.2049, loss = 0.0297, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 151 fit: [19.8 s]: Recall = 0.2858, Jaccard score = 0.2035, loss = 0.0289, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 152 fit: [20.4 s]: Recall = 0.2898, Jaccard score = 0.2069, loss = 0.0295, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 153 fit: [20.0 s]: Recall = 0.2882, Jaccard score = 0.2055, loss = 0.0294, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 154 fit: [20.0 s]: Recall = 0.2922, Jaccard score = 0.2090, loss = 0.0290, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 155 fit: [20.0 s]: Recall = 0.2898, Jaccard score = 0.2069, loss = 0.0293, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 156 fit: [20.0 s]: Recall = 0.2839, Jaccard score = 0.2018, loss = 0.0288, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 157 fit: [20.0 s]: Recall = 0.2915, Jaccard score = 0.2084, loss = 0.0294, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 158 fit: [20.0 s]: Recall = 0.2907, Jaccard score = 0.2077, loss = 0.0291, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 159 fit: [20.0 s]: Recall = 0.2919, Jaccard score = 0.2087, loss = 0.0287, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 160 fit: [20.0 s]: Recall = 0.2905, Jaccard score = 0.2075, loss = 0.0288, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 161 fit: [19.9 s]: Recall = 0.2887, Jaccard score = 0.2059, loss = 0.0290, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 162 fit: [20.0 s]: Recall = 0.2925, Jaccard score = 0.2092, loss = 0.0280, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 163 fit: [20.1 s]: Recall = 0.2882, Jaccard score = 0.2055, loss = 0.0289, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 164 fit: [19.9 s]: Recall = 0.2902, Jaccard score = 0.2072, loss = 0.0283, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 165 fit: [19.9 s]: Recall = 0.2873, Jaccard score = 0.2048, loss = 0.0282, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 166 fit: [20.0 s]: Recall = 0.2971, Jaccard score = 0.2132, loss = 0.0284, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 167 fit: [20.0 s]: Recall = 0.2915, Jaccard score = 0.2084, loss = 0.0283, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 168 fit: [20.0 s]: Recall = 0.2935, Jaccard score = 0.2101, loss = 0.0280, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 169 fit: [20.0 s]: Recall = 0.2870, Jaccard score = 0.2045, loss = 0.0281, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 170 fit: [20.0 s]: Recall = 0.2960, Jaccard score = 0.2123, loss = 0.0281, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 171 fit: [20.1 s]: Recall = 0.2902, Jaccard score = 0.2072, loss = 0.0279, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 172 fit: [20.3 s]: Recall = 0.2931, Jaccard score = 0.2097, loss = 0.0274, gradient norm = 1.0000, eval: [13.9 s]
# Iteration 173 fit: [20.1 s]: Recall = 0.2922, Jaccard score = 0.2090, loss = 0.0274, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 174 fit: [20.2 s]: Recall = 0.2936, Jaccard score = 0.2102, loss = 0.0286, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 175 fit: [19.8 s]: Recall = 0.2975, Jaccard score = 0.2136, loss = 0.0275, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 176 fit: [19.8 s]: Recall = 0.2928, Jaccard score = 0.2095, loss = 0.0275, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 177 fit: [19.9 s]: Recall = 0.2922, Jaccard score = 0.2090, loss = 0.0282, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 178 fit: [20.1 s]: Recall = 0.2955, Jaccard score = 0.2118, loss = 0.0273, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 179 fit: [19.8 s]: Recall = 0.2956, Jaccard score = 0.2119, loss = 0.0270, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 180 fit: [19.9 s]: Recall = 0.3002, Jaccard score = 0.2159, loss = 0.0278, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 181 fit: [19.9 s]: Recall = 0.2983, Jaccard score = 0.2142, loss = 0.0269, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 182 fit: [20.0 s]: Recall = 0.2932, Jaccard score = 0.2098, loss = 0.0274, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 183 fit: [20.0 s]: Recall = 0.2912, Jaccard score = 0.2081, loss = 0.0268, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 184 fit: [19.9 s]: Recall = 0.2941, Jaccard score = 0.2106, loss = 0.0278, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 185 fit: [20.1 s]: Recall = 0.2934, Jaccard score = 0.2100, loss = 0.0269, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 186 fit: [20.1 s]: Recall = 0.2921, Jaccard score = 0.2089, loss = 0.0268, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 187 fit: [20.0 s]: Recall = 0.2949, Jaccard score = 0.2113, loss = 0.0265, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 188 fit: [20.0 s]: Recall = 0.2999, Jaccard score = 0.2156, loss = 0.0271, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 189 fit: [20.2 s]: Recall = 0.2929, Jaccard score = 0.2096, loss = 0.0265, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 190 fit: [20.1 s]: Recall = 0.2937, Jaccard score = 0.2102, loss = 0.0267, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 191 fit: [20.1 s]: Recall = 0.2914, Jaccard score = 0.2082, loss = 0.0260, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 192 fit: [20.0 s]: Recall = 0.2941, Jaccard score = 0.2106, loss = 0.0269, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 193 fit: [20.1 s]: Recall = 0.2989, Jaccard score = 0.2148, loss = 0.0268, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 194 fit: [20.0 s]: Recall = 0.2980, Jaccard score = 0.2140, loss = 0.0261, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 195 fit: [19.7 s]: Recall = 0.2953, Jaccard score = 0.2117, loss = 0.0264, gradient norm = 1.0000, eval: [13.5 s]
# Iteration 196 fit: [19.8 s]: Recall = 0.2967, Jaccard score = 0.2128, loss = 0.0263, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 197 fit: [19.9 s]: Recall = 0.3008, Jaccard score = 0.2165, loss = 0.0262, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 198 fit: [20.1 s]: Recall = 0.3011, Jaccard score = 0.2167, loss = 0.0259, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 199 fit: [20.1 s]: Recall = 0.2955, Jaccard score = 0.2118, loss = 0.0258, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 200 fit: [20.0 s]: Recall = 0.2966, Jaccard score = 0.2128, loss = 0.0255, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 201 fit: [20.1 s]: Recall = 0.3020, Jaccard score = 0.2175, loss = 0.0258, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 202 fit: [19.7 s]: Recall = 0.2957, Jaccard score = 0.2120, loss = 0.0258, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 203 fit: [20.1 s]: Recall = 0.2997, Jaccard score = 0.2155, loss = 0.0259, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 204 fit: [20.1 s]: Recall = 0.3053, Jaccard score = 0.2204, loss = 0.0255, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 205 fit: [20.1 s]: Recall = 0.2981, Jaccard score = 0.2141, loss = 0.0254, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 206 fit: [19.8 s]: Recall = 0.3022, Jaccard score = 0.2177, loss = 0.0260, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 207 fit: [20.0 s]: Recall = 0.2971, Jaccard score = 0.2132, loss = 0.0254, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 208 fit: [19.9 s]: Recall = 0.2980, Jaccard score = 0.2140, loss = 0.0252, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 209 fit: [19.8 s]: Recall = 0.3020, Jaccard score = 0.2175, loss = 0.0261, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 210 fit: [20.2 s]: Recall = 0.2959, Jaccard score = 0.2122, loss = 0.0254, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 211 fit: [19.8 s]: Recall = 0.2988, Jaccard score = 0.2147, loss = 0.0250, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 212 fit: [19.8 s]: Recall = 0.3033, Jaccard score = 0.2186, loss = 0.0254, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 213 fit: [20.1 s]: Recall = 0.3056, Jaccard score = 0.2206, loss = 0.0250, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 214 fit: [20.0 s]: Recall = 0.3013, Jaccard score = 0.2169, loss = 0.0250, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 215 fit: [19.9 s]: Recall = 0.2985, Jaccard score = 0.2144, loss = 0.0249, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 216 fit: [19.8 s]: Recall = 0.3036, Jaccard score = 0.2189, loss = 0.0252, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 217 fit: [19.8 s]: Recall = 0.3001, Jaccard score = 0.2159, loss = 0.0248, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 218 fit: [19.9 s]: Recall = 0.3026, Jaccard score = 0.2180, loss = 0.0254, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 219 fit: [19.8 s]: Recall = 0.3014, Jaccard score = 0.2170, loss = 0.0245, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 220 fit: [20.1 s]: Recall = 0.3052, Jaccard score = 0.2203, loss = 0.0248, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 221 fit: [20.0 s]: Recall = 0.2984, Jaccard score = 0.2143, loss = 0.0254, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 222 fit: [19.9 s]: Recall = 0.3001, Jaccard score = 0.2158, loss = 0.0251, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 223 fit: [20.1 s]: Recall = 0.3011, Jaccard score = 0.2167, loss = 0.0248, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 224 fit: [19.8 s]: Recall = 0.3015, Jaccard score = 0.2170, loss = 0.0243, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 225 fit: [19.7 s]: Recall = 0.2994, Jaccard score = 0.2152, loss = 0.0243, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 226 fit: [19.8 s]: Recall = 0.3033, Jaccard score = 0.2186, loss = 0.0250, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 227 fit: [19.8 s]: Recall = 0.3010, Jaccard score = 0.2166, loss = 0.0236, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 228 fit: [20.0 s]: Recall = 0.3011, Jaccard score = 0.2167, loss = 0.0244, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 229 fit: [19.9 s]: Recall = 0.3051, Jaccard score = 0.2202, loss = 0.0248, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 230 fit: [19.8 s]: Recall = 0.3026, Jaccard score = 0.2180, loss = 0.0240, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 231 fit: [20.1 s]: Recall = 0.3024, Jaccard score = 0.2178, loss = 0.0241, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 232 fit: [19.9 s]: Recall = 0.2994, Jaccard score = 0.2152, loss = 0.0245, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 233 fit: [19.9 s]: Recall = 0.3042, Jaccard score = 0.2194, loss = 0.0238, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 234 fit: [19.9 s]: Recall = 0.3031, Jaccard score = 0.2185, loss = 0.0240, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 235 fit: [19.9 s]: Recall = 0.3001, Jaccard score = 0.2158, loss = 0.0244, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 236 fit: [20.1 s]: Recall = 0.3035, Jaccard score = 0.2188, loss = 0.0238, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 237 fit: [19.8 s]: Recall = 0.3051, Jaccard score = 0.2202, loss = 0.0240, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 238 fit: [19.9 s]: Recall = 0.3026, Jaccard score = 0.2180, loss = 0.0245, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 239 fit: [20.2 s]: Recall = 0.3026, Jaccard score = 0.2180, loss = 0.0242, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 240 fit: [20.0 s]: Recall = 0.3002, Jaccard score = 0.2159, loss = 0.0239, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 241 fit: [20.1 s]: Recall = 0.3066, Jaccard score = 0.2216, loss = 0.0240, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 242 fit: [20.0 s]: Recall = 0.3053, Jaccard score = 0.2204, loss = 0.0237, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 243 fit: [20.0 s]: Recall = 0.3065, Jaccard score = 0.2214, loss = 0.0239, gradient norm = 1.0000, eval: [13.5 s]
# Iteration 244 fit: [20.0 s]: Recall = 0.2987, Jaccard score = 0.2146, loss = 0.0242, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 245 fit: [19.8 s]: Recall = 0.3037, Jaccard score = 0.2190, loss = 0.0235, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 246 fit: [19.8 s]: Recall = 0.3024, Jaccard score = 0.2178, loss = 0.0237, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 247 fit: [20.0 s]: Recall = 0.2992, Jaccard score = 0.2150, loss = 0.0241, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 248 fit: [20.0 s]: Recall = 0.3027, Jaccard score = 0.2181, loss = 0.0236, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 249 fit: [20.1 s]: Recall = 0.3038, Jaccard score = 0.2191, loss = 0.0240, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 250 fit: [20.0 s]: Recall = 0.3077, Jaccard score = 0.2225, loss = 0.0237, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 251 fit: [19.9 s]: Recall = 0.3045, Jaccard score = 0.2197, loss = 0.0239, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 252 fit: [20.4 s]: Recall = 0.3033, Jaccard score = 0.2186, loss = 0.0232, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 253 fit: [19.8 s]: Recall = 0.3042, Jaccard score = 0.2194, loss = 0.0227, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 254 fit: [20.3 s]: Recall = 0.3017, Jaccard score = 0.2173, loss = 0.0238, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 255 fit: [20.0 s]: Recall = 0.3030, Jaccard score = 0.2184, loss = 0.0234, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 256 fit: [20.1 s]: Recall = 0.3053, Jaccard score = 0.2204, loss = 0.0232, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 257 fit: [20.1 s]: Recall = 0.3066, Jaccard score = 0.2216, loss = 0.0231, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 258 fit: [20.0 s]: Recall = 0.3012, Jaccard score = 0.2168, loss = 0.0237, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 259 fit: [20.3 s]: Recall = 0.3090, Jaccard score = 0.2237, loss = 0.0226, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 260 fit: [20.1 s]: Recall = 0.3051, Jaccard score = 0.2202, loss = 0.0233, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 261 fit: [19.8 s]: Recall = 0.3060, Jaccard score = 0.2210, loss = 0.0234, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 262 fit: [19.9 s]: Recall = 0.3022, Jaccard score = 0.2177, loss = 0.0227, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 263 fit: [19.8 s]: Recall = 0.3044, Jaccard score = 0.2196, loss = 0.0232, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 264 fit: [20.0 s]: Recall = 0.3023, Jaccard score = 0.2178, loss = 0.0231, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 265 fit: [19.9 s]: Recall = 0.3019, Jaccard score = 0.2174, loss = 0.0229, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 266 fit: [19.8 s]: Recall = 0.3052, Jaccard score = 0.2203, loss = 0.0233, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 267 fit: [19.7 s]: Recall = 0.3037, Jaccard score = 0.2190, loss = 0.0225, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 268 fit: [20.1 s]: Recall = 0.3060, Jaccard score = 0.2210, loss = 0.0229, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 269 fit: [19.9 s]: Recall = 0.3044, Jaccard score = 0.2196, loss = 0.0229, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 270 fit: [19.8 s]: Recall = 0.3008, Jaccard score = 0.2165, loss = 0.0229, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 271 fit: [20.2 s]: Recall = 0.3036, Jaccard score = 0.2189, loss = 0.0227, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 272 fit: [19.9 s]: Recall = 0.3074, Jaccard score = 0.2223, loss = 0.0221, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 273 fit: [19.7 s]: Recall = 0.3008, Jaccard score = 0.2165, loss = 0.0226, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 274 fit: [20.3 s]: Recall = 0.3097, Jaccard score = 0.2242, loss = 0.0223, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 275 fit: [19.8 s]: Recall = 0.3085, Jaccard score = 0.2232, loss = 0.0227, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 276 fit: [20.1 s]: Recall = 0.3056, Jaccard score = 0.2207, loss = 0.0224, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 277 fit: [19.8 s]: Recall = 0.3079, Jaccard score = 0.2227, loss = 0.0227, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 278 fit: [20.1 s]: Recall = 0.3077, Jaccard score = 0.2225, loss = 0.0229, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 279 fit: [19.9 s]: Recall = 0.3070, Jaccard score = 0.2219, loss = 0.0225, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 280 fit: [20.1 s]: Recall = 0.3075, Jaccard score = 0.2223, loss = 0.0222, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 281 fit: [19.9 s]: Recall = 0.3068, Jaccard score = 0.2217, loss = 0.0226, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 282 fit: [20.0 s]: Recall = 0.3081, Jaccard score = 0.2228, loss = 0.0227, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 283 fit: [20.1 s]: Recall = 0.3045, Jaccard score = 0.2197, loss = 0.0228, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 284 fit: [19.9 s]: Recall = 0.2999, Jaccard score = 0.2157, loss = 0.0227, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 285 fit: [20.1 s]: Recall = 0.3022, Jaccard score = 0.2177, loss = 0.0224, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 286 fit: [19.9 s]: Recall = 0.3084, Jaccard score = 0.2232, loss = 0.0224, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 287 fit: [19.9 s]: Recall = 0.3082, Jaccard score = 0.2229, loss = 0.0222, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 288 fit: [19.9 s]: Recall = 0.3024, Jaccard score = 0.2179, loss = 0.0217, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 289 fit: [19.8 s]: Recall = 0.3071, Jaccard score = 0.2220, loss = 0.0219, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 290 fit: [19.8 s]: Recall = 0.3040, Jaccard score = 0.2193, loss = 0.0231, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 291 fit: [19.9 s]: Recall = 0.3078, Jaccard score = 0.2226, loss = 0.0221, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 292 fit: [20.0 s]: Recall = 0.3070, Jaccard score = 0.2219, loss = 0.0219, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 293 fit: [19.9 s]: Recall = 0.2995, Jaccard score = 0.2153, loss = 0.0225, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 294 fit: [20.0 s]: Recall = 0.3077, Jaccard score = 0.2225, loss = 0.0220, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 295 fit: [20.4 s]: Recall = 0.3040, Jaccard score = 0.2193, loss = 0.0220, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 296 fit: [20.0 s]: Recall = 0.3026, Jaccard score = 0.2180, loss = 0.0222, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 297 fit: [19.8 s]: Recall = 0.3041, Jaccard score = 0.2193, loss = 0.0223, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 298 fit: [20.1 s]: Recall = 0.3029, Jaccard score = 0.2183, loss = 0.0220, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 299 fit: [19.9 s]: Recall = 0.3068, Jaccard score = 0.2218, loss = 0.0219, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 300 fit: [20.1 s]: Recall = 0.3047, Jaccard score = 0.2198, loss = 0.0222, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 301 fit: [20.0 s]: Recall = 0.3106, Jaccard score = 0.2251, loss = 0.0218, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 302 fit: [20.1 s]: Recall = 0.3007, Jaccard score = 0.2164, loss = 0.0216, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 303 fit: [19.8 s]: Recall = 0.3027, Jaccard score = 0.2182, loss = 0.0221, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 304 fit: [19.9 s]: Recall = 0.3114, Jaccard score = 0.2258, loss = 0.0217, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 305 fit: [20.1 s]: Recall = 0.3074, Jaccard score = 0.2222, loss = 0.0218, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 306 fit: [20.0 s]: Recall = 0.3057, Jaccard score = 0.2207, loss = 0.0213, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 307 fit: [19.9 s]: Recall = 0.3064, Jaccard score = 0.2214, loss = 0.0218, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 308 fit: [20.0 s]: Recall = 0.3047, Jaccard score = 0.2198, loss = 0.0218, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 309 fit: [20.1 s]: Recall = 0.3023, Jaccard score = 0.2178, loss = 0.0218, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 310 fit: [20.0 s]: Recall = 0.3072, Jaccard score = 0.2221, loss = 0.0219, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 311 fit: [20.0 s]: Recall = 0.3030, Jaccard score = 0.2184, loss = 0.0215, gradient norm = 1.0000, eval: [13.2 s]
# Iteration 312 fit: [19.9 s]: Recall = 0.3116, Jaccard score = 0.2260, loss = 0.0210, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 313 fit: [20.1 s]: Recall = 0.3099, Jaccard score = 0.2245, loss = 0.0216, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 314 fit: [20.0 s]: Recall = 0.2999, Jaccard score = 0.2156, loss = 0.0218, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 315 fit: [20.1 s]: Recall = 0.3049, Jaccard score = 0.2201, loss = 0.0220, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 316 fit: [19.9 s]: Recall = 0.2992, Jaccard score = 0.2151, loss = 0.0220, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 317 fit: [20.1 s]: Recall = 0.3096, Jaccard score = 0.2242, loss = 0.0216, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 318 fit: [19.7 s]: Recall = 0.3028, Jaccard score = 0.2182, loss = 0.0214, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 319 fit: [19.9 s]: Recall = 0.3096, Jaccard score = 0.2242, loss = 0.0213, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 320 fit: [20.0 s]: Recall = 0.3053, Jaccard score = 0.2204, loss = 0.0212, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 321 fit: [19.9 s]: Recall = 0.3078, Jaccard score = 0.2226, loss = 0.0210, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 322 fit: [20.0 s]: Recall = 0.3082, Jaccard score = 0.2229, loss = 0.0213, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 323 fit: [19.8 s]: Recall = 0.3107, Jaccard score = 0.2252, loss = 0.0215, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 324 fit: [19.9 s]: Recall = 0.3114, Jaccard score = 0.2258, loss = 0.0212, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 325 fit: [20.0 s]: Recall = 0.3071, Jaccard score = 0.2220, loss = 0.0211, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 326 fit: [19.8 s]: Recall = 0.3141, Jaccard score = 0.2282, loss = 0.0206, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 327 fit: [20.1 s]: Recall = 0.3129, Jaccard score = 0.2271, loss = 0.0213, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 328 fit: [19.9 s]: Recall = 0.3098, Jaccard score = 0.2244, loss = 0.0214, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 329 fit: [20.0 s]: Recall = 0.3090, Jaccard score = 0.2236, loss = 0.0208, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 330 fit: [19.9 s]: Recall = 0.3100, Jaccard score = 0.2246, loss = 0.0210, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 331 fit: [19.9 s]: Recall = 0.3067, Jaccard score = 0.2216, loss = 0.0210, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 332 fit: [19.7 s]: Recall = 0.3109, Jaccard score = 0.2253, loss = 0.0214, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 333 fit: [20.0 s]: Recall = 0.3089, Jaccard score = 0.2236, loss = 0.0209, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 334 fit: [19.9 s]: Recall = 0.3051, Jaccard score = 0.2202, loss = 0.0211, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 335 fit: [19.9 s]: Recall = 0.3087, Jaccard score = 0.2234, loss = 0.0210, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 336 fit: [20.0 s]: Recall = 0.3026, Jaccard score = 0.2180, loss = 0.0208, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 337 fit: [19.9 s]: Recall = 0.3050, Jaccard score = 0.2201, loss = 0.0207, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 338 fit: [20.0 s]: Recall = 0.3049, Jaccard score = 0.2200, loss = 0.0212, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 339 fit: [19.9 s]: Recall = 0.3080, Jaccard score = 0.2228, loss = 0.0209, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 340 fit: [19.8 s]: Recall = 0.3079, Jaccard score = 0.2227, loss = 0.0208, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 341 fit: [20.1 s]: Recall = 0.3091, Jaccard score = 0.2238, loss = 0.0209, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 342 fit: [19.8 s]: Recall = 0.3050, Jaccard score = 0.2201, loss = 0.0205, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 343 fit: [20.0 s]: Recall = 0.3095, Jaccard score = 0.2241, loss = 0.0209, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 344 fit: [19.9 s]: Recall = 0.3105, Jaccard score = 0.2250, loss = 0.0209, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 345 fit: [19.9 s]: Recall = 0.3115, Jaccard score = 0.2259, loss = 0.0209, gradient norm = 1.0000, eval: [13.4 s]
# Iteration 346 fit: [19.8 s]: Recall = 0.3070, Jaccard score = 0.2219, loss = 0.0207, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 347 fit: [19.7 s]: Recall = 0.3098, Jaccard score = 0.2244, loss = 0.0204, gradient norm = 1.0000, eval: [13.1 s]
# Iteration 348 fit: [20.0 s]: Recall = 0.3150, Jaccard score = 0.2290, loss = 0.0209, gradient norm = 1.0000, eval: [13.0 s]
# Iteration 349 fit: [20.0 s]: Recall = 0.3086, Jaccard score = 0.2233, loss = 0.0210, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 350 fit: [20.7 s]: Recall = 0.3130, Jaccard score = 0.2273, loss = 0.0202, gradient norm = 1.0000, eval: [13.3 s]
# Iteration 351 fit: [20.2 s]: Recall = 0.3154, Jaccard score = 0.2294, loss = 0.0208, gradient norm = 1.0000, eval: [16.4 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=150, epochs=400, eval_recall=1, is_tag=1, layers='[64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[64,32]_1568384496.h5
--weights_path: Pretrain/_MLP_8_[64,32]_1568384496.h5
# Load data done [2.1 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 64)        128000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 64)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 320)          0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 70)           22470       concatenate_1[0][0]              
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 70)           280         layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            71          batch_normalization_1[0][0]      
# ==================================================================================================
# Total params: 4,758,821
# Trainable params: 4,758,681
# Non-trainable params: 140
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0256, Jaccard score = 0.0154
# Iteration 0 fit: [22.3 s]: Recall = 0.1739, Jaccard score = 0.1147, loss = 0.4568, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 1 fit: [21.7 s]: Recall = 0.1724, Jaccard score = 0.1136, loss = 0.4207, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 2 fit: [21.7 s]: Recall = 0.1732, Jaccard score = 0.1142, loss = 0.4170, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 3 fit: [21.7 s]: Recall = 0.1735, Jaccard score = 0.1144, loss = 0.4116, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 4 fit: [21.7 s]: Recall = 0.1710, Jaccard score = 0.1125, loss = 0.4038, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 5 fit: [21.7 s]: Recall = 0.1679, Jaccard score = 0.1103, loss = 0.3924, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 6 fit: [21.8 s]: Recall = 0.1666, Jaccard score = 0.1093, loss = 0.3747, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 7 fit: [21.7 s]: Recall = 0.1669, Jaccard score = 0.1095, loss = 0.3546, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 8 fit: [21.7 s]: Recall = 0.1637, Jaccard score = 0.1072, loss = 0.3331, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 9 fit: [21.7 s]: Recall = 0.1669, Jaccard score = 0.1096, loss = 0.3131, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 10 fit: [21.7 s]: Recall = 0.1696, Jaccard score = 0.1115, loss = 0.2929, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 11 fit: [21.8 s]: Recall = 0.1668, Jaccard score = 0.1095, loss = 0.2741, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 12 fit: [21.7 s]: Recall = 0.1717, Jaccard score = 0.1131, loss = 0.2575, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 13 fit: [21.7 s]: Recall = 0.1769, Jaccard score = 0.1169, loss = 0.2412, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 14 fit: [21.7 s]: Recall = 0.1760, Jaccard score = 0.1162, loss = 0.2259, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 15 fit: [21.8 s]: Recall = 0.1814, Jaccard score = 0.1202, loss = 0.2119, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 16 fit: [21.7 s]: Recall = 0.1839, Jaccard score = 0.1221, loss = 0.1997, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 17 fit: [21.8 s]: Recall = 0.1904, Jaccard score = 0.1269, loss = 0.1881, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 18 fit: [21.7 s]: Recall = 0.1870, Jaccard score = 0.1244, loss = 0.1780, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 19 fit: [21.7 s]: Recall = 0.1881, Jaccard score = 0.1252, loss = 0.1673, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 20 fit: [21.9 s]: Recall = 0.1896, Jaccard score = 0.1264, loss = 0.1590, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 21 fit: [21.7 s]: Recall = 0.1909, Jaccard score = 0.1273, loss = 0.1501, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 22 fit: [21.7 s]: Recall = 0.1948, Jaccard score = 0.1302, loss = 0.1420, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 23 fit: [21.7 s]: Recall = 0.1974, Jaccard score = 0.1322, loss = 0.1350, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 24 fit: [21.8 s]: Recall = 0.1990, Jaccard score = 0.1334, loss = 0.1289, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 25 fit: [21.7 s]: Recall = 0.1996, Jaccard score = 0.1339, loss = 0.1241, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 26 fit: [21.7 s]: Recall = 0.1955, Jaccard score = 0.1308, loss = 0.1177, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 27 fit: [21.7 s]: Recall = 0.2048, Jaccard score = 0.1378, loss = 0.1122, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 28 fit: [21.7 s]: Recall = 0.2070, Jaccard score = 0.1395, loss = 0.1077, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 29 fit: [21.7 s]: Recall = 0.2101, Jaccard score = 0.1419, loss = 0.1034, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 30 fit: [21.7 s]: Recall = 0.2142, Jaccard score = 0.1451, loss = 0.0992, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 31 fit: [21.7 s]: Recall = 0.2074, Jaccard score = 0.1398, loss = 0.0955, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 32 fit: [21.7 s]: Recall = 0.2066, Jaccard score = 0.1392, loss = 0.0918, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 33 fit: [21.7 s]: Recall = 0.2120, Jaccard score = 0.1434, loss = 0.0886, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 34 fit: [21.7 s]: Recall = 0.2137, Jaccard score = 0.1447, loss = 0.0862, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 35 fit: [21.8 s]: Recall = 0.2157, Jaccard score = 0.1462, loss = 0.0833, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 36 fit: [21.7 s]: Recall = 0.2145, Jaccard score = 0.1453, loss = 0.0800, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 37 fit: [21.7 s]: Recall = 0.2189, Jaccard score = 0.1488, loss = 0.0778, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 38 fit: [21.7 s]: Recall = 0.2150, Jaccard score = 0.1457, loss = 0.0759, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 39 fit: [21.7 s]: Recall = 0.2214, Jaccard score = 0.1507, loss = 0.0730, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 40 fit: [21.7 s]: Recall = 0.2244, Jaccard score = 0.1531, loss = 0.0714, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 41 fit: [21.7 s]: Recall = 0.2228, Jaccard score = 0.1518, loss = 0.0695, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 42 fit: [21.7 s]: Recall = 0.2222, Jaccard score = 0.1513, loss = 0.0676, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 43 fit: [21.7 s]: Recall = 0.2230, Jaccard score = 0.1520, loss = 0.0657, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 44 fit: [21.7 s]: Recall = 0.2243, Jaccard score = 0.1530, loss = 0.0642, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 45 fit: [21.7 s]: Recall = 0.2224, Jaccard score = 0.1515, loss = 0.0612, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 46 fit: [21.7 s]: Recall = 0.2272, Jaccard score = 0.1552, loss = 0.0608, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 47 fit: [21.7 s]: Recall = 0.2251, Jaccard score = 0.1536, loss = 0.0588, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 48 fit: [21.7 s]: Recall = 0.2292, Jaccard score = 0.1569, loss = 0.0585, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 49 fit: [21.7 s]: Recall = 0.2283, Jaccard score = 0.1561, loss = 0.0562, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 50 fit: [21.7 s]: Recall = 0.2320, Jaccard score = 0.1590, loss = 0.0554, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 51 fit: [21.7 s]: Recall = 0.2339, Jaccard score = 0.1606, loss = 0.0548, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 52 fit: [21.7 s]: Recall = 0.2300, Jaccard score = 0.1575, loss = 0.0532, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 53 fit: [21.7 s]: Recall = 0.2355, Jaccard score = 0.1618, loss = 0.0517, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 54 fit: [21.7 s]: Recall = 0.2290, Jaccard score = 0.1567, loss = 0.0512, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 55 fit: [21.7 s]: Recall = 0.2367, Jaccard score = 0.1628, loss = 0.0496, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 56 fit: [21.7 s]: Recall = 0.2349, Jaccard score = 0.1614, loss = 0.0486, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 57 fit: [21.7 s]: Recall = 0.2357, Jaccard score = 0.1620, loss = 0.0482, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 58 fit: [21.8 s]: Recall = 0.2392, Jaccard score = 0.1648, loss = 0.0469, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 59 fit: [21.7 s]: Recall = 0.2345, Jaccard score = 0.1610, loss = 0.0465, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 60 fit: [21.7 s]: Recall = 0.2347, Jaccard score = 0.1612, loss = 0.0459, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 61 fit: [21.7 s]: Recall = 0.2361, Jaccard score = 0.1623, loss = 0.0446, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 62 fit: [21.7 s]: Recall = 0.2391, Jaccard score = 0.1648, loss = 0.0446, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 63 fit: [21.7 s]: Recall = 0.2407, Jaccard score = 0.1660, loss = 0.0436, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 64 fit: [21.7 s]: Recall = 0.2402, Jaccard score = 0.1656, loss = 0.0434, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 65 fit: [21.7 s]: Recall = 0.2440, Jaccard score = 0.1687, loss = 0.0421, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 66 fit: [21.7 s]: Recall = 0.2366, Jaccard score = 0.1627, loss = 0.0418, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 67 fit: [21.7 s]: Recall = 0.2430, Jaccard score = 0.1679, loss = 0.0410, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 68 fit: [21.7 s]: Recall = 0.2426, Jaccard score = 0.1676, loss = 0.0409, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 69 fit: [21.7 s]: Recall = 0.2406, Jaccard score = 0.1659, loss = 0.0403, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 70 fit: [21.8 s]: Recall = 0.2437, Jaccard score = 0.1684, loss = 0.0395, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 71 fit: [21.7 s]: Recall = 0.2444, Jaccard score = 0.1690, loss = 0.0394, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 72 fit: [21.7 s]: Recall = 0.2416, Jaccard score = 0.1667, loss = 0.0386, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 73 fit: [21.8 s]: Recall = 0.2441, Jaccard score = 0.1688, loss = 0.0379, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 74 fit: [22.0 s]: Recall = 0.2479, Jaccard score = 0.1718, loss = 0.0371, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 75 fit: [21.8 s]: Recall = 0.2465, Jaccard score = 0.1707, loss = 0.0372, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 76 fit: [21.7 s]: Recall = 0.2453, Jaccard score = 0.1697, loss = 0.0367, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 77 fit: [21.7 s]: Recall = 0.2459, Jaccard score = 0.1702, loss = 0.0365, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 78 fit: [21.7 s]: Recall = 0.2464, Jaccard score = 0.1706, loss = 0.0363, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 79 fit: [21.7 s]: Recall = 0.2515, Jaccard score = 0.1748, loss = 0.0349, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 80 fit: [21.7 s]: Recall = 0.2504, Jaccard score = 0.1739, loss = 0.0350, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 81 fit: [21.7 s]: Recall = 0.2496, Jaccard score = 0.1732, loss = 0.0354, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 82 fit: [21.7 s]: Recall = 0.2465, Jaccard score = 0.1707, loss = 0.0347, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 83 fit: [21.8 s]: Recall = 0.2506, Jaccard score = 0.1740, loss = 0.0341, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 84 fit: [21.7 s]: Recall = 0.2501, Jaccard score = 0.1737, loss = 0.0341, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 85 fit: [21.7 s]: Recall = 0.2536, Jaccard score = 0.1765, loss = 0.0340, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 86 fit: [21.8 s]: Recall = 0.2530, Jaccard score = 0.1760, loss = 0.0333, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 87 fit: [21.7 s]: Recall = 0.2509, Jaccard score = 0.1743, loss = 0.0336, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 88 fit: [21.7 s]: Recall = 0.2510, Jaccard score = 0.1744, loss = 0.0327, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 89 fit: [21.7 s]: Recall = 0.2558, Jaccard score = 0.1783, loss = 0.0331, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 90 fit: [21.7 s]: Recall = 0.2503, Jaccard score = 0.1738, loss = 0.0320, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 91 fit: [21.8 s]: Recall = 0.2540, Jaccard score = 0.1768, loss = 0.0317, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 92 fit: [21.7 s]: Recall = 0.2545, Jaccard score = 0.1773, loss = 0.0310, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 93 fit: [21.7 s]: Recall = 0.2563, Jaccard score = 0.1787, loss = 0.0315, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 94 fit: [21.7 s]: Recall = 0.2570, Jaccard score = 0.1793, loss = 0.0313, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 95 fit: [21.7 s]: Recall = 0.2593, Jaccard score = 0.1811, loss = 0.0316, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 96 fit: [21.7 s]: Recall = 0.2552, Jaccard score = 0.1778, loss = 0.0308, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 97 fit: [21.7 s]: Recall = 0.2561, Jaccard score = 0.1785, loss = 0.0312, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 98 fit: [21.7 s]: Recall = 0.2581, Jaccard score = 0.1802, loss = 0.0308, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 99 fit: [21.7 s]: Recall = 0.2569, Jaccard score = 0.1792, loss = 0.0303, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 100 fit: [21.8 s]: Recall = 0.2538, Jaccard score = 0.1766, loss = 0.0301, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 101 fit: [21.7 s]: Recall = 0.2566, Jaccard score = 0.1790, loss = 0.0299, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 102 fit: [21.8 s]: Recall = 0.2590, Jaccard score = 0.1809, loss = 0.0303, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 103 fit: [21.7 s]: Recall = 0.2581, Jaccard score = 0.1802, loss = 0.0301, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 104 fit: [21.7 s]: Recall = 0.2546, Jaccard score = 0.1773, loss = 0.0297, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 105 fit: [21.7 s]: Recall = 0.2601, Jaccard score = 0.1818, loss = 0.0290, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 106 fit: [21.7 s]: Recall = 0.2606, Jaccard score = 0.1823, loss = 0.0287, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 107 fit: [21.7 s]: Recall = 0.2622, Jaccard score = 0.1836, loss = 0.0291, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 108 fit: [21.7 s]: Recall = 0.2621, Jaccard score = 0.1835, loss = 0.0284, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 109 fit: [21.7 s]: Recall = 0.2631, Jaccard score = 0.1843, loss = 0.0287, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 110 fit: [21.7 s]: Recall = 0.2626, Jaccard score = 0.1839, loss = 0.0286, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 111 fit: [21.7 s]: Recall = 0.2652, Jaccard score = 0.1860, loss = 0.0286, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 112 fit: [21.7 s]: Recall = 0.2611, Jaccard score = 0.1826, loss = 0.0281, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 113 fit: [21.7 s]: Recall = 0.2645, Jaccard score = 0.1855, loss = 0.0282, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 114 fit: [21.7 s]: Recall = 0.2616, Jaccard score = 0.1831, loss = 0.0278, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 115 fit: [21.8 s]: Recall = 0.2648, Jaccard score = 0.1858, loss = 0.0283, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 116 fit: [21.7 s]: Recall = 0.2662, Jaccard score = 0.1869, loss = 0.0279, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 117 fit: [21.7 s]: Recall = 0.2645, Jaccard score = 0.1854, loss = 0.0275, gradient norm = 1.0000, eval: [14.0 s]
# Iteration 118 fit: [21.7 s]: Recall = 0.2645, Jaccard score = 0.1855, loss = 0.0276, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 119 fit: [21.7 s]: Recall = 0.2626, Jaccard score = 0.1839, loss = 0.0272, gradient norm = 1.0000, eval: [14.3 s]


# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=150, epochs=400, eval_recall=1, is_tag=1, layers='[64,32]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[64,32]_1568388852.h5
--weights_path: Pretrain/_MLP_8_[64,32]_1568388852.h5
# Load data done [1.8 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 256)       4608000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 32)        64000       item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 256)          0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 32)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 288)          0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 140)          40460       concatenate_1[0][0]              
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 140)          560         layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            141         batch_normalization_1[0][0]      
# ==================================================================================================
# Total params: 4,713,161
# Trainable params: 4,712,881
# Non-trainable params: 280
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0300, Jaccard score = 0.0181
# Iteration 0 fit: [22.5 s]: Recall = 0.1721, Jaccard score = 0.1133, loss = 0.4643, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 1 fit: [21.9 s]: Recall = 0.1722, Jaccard score = 0.1134, loss = 0.4221, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 2 fit: [22.0 s]: Recall = 0.1721, Jaccard score = 0.1133, loss = 0.4188, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 3 fit: [22.0 s]: Recall = 0.1727, Jaccard score = 0.1138, loss = 0.4151, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 4 fit: [22.0 s]: Recall = 0.1735, Jaccard score = 0.1143, loss = 0.4103, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 5 fit: [22.0 s]: Recall = 0.1703, Jaccard score = 0.1120, loss = 0.4041, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 6 fit: [22.0 s]: Recall = 0.1671, Jaccard score = 0.1097, loss = 0.3946, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 7 fit: [22.1 s]: Recall = 0.1629, Jaccard score = 0.1066, loss = 0.3810, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 8 fit: [22.0 s]: Recall = 0.1627, Jaccard score = 0.1065, loss = 0.3639, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 9 fit: [21.9 s]: Recall = 0.1561, Jaccard score = 0.1017, loss = 0.3459, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 10 fit: [22.0 s]: Recall = 0.1618, Jaccard score = 0.1059, loss = 0.3266, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 11 fit: [21.7 s]: Recall = 0.1602, Jaccard score = 0.1047, loss = 0.3079, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 12 fit: [21.7 s]: Recall = 0.1670, Jaccard score = 0.1096, loss = 0.2895, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 13 fit: [21.8 s]: Recall = 0.1686, Jaccard score = 0.1108, loss = 0.2723, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 14 fit: [22.0 s]: Recall = 0.1726, Jaccard score = 0.1137, loss = 0.2562, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 15 fit: [22.2 s]: Recall = 0.1749, Jaccard score = 0.1154, loss = 0.2411, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 16 fit: [22.0 s]: Recall = 0.1808, Jaccard score = 0.1197, loss = 0.2259, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 17 fit: [21.9 s]: Recall = 0.1854, Jaccard score = 0.1231, loss = 0.2133, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 18 fit: [22.0 s]: Recall = 0.1797, Jaccard score = 0.1190, loss = 0.2016, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 19 fit: [21.9 s]: Recall = 0.1891, Jaccard score = 0.1259, loss = 0.1896, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 20 fit: [22.0 s]: Recall = 0.1937, Jaccard score = 0.1294, loss = 0.1786, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 21 fit: [22.0 s]: Recall = 0.1919, Jaccard score = 0.1281, loss = 0.1697, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 22 fit: [21.9 s]: Recall = 0.1937, Jaccard score = 0.1294, loss = 0.1603, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 23 fit: [21.9 s]: Recall = 0.1971, Jaccard score = 0.1320, loss = 0.1513, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 24 fit: [21.9 s]: Recall = 0.2035, Jaccard score = 0.1369, loss = 0.1434, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 25 fit: [21.9 s]: Recall = 0.1989, Jaccard score = 0.1334, loss = 0.1364, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 26 fit: [21.8 s]: Recall = 0.2050, Jaccard score = 0.1380, loss = 0.1299, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 27 fit: [22.0 s]: Recall = 0.2059, Jaccard score = 0.1387, loss = 0.1232, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 28 fit: [22.0 s]: Recall = 0.2097, Jaccard score = 0.1416, loss = 0.1176, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 29 fit: [21.9 s]: Recall = 0.2095, Jaccard score = 0.1414, loss = 0.1124, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 30 fit: [22.0 s]: Recall = 0.2138, Jaccard score = 0.1448, loss = 0.1071, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 31 fit: [21.9 s]: Recall = 0.2125, Jaccard score = 0.1438, loss = 0.1028, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 32 fit: [21.9 s]: Recall = 0.2155, Jaccard score = 0.1461, loss = 0.0986, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 33 fit: [21.9 s]: Recall = 0.2157, Jaccard score = 0.1462, loss = 0.0945, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 34 fit: [22.0 s]: Recall = 0.2187, Jaccard score = 0.1486, loss = 0.0910, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 35 fit: [21.9 s]: Recall = 0.2228, Jaccard score = 0.1518, loss = 0.0878, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 36 fit: [22.0 s]: Recall = 0.2192, Jaccard score = 0.1490, loss = 0.0847, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 37 fit: [21.9 s]: Recall = 0.2255, Jaccard score = 0.1539, loss = 0.0813, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 38 fit: [22.0 s]: Recall = 0.2257, Jaccard score = 0.1541, loss = 0.0792, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 39 fit: [21.9 s]: Recall = 0.2263, Jaccard score = 0.1546, loss = 0.0762, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 40 fit: [22.0 s]: Recall = 0.2258, Jaccard score = 0.1541, loss = 0.0741, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 41 fit: [21.9 s]: Recall = 0.2288, Jaccard score = 0.1566, loss = 0.0717, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 42 fit: [22.0 s]: Recall = 0.2301, Jaccard score = 0.1576, loss = 0.0694, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 43 fit: [21.9 s]: Recall = 0.2333, Jaccard score = 0.1601, loss = 0.0681, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 44 fit: [22.0 s]: Recall = 0.2231, Jaccard score = 0.1521, loss = 0.0650, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 45 fit: [22.0 s]: Recall = 0.2334, Jaccard score = 0.1602, loss = 0.0639, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 46 fit: [22.0 s]: Recall = 0.2338, Jaccard score = 0.1605, loss = 0.0629, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 47 fit: [22.0 s]: Recall = 0.2283, Jaccard score = 0.1562, loss = 0.0602, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 48 fit: [22.0 s]: Recall = 0.2350, Jaccard score = 0.1615, loss = 0.0594, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 49 fit: [22.0 s]: Recall = 0.2375, Jaccard score = 0.1635, loss = 0.0584, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 50 fit: [22.0 s]: Recall = 0.2317, Jaccard score = 0.1588, loss = 0.0568, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 51 fit: [21.9 s]: Recall = 0.2440, Jaccard score = 0.1687, loss = 0.0549, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 52 fit: [22.0 s]: Recall = 0.2403, Jaccard score = 0.1657, loss = 0.0541, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 53 fit: [22.0 s]: Recall = 0.2402, Jaccard score = 0.1656, loss = 0.0527, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 54 fit: [22.0 s]: Recall = 0.2434, Jaccard score = 0.1682, loss = 0.0520, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 55 fit: [21.9 s]: Recall = 0.2451, Jaccard score = 0.1696, loss = 0.0505, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 56 fit: [22.0 s]: Recall = 0.2401, Jaccard score = 0.1655, loss = 0.0497, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 57 fit: [21.9 s]: Recall = 0.2437, Jaccard score = 0.1685, loss = 0.0481, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 58 fit: [21.9 s]: Recall = 0.2412, Jaccard score = 0.1665, loss = 0.0475, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 59 fit: [22.0 s]: Recall = 0.2449, Jaccard score = 0.1694, loss = 0.0467, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 60 fit: [22.0 s]: Recall = 0.2413, Jaccard score = 0.1665, loss = 0.0460, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 61 fit: [21.9 s]: Recall = 0.2469, Jaccard score = 0.1711, loss = 0.0453, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 62 fit: [22.0 s]: Recall = 0.2472, Jaccard score = 0.1713, loss = 0.0450, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 63 fit: [21.9 s]: Recall = 0.2503, Jaccard score = 0.1738, loss = 0.0437, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 64 fit: [22.0 s]: Recall = 0.2458, Jaccard score = 0.1702, loss = 0.0432, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 65 fit: [22.0 s]: Recall = 0.2510, Jaccard score = 0.1744, loss = 0.0430, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 66 fit: [22.0 s]: Recall = 0.2504, Jaccard score = 0.1739, loss = 0.0419, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 67 fit: [22.0 s]: Recall = 0.2492, Jaccard score = 0.1729, loss = 0.0413, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 68 fit: [21.9 s]: Recall = 0.2466, Jaccard score = 0.1708, loss = 0.0407, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 69 fit: [21.9 s]: Recall = 0.2520, Jaccard score = 0.1752, loss = 0.0394, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 70 fit: [22.0 s]: Recall = 0.2487, Jaccard score = 0.1725, loss = 0.0395, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 71 fit: [21.9 s]: Recall = 0.2519, Jaccard score = 0.1751, loss = 0.0390, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 72 fit: [22.0 s]: Recall = 0.2510, Jaccard score = 0.1744, loss = 0.0384, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 73 fit: [22.0 s]: Recall = 0.2497, Jaccard score = 0.1733, loss = 0.0381, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 74 fit: [22.0 s]: Recall = 0.2584, Jaccard score = 0.1804, loss = 0.0366, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 75 fit: [22.0 s]: Recall = 0.2547, Jaccard score = 0.1774, loss = 0.0371, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 76 fit: [22.0 s]: Recall = 0.2537, Jaccard score = 0.1766, loss = 0.0362, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 77 fit: [22.0 s]: Recall = 0.2542, Jaccard score = 0.1770, loss = 0.0364, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 78 fit: [22.0 s]: Recall = 0.2550, Jaccard score = 0.1776, loss = 0.0359, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 79 fit: [21.9 s]: Recall = 0.2585, Jaccard score = 0.1805, loss = 0.0348, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 80 fit: [22.2 s]: Recall = 0.2541, Jaccard score = 0.1769, loss = 0.0348, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 81 fit: [22.0 s]: Recall = 0.2556, Jaccard score = 0.1781, loss = 0.0345, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 82 fit: [22.0 s]: Recall = 0.2607, Jaccard score = 0.1824, loss = 0.0344, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 83 fit: [21.9 s]: Recall = 0.2571, Jaccard score = 0.1794, loss = 0.0337, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 84 fit: [22.0 s]: Recall = 0.2617, Jaccard score = 0.1832, loss = 0.0337, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 85 fit: [21.9 s]: Recall = 0.2554, Jaccard score = 0.1779, loss = 0.0330, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 86 fit: [21.9 s]: Recall = 0.2551, Jaccard score = 0.1777, loss = 0.0317, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 87 fit: [21.9 s]: Recall = 0.2599, Jaccard score = 0.1817, loss = 0.0328, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 88 fit: [21.9 s]: Recall = 0.2597, Jaccard score = 0.1815, loss = 0.0320, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 89 fit: [21.9 s]: Recall = 0.2618, Jaccard score = 0.1833, loss = 0.0317, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 90 fit: [22.0 s]: Recall = 0.2611, Jaccard score = 0.1826, loss = 0.0315, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 91 fit: [21.9 s]: Recall = 0.2608, Jaccard score = 0.1824, loss = 0.0311, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 92 fit: [21.9 s]: Recall = 0.2680, Jaccard score = 0.1884, loss = 0.0313, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 93 fit: [21.9 s]: Recall = 0.2607, Jaccard score = 0.1824, loss = 0.0309, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 94 fit: [22.0 s]: Recall = 0.2668, Jaccard score = 0.1874, loss = 0.0296, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 95 fit: [22.0 s]: Recall = 0.2598, Jaccard score = 0.1816, loss = 0.0303, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 96 fit: [21.9 s]: Recall = 0.2660, Jaccard score = 0.1867, loss = 0.0302, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 97 fit: [21.9 s]: Recall = 0.2620, Jaccard score = 0.1834, loss = 0.0298, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 98 fit: [22.0 s]: Recall = 0.2632, Jaccard score = 0.1844, loss = 0.0292, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 99 fit: [21.9 s]: Recall = 0.2666, Jaccard score = 0.1872, loss = 0.0291, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 100 fit: [22.0 s]: Recall = 0.2674, Jaccard score = 0.1879, loss = 0.0298, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 101 fit: [21.9 s]: Recall = 0.2664, Jaccard score = 0.1871, loss = 0.0292, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 102 fit: [21.9 s]: Recall = 0.2668, Jaccard score = 0.1874, loss = 0.0289, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 103 fit: [21.9 s]: Recall = 0.2693, Jaccard score = 0.1895, loss = 0.0281, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 104 fit: [22.0 s]: Recall = 0.2681, Jaccard score = 0.1885, loss = 0.0281, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 105 fit: [21.9 s]: Recall = 0.2707, Jaccard score = 0.1907, loss = 0.0279, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 106 fit: [22.0 s]: Recall = 0.2673, Jaccard score = 0.1878, loss = 0.0286, gradient norm = 1.0000, eval: [14.4 s]
# Iteration 107 fit: [21.9 s]: Recall = 0.2703, Jaccard score = 0.1903, loss = 0.0273, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 108 fit: [21.9 s]: Recall = 0.2680, Jaccard score = 0.1884, loss = 0.0277, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 109 fit: [21.9 s]: Recall = 0.2699, Jaccard score = 0.1900, loss = 0.0271, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 110 fit: [21.9 s]: Recall = 0.2687, Jaccard score = 0.1890, loss = 0.0272, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 111 fit: [21.9 s]: Recall = 0.2682, Jaccard score = 0.1886, loss = 0.0259, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 112 fit: [21.9 s]: Recall = 0.2677, Jaccard score = 0.1882, loss = 0.0271, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 113 fit: [22.0 s]: Recall = 0.2712, Jaccard score = 0.1911, loss = 0.0267, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 114 fit: [22.0 s]: Recall = 0.2718, Jaccard score = 0.1916, loss = 0.0266, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 115 fit: [21.9 s]: Recall = 0.2714, Jaccard score = 0.1912, loss = 0.0257, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 116 fit: [21.9 s]: Recall = 0.2687, Jaccard score = 0.1890, loss = 0.0258, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 117 fit: [22.0 s]: Recall = 0.2739, Jaccard score = 0.1934, loss = 0.0260, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 118 fit: [22.0 s]: Recall = 0.2669, Jaccard score = 0.1875, loss = 0.0262, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 119 fit: [21.9 s]: Recall = 0.2710, Jaccard score = 0.1909, loss = 0.0255, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 120 fit: [21.9 s]: Recall = 0.2744, Jaccard score = 0.1938, loss = 0.0255, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 121 fit: [21.9 s]: Recall = 0.2708, Jaccard score = 0.1907, loss = 0.0257, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 122 fit: [22.0 s]: Recall = 0.2762, Jaccard score = 0.1953, loss = 0.0253, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 123 fit: [21.9 s]: Recall = 0.2727, Jaccard score = 0.1923, loss = 0.0248, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 124 fit: [22.0 s]: Recall = 0.2708, Jaccard score = 0.1907, loss = 0.0245, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 125 fit: [21.9 s]: Recall = 0.2746, Jaccard score = 0.1939, loss = 0.0253, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 126 fit: [22.0 s]: Recall = 0.2778, Jaccard score = 0.1967, loss = 0.0250, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 127 fit: [22.0 s]: Recall = 0.2689, Jaccard score = 0.1892, loss = 0.0251, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 128 fit: [22.0 s]: Recall = 0.2738, Jaccard score = 0.1932, loss = 0.0241, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 129 fit: [21.9 s]: Recall = 0.2748, Jaccard score = 0.1941, loss = 0.0242, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 130 fit: [22.0 s]: Recall = 0.2737, Jaccard score = 0.1932, loss = 0.0247, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 131 fit: [21.9 s]: Recall = 0.2783, Jaccard score = 0.1970, loss = 0.0249, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 132 fit: [22.0 s]: Recall = 0.2756, Jaccard score = 0.1948, loss = 0.0238, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 133 fit: [21.9 s]: Recall = 0.2682, Jaccard score = 0.1885, loss = 0.0241, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 134 fit: [21.9 s]: Recall = 0.2745, Jaccard score = 0.1938, loss = 0.0245, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 135 fit: [22.0 s]: Recall = 0.2715, Jaccard score = 0.1914, loss = 0.0227, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 136 fit: [21.9 s]: Recall = 0.2758, Jaccard score = 0.1949, loss = 0.0236, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 137 fit: [21.9 s]: Recall = 0.2797, Jaccard score = 0.1983, loss = 0.0237, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 138 fit: [22.0 s]: Recall = 0.2718, Jaccard score = 0.1916, loss = 0.0239, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 139 fit: [21.9 s]: Recall = 0.2728, Jaccard score = 0.1924, loss = 0.0228, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 140 fit: [21.9 s]: Recall = 0.2744, Jaccard score = 0.1937, loss = 0.0236, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 141 fit: [21.9 s]: Recall = 0.2780, Jaccard score = 0.1968, loss = 0.0230, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 142 fit: [22.0 s]: Recall = 0.2790, Jaccard score = 0.1977, loss = 0.0234, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 143 fit: [22.0 s]: Recall = 0.2765, Jaccard score = 0.1956, loss = 0.0228, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 144 fit: [21.9 s]: Recall = 0.2735, Jaccard score = 0.1930, loss = 0.0228, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 145 fit: [22.0 s]: Recall = 0.2742, Jaccard score = 0.1936, loss = 0.0227, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 146 fit: [21.9 s]: Recall = 0.2793, Jaccard score = 0.1980, loss = 0.0224, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 147 fit: [21.9 s]: Recall = 0.2758, Jaccard score = 0.1950, loss = 0.0227, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 148 fit: [22.0 s]: Recall = 0.2744, Jaccard score = 0.1937, loss = 0.0222, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 149 fit: [21.9 s]: Recall = 0.2802, Jaccard score = 0.1987, loss = 0.0228, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 150 fit: [22.0 s]: Recall = 0.2752, Jaccard score = 0.1944, loss = 0.0229, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 151 fit: [21.9 s]: Recall = 0.2791, Jaccard score = 0.1977, loss = 0.0223, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 152 fit: [22.0 s]: Recall = 0.2808, Jaccard score = 0.1992, loss = 0.0229, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 153 fit: [21.9 s]: Recall = 0.2791, Jaccard score = 0.1977, loss = 0.0221, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 154 fit: [21.9 s]: Recall = 0.2804, Jaccard score = 0.1989, loss = 0.0223, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 155 fit: [21.9 s]: Recall = 0.2783, Jaccard score = 0.1970, loss = 0.0220, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 156 fit: [22.0 s]: Recall = 0.2812, Jaccard score = 0.1995, loss = 0.0221, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 157 fit: [21.9 s]: Recall = 0.2788, Jaccard score = 0.1975, loss = 0.0216, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 158 fit: [21.9 s]: Recall = 0.2770, Jaccard score = 0.1959, loss = 0.0224, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 159 fit: [22.0 s]: Recall = 0.2792, Jaccard score = 0.1978, loss = 0.0224, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 160 fit: [22.0 s]: Recall = 0.2813, Jaccard score = 0.1996, loss = 0.0217, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 161 fit: [21.9 s]: Recall = 0.2816, Jaccard score = 0.1999, loss = 0.0214, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 162 fit: [22.0 s]: Recall = 0.2803, Jaccard score = 0.1988, loss = 0.0217, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 163 fit: [22.0 s]: Recall = 0.2790, Jaccard score = 0.1977, loss = 0.0215, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 164 fit: [22.0 s]: Recall = 0.2774, Jaccard score = 0.1963, loss = 0.0218, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 165 fit: [21.9 s]: Recall = 0.2797, Jaccard score = 0.1983, loss = 0.0212, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 166 fit: [22.0 s]: Recall = 0.2814, Jaccard score = 0.1997, loss = 0.0210, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 167 fit: [22.0 s]: Recall = 0.2802, Jaccard score = 0.1987, loss = 0.0212, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 168 fit: [22.0 s]: Recall = 0.2788, Jaccard score = 0.1975, loss = 0.0213, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 169 fit: [22.0 s]: Recall = 0.2797, Jaccard score = 0.1983, loss = 0.0207, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 170 fit: [22.0 s]: Recall = 0.2799, Jaccard score = 0.1984, loss = 0.0205, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 171 fit: [21.9 s]: Recall = 0.2807, Jaccard score = 0.1991, loss = 0.0207, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 172 fit: [22.0 s]: Recall = 0.2808, Jaccard score = 0.1991, loss = 0.0213, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 173 fit: [22.0 s]: Recall = 0.2759, Jaccard score = 0.1950, loss = 0.0205, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 174 fit: [22.0 s]: Recall = 0.2779, Jaccard score = 0.1968, loss = 0.0211, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 175 fit: [21.9 s]: Recall = 0.2757, Jaccard score = 0.1949, loss = 0.0210, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 176 fit: [21.9 s]: Recall = 0.2755, Jaccard score = 0.1947, loss = 0.0202, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 177 fit: [21.9 s]: Recall = 0.2807, Jaccard score = 0.1991, loss = 0.0205, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 178 fit: [21.9 s]: Recall = 0.2793, Jaccard score = 0.1979, loss = 0.0199, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 179 fit: [21.9 s]: Recall = 0.2772, Jaccard score = 0.1962, loss = 0.0199, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 180 fit: [21.9 s]: Recall = 0.2785, Jaccard score = 0.1972, loss = 0.0199, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 181 fit: [21.9 s]: Recall = 0.2802, Jaccard score = 0.1987, loss = 0.0208, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 182 fit: [22.0 s]: Recall = 0.2791, Jaccard score = 0.1977, loss = 0.0205, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 183 fit: [22.0 s]: Recall = 0.2769, Jaccard score = 0.1959, loss = 0.0200, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 184 fit: [21.9 s]: Recall = 0.2788, Jaccard score = 0.1975, loss = 0.0198, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 185 fit: [22.0 s]: Recall = 0.2733, Jaccard score = 0.1928, loss = 0.0195, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 186 fit: [22.0 s]: Recall = 0.2806, Jaccard score = 0.1990, loss = 0.0198, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 187 fit: [21.9 s]: Recall = 0.2773, Jaccard score = 0.1962, loss = 0.0198, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 188 fit: [21.9 s]: Recall = 0.2814, Jaccard score = 0.1997, loss = 0.0204, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 189 fit: [22.0 s]: Recall = 0.2823, Jaccard score = 0.2005, loss = 0.0198, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 190 fit: [22.0 s]: Recall = 0.2797, Jaccard score = 0.1982, loss = 0.0196, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 191 fit: [21.9 s]: Recall = 0.2828, Jaccard score = 0.2009, loss = 0.0194, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 192 fit: [22.0 s]: Recall = 0.2797, Jaccard score = 0.1982, loss = 0.0201, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 193 fit: [21.9 s]: Recall = 0.2866, Jaccard score = 0.2041, loss = 0.0195, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 194 fit: [22.0 s]: Recall = 0.2769, Jaccard score = 0.1959, loss = 0.0193, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 195 fit: [21.9 s]: Recall = 0.2826, Jaccard score = 0.2007, loss = 0.0193, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 196 fit: [21.9 s]: Recall = 0.2809, Jaccard score = 0.1993, loss = 0.0195, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 197 fit: [21.9 s]: Recall = 0.2767, Jaccard score = 0.1957, loss = 0.0192, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 198 fit: [22.0 s]: Recall = 0.2829, Jaccard score = 0.2010, loss = 0.0195, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 199 fit: [22.0 s]: Recall = 0.2844, Jaccard score = 0.2023, loss = 0.0194, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 200 fit: [21.9 s]: Recall = 0.2772, Jaccard score = 0.1961, loss = 0.0188, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 201 fit: [21.9 s]: Recall = 0.2746, Jaccard score = 0.1939, loss = 0.0192, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 202 fit: [21.9 s]: Recall = 0.2806, Jaccard score = 0.1990, loss = 0.0195, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 203 fit: [22.0 s]: Recall = 0.2786, Jaccard score = 0.1973, loss = 0.0194, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 204 fit: [21.9 s]: Recall = 0.2863, Jaccard score = 0.2038, loss = 0.0196, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 205 fit: [22.0 s]: Recall = 0.2847, Jaccard score = 0.2025, loss = 0.0189, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 206 fit: [21.9 s]: Recall = 0.2822, Jaccard score = 0.2003, loss = 0.0196, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 207 fit: [21.9 s]: Recall = 0.2820, Jaccard score = 0.2002, loss = 0.0187, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 208 fit: [22.0 s]: Recall = 0.2786, Jaccard score = 0.1974, loss = 0.0190, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 209 fit: [22.0 s]: Recall = 0.2838, Jaccard score = 0.2018, loss = 0.0193, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 210 fit: [22.0 s]: Recall = 0.2822, Jaccard score = 0.2003, loss = 0.0194, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 211 fit: [21.9 s]: Recall = 0.2834, Jaccard score = 0.2014, loss = 0.0185, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 212 fit: [22.0 s]: Recall = 0.2847, Jaccard score = 0.2025, loss = 0.0186, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 213 fit: [21.9 s]: Recall = 0.2812, Jaccard score = 0.1995, loss = 0.0186, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 214 fit: [21.9 s]: Recall = 0.2759, Jaccard score = 0.1950, loss = 0.0184, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 215 fit: [21.9 s]: Recall = 0.2888, Jaccard score = 0.2060, loss = 0.0183, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 216 fit: [22.0 s]: Recall = 0.2837, Jaccard score = 0.2017, loss = 0.0184, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 217 fit: [22.0 s]: Recall = 0.2811, Jaccard score = 0.1995, loss = 0.0190, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 218 fit: [22.0 s]: Recall = 0.2830, Jaccard score = 0.2011, loss = 0.0187, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 219 fit: [21.9 s]: Recall = 0.2864, Jaccard score = 0.2040, loss = 0.0185, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 220 fit: [21.9 s]: Recall = 0.2867, Jaccard score = 0.2042, loss = 0.0185, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 221 fit: [21.9 s]: Recall = 0.2813, Jaccard score = 0.1996, loss = 0.0183, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 222 fit: [21.9 s]: Recall = 0.2829, Jaccard score = 0.2009, loss = 0.0179, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 223 fit: [21.9 s]: Recall = 0.2909, Jaccard score = 0.2078, loss = 0.0188, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 224 fit: [22.0 s]: Recall = 0.2842, Jaccard score = 0.2021, loss = 0.0184, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 225 fit: [21.9 s]: Recall = 0.2820, Jaccard score = 0.2002, loss = 0.0182, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 226 fit: [21.9 s]: Recall = 0.2866, Jaccard score = 0.2041, loss = 0.0183, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 227 fit: [22.0 s]: Recall = 0.2825, Jaccard score = 0.2007, loss = 0.0179, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 228 fit: [22.0 s]: Recall = 0.2808, Jaccard score = 0.1991, loss = 0.0185, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 229 fit: [21.9 s]: Recall = 0.2844, Jaccard score = 0.2023, loss = 0.0183, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 230 fit: [21.9 s]: Recall = 0.2807, Jaccard score = 0.1991, loss = 0.0182, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 231 fit: [22.0 s]: Recall = 0.2865, Jaccard score = 0.2041, loss = 0.0179, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 232 fit: [22.0 s]: Recall = 0.2798, Jaccard score = 0.1983, loss = 0.0181, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 233 fit: [22.0 s]: Recall = 0.2872, Jaccard score = 0.2047, loss = 0.0180, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 234 fit: [22.0 s]: Recall = 0.2845, Jaccard score = 0.2024, loss = 0.0178, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 235 fit: [21.9 s]: Recall = 0.2847, Jaccard score = 0.2025, loss = 0.0181, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 236 fit: [22.0 s]: Recall = 0.2825, Jaccard score = 0.2007, loss = 0.0177, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 237 fit: [21.9 s]: Recall = 0.2900, Jaccard score = 0.2070, loss = 0.0176, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 238 fit: [21.9 s]: Recall = 0.2840, Jaccard score = 0.2019, loss = 0.0180, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 239 fit: [21.9 s]: Recall = 0.2776, Jaccard score = 0.1965, loss = 0.0179, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 240 fit: [21.9 s]: Recall = 0.2870, Jaccard score = 0.2044, loss = 0.0179, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 241 fit: [21.9 s]: Recall = 0.2838, Jaccard score = 0.2017, loss = 0.0177, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 242 fit: [22.0 s]: Recall = 0.2861, Jaccard score = 0.2037, loss = 0.0169, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 243 fit: [21.9 s]: Recall = 0.2880, Jaccard score = 0.2054, loss = 0.0177, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 244 fit: [21.9 s]: Recall = 0.2893, Jaccard score = 0.2064, loss = 0.0173, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 245 fit: [21.9 s]: Recall = 0.2848, Jaccard score = 0.2026, loss = 0.0172, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 246 fit: [21.9 s]: Recall = 0.2830, Jaccard score = 0.2011, loss = 0.0175, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 247 fit: [21.9 s]: Recall = 0.2889, Jaccard score = 0.2061, loss = 0.0178, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 248 fit: [22.0 s]: Recall = 0.2864, Jaccard score = 0.2040, loss = 0.0174, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 249 fit: [22.0 s]: Recall = 0.2853, Jaccard score = 0.2030, loss = 0.0172, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 250 fit: [21.9 s]: Recall = 0.2856, Jaccard score = 0.2033, loss = 0.0178, gradient norm = 1.0000, eval: [14.2 s]
# Iteration 251 fit: [22.0 s]: Recall = 0.2845, Jaccard score = 0.2024, loss = 0.0174, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 252 fit: [22.0 s]: Recall = 0.2831, Jaccard score = 0.2011, loss = 0.0172, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 253 fit: [22.0 s]: Recall = 0.2831, Jaccard score = 0.2012, loss = 0.0170, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 254 fit: [22.0 s]: Recall = 0.2849, Jaccard score = 0.2027, loss = 0.0171, gradient norm = 1.0000, eval: [14.3 s]
# Iteration 255 fit: [22.0 s]: Recall = 0.2849, Jaccard score = 0.2027, loss = 0.0170, gradient norm = 1.0000, eval: [14.1 s]
# Iteration 256 fit: [21.9 s]: Recall = 0.2919, Jaccard score = 0.2087, loss = 0.0173, gradient norm = 1.0000, eval: [14.7 s]
