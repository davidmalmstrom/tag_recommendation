--nn_model: NeuMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--num_factors: "94"
--lr: "0.001"
--early_stopping: "45"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--test_dataset: "1"


# Launched by terminal.
# NeuMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=45, epochs=300, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='NeuMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_94_[512,96]_1568728022.h5
--weights_path: Pretrain/_NeuMF_94_[512,96]_1568728022.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# mlp_embedding_user (Embedding)  (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           mlp_embedding_user[0][0]         
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# mlp_embedding_item (Embedding)  (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# mf_embedding_user (Embedding)   (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# mf_embedding_item (Embedding)   (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           flatten_3[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           mlp_embedding_item[0][0]         
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           mf_embedding_user[0][0]          
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           mf_embedding_item[0][0]          
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  flatten_4[0][0]                  
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_2[0][0]              
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 190)          0           multiply_1[0][0]                 
#                                                                  layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            191         concatenate_3[0][0]              
# ==================================================================================================
# Total params: 7,845,439
# Trainable params: 7,845,439
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0018, Jaccard score = 0.0011
# Iteration 0 fit: [31.2 s]: Recall = 0.04364, Jaccard score = 0.0266, loss = 0.428524, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 1 fit: [30.6 s]: Recall = 0.05940, Jaccard score = 0.0365, loss = 0.385506, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 2 fit: [30.5 s]: Recall = 0.07608, Jaccard score = 0.0473, loss = 0.357512, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 3 fit: [30.6 s]: Recall = 0.07482, Jaccard score = 0.0465, loss = 0.326898, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 4 fit: [30.6 s]: Recall = 0.07688, Jaccard score = 0.0478, loss = 0.295311, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 5 fit: [30.5 s]: Recall = 0.07300, Jaccard score = 0.0453, loss = 0.262224, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 6 fit: [30.5 s]: Recall = 0.07425, Jaccard score = 0.0461, loss = 0.229496, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 7 fit: [30.5 s]: Recall = 0.07151, Jaccard score = 0.0443, loss = 0.199132, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 8 fit: [30.6 s]: Recall = 0.06945, Jaccard score = 0.0430, loss = 0.169025, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 9 fit: [30.4 s]: Recall = 0.06774, Jaccard score = 0.0419, loss = 0.142548, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 10 fit: [30.4 s]: Recall = 0.06626, Jaccard score = 0.0409, loss = 0.118427, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 11 fit: [30.6 s]: Recall = 0.06660, Jaccard score = 0.0411, loss = 0.098893, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 12 fit: [30.6 s]: Recall = 0.06637, Jaccard score = 0.0410, loss = 0.083361, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 13 fit: [30.4 s]: Recall = 0.06923, Jaccard score = 0.0428, loss = 0.071185, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 14 fit: [30.5 s]: Recall = 0.06626, Jaccard score = 0.0409, loss = 0.060862, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 15 fit: [30.5 s]: Recall = 0.06763, Jaccard score = 0.0418, loss = 0.052824, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 16 fit: [30.5 s]: Recall = 0.07094, Jaccard score = 0.0439, loss = 0.046351, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 17 fit: [30.5 s]: Recall = 0.07220, Jaccard score = 0.0448, loss = 0.040185, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 18 fit: [30.4 s]: Recall = 0.07300, Jaccard score = 0.0453, loss = 0.036484, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 19 fit: [30.5 s]: Recall = 0.07288, Jaccard score = 0.0452, loss = 0.032616, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 20 fit: [30.5 s]: Recall = 0.07505, Jaccard score = 0.0466, loss = 0.029607, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 21 fit: [30.5 s]: Recall = 0.07379, Jaccard score = 0.0458, loss = 0.027192, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 22 fit: [30.5 s]: Recall = 0.07357, Jaccard score = 0.0456, loss = 0.024932, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 23 fit: [30.5 s]: Recall = 0.07368, Jaccard score = 0.0457, loss = 0.022781, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 24 fit: [30.5 s]: Recall = 0.07756, Jaccard score = 0.0482, loss = 0.020063, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 25 fit: [30.5 s]: Recall = 0.07676, Jaccard score = 0.0477, loss = 0.019044, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 26 fit: [30.5 s]: Recall = 0.07779, Jaccard score = 0.0484, loss = 0.017590, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 27 fit: [30.5 s]: Recall = 0.07539, Jaccard score = 0.0468, loss = 0.016455, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 28 fit: [30.6 s]: Recall = 0.07928, Jaccard score = 0.0494, loss = 0.014753, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 29 fit: [30.5 s]: Recall = 0.07951, Jaccard score = 0.0495, loss = 0.014011, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 30 fit: [30.6 s]: Recall = 0.07722, Jaccard score = 0.0480, loss = 0.012952, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 31 fit: [30.5 s]: Recall = 0.07814, Jaccard score = 0.0486, loss = 0.012353, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 32 fit: [30.5 s]: Recall = 0.08225, Jaccard score = 0.0513, loss = 0.011866, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 33 fit: [31.0 s]: Recall = 0.08156, Jaccard score = 0.0509, loss = 0.010731, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 34 fit: [30.4 s]: Recall = 0.08316, Jaccard score = 0.0519, loss = 0.010214, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 35 fit: [30.6 s]: Recall = 0.08236, Jaccard score = 0.0514, loss = 0.009867, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 36 fit: [30.5 s]: Recall = 0.08168, Jaccard score = 0.0509, loss = 0.009072, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 37 fit: [30.4 s]: Recall = 0.08453, Jaccard score = 0.0528, loss = 0.008724, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 38 fit: [30.6 s]: Recall = 0.08191, Jaccard score = 0.0511, loss = 0.008111, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 39 fit: [30.4 s]: Recall = 0.08316, Jaccard score = 0.0519, loss = 0.008213, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 40 fit: [30.5 s]: Recall = 0.08350, Jaccard score = 0.0521, loss = 0.007711, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 41 fit: [30.4 s]: Recall = 0.08042, Jaccard score = 0.0501, loss = 0.007114, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 42 fit: [30.4 s]: Recall = 0.08122, Jaccard score = 0.0506, loss = 0.007077, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 43 fit: [30.5 s]: Recall = 0.08248, Jaccard score = 0.0515, loss = 0.006397, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 44 fit: [30.5 s]: Recall = 0.08191, Jaccard score = 0.0511, loss = 0.006386, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 45 fit: [30.4 s]: Recall = 0.08659, Jaccard score = 0.0542, loss = 0.005906, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 46 fit: [30.5 s]: Recall = 0.08670, Jaccard score = 0.0542, loss = 0.005648, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 47 fit: [30.5 s]: Recall = 0.08636, Jaccard score = 0.0540, loss = 0.005443, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 48 fit: [30.5 s]: Recall = 0.08510, Jaccard score = 0.0532, loss = 0.005161, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 49 fit: [30.5 s]: Recall = 0.08659, Jaccard score = 0.0542, loss = 0.004976, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 50 fit: [30.4 s]: Recall = 0.08316, Jaccard score = 0.0519, loss = 0.004990, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 51 fit: [30.4 s]: Recall = 0.08568, Jaccard score = 0.0536, loss = 0.004663, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 52 fit: [30.5 s]: Recall = 0.08625, Jaccard score = 0.0539, loss = 0.004914, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 53 fit: [30.4 s]: Recall = 0.08625, Jaccard score = 0.0539, loss = 0.004491, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 54 fit: [30.6 s]: Recall = 0.08785, Jaccard score = 0.0550, loss = 0.004295, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 55 fit: [30.5 s]: Recall = 0.08922, Jaccard score = 0.0559, loss = 0.004266, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 56 fit: [30.4 s]: Recall = 0.08545, Jaccard score = 0.0534, loss = 0.004046, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 57 fit: [30.5 s]: Recall = 0.08636, Jaccard score = 0.0540, loss = 0.004041, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 58 fit: [30.4 s]: Recall = 0.08522, Jaccard score = 0.0533, loss = 0.003946, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 59 fit: [30.6 s]: Recall = 0.09253, Jaccard score = 0.0581, loss = 0.003892, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 60 fit: [30.5 s]: Recall = 0.08944, Jaccard score = 0.0560, loss = 0.003648, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 61 fit: [30.4 s]: Recall = 0.08956, Jaccard score = 0.0561, loss = 0.003600, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 62 fit: [30.5 s]: Recall = 0.09047, Jaccard score = 0.0567, loss = 0.003368, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 63 fit: [30.5 s]: Recall = 0.08807, Jaccard score = 0.0551, loss = 0.003317, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 64 fit: [30.5 s]: Recall = 0.08956, Jaccard score = 0.0561, loss = 0.003153, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 65 fit: [30.5 s]: Recall = 0.09173, Jaccard score = 0.0576, loss = 0.003096, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 66 fit: [30.6 s]: Recall = 0.08967, Jaccard score = 0.0562, loss = 0.002999, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 67 fit: [30.5 s]: Recall = 0.09093, Jaccard score = 0.0570, loss = 0.003060, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 68 fit: [30.4 s]: Recall = 0.09059, Jaccard score = 0.0568, loss = 0.002884, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 69 fit: [30.4 s]: Recall = 0.09070, Jaccard score = 0.0569, loss = 0.002632, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 70 fit: [30.4 s]: Recall = 0.09219, Jaccard score = 0.0579, loss = 0.002664, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 71 fit: [30.6 s]: Recall = 0.09253, Jaccard score = 0.0581, loss = 0.002695, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 72 fit: [30.4 s]: Recall = 0.09036, Jaccard score = 0.0566, loss = 0.002756, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 73 fit: [30.5 s]: Recall = 0.09310, Jaccard score = 0.0585, loss = 0.002667, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 74 fit: [30.4 s]: Recall = 0.08910, Jaccard score = 0.0558, loss = 0.002739, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 75 fit: [30.4 s]: Recall = 0.09276, Jaccard score = 0.0582, loss = 0.002520, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 76 fit: [30.4 s]: Recall = 0.08842, Jaccard score = 0.0554, loss = 0.002404, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 77 fit: [30.5 s]: Recall = 0.08899, Jaccard score = 0.0557, loss = 0.002447, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 78 fit: [30.6 s]: Recall = 0.09173, Jaccard score = 0.0576, loss = 0.002282, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 79 fit: [30.7 s]: Recall = 0.09093, Jaccard score = 0.0570, loss = 0.002322, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 80 fit: [30.6 s]: Recall = 0.09184, Jaccard score = 0.0576, loss = 0.002466, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 81 fit: [30.4 s]: Recall = 0.09082, Jaccard score = 0.0570, loss = 0.002151, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 82 fit: [30.5 s]: Recall = 0.08876, Jaccard score = 0.0556, loss = 0.002168, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 83 fit: [30.4 s]: Recall = 0.09310, Jaccard score = 0.0585, loss = 0.001945, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 84 fit: [30.5 s]: Recall = 0.09036, Jaccard score = 0.0566, loss = 0.002131, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 85 fit: [30.4 s]: Recall = 0.09184, Jaccard score = 0.0576, loss = 0.002048, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 86 fit: [30.5 s]: Recall = 0.09150, Jaccard score = 0.0574, loss = 0.002089, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 87 fit: [30.5 s]: Recall = 0.09367, Jaccard score = 0.0588, loss = 0.002019, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 88 fit: [30.5 s]: Recall = 0.09276, Jaccard score = 0.0582, loss = 0.001869, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 89 fit: [30.5 s]: Recall = 0.09173, Jaccard score = 0.0576, loss = 0.001833, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 90 fit: [30.5 s]: Recall = 0.09333, Jaccard score = 0.0586, loss = 0.001916, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 91 fit: [30.5 s]: Recall = 0.09013, Jaccard score = 0.0565, loss = 0.001853, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 92 fit: [30.4 s]: Recall = 0.09630, Jaccard score = 0.0606, loss = 0.001714, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 93 fit: [30.5 s]: Recall = 0.09184, Jaccard score = 0.0576, loss = 0.001850, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 94 fit: [30.5 s]: Recall = 0.09333, Jaccard score = 0.0586, loss = 0.001757, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 95 fit: [30.5 s]: Recall = 0.09310, Jaccard score = 0.0585, loss = 0.001793, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 96 fit: [30.7 s]: Recall = 0.09344, Jaccard score = 0.0587, loss = 0.001778, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 97 fit: [30.5 s]: Recall = 0.09596, Jaccard score = 0.0604, loss = 0.001682, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 98 fit: [30.4 s]: Recall = 0.09470, Jaccard score = 0.0595, loss = 0.001573, gradient norm = 1.0000, eval: [36.0 s]
# Iteration 99 fit: [30.4 s]: Recall = 0.09550, Jaccard score = 0.0601, loss = 0.001684, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 100 fit: [30.4 s]: Recall = 0.09641, Jaccard score = 0.0607, loss = 0.001623, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 101 fit: [30.4 s]: Recall = 0.09516, Jaccard score = 0.0598, loss = 0.001597, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 102 fit: [30.5 s]: Recall = 0.09379, Jaccard score = 0.0589, loss = 0.001529, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 103 fit: [30.4 s]: Recall = 0.09538, Jaccard score = 0.0600, loss = 0.001427, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 104 fit: [30.4 s]: Recall = 0.09241, Jaccard score = 0.0580, loss = 0.001545, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 105 fit: [30.4 s]: Recall = 0.09184, Jaccard score = 0.0576, loss = 0.001629, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 106 fit: [30.5 s]: Recall = 0.09024, Jaccard score = 0.0566, loss = 0.001391, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 107 fit: [30.4 s]: Recall = 0.08967, Jaccard score = 0.0562, loss = 0.001443, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 108 fit: [30.5 s]: Recall = 0.09721, Jaccard score = 0.0612, loss = 0.001499, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 109 fit: [30.4 s]: Recall = 0.09664, Jaccard score = 0.0608, loss = 0.001420, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 110 fit: [30.5 s]: Recall = 0.09687, Jaccard score = 0.0610, loss = 0.001397, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 111 fit: [30.7 s]: Recall = 0.09744, Jaccard score = 0.0614, loss = 0.001271, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 112 fit: [30.5 s]: Recall = 0.09733, Jaccard score = 0.0613, loss = 0.001452, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 113 fit: [30.5 s]: Recall = 0.09459, Jaccard score = 0.0595, loss = 0.001325, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 114 fit: [30.5 s]: Recall = 0.09493, Jaccard score = 0.0597, loss = 0.001438, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 115 fit: [30.4 s]: Recall = 0.09653, Jaccard score = 0.0608, loss = 0.001333, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 116 fit: [30.5 s]: Recall = 0.09893, Jaccard score = 0.0624, loss = 0.001290, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 117 fit: [30.6 s]: Recall = 0.09584, Jaccard score = 0.0603, loss = 0.001179, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 118 fit: [30.4 s]: Recall = 0.09801, Jaccard score = 0.0617, loss = 0.001396, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 119 fit: [30.4 s]: Recall = 0.09584, Jaccard score = 0.0603, loss = 0.001230, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 120 fit: [30.4 s]: Recall = 0.09573, Jaccard score = 0.0602, loss = 0.001275, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 121 fit: [30.4 s]: Recall = 0.09767, Jaccard score = 0.0615, loss = 0.001298, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 122 fit: [30.4 s]: Recall = 0.09573, Jaccard score = 0.0602, loss = 0.001176, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 123 fit: [30.4 s]: Recall = 0.09653, Jaccard score = 0.0608, loss = 0.001328, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 124 fit: [30.4 s]: Recall = 0.09470, Jaccard score = 0.0595, loss = 0.001193, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 125 fit: [30.4 s]: Recall = 0.09550, Jaccard score = 0.0601, loss = 0.001164, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 126 fit: [30.5 s]: Recall = 0.10030, Jaccard score = 0.0633, loss = 0.001317, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 127 fit: [30.5 s]: Recall = 0.09813, Jaccard score = 0.0618, loss = 0.001180, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 128 fit: [30.5 s]: Recall = 0.09847, Jaccard score = 0.0621, loss = 0.001148, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 129 fit: [30.6 s]: Recall = 0.09881, Jaccard score = 0.0623, loss = 0.001102, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 130 fit: [30.4 s]: Recall = 0.09915, Jaccard score = 0.0625, loss = 0.001183, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 131 fit: [30.4 s]: Recall = 0.09938, Jaccard score = 0.0627, loss = 0.001037, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 132 fit: [30.6 s]: Recall = 0.09573, Jaccard score = 0.0602, loss = 0.001104, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 133 fit: [30.4 s]: Recall = 0.09893, Jaccard score = 0.0624, loss = 0.001065, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 134 fit: [30.4 s]: Recall = 0.10018, Jaccard score = 0.0632, loss = 0.001194, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 135 fit: [30.5 s]: Recall = 0.10053, Jaccard score = 0.0634, loss = 0.001138, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 136 fit: [30.5 s]: Recall = 0.09984, Jaccard score = 0.0630, loss = 0.001127, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 137 fit: [30.5 s]: Recall = 0.09995, Jaccard score = 0.0630, loss = 0.000886, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 138 fit: [30.5 s]: Recall = 0.10030, Jaccard score = 0.0633, loss = 0.001036, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 139 fit: [30.5 s]: Recall = 0.10258, Jaccard score = 0.0648, loss = 0.000935, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 140 fit: [30.5 s]: Recall = 0.10087, Jaccard score = 0.0637, loss = 0.001147, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 141 fit: [30.5 s]: Recall = 0.09904, Jaccard score = 0.0624, loss = 0.000960, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 142 fit: [30.5 s]: Recall = 0.10075, Jaccard score = 0.0636, loss = 0.000962, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 143 fit: [30.5 s]: Recall = 0.09904, Jaccard score = 0.0624, loss = 0.001023, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 144 fit: [30.5 s]: Recall = 0.10030, Jaccard score = 0.0633, loss = 0.000823, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 145 fit: [30.4 s]: Recall = 0.10053, Jaccard score = 0.0634, loss = 0.000845, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 146 fit: [30.5 s]: Recall = 0.10155, Jaccard score = 0.0641, loss = 0.000868, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 147 fit: [30.4 s]: Recall = 0.09950, Jaccard score = 0.0627, loss = 0.000891, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 148 fit: [30.5 s]: Recall = 0.09973, Jaccard score = 0.0629, loss = 0.000913, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 149 fit: [30.5 s]: Recall = 0.10224, Jaccard score = 0.0646, loss = 0.000943, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 150 fit: [30.5 s]: Recall = 0.10281, Jaccard score = 0.0650, loss = 0.000823, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 151 fit: [30.5 s]: Recall = 0.10304, Jaccard score = 0.0651, loss = 0.000795, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 152 fit: [30.5 s]: Recall = 0.09984, Jaccard score = 0.0630, loss = 0.000868, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 153 fit: [30.5 s]: Recall = 0.10178, Jaccard score = 0.0643, loss = 0.000887, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 154 fit: [30.5 s]: Recall = 0.10144, Jaccard score = 0.0640, loss = 0.000849, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 155 fit: [30.5 s]: Recall = 0.10224, Jaccard score = 0.0646, loss = 0.000784, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 156 fit: [30.4 s]: Recall = 0.10178, Jaccard score = 0.0643, loss = 0.000853, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 157 fit: [30.5 s]: Recall = 0.10201, Jaccard score = 0.0644, loss = 0.000829, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 158 fit: [30.5 s]: Recall = 0.10247, Jaccard score = 0.0647, loss = 0.000904, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 159 fit: [30.5 s]: Recall = 0.10315, Jaccard score = 0.0652, loss = 0.000811, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 160 fit: [30.4 s]: Recall = 0.09927, Jaccard score = 0.0626, loss = 0.000804, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 161 fit: [30.5 s]: Recall = 0.10201, Jaccard score = 0.0644, loss = 0.000696, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 162 fit: [30.4 s]: Recall = 0.10281, Jaccard score = 0.0650, loss = 0.000786, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 163 fit: [30.4 s]: Recall = 0.10178, Jaccard score = 0.0643, loss = 0.000803, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 164 fit: [30.6 s]: Recall = 0.10327, Jaccard score = 0.0653, loss = 0.000804, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 165 fit: [30.7 s]: Recall = 0.10292, Jaccard score = 0.0650, loss = 0.000716, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 166 fit: [30.5 s]: Recall = 0.10350, Jaccard score = 0.0654, loss = 0.000764, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 167 fit: [30.5 s]: Recall = 0.10532, Jaccard score = 0.0667, loss = 0.000762, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 168 fit: [30.5 s]: Recall = 0.09961, Jaccard score = 0.0628, loss = 0.000713, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 169 fit: [30.5 s]: Recall = 0.10372, Jaccard score = 0.0656, loss = 0.000680, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 170 fit: [30.5 s]: Recall = 0.10270, Jaccard score = 0.0649, loss = 0.000824, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 171 fit: [30.6 s]: Recall = 0.10407, Jaccard score = 0.0658, loss = 0.000731, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 172 fit: [30.6 s]: Recall = 0.10441, Jaccard score = 0.0660, loss = 0.000765, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 173 fit: [30.5 s]: Recall = 0.10509, Jaccard score = 0.0665, loss = 0.000661, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 174 fit: [30.5 s]: Recall = 0.10567, Jaccard score = 0.0669, loss = 0.000646, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 175 fit: [30.5 s]: Recall = 0.10361, Jaccard score = 0.0655, loss = 0.000699, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 176 fit: [30.5 s]: Recall = 0.10738, Jaccard score = 0.0680, loss = 0.000663, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 177 fit: [30.6 s]: Recall = 0.10532, Jaccard score = 0.0667, loss = 0.000696, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 178 fit: [30.4 s]: Recall = 0.10658, Jaccard score = 0.0675, loss = 0.000685, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 179 fit: [30.4 s]: Recall = 0.10658, Jaccard score = 0.0675, loss = 0.000638, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 180 fit: [30.7 s]: Recall = 0.10647, Jaccard score = 0.0674, loss = 0.000567, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 181 fit: [30.5 s]: Recall = 0.10715, Jaccard score = 0.0679, loss = 0.000536, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 182 fit: [30.5 s]: Recall = 0.10567, Jaccard score = 0.0669, loss = 0.000668, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 183 fit: [30.6 s]: Recall = 0.10612, Jaccard score = 0.0672, loss = 0.000565, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 184 fit: [30.5 s]: Recall = 0.10624, Jaccard score = 0.0673, loss = 0.000620, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 185 fit: [30.6 s]: Recall = 0.10544, Jaccard score = 0.0667, loss = 0.000550, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 186 fit: [30.4 s]: Recall = 0.10681, Jaccard score = 0.0677, loss = 0.000549, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 187 fit: [30.5 s]: Recall = 0.10681, Jaccard score = 0.0677, loss = 0.000616, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 188 fit: [30.4 s]: Recall = 0.10715, Jaccard score = 0.0679, loss = 0.000612, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 189 fit: [30.5 s]: Recall = 0.10795, Jaccard score = 0.0684, loss = 0.000586, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 190 fit: [30.4 s]: Recall = 0.10635, Jaccard score = 0.0674, loss = 0.000535, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 191 fit: [30.5 s]: Recall = 0.10635, Jaccard score = 0.0674, loss = 0.000558, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 192 fit: [30.5 s]: Recall = 0.10795, Jaccard score = 0.0684, loss = 0.000466, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 193 fit: [30.5 s]: Recall = 0.10864, Jaccard score = 0.0689, loss = 0.000460, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 194 fit: [30.5 s]: Recall = 0.10692, Jaccard score = 0.0677, loss = 0.000405, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 195 fit: [30.5 s]: Recall = 0.10966, Jaccard score = 0.0696, loss = 0.000559, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 196 fit: [30.5 s]: Recall = 0.10886, Jaccard score = 0.0691, loss = 0.000537, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 197 fit: [30.5 s]: Recall = 0.11126, Jaccard score = 0.0707, loss = 0.000526, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 198 fit: [30.4 s]: Recall = 0.10989, Jaccard score = 0.0698, loss = 0.000511, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 199 fit: [30.6 s]: Recall = 0.11172, Jaccard score = 0.0710, loss = 0.000512, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 200 fit: [30.4 s]: Recall = 0.11343, Jaccard score = 0.0722, loss = 0.000512, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 201 fit: [30.5 s]: Recall = 0.11218, Jaccard score = 0.0713, loss = 0.000480, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 202 fit: [30.4 s]: Recall = 0.11115, Jaccard score = 0.0706, loss = 0.000379, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 203 fit: [30.4 s]: Recall = 0.11458, Jaccard score = 0.0729, loss = 0.000418, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 204 fit: [30.4 s]: Recall = 0.11195, Jaccard score = 0.0711, loss = 0.000501, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 205 fit: [30.4 s]: Recall = 0.11126, Jaccard score = 0.0707, loss = 0.000385, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 206 fit: [30.5 s]: Recall = 0.11103, Jaccard score = 0.0705, loss = 0.000448, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 207 fit: [30.5 s]: Recall = 0.11263, Jaccard score = 0.0716, loss = 0.000435, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 208 fit: [30.4 s]: Recall = 0.11058, Jaccard score = 0.0702, loss = 0.000396, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 209 fit: [30.4 s]: Recall = 0.11195, Jaccard score = 0.0711, loss = 0.000478, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 210 fit: [30.4 s]: Recall = 0.11081, Jaccard score = 0.0704, loss = 0.000372, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 211 fit: [30.5 s]: Recall = 0.11035, Jaccard score = 0.0701, loss = 0.000380, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 212 fit: [30.5 s]: Recall = 0.11355, Jaccard score = 0.0722, loss = 0.000397, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 213 fit: [30.5 s]: Recall = 0.11332, Jaccard score = 0.0721, loss = 0.000446, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 214 fit: [30.6 s]: Recall = 0.11206, Jaccard score = 0.0712, loss = 0.000377, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 215 fit: [30.6 s]: Recall = 0.11183, Jaccard score = 0.0711, loss = 0.000408, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 216 fit: [30.4 s]: Recall = 0.11412, Jaccard score = 0.0726, loss = 0.000417, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 217 fit: [30.4 s]: Recall = 0.11412, Jaccard score = 0.0726, loss = 0.000460, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 218 fit: [30.5 s]: Recall = 0.11435, Jaccard score = 0.0728, loss = 0.000443, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 219 fit: [30.4 s]: Recall = 0.11503, Jaccard score = 0.0733, loss = 0.000462, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 220 fit: [30.4 s]: Recall = 0.11389, Jaccard score = 0.0725, loss = 0.000390, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 221 fit: [30.5 s]: Recall = 0.11001, Jaccard score = 0.0698, loss = 0.000369, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 222 fit: [30.6 s]: Recall = 0.11423, Jaccard score = 0.0727, loss = 0.000380, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 223 fit: [30.5 s]: Recall = 0.11218, Jaccard score = 0.0713, loss = 0.000307, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 224 fit: [30.4 s]: Recall = 0.11309, Jaccard score = 0.0719, loss = 0.000344, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 225 fit: [30.5 s]: Recall = 0.11572, Jaccard score = 0.0737, loss = 0.000398, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 226 fit: [30.5 s]: Recall = 0.11343, Jaccard score = 0.0722, loss = 0.000397, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 227 fit: [30.6 s]: Recall = 0.11366, Jaccard score = 0.0723, loss = 0.000348, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 228 fit: [30.5 s]: Recall = 0.11629, Jaccard score = 0.0741, loss = 0.000492, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 229 fit: [30.5 s]: Recall = 0.11903, Jaccard score = 0.0760, loss = 0.000384, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 230 fit: [30.5 s]: Recall = 0.11503, Jaccard score = 0.0733, loss = 0.000390, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 231 fit: [30.5 s]: Recall = 0.11366, Jaccard score = 0.0723, loss = 0.000384, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 232 fit: [30.4 s]: Recall = 0.11355, Jaccard score = 0.0722, loss = 0.000366, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 233 fit: [30.7 s]: Recall = 0.11446, Jaccard score = 0.0729, loss = 0.000359, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 234 fit: [30.5 s]: Recall = 0.11538, Jaccard score = 0.0735, loss = 0.000350, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 235 fit: [30.6 s]: Recall = 0.11378, Jaccard score = 0.0724, loss = 0.000431, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 236 fit: [30.4 s]: Recall = 0.11583, Jaccard score = 0.0738, loss = 0.000346, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 237 fit: [30.6 s]: Recall = 0.11469, Jaccard score = 0.0730, loss = 0.000396, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 238 fit: [30.5 s]: Recall = 0.11777, Jaccard score = 0.0751, loss = 0.000335, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 239 fit: [30.5 s]: Recall = 0.11538, Jaccard score = 0.0735, loss = 0.000349, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 240 fit: [30.5 s]: Recall = 0.11549, Jaccard score = 0.0736, loss = 0.000350, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 241 fit: [30.4 s]: Recall = 0.11640, Jaccard score = 0.0742, loss = 0.000348, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 242 fit: [30.5 s]: Recall = 0.11595, Jaccard score = 0.0739, loss = 0.000292, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 243 fit: [30.5 s]: Recall = 0.11583, Jaccard score = 0.0738, loss = 0.000386, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 244 fit: [30.5 s]: Recall = 0.11595, Jaccard score = 0.0739, loss = 0.000275, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 245 fit: [30.5 s]: Recall = 0.11663, Jaccard score = 0.0743, loss = 0.000351, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 246 fit: [30.4 s]: Recall = 0.11458, Jaccard score = 0.0729, loss = 0.000291, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 247 fit: [30.4 s]: Recall = 0.11446, Jaccard score = 0.0729, loss = 0.000414, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 248 fit: [30.5 s]: Recall = 0.11480, Jaccard score = 0.0731, loss = 0.000253, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 249 fit: [30.5 s]: Recall = 0.11652, Jaccard score = 0.0743, loss = 0.000343, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 250 fit: [30.5 s]: Recall = 0.11549, Jaccard score = 0.0736, loss = 0.000286, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 251 fit: [30.6 s]: Recall = 0.11698, Jaccard score = 0.0746, loss = 0.000334, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 252 fit: [30.6 s]: Recall = 0.11401, Jaccard score = 0.0726, loss = 0.000375, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 253 fit: [30.5 s]: Recall = 0.11949, Jaccard score = 0.0763, loss = 0.000319, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 254 fit: [30.5 s]: Recall = 0.11835, Jaccard score = 0.0755, loss = 0.000358, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 255 fit: [30.5 s]: Recall = 0.11972, Jaccard score = 0.0765, loss = 0.000328, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 256 fit: [30.4 s]: Recall = 0.11972, Jaccard score = 0.0765, loss = 0.000318, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 257 fit: [30.6 s]: Recall = 0.11846, Jaccard score = 0.0756, loss = 0.000288, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 258 fit: [30.6 s]: Recall = 0.11846, Jaccard score = 0.0756, loss = 0.000303, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 259 fit: [30.4 s]: Recall = 0.11983, Jaccard score = 0.0765, loss = 0.000307, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 260 fit: [30.6 s]: Recall = 0.11995, Jaccard score = 0.0766, loss = 0.000257, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 261 fit: [30.4 s]: Recall = 0.11640, Jaccard score = 0.0742, loss = 0.000327, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 262 fit: [30.6 s]: Recall = 0.11640, Jaccard score = 0.0742, loss = 0.000313, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 263 fit: [30.5 s]: Recall = 0.11332, Jaccard score = 0.0721, loss = 0.000247, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 264 fit: [30.5 s]: Recall = 0.11732, Jaccard score = 0.0748, loss = 0.000237, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 265 fit: [30.5 s]: Recall = 0.11698, Jaccard score = 0.0746, loss = 0.000315, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 266 fit: [30.3 s]: Recall = 0.12040, Jaccard score = 0.0769, loss = 0.000286, gradient norm = 1.0000, eval: [36.1 s]
# Iteration 267 fit: [30.5 s]: Recall = 0.11880, Jaccard score = 0.0758, loss = 0.000317, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 268 fit: [30.5 s]: Recall = 0.11675, Jaccard score = 0.0744, loss = 0.000349, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 269 fit: [30.6 s]: Recall = 0.11892, Jaccard score = 0.0759, loss = 0.000253, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 270 fit: [30.5 s]: Recall = 0.12269, Jaccard score = 0.0785, loss = 0.000288, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 271 fit: [30.5 s]: Recall = 0.11800, Jaccard score = 0.0753, loss = 0.000343, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 272 fit: [30.6 s]: Recall = 0.11538, Jaccard score = 0.0735, loss = 0.000216, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 273 fit: [30.4 s]: Recall = 0.11800, Jaccard score = 0.0753, loss = 0.000301, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 274 fit: [30.6 s]: Recall = 0.11663, Jaccard score = 0.0743, loss = 0.000301, gradient norm = 1.0000, eval: [36.2 s]
# Iteration 275 fit: [30.4 s]: Recall = 0.12063, Jaccard score = 0.0771, loss = 0.000261, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 276 fit: [30.4 s]: Recall = 0.11743, Jaccard score = 0.0749, loss = 0.000274, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 277 fit: [30.4 s]: Recall = 0.12040, Jaccard score = 0.0769, loss = 0.000285, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 278 fit: [30.4 s]: Recall = 0.12097, Jaccard score = 0.0773, loss = 0.000230, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 279 fit: [30.4 s]: Recall = 0.12097, Jaccard score = 0.0773, loss = 0.000355, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 280 fit: [30.6 s]: Recall = 0.11777, Jaccard score = 0.0751, loss = 0.000205, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 281 fit: [30.4 s]: Recall = 0.12006, Jaccard score = 0.0767, loss = 0.000272, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 282 fit: [30.5 s]: Recall = 0.12109, Jaccard score = 0.0774, loss = 0.000287, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 283 fit: [30.5 s]: Recall = 0.12086, Jaccard score = 0.0772, loss = 0.000268, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 284 fit: [30.5 s]: Recall = 0.11880, Jaccard score = 0.0758, loss = 0.000295, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 285 fit: [30.6 s]: Recall = 0.11777, Jaccard score = 0.0751, loss = 0.000268, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 286 fit: [30.5 s]: Recall = 0.11800, Jaccard score = 0.0753, loss = 0.000248, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 287 fit: [30.6 s]: Recall = 0.12097, Jaccard score = 0.0773, loss = 0.000201, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 288 fit: [30.5 s]: Recall = 0.11937, Jaccard score = 0.0762, loss = 0.000320, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 289 fit: [30.5 s]: Recall = 0.11995, Jaccard score = 0.0766, loss = 0.000274, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 290 fit: [30.4 s]: Recall = 0.12109, Jaccard score = 0.0774, loss = 0.000253, gradient norm = 1.0000, eval: [36.3 s]
# Iteration 291 fit: [30.5 s]: Recall = 0.11777, Jaccard score = 0.0751, loss = 0.000320, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 292 fit: [30.5 s]: Recall = 0.11835, Jaccard score = 0.0755, loss = 0.000260, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 293 fit: [30.5 s]: Recall = 0.11892, Jaccard score = 0.0759, loss = 0.000274, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 294 fit: [30.5 s]: Recall = 0.11720, Jaccard score = 0.0747, loss = 0.000218, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 295 fit: [30.5 s]: Recall = 0.11983, Jaccard score = 0.0765, loss = 0.000344, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 296 fit: [30.6 s]: Recall = 0.11949, Jaccard score = 0.0763, loss = 0.000361, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 297 fit: [30.5 s]: Recall = 0.11698, Jaccard score = 0.0746, loss = 0.000238, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 298 fit: [30.5 s]: Recall = 0.11960, Jaccard score = 0.0764, loss = 0.000313, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 299 fit: [30.6 s]: Recall = 0.12166, Jaccard score = 0.0778, loss = 0.000331, gradient norm = 1.0000, eval: [37.2 s]
# End. Best Iteration 270:  Recall = 0.1227, Jaccard score = 0.0785. 
# The best NeuMF model has been saved to Pretrain/_NeuMF_94_[512,96]_1568728022.h5
# Model test performed 
# Recall score: 0.12006248605222049     Jaccard score: 0.07748811752844592