--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
--big_tag: "0"
--epochs: "300"
--layers: "[256,128,64]"
--reg_layers: "[0,0,0]"
--num_k_folds: "5"
--early_stopping: "35"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=35, epochs=300, eval_recall=1, is_tag=1, layers='[256,128,64]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_k_folds=5, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0]', reg_mf=0, test_dataset=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[256,128,64]_1564258334.h5
--weights_path: Pretrain/_MLP_8_[256,128,64]_1564258334.h5
# Load data done [1.7 s]. #user=18000, #item=2000, #train=161301, #test=eval_recall
# 
# Performing k-fold 1
# Init: Recall = 0.0336, Jaccard score = 0.0203
# Iteration 0 fit: [20.9 s]: Recall = 0.2322, Jaccard score = 0.1592, loss = 0.4256, eval: [16.4 s]
# Iteration 1 fit: [17.9 s]: Recall = 0.2582, Jaccard score = 0.1803, loss = 0.3833, eval: [16.5 s]
# Iteration 2 fit: [17.9 s]: Recall = 0.2649, Jaccard score = 0.1858, loss = 0.3599, eval: [16.5 s]
# Iteration 3 fit: [17.9 s]: Recall = 0.2711, Jaccard score = 0.1910, loss = 0.3392, eval: [16.5 s]
# Iteration 4 fit: [17.9 s]: Recall = 0.2709, Jaccard score = 0.1908, loss = 0.3184, eval: [16.6 s]
# Iteration 5 fit: [17.9 s]: Recall = 0.2715, Jaccard score = 0.1913, loss = 0.2986, eval: [16.5 s]
# Iteration 6 fit: [17.7 s]: Recall = 0.2684, Jaccard score = 0.1887, loss = 0.2784, eval: [16.4 s]
# Iteration 7 fit: [17.9 s]: Recall = 0.2660, Jaccard score = 0.1867, loss = 0.2591, eval: [16.5 s]
# Iteration 8 fit: [17.7 s]: Recall = 0.2632, Jaccard score = 0.1844, loss = 0.2406, eval: [16.5 s]
# Iteration 9 fit: [17.9 s]: Recall = 0.2600, Jaccard score = 0.1817, loss = 0.2234, eval: [16.5 s]
# Iteration 10 fit: [17.7 s]: Recall = 0.2579, Jaccard score = 0.1800, loss = 0.2074, eval: [16.5 s]
# Iteration 11 fit: [17.9 s]: Recall = 0.2539, Jaccard score = 0.1767, loss = 0.1918, eval: [16.5 s]
# Iteration 12 fit: [17.7 s]: Recall = 0.2505, Jaccard score = 0.1740, loss = 0.1778, eval: [16.5 s]
# Iteration 13 fit: [17.9 s]: Recall = 0.2546, Jaccard score = 0.1773, loss = 0.1640, eval: [16.5 s]
# Iteration 14 fit: [17.7 s]: Recall = 0.2471, Jaccard score = 0.1712, loss = 0.1526, eval: [16.5 s]
# Iteration 15 fit: [17.9 s]: Recall = 0.2445, Jaccard score = 0.1691, loss = 0.1416, eval: [16.5 s]
# Iteration 16 fit: [17.7 s]: Recall = 0.2454, Jaccard score = 0.1698, loss = 0.1315, eval: [16.5 s]
# Iteration 17 fit: [17.9 s]: Recall = 0.2472, Jaccard score = 0.1713, loss = 0.1234, eval: [16.5 s]
# Iteration 18 fit: [17.7 s]: Recall = 0.2453, Jaccard score = 0.1697, loss = 0.1150, eval: [16.4 s]
# Iteration 19 fit: [17.9 s]: Recall = 0.2442, Jaccard score = 0.1688, loss = 0.1074, eval: [16.5 s]
# Iteration 20 fit: [17.7 s]: Recall = 0.2437, Jaccard score = 0.1684, loss = 0.1006, eval: [16.5 s]
# Iteration 21 fit: [17.9 s]: Recall = 0.2379, Jaccard score = 0.1638, loss = 0.0948, eval: [16.5 s]
# Iteration 22 fit: [17.7 s]: Recall = 0.2446, Jaccard score = 0.1691, loss = 0.0897, eval: [16.5 s]
# Iteration 23 fit: [17.9 s]: Recall = 0.2405, Jaccard score = 0.1659, loss = 0.0837, eval: [16.5 s]
# Iteration 24 fit: [17.7 s]: Recall = 0.2407, Jaccard score = 0.1660, loss = 0.0811, eval: [16.5 s]
# Iteration 25 fit: [17.9 s]: Recall = 0.2447, Jaccard score = 0.1692, loss = 0.0769, eval: [16.5 s]
# Iteration 26 fit: [17.7 s]: Recall = 0.2386, Jaccard score = 0.1643, loss = 0.0735, eval: [16.5 s]
# Iteration 27 fit: [17.9 s]: Recall = 0.2392, Jaccard score = 0.1648, loss = 0.0705, eval: [16.5 s]
# Iteration 28 fit: [17.7 s]: Recall = 0.2437, Jaccard score = 0.1684, loss = 0.0675, eval: [16.5 s]
# Iteration 29 fit: [17.9 s]: Recall = 0.2395, Jaccard score = 0.1650, loss = 0.0641, eval: [16.5 s]
# Iteration 30 fit: [17.7 s]: Recall = 0.2400, Jaccard score = 0.1655, loss = 0.0619, eval: [16.4 s]
# Iteration 31 fit: [17.9 s]: Recall = 0.2395, Jaccard score = 0.1650, loss = 0.0591, eval: [16.5 s]
# Iteration 32 fit: [17.7 s]: Recall = 0.2417, Jaccard score = 0.1668, loss = 0.0569, eval: [16.5 s]
# Iteration 33 fit: [17.9 s]: Recall = 0.2400, Jaccard score = 0.1654, loss = 0.0551, eval: [16.5 s]
# Iteration 34 fit: [17.7 s]: Recall = 0.2439, Jaccard score = 0.1686, loss = 0.0529, eval: [16.5 s]
# Iteration 35 fit: [17.9 s]: Recall = 0.2397, Jaccard score = 0.1652, loss = 0.0514, eval: [16.5 s]
# Iteration 36 fit: [17.7 s]: Recall = 0.2440, Jaccard score = 0.1687, loss = 0.0496, eval: [16.5 s]
# Iteration 37 fit: [17.9 s]: Recall = 0.2449, Jaccard score = 0.1694, loss = 0.0476, eval: [16.5 s]
# Iteration 38 fit: [17.7 s]: Recall = 0.2387, Jaccard score = 0.1644, loss = 0.0461, eval: [16.5 s]
# Iteration 39 fit: [17.9 s]: Recall = 0.2387, Jaccard score = 0.1644, loss = 0.0446, eval: [16.5 s]
# Iteration 40 fit: [17.7 s]: Recall = 0.2410, Jaccard score = 0.1663, loss = 0.0441, eval: [16.5 s]
# End. Best Iteration 5:  Recall = 0.2715, Jaccard score = 0.1913. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,128,64]_1564258334.h5
# The average best performance after k-fold 1 is: Recall = 0.2714833759590793, Jaccard score = 0.19131296746868523
# 
# Performing k-fold 2
# Init: Recall = 0.0331, Jaccard score = 0.0202
# Iteration 0 fit: [21.2 s]: Recall = 0.2262, Jaccard score = 0.1561, loss = 0.4248, eval: [16.6 s]
# Iteration 1 fit: [17.5 s]: Recall = 0.2482, Jaccard score = 0.1738, loss = 0.3827, eval: [16.8 s]
# Iteration 2 fit: [17.5 s]: Recall = 0.2570, Jaccard score = 0.1811, loss = 0.3597, eval: [16.8 s]
# Iteration 3 fit: [17.5 s]: Recall = 0.2578, Jaccard score = 0.1818, loss = 0.3395, eval: [16.7 s]
# Iteration 4 fit: [17.5 s]: Recall = 0.2588, Jaccard score = 0.1827, loss = 0.3196, eval: [16.6 s]
# Iteration 5 fit: [17.5 s]: Recall = 0.2586, Jaccard score = 0.1825, loss = 0.2994, eval: [16.6 s]
# Iteration 6 fit: [17.5 s]: Recall = 0.2595, Jaccard score = 0.1832, loss = 0.2791, eval: [16.8 s]
# Iteration 7 fit: [17.5 s]: Recall = 0.2549, Jaccard score = 0.1794, loss = 0.2590, eval: [16.7 s]
# Iteration 8 fit: [17.5 s]: Recall = 0.2546, Jaccard score = 0.1791, loss = 0.2405, eval: [16.8 s]
# Iteration 9 fit: [17.5 s]: Recall = 0.2530, Jaccard score = 0.1778, loss = 0.2227, eval: [16.8 s]
# Iteration 10 fit: [17.5 s]: Recall = 0.2516, Jaccard score = 0.1766, loss = 0.2063, eval: [16.6 s]
# Iteration 11 fit: [17.5 s]: Recall = 0.2445, Jaccard score = 0.1708, loss = 0.1908, eval: [16.8 s]
# Iteration 12 fit: [17.5 s]: Recall = 0.2434, Jaccard score = 0.1699, loss = 0.1772, eval: [16.8 s]
# Iteration 13 fit: [17.5 s]: Recall = 0.2440, Jaccard score = 0.1704, loss = 0.1634, eval: [16.6 s]
# Iteration 14 fit: [17.5 s]: Recall = 0.2408, Jaccard score = 0.1678, loss = 0.1519, eval: [16.8 s]
# Iteration 15 fit: [17.5 s]: Recall = 0.2421, Jaccard score = 0.1688, loss = 0.1391, eval: [16.6 s]
# Iteration 16 fit: [17.5 s]: Recall = 0.2410, Jaccard score = 0.1680, loss = 0.1297, eval: [16.8 s]
# Iteration 17 fit: [17.5 s]: Recall = 0.2349, Jaccard score = 0.1630, loss = 0.1219, eval: [16.6 s]
# Iteration 18 fit: [17.5 s]: Recall = 0.2396, Jaccard score = 0.1668, loss = 0.1133, eval: [16.6 s]
# Iteration 19 fit: [17.5 s]: Recall = 0.2390, Jaccard score = 0.1663, loss = 0.1059, eval: [16.8 s]
# Iteration 20 fit: [17.5 s]: Recall = 0.2309, Jaccard score = 0.1598, loss = 0.0990, eval: [16.8 s]
# Iteration 21 fit: [17.5 s]: Recall = 0.2389, Jaccard score = 0.1662, loss = 0.0940, eval: [16.7 s]
# Iteration 22 fit: [17.5 s]: Recall = 0.2383, Jaccard score = 0.1658, loss = 0.0885, eval: [16.7 s]
# Iteration 23 fit: [17.5 s]: Recall = 0.2398, Jaccard score = 0.1670, loss = 0.0837, eval: [16.9 s]
# Iteration 24 fit: [17.5 s]: Recall = 0.2331, Jaccard score = 0.1615, loss = 0.0792, eval: [16.7 s]
# Iteration 25 fit: [17.5 s]: Recall = 0.2376, Jaccard score = 0.1652, loss = 0.0756, eval: [16.8 s]
# Iteration 26 fit: [17.5 s]: Recall = 0.2380, Jaccard score = 0.1655, loss = 0.0722, eval: [16.7 s]
# Iteration 27 fit: [17.5 s]: Recall = 0.2404, Jaccard score = 0.1675, loss = 0.0694, eval: [16.8 s]
# Iteration 28 fit: [17.5 s]: Recall = 0.2410, Jaccard score = 0.1680, loss = 0.0659, eval: [16.8 s]
# Iteration 29 fit: [17.5 s]: Recall = 0.2357, Jaccard score = 0.1637, loss = 0.0635, eval: [16.8 s]
# Iteration 30 fit: [17.5 s]: Recall = 0.2344, Jaccard score = 0.1626, loss = 0.0608, eval: [16.8 s]
# Iteration 31 fit: [17.5 s]: Recall = 0.2359, Jaccard score = 0.1638, loss = 0.0586, eval: [16.8 s]
# Iteration 32 fit: [17.5 s]: Recall = 0.2351, Jaccard score = 0.1631, loss = 0.0561, eval: [16.7 s]
# Iteration 33 fit: [17.5 s]: Recall = 0.2376, Jaccard score = 0.1652, loss = 0.0540, eval: [16.8 s]
# Iteration 34 fit: [17.5 s]: Recall = 0.2369, Jaccard score = 0.1646, loss = 0.0518, eval: [16.8 s]
# Iteration 35 fit: [17.5 s]: Recall = 0.2330, Jaccard score = 0.1615, loss = 0.0504, eval: [16.8 s]
# Iteration 36 fit: [17.5 s]: Recall = 0.2320, Jaccard score = 0.1607, loss = 0.0482, eval: [16.6 s]
# Iteration 37 fit: [17.5 s]: Recall = 0.2366, Jaccard score = 0.1644, loss = 0.0473, eval: [16.7 s]
# Iteration 38 fit: [17.5 s]: Recall = 0.2384, Jaccard score = 0.1658, loss = 0.0457, eval: [16.5 s]
# Iteration 39 fit: [17.5 s]: Recall = 0.2357, Jaccard score = 0.1636, loss = 0.0436, eval: [16.8 s]
# Iteration 40 fit: [17.5 s]: Recall = 0.2366, Jaccard score = 0.1644, loss = 0.0419, eval: [16.8 s]
# Iteration 41 fit: [17.5 s]: Recall = 0.2337, Jaccard score = 0.1620, loss = 0.0420, eval: [16.7 s]
# End. Best Iteration 6:  Recall = 0.2595, Jaccard score = 0.1832. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,128,64]_1564258334.h5
# The average best performance after k-fold 2 is: Recall = 0.2654744622457641, Jaccard score = 0.18724840703218204
# 
# Performing k-fold 3
# Init: Recall = 0.0330, Jaccard score = 0.0200
# Iteration 0 fit: [21.3 s]: Recall = 0.2300, Jaccard score = 0.1586, loss = 0.4250, eval: [16.9 s]
# Iteration 1 fit: [17.7 s]: Recall = 0.2506, Jaccard score = 0.1753, loss = 0.3828, eval: [16.8 s]
# Iteration 2 fit: [17.8 s]: Recall = 0.2618, Jaccard score = 0.1846, loss = 0.3599, eval: [16.9 s]
# Iteration 3 fit: [18.0 s]: Recall = 0.2654, Jaccard score = 0.1876, loss = 0.3391, eval: [16.8 s]
# Iteration 4 fit: [17.8 s]: Recall = 0.2644, Jaccard score = 0.1868, loss = 0.3183, eval: [16.9 s]
# Iteration 5 fit: [18.1 s]: Recall = 0.2633, Jaccard score = 0.1858, loss = 0.2977, eval: [16.8 s]
# Iteration 6 fit: [17.8 s]: Recall = 0.2661, Jaccard score = 0.1882, loss = 0.2773, eval: [16.9 s]
# Iteration 7 fit: [18.1 s]: Recall = 0.2605, Jaccard score = 0.1835, loss = 0.2576, eval: [16.7 s]
# Iteration 8 fit: [17.8 s]: Recall = 0.2581, Jaccard score = 0.1815, loss = 0.2389, eval: [16.9 s]
# Iteration 9 fit: [18.0 s]: Recall = 0.2528, Jaccard score = 0.1771, loss = 0.2213, eval: [16.8 s]
# Iteration 10 fit: [17.8 s]: Recall = 0.2508, Jaccard score = 0.1754, loss = 0.2046, eval: [17.0 s]
# Iteration 11 fit: [18.0 s]: Recall = 0.2497, Jaccard score = 0.1746, loss = 0.1894, eval: [16.7 s]
# Iteration 12 fit: [17.9 s]: Recall = 0.2484, Jaccard score = 0.1735, loss = 0.1748, eval: [17.0 s]
# Iteration 13 fit: [18.0 s]: Recall = 0.2470, Jaccard score = 0.1723, loss = 0.1618, eval: [16.8 s]
# Iteration 14 fit: [17.8 s]: Recall = 0.2409, Jaccard score = 0.1674, loss = 0.1501, eval: [16.9 s]
# Iteration 15 fit: [18.0 s]: Recall = 0.2430, Jaccard score = 0.1691, loss = 0.1397, eval: [16.8 s]
# Iteration 16 fit: [17.8 s]: Recall = 0.2423, Jaccard score = 0.1685, loss = 0.1296, eval: [16.9 s]
# Iteration 17 fit: [18.0 s]: Recall = 0.2398, Jaccard score = 0.1664, loss = 0.1202, eval: [16.8 s]
# Iteration 18 fit: [17.8 s]: Recall = 0.2418, Jaccard score = 0.1681, loss = 0.1128, eval: [16.9 s]
# Iteration 19 fit: [18.1 s]: Recall = 0.2398, Jaccard score = 0.1664, loss = 0.1057, eval: [16.7 s]
# Iteration 20 fit: [17.8 s]: Recall = 0.2398, Jaccard score = 0.1665, loss = 0.0989, eval: [17.0 s]
# Iteration 21 fit: [18.0 s]: Recall = 0.2383, Jaccard score = 0.1653, loss = 0.0933, eval: [16.8 s]
# Iteration 22 fit: [17.8 s]: Recall = 0.2389, Jaccard score = 0.1658, loss = 0.0883, eval: [16.9 s]
# Iteration 23 fit: [18.0 s]: Recall = 0.2413, Jaccard score = 0.1677, loss = 0.0829, eval: [16.7 s]
# Iteration 24 fit: [17.8 s]: Recall = 0.2392, Jaccard score = 0.1660, loss = 0.0790, eval: [16.9 s]
# Iteration 25 fit: [18.0 s]: Recall = 0.2402, Jaccard score = 0.1668, loss = 0.0752, eval: [16.8 s]
# Iteration 26 fit: [17.8 s]: Recall = 0.2429, Jaccard score = 0.1690, loss = 0.0714, eval: [17.0 s]
# Iteration 27 fit: [18.0 s]: Recall = 0.2392, Jaccard score = 0.1660, loss = 0.0683, eval: [16.8 s]
# Iteration 28 fit: [17.8 s]: Recall = 0.2423, Jaccard score = 0.1685, loss = 0.0653, eval: [17.0 s]
# Iteration 29 fit: [18.0 s]: Recall = 0.2381, Jaccard score = 0.1651, loss = 0.0633, eval: [16.8 s]
# Iteration 30 fit: [17.8 s]: Recall = 0.2402, Jaccard score = 0.1668, loss = 0.0604, eval: [16.9 s]
# Iteration 31 fit: [18.1 s]: Recall = 0.2353, Jaccard score = 0.1629, loss = 0.0576, eval: [16.7 s]
# Iteration 32 fit: [17.8 s]: Recall = 0.2374, Jaccard score = 0.1646, loss = 0.0555, eval: [17.0 s]
# Iteration 33 fit: [18.2 s]: Recall = 0.2347, Jaccard score = 0.1624, loss = 0.0538, eval: [16.7 s]
# Iteration 34 fit: [17.9 s]: Recall = 0.2351, Jaccard score = 0.1627, loss = 0.0521, eval: [16.9 s]
# Iteration 35 fit: [18.0 s]: Recall = 0.2382, Jaccard score = 0.1652, loss = 0.0499, eval: [16.7 s]
# Iteration 36 fit: [17.8 s]: Recall = 0.2394, Jaccard score = 0.1661, loss = 0.0483, eval: [16.9 s]
# Iteration 37 fit: [18.0 s]: Recall = 0.2372, Jaccard score = 0.1644, loss = 0.0467, eval: [16.8 s]
# Iteration 38 fit: [17.8 s]: Recall = 0.2381, Jaccard score = 0.1651, loss = 0.0457, eval: [17.0 s]
# Iteration 39 fit: [18.0 s]: Recall = 0.2383, Jaccard score = 0.1653, loss = 0.0434, eval: [16.8 s]
# Iteration 40 fit: [17.8 s]: Recall = 0.2336, Jaccard score = 0.1615, loss = 0.0427, eval: [16.9 s]
# Iteration 41 fit: [18.1 s]: Recall = 0.2375, Jaccard score = 0.1647, loss = 0.0416, eval: [16.8 s]
# End. Best Iteration 6:  Recall = 0.2661, Jaccard score = 0.1882. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,128,64]_1564258334.h5
# The average best performance after k-fold 3 is: Recall = 0.2656745381111526, Jaccard score = 0.18755309318311855
# 
# Performing k-fold 4
# Init: Recall = 0.0343, Jaccard score = 0.0209
# Iteration 0 fit: [21.4 s]: Recall = 0.2375, Jaccard score = 0.1652, loss = 0.4253, eval: [17.0 s]
# Iteration 1 fit: [17.6 s]: Recall = 0.2592, Jaccard score = 0.1830, loss = 0.3836, eval: [17.0 s]
# Iteration 2 fit: [18.1 s]: Recall = 0.2651, Jaccard score = 0.1880, loss = 0.3605, eval: [17.0 s]
# Iteration 3 fit: [17.6 s]: Recall = 0.2686, Jaccard score = 0.1909, loss = 0.3397, eval: [16.9 s]
# Iteration 4 fit: [18.2 s]: Recall = 0.2671, Jaccard score = 0.1896, loss = 0.3193, eval: [16.9 s]
# Iteration 5 fit: [17.6 s]: Recall = 0.2678, Jaccard score = 0.1902, loss = 0.2982, eval: [17.0 s]
# Iteration 6 fit: [18.1 s]: Recall = 0.2655, Jaccard score = 0.1883, loss = 0.2779, eval: [17.0 s]
# Iteration 7 fit: [17.6 s]: Recall = 0.2594, Jaccard score = 0.1832, loss = 0.2581, eval: [17.0 s]
# Iteration 8 fit: [18.1 s]: Recall = 0.2596, Jaccard score = 0.1833, loss = 0.2392, eval: [16.9 s]
# Iteration 9 fit: [17.6 s]: Recall = 0.2579, Jaccard score = 0.1819, loss = 0.2219, eval: [17.0 s]
# Iteration 10 fit: [18.1 s]: Recall = 0.2557, Jaccard score = 0.1800, loss = 0.2054, eval: [17.0 s]
# Iteration 11 fit: [17.6 s]: Recall = 0.2553, Jaccard score = 0.1797, loss = 0.1895, eval: [17.0 s]
# Iteration 12 fit: [18.1 s]: Recall = 0.2504, Jaccard score = 0.1756, loss = 0.1753, eval: [16.9 s]
# Iteration 13 fit: [17.6 s]: Recall = 0.2521, Jaccard score = 0.1770, loss = 0.1617, eval: [17.0 s]
# Iteration 14 fit: [18.0 s]: Recall = 0.2446, Jaccard score = 0.1709, loss = 0.1512, eval: [17.0 s]
# Iteration 15 fit: [17.6 s]: Recall = 0.2450, Jaccard score = 0.1712, loss = 0.1395, eval: [17.0 s]
# Iteration 16 fit: [18.1 s]: Recall = 0.2477, Jaccard score = 0.1734, loss = 0.1298, eval: [16.9 s]
# Iteration 17 fit: [17.6 s]: Recall = 0.2441, Jaccard score = 0.1705, loss = 0.1207, eval: [17.0 s]
# Iteration 18 fit: [18.1 s]: Recall = 0.2497, Jaccard score = 0.1751, loss = 0.1122, eval: [17.0 s]
# Iteration 19 fit: [17.6 s]: Recall = 0.2458, Jaccard score = 0.1719, loss = 0.1063, eval: [17.0 s]
# Iteration 20 fit: [18.1 s]: Recall = 0.2406, Jaccard score = 0.1676, loss = 0.0998, eval: [17.0 s]
# Iteration 21 fit: [17.7 s]: Recall = 0.2461, Jaccard score = 0.1721, loss = 0.0941, eval: [17.1 s]
# Iteration 22 fit: [18.1 s]: Recall = 0.2442, Jaccard score = 0.1706, loss = 0.0885, eval: [17.0 s]
# Iteration 23 fit: [17.6 s]: Recall = 0.2427, Jaccard score = 0.1693, loss = 0.0834, eval: [17.0 s]
# Iteration 24 fit: [18.1 s]: Recall = 0.2421, Jaccard score = 0.1688, loss = 0.0806, eval: [17.0 s]
# Iteration 25 fit: [17.6 s]: Recall = 0.2407, Jaccard score = 0.1677, loss = 0.0757, eval: [17.0 s]
# Iteration 26 fit: [18.1 s]: Recall = 0.2396, Jaccard score = 0.1668, loss = 0.0727, eval: [17.0 s]
# Iteration 27 fit: [17.6 s]: Recall = 0.2402, Jaccard score = 0.1673, loss = 0.0694, eval: [17.1 s]
# Iteration 28 fit: [18.2 s]: Recall = 0.2420, Jaccard score = 0.1688, loss = 0.0668, eval: [17.0 s]
# Iteration 29 fit: [17.6 s]: Recall = 0.2434, Jaccard score = 0.1699, loss = 0.0643, eval: [17.0 s]
# Iteration 30 fit: [18.2 s]: Recall = 0.2472, Jaccard score = 0.1730, loss = 0.0613, eval: [17.0 s]
# Iteration 31 fit: [17.6 s]: Recall = 0.2436, Jaccard score = 0.1700, loss = 0.0593, eval: [17.0 s]
# Iteration 32 fit: [18.2 s]: Recall = 0.2393, Jaccard score = 0.1666, loss = 0.0566, eval: [17.0 s]
# Iteration 33 fit: [17.6 s]: Recall = 0.2431, Jaccard score = 0.1697, loss = 0.0549, eval: [16.9 s]
# Iteration 34 fit: [18.1 s]: Recall = 0.2446, Jaccard score = 0.1709, loss = 0.0527, eval: [17.0 s]
# Iteration 35 fit: [17.6 s]: Recall = 0.2421, Jaccard score = 0.1689, loss = 0.0516, eval: [17.0 s]
# Iteration 36 fit: [18.1 s]: Recall = 0.2400, Jaccard score = 0.1671, loss = 0.0492, eval: [17.0 s]
# Iteration 37 fit: [17.6 s]: Recall = 0.2413, Jaccard score = 0.1682, loss = 0.0477, eval: [17.0 s]
# Iteration 38 fit: [18.1 s]: Recall = 0.2409, Jaccard score = 0.1679, loss = 0.0461, eval: [17.0 s]
# End. Best Iteration 3:  Recall = 0.2686, Jaccard score = 0.1909. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,128,64]_1564258334.h5
# The average best performance after k-fold 4 is: Recall = 0.26640233662466606, Jaccard score = 0.18837915642237982
# 
# Performing k-fold 5
# Init: Recall = 0.0327, Jaccard score = 0.0198
# Iteration 0 fit: [21.9 s]: Recall = 0.2322, Jaccard score = 0.1605, loss = 0.4249, eval: [17.0 s]
# Iteration 1 fit: [18.3 s]: Recall = 0.2523, Jaccard score = 0.1769, loss = 0.3835, eval: [17.0 s]
# Iteration 2 fit: [18.3 s]: Recall = 0.2625, Jaccard score = 0.1855, loss = 0.3606, eval: [17.0 s]
# Iteration 3 fit: [18.2 s]: Recall = 0.2591, Jaccard score = 0.1826, loss = 0.3400, eval: [17.0 s]
# Iteration 4 fit: [18.2 s]: Recall = 0.2617, Jaccard score = 0.1848, loss = 0.3190, eval: [17.0 s]
# Iteration 5 fit: [18.2 s]: Recall = 0.2625, Jaccard score = 0.1854, loss = 0.2988, eval: [17.1 s]
# Iteration 6 fit: [18.3 s]: Recall = 0.2686, Jaccard score = 0.1906, loss = 0.2786, eval: [17.0 s]
# Iteration 7 fit: [18.3 s]: Recall = 0.2637, Jaccard score = 0.1865, loss = 0.2595, eval: [17.0 s]
# Iteration 8 fit: [18.2 s]: Recall = 0.2564, Jaccard score = 0.1803, loss = 0.2404, eval: [17.0 s]
# Iteration 9 fit: [18.5 s]: Recall = 0.2524, Jaccard score = 0.1771, loss = 0.2226, eval: [17.0 s]
# Iteration 10 fit: [18.3 s]: Recall = 0.2598, Jaccard score = 0.1832, loss = 0.2065, eval: [17.1 s]
# Iteration 11 fit: [18.2 s]: Recall = 0.2514, Jaccard score = 0.1762, loss = 0.1918, eval: [17.0 s]
# Iteration 12 fit: [18.3 s]: Recall = 0.2516, Jaccard score = 0.1764, loss = 0.1766, eval: [17.0 s]
# Iteration 13 fit: [18.2 s]: Recall = 0.2451, Jaccard score = 0.1710, loss = 0.1638, eval: [17.0 s]
# Iteration 14 fit: [18.4 s]: Recall = 0.2473, Jaccard score = 0.1728, loss = 0.1524, eval: [17.0 s]
# Iteration 15 fit: [18.2 s]: Recall = 0.2441, Jaccard score = 0.1702, loss = 0.1414, eval: [17.1 s]
# Iteration 16 fit: [18.3 s]: Recall = 0.2437, Jaccard score = 0.1699, loss = 0.1312, eval: [17.2 s]
# Iteration 17 fit: [18.2 s]: Recall = 0.2461, Jaccard score = 0.1718, loss = 0.1222, eval: [17.1 s]
# Iteration 18 fit: [18.3 s]: Recall = 0.2485, Jaccard score = 0.1738, loss = 0.1138, eval: [17.0 s]
# Iteration 19 fit: [18.3 s]: Recall = 0.2418, Jaccard score = 0.1683, loss = 0.1071, eval: [17.0 s]
# Iteration 20 fit: [18.3 s]: Recall = 0.2431, Jaccard score = 0.1694, loss = 0.1007, eval: [17.1 s]
# Iteration 21 fit: [18.2 s]: Recall = 0.2426, Jaccard score = 0.1690, loss = 0.0946, eval: [17.0 s]
# Iteration 22 fit: [18.3 s]: Recall = 0.2457, Jaccard score = 0.1715, loss = 0.0900, eval: [17.1 s]
# Iteration 23 fit: [18.2 s]: Recall = 0.2452, Jaccard score = 0.1711, loss = 0.0848, eval: [17.0 s]
# Iteration 24 fit: [18.3 s]: Recall = 0.2431, Jaccard score = 0.1694, loss = 0.0803, eval: [17.0 s]
# Iteration 25 fit: [18.2 s]: Recall = 0.2460, Jaccard score = 0.1718, loss = 0.0765, eval: [17.1 s]
# Iteration 26 fit: [18.3 s]: Recall = 0.2379, Jaccard score = 0.1651, loss = 0.0729, eval: [17.0 s]
# Iteration 27 fit: [18.2 s]: Recall = 0.2432, Jaccard score = 0.1695, loss = 0.0700, eval: [17.1 s]
# Iteration 28 fit: [18.3 s]: Recall = 0.2440, Jaccard score = 0.1701, loss = 0.0660, eval: [17.1 s]
# Iteration 29 fit: [18.2 s]: Recall = 0.2465, Jaccard score = 0.1721, loss = 0.0639, eval: [17.0 s]
# Iteration 30 fit: [18.3 s]: Recall = 0.2436, Jaccard score = 0.1698, loss = 0.0615, eval: [17.1 s]
# Iteration 31 fit: [18.3 s]: Recall = 0.2430, Jaccard score = 0.1693, loss = 0.0589, eval: [17.1 s]
# Iteration 32 fit: [18.3 s]: Recall = 0.2421, Jaccard score = 0.1686, loss = 0.0564, eval: [17.1 s]
# Iteration 33 fit: [18.2 s]: Recall = 0.2392, Jaccard score = 0.1663, loss = 0.0546, eval: [17.1 s]
# Iteration 34 fit: [18.3 s]: Recall = 0.2397, Jaccard score = 0.1666, loss = 0.0521, eval: [17.1 s]
# Iteration 35 fit: [18.2 s]: Recall = 0.2426, Jaccard score = 0.1690, loss = 0.0510, eval: [17.1 s]
# Iteration 36 fit: [18.5 s]: Recall = 0.2382, Jaccard score = 0.1654, loss = 0.0493, eval: [17.1 s]
# Iteration 37 fit: [18.2 s]: Recall = 0.2448, Jaccard score = 0.1708, loss = 0.0481, eval: [17.1 s]
# Iteration 38 fit: [18.3 s]: Recall = 0.2416, Jaccard score = 0.1682, loss = 0.0461, eval: [17.0 s]
# Iteration 39 fit: [18.2 s]: Recall = 0.2414, Jaccard score = 0.1681, loss = 0.0448, eval: [17.1 s]
# Iteration 40 fit: [18.3 s]: Recall = 0.2415, Jaccard score = 0.1681, loss = 0.0430, eval: [17.1 s]
# Iteration 41 fit: [18.2 s]: Recall = 0.2374, Jaccard score = 0.1648, loss = 0.0417, eval: [17.1 s]
# End. Best Iteration 6:  Recall = 0.2686, Jaccard score = 0.1906. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[256,128,64]_1564258334.h5
# The average best performance after k-fold 5 is: Recall = 0.2668487138837203, Jaccard score = 0.18881977722504245
