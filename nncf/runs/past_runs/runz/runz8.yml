--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "600"
--lr: "0.01"
--num_factors: "94"
--reg_mf: "0"
--early_stopping: "600"
--test_dataset: "1"

# Batchnorm

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.01, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0.0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1569332141.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1569332141.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 94)           376         flatten_1[0][0]                  
# __________________________________________________________________________________________________
# batch_normalization_2 (BatchNor (None, 94)           376         flatten_2[0][0]                  
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           batch_normalization_1[0][0]      
#                                                                  batch_normalization_2[0][0]      
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            95          multiply_1[0][0]                 
# ==================================================================================================
# Total params: 2,068,847
# Trainable params: 2,068,471
# Non-trainable params: 376
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0041, Jaccard score = 0.0013
# Iteration 0 fit: [14.6 s]: Recall = 0.06009, Jaccard score = 0.0186, loss = 0.433530, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 1 fit: [13.8 s]: Recall = 0.05757, Jaccard score = 0.0178, loss = 0.417827, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 2 fit: [13.8 s]: Recall = 0.08796, Jaccard score = 0.0275, loss = 0.349765, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 3 fit: [13.8 s]: Recall = 0.11138, Jaccard score = 0.0351, loss = 0.231711, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 4 fit: [13.8 s]: Recall = 0.12920, Jaccard score = 0.0409, loss = 0.145593, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 5 fit: [13.8 s]: Recall = 0.14313, Jaccard score = 0.0456, loss = 0.095746, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 6 fit: [13.8 s]: Recall = 0.15798, Jaccard score = 0.0505, loss = 0.069740, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 7 fit: [13.8 s]: Recall = 0.15821, Jaccard score = 0.0506, loss = 0.057055, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 8 fit: [13.8 s]: Recall = 0.17832, Jaccard score = 0.0574, loss = 0.047308, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 9 fit: [14.6 s]: Recall = 0.18277, Jaccard score = 0.0589, loss = 0.040936, gradient norm = 1.0000, eval: [31.8 s]
# Iteration 10 fit: [13.8 s]: Recall = 0.18860, Jaccard score = 0.0609, loss = 0.036435, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 11 fit: [13.8 s]: Recall = 0.19043, Jaccard score = 0.0615, loss = 0.032928, gradient norm = 1.0000, eval: [28.2 s]

# Så den föregående hade potential, men gick långsamt och overfittade (lossen blev mycket låg)

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.01, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0.0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1569332729.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1569332729.h5
# Load data done [1.9 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 94)           376         multiply_1[0][0]                 
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            95          batch_normalization_1[0][0]      
# ==================================================================================================
# Total params: 2,068,471
# Trainable params: 2,068,283
# Non-trainable params: 188
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0055, Jaccard score = 0.0017
# Iteration 0 fit: [13.1 s]: Recall = 0.00434, Jaccard score = 0.0013, loss = 0.502779, gradient norm = 1.0000, eval: [23.7 s]
# Iteration 1 fit: [12.4 s]: Recall = 0.05472, Jaccard score = 0.0169, loss = 0.477896, gradient norm = 1.0000, eval: [23.8 s]
# Iteration 2 fit: [12.4 s]: Recall = 0.10315, Jaccard score = 0.0324, loss = 0.334111, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 3 fit: [12.5 s]: Recall = 0.12566, Jaccard score = 0.0398, loss = 0.210886, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 4 fit: [12.4 s]: Recall = 0.13434, Jaccard score = 0.0426, loss = 0.127772, gradient norm = 1.0000, eval: [23.7 s]
# Iteration 5 fit: [12.5 s]: Recall = 0.14839, Jaccard score = 0.0473, loss = 0.080937, gradient norm = 1.0000, eval: [25.5 s]


# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.01, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0.0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1569333037.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1569333037.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 94)           0           flatten_1[0][0]                  
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 94)           0           flatten_2[0][0]                  
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           dropout_1[0][0]                  
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 94)           376         multiply_1[0][0]                 
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            95          batch_normalization_1[0][0]      
# ==================================================================================================
# Total params: 2,068,471
# Trainable params: 2,068,283
# Non-trainable params: 188
# __________________________________________________________________________________________________
# None
# 

# Comment: dropout och sedan batch norm (motsatt mot vad man borde göra)
# Performing k-fold 1
# Init: Recall = 0.0054, Jaccard score = 0.0016
# Iteration 0 fit: [13.3 s]: Recall = 0.00366, Jaccard score = 0.0011, loss = 0.502833, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 1 fit: [12.7 s]: Recall = 0.01828, Jaccard score = 0.0056, loss = 0.499697, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 2 fit: [12.6 s]: Recall = 0.05963, Jaccard score = 0.0185, loss = 0.465873, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 3 fit: [12.7 s]: Recall = 0.09927, Jaccard score = 0.0312, loss = 0.383858, gradient norm = 1.0000, eval: [23.9 s]
# Iteration 4 fit: [12.6 s]: Recall = 0.12726, Jaccard score = 0.0403, loss = 0.315291, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 5 fit: [12.7 s]: Recall = 0.15296, Jaccard score = 0.0488, loss = 0.260168, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 6 fit: [12.7 s]: Recall = 0.17226, Jaccard score = 0.0553, loss = 0.220316, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 7 fit: [12.6 s]: Recall = 0.18620, Jaccard score = 0.0601, loss = 0.187288, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 8 fit: [12.6 s]: Recall = 0.19899, Jaccard score = 0.0645, loss = 0.164592, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 9 fit: [12.7 s]: Recall = 0.21030, Jaccard score = 0.0684, loss = 0.146454, gradient norm = 1.0000, eval: [24.2 s]
# Iteration 10 fit: [12.6 s]: Recall = 0.21670, Jaccard score = 0.0706, loss = 0.133410, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 11 fit: [12.6 s]: Recall = 0.22881, Jaccard score = 0.0749, loss = 0.123759, gradient norm = 1.0000, eval: [23.9 s]
# Iteration 12 fit: [12.6 s]: Recall = 0.24138, Jaccard score = 0.0793, loss = 0.115849, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 13 fit: [12.6 s]: Recall = 0.24526, Jaccard score = 0.0807, loss = 0.109220, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 14 fit: [12.7 s]: Recall = 0.25086, Jaccard score = 0.0827, loss = 0.103851, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 15 fit: [12.6 s]: Recall = 0.25577, Jaccard score = 0.0844, loss = 0.098920, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 16 fit: [12.6 s]: Recall = 0.25920, Jaccard score = 0.0857, loss = 0.095330, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 17 fit: [12.6 s]: Recall = 0.26102, Jaccard score = 0.0863, loss = 0.091247, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 18 fit: [12.6 s]: Recall = 0.26662, Jaccard score = 0.0883, loss = 0.088148, gradient norm = 1.0000, eval: [24.1 s]
# Iteration 19 fit: [12.7 s]: Recall = 0.26788, Jaccard score = 0.0888, loss = 0.085558, gradient norm = 1.0000, eval: [23.9 s]
# Iteration 20 fit: [12.6 s]: Recall = 0.26902, Jaccard score = 0.0892, loss = 0.083504, gradient norm = 1.0000, eval: [24.0 s]
# Iteration 21 fit: [12.7 s]: Recall = 0.27028, Jaccard score = 0.0897, loss = 0.081405, gradient norm = 1.0000, eval: [24.1 s]

# Batch norm och sedan dropout (sist)

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.01, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0.0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1569333934.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1569333934.h5
# Load data done [1.8 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 94)           376         multiply_1[0][0]                 
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 94)           0           batch_normalization_1[0][0]      
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            95          dropout_1[0][0]                  
# ==================================================================================================
# Total params: 2,068,471
# Trainable params: 2,068,283
# Non-trainable params: 188
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0066, Jaccard score = 0.0020
# Iteration 0 fit: [13.3 s]: Recall = 0.00503, Jaccard score = 0.0015, loss = 0.503122, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 1 fit: [12.6 s]: Recall = 0.04786, Jaccard score = 0.0148, loss = 0.489501, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 2 fit: [12.6 s]: Recall = 0.09310, Jaccard score = 0.0292, loss = 0.381877, gradient norm = 1.0000, eval: [24.3 s]
# Iteration 3 fit: [12.6 s]: Recall = 0.12474, Jaccard score = 0.0395, loss = 0.282461, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 4 fit: [12.6 s]: Recall = 0.14531, Jaccard score = 0.0463, loss = 0.206086, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 5 fit: [12.6 s]: Recall = 0.16210, Jaccard score = 0.0519, loss = 0.155097, gradient norm = 1.0000, eval: [24.5 s]
# Iteration 6 fit: [12.6 s]: Recall = 0.17923, Jaccard score = 0.0577, loss = 0.122909, gradient norm = 1.0000, eval: [24.7 s]
# Iteration 7 fit: [13.4 s]: Recall = 0.18540, Jaccard score = 0.0598, loss = 0.104263, gradient norm = 1.0000, eval: [29.7 s]
# Iteration 8 fit: [12.8 s]: Recall = 0.20037, Jaccard score = 0.0650, loss = 0.090794, gradient norm = 1.0000, eval: [24.3 s]
# Iteration 9 fit: [12.6 s]: Recall = 0.21373, Jaccard score = 0.0696, loss = 0.082358, gradient norm = 1.0000, eval: [24.5 s]
# Iteration 10 fit: [12.6 s]: Recall = 0.21407, Jaccard score = 0.0697, loss = 0.074208, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 11 fit: [12.6 s]: Recall = 0.22173, Jaccard score = 0.0724, loss = 0.069714, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 12 fit: [12.6 s]: Recall = 0.22835, Jaccard score = 0.0747, loss = 0.064558, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 13 fit: [12.6 s]: Recall = 0.22950, Jaccard score = 0.0751, loss = 0.060740, gradient norm = 1.0000, eval: [24.5 s]
# Iteration 14 fit: [12.6 s]: Recall = 0.23521, Jaccard score = 0.0771, loss = 0.057618, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 15 fit: [12.6 s]: Recall = 0.24492, Jaccard score = 0.0806, loss = 0.054624, gradient norm = 1.0000, eval: [24.5 s]
# Iteration 16 fit: [12.6 s]: Recall = 0.24652, Jaccard score = 0.0811, loss = 0.051813, gradient norm = 1.0000, eval: [24.3 s]
# Iteration 17 fit: [12.6 s]: Recall = 0.24674, Jaccard score = 0.0812, loss = 0.049472, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 18 fit: [12.6 s]: Recall = 0.25074, Jaccard score = 0.0826, loss = 0.047825, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 19 fit: [12.6 s]: Recall = 0.25360, Jaccard score = 0.0837, loss = 0.046048, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 20 fit: [12.6 s]: Recall = 0.25531, Jaccard score = 0.0843, loss = 0.044409, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 21 fit: [12.6 s]: Recall = 0.26034, Jaccard score = 0.0861, loss = 0.043074, gradient norm = 1.0000, eval: [24.5 s]
# Iteration 22 fit: [12.6 s]: Recall = 0.25474, Jaccard score = 0.0841, loss = 0.042201, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 23 fit: [12.6 s]: Recall = 0.25280, Jaccard score = 0.0834, loss = 0.039501, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 24 fit: [12.6 s]: Recall = 0.26251, Jaccard score = 0.0869, loss = 0.039297, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 25 fit: [12.6 s]: Recall = 0.25794, Jaccard score = 0.0852, loss = 0.038806, gradient norm = 1.0000, eval: [24.5 s]
# Iteration 26 fit: [12.6 s]: Recall = 0.26514, Jaccard score = 0.0878, loss = 0.037210, gradient norm = 1.0000, eval: [24.4 s]
# Iteration 27 fit: [12.6 s]: Recall = 0.26536, Jaccard score = 0.0879, loss = 0.036690, gradient norm = 1.0000, eval: [24.4 s]



# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.01, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0,0,0]', reg_mf=0.0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5
--weights_path: Pretrain/_GMF_94_[64,32,16,8]_1569335043.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# user_embedding (Embedding)      (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# item_embedding (Embedding)      (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           user_embedding[0][0]             
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           item_embedding[0][0]             
# __________________________________________________________________________________________________
# batch_normalization_1 (BatchNor (None, 94)           376         flatten_1[0][0]                  
# __________________________________________________________________________________________________
# batch_normalization_2 (BatchNor (None, 94)           376         flatten_2[0][0]                  
# __________________________________________________________________________________________________
# dropout_1 (Dropout)             (None, 94)           0           batch_normalization_1[0][0]      
# __________________________________________________________________________________________________
# dropout_2 (Dropout)             (None, 94)           0           batch_normalization_2[0][0]      
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           dropout_1[0][0]                  
#                                                                  dropout_2[0][0]                  
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            95          multiply_1[0][0]                 
# ==================================================================================================
# Total params: 2,068,847
# Trainable params: 2,068,471
# Non-trainable params: 376
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.0051, Jaccard score = 0.0016
# Iteration 0 fit: [15.1 s]: Recall = 0.06123, Jaccard score = 0.0190, loss = 0.441290, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 1 fit: [14.2 s]: Recall = 0.06134, Jaccard score = 0.0190, loss = 0.423875, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 2 fit: [14.2 s]: Recall = 0.05986, Jaccard score = 0.0186, loss = 0.406341, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 3 fit: [14.2 s]: Recall = 0.08145, Jaccard score = 0.0254, loss = 0.365513, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 4 fit: [14.2 s]: Recall = 0.11321, Jaccard score = 0.0357, loss = 0.309932, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 5 fit: [14.2 s]: Recall = 0.14348, Jaccard score = 0.0457, loss = 0.261183, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 6 fit: [14.2 s]: Recall = 0.15707, Jaccard score = 0.0502, loss = 0.223576, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 7 fit: [14.2 s]: Recall = 0.17980, Jaccard score = 0.0579, loss = 0.194361, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 8 fit: [14.2 s]: Recall = 0.19431, Jaccard score = 0.0629, loss = 0.173518, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 9 fit: [14.3 s]: Recall = 0.21442, Jaccard score = 0.0698, loss = 0.156878, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 10 fit: [14.3 s]: Recall = 0.21841, Jaccard score = 0.0712, loss = 0.144006, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 11 fit: [14.3 s]: Recall = 0.23304, Jaccard score = 0.0764, loss = 0.134271, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 12 fit: [14.2 s]: Recall = 0.24149, Jaccard score = 0.0794, loss = 0.126462, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 13 fit: [14.3 s]: Recall = 0.24697, Jaccard score = 0.0813, loss = 0.120074, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 14 fit: [14.2 s]: Recall = 0.25006, Jaccard score = 0.0824, loss = 0.113037, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 15 fit: [14.2 s]: Recall = 0.25977, Jaccard score = 0.0859, loss = 0.108553, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 16 fit: [14.3 s]: Recall = 0.26148, Jaccard score = 0.0865, loss = 0.104201, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 17 fit: [14.3 s]: Recall = 0.26868, Jaccard score = 0.0891, loss = 0.100118, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 18 fit: [14.3 s]: Recall = 0.27610, Jaccard score = 0.0918, loss = 0.096981, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 19 fit: [14.2 s]: Recall = 0.27976, Jaccard score = 0.0931, loss = 0.093286, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 20 fit: [14.2 s]: Recall = 0.27359, Jaccard score = 0.0909, loss = 0.091104, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 21 fit: [14.3 s]: Recall = 0.27679, Jaccard score = 0.0920, loss = 0.087939, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 22 fit: [14.2 s]: Recall = 0.28398, Jaccard score = 0.0946, loss = 0.085268, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 23 fit: [14.3 s]: Recall = 0.28147, Jaccard score = 0.0937, loss = 0.083859, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 24 fit: [14.2 s]: Recall = 0.28684, Jaccard score = 0.0957, loss = 0.081868, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 25 fit: [14.3 s]: Recall = 0.28581, Jaccard score = 0.0953, loss = 0.080296, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 26 fit: [14.2 s]: Recall = 0.28901, Jaccard score = 0.0965, loss = 0.078774, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 27 fit: [14.3 s]: Recall = 0.28753, Jaccard score = 0.0959, loss = 0.076215, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 28 fit: [14.3 s]: Recall = 0.29084, Jaccard score = 0.0971, loss = 0.075306, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 29 fit: [14.3 s]: Recall = 0.28924, Jaccard score = 0.0966, loss = 0.074412, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 30 fit: [14.2 s]: Recall = 0.29404, Jaccard score = 0.0983, loss = 0.073379, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 31 fit: [14.2 s]: Recall = 0.29838, Jaccard score = 0.0999, loss = 0.071847, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 32 fit: [14.2 s]: Recall = 0.30249, Jaccard score = 0.1014, loss = 0.069805, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 33 fit: [14.2 s]: Recall = 0.29872, Jaccard score = 0.1000, loss = 0.070028, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 34 fit: [14.2 s]: Recall = 0.30340, Jaccard score = 0.1018, loss = 0.068516, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 35 fit: [14.3 s]: Recall = 0.30318, Jaccard score = 0.1017, loss = 0.067777, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 36 fit: [14.2 s]: Recall = 0.30089, Jaccard score = 0.1008, loss = 0.067042, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 37 fit: [14.3 s]: Recall = 0.30375, Jaccard score = 0.1019, loss = 0.066072, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 38 fit: [14.2 s]: Recall = 0.30386, Jaccard score = 0.1019, loss = 0.064658, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 39 fit: [14.2 s]: Recall = 0.30660, Jaccard score = 0.1030, loss = 0.065108, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 40 fit: [14.2 s]: Recall = 0.30569, Jaccard score = 0.1026, loss = 0.064163, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 41 fit: [14.3 s]: Recall = 0.30215, Jaccard score = 0.1013, loss = 0.062937, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 42 fit: [14.3 s]: Recall = 0.30729, Jaccard score = 0.1032, loss = 0.062989, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 43 fit: [14.3 s]: Recall = 0.30672, Jaccard score = 0.1030, loss = 0.062203, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 44 fit: [14.3 s]: Recall = 0.30809, Jaccard score = 0.1035, loss = 0.061944, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 45 fit: [14.3 s]: Recall = 0.30866, Jaccard score = 0.1037, loss = 0.060921, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 46 fit: [14.3 s]: Recall = 0.31163, Jaccard score = 0.1048, loss = 0.060676, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 47 fit: [14.3 s]: Recall = 0.31037, Jaccard score = 0.1044, loss = 0.060554, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 48 fit: [14.3 s]: Recall = 0.31403, Jaccard score = 0.1057, loss = 0.059419, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 49 fit: [14.3 s]: Recall = 0.31163, Jaccard score = 0.1048, loss = 0.058947, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 50 fit: [14.3 s]: Recall = 0.31037, Jaccard score = 0.1044, loss = 0.059170, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 51 fit: [14.3 s]: Recall = 0.31129, Jaccard score = 0.1047, loss = 0.058285, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 52 fit: [14.2 s]: Recall = 0.31220, Jaccard score = 0.1050, loss = 0.058156, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 53 fit: [14.3 s]: Recall = 0.31129, Jaccard score = 0.1047, loss = 0.057879, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 54 fit: [14.3 s]: Recall = 0.31311, Jaccard score = 0.1054, loss = 0.056922, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 55 fit: [14.3 s]: Recall = 0.31471, Jaccard score = 0.1060, loss = 0.056842, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 56 fit: [14.3 s]: Recall = 0.31506, Jaccard score = 0.1061, loss = 0.056339, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 57 fit: [14.3 s]: Recall = 0.31197, Jaccard score = 0.1049, loss = 0.056570, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 58 fit: [14.8 s]: Recall = 0.31814, Jaccard score = 0.1072, loss = 0.055512, gradient norm = 1.0000, eval: [32.6 s]
# Iteration 59 fit: [14.6 s]: Recall = 0.31597, Jaccard score = 0.1064, loss = 0.055448, gradient norm = 1.0000, eval: [31.7 s]
# Iteration 60 fit: [14.3 s]: Recall = 0.31700, Jaccard score = 0.1068, loss = 0.054788, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 61 fit: [14.3 s]: Recall = 0.32065, Jaccard score = 0.1082, loss = 0.054730, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 62 fit: [14.3 s]: Recall = 0.31768, Jaccard score = 0.1071, loss = 0.054756, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 63 fit: [14.3 s]: Recall = 0.31803, Jaccard score = 0.1072, loss = 0.054452, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 64 fit: [14.3 s]: Recall = 0.31974, Jaccard score = 0.1078, loss = 0.054383, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 65 fit: [14.3 s]: Recall = 0.32065, Jaccard score = 0.1082, loss = 0.053974, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 66 fit: [14.3 s]: Recall = 0.32111, Jaccard score = 0.1084, loss = 0.053946, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 67 fit: [14.3 s]: Recall = 0.32111, Jaccard score = 0.1084, loss = 0.052611, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 68 fit: [14.2 s]: Recall = 0.32042, Jaccard score = 0.1081, loss = 0.052600, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 69 fit: [14.3 s]: Recall = 0.32225, Jaccard score = 0.1088, loss = 0.052871, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 70 fit: [14.2 s]: Recall = 0.32111, Jaccard score = 0.1084, loss = 0.052672, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 71 fit: [14.2 s]: Recall = 0.32340, Jaccard score = 0.1092, loss = 0.052696, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 72 fit: [14.2 s]: Recall = 0.31963, Jaccard score = 0.1078, loss = 0.052042, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 73 fit: [14.2 s]: Recall = 0.32294, Jaccard score = 0.1090, loss = 0.051477, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 74 fit: [14.2 s]: Recall = 0.32602, Jaccard score = 0.1102, loss = 0.051371, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 75 fit: [14.3 s]: Recall = 0.32465, Jaccard score = 0.1097, loss = 0.051028, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 76 fit: [14.2 s]: Recall = 0.32648, Jaccard score = 0.1104, loss = 0.050560, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 77 fit: [14.3 s]: Recall = 0.32602, Jaccard score = 0.1102, loss = 0.051244, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 78 fit: [14.3 s]: Recall = 0.32122, Jaccard score = 0.1084, loss = 0.050901, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 79 fit: [14.3 s]: Recall = 0.32659, Jaccard score = 0.1104, loss = 0.051058, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 80 fit: [14.2 s]: Recall = 0.32328, Jaccard score = 0.1092, loss = 0.050584, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 81 fit: [14.2 s]: Recall = 0.32659, Jaccard score = 0.1104, loss = 0.050399, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 82 fit: [14.2 s]: Recall = 0.32568, Jaccard score = 0.1101, loss = 0.049878, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 83 fit: [14.3 s]: Recall = 0.32671, Jaccard score = 0.1105, loss = 0.051046, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 84 fit: [14.2 s]: Recall = 0.32534, Jaccard score = 0.1099, loss = 0.049667, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 85 fit: [14.2 s]: Recall = 0.32534, Jaccard score = 0.1099, loss = 0.050179, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 86 fit: [14.2 s]: Recall = 0.32785, Jaccard score = 0.1109, loss = 0.050292, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 87 fit: [14.3 s]: Recall = 0.32648, Jaccard score = 0.1104, loss = 0.049305, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 88 fit: [14.2 s]: Recall = 0.32728, Jaccard score = 0.1107, loss = 0.049091, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 89 fit: [14.2 s]: Recall = 0.32876, Jaccard score = 0.1112, loss = 0.049239, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 90 fit: [14.2 s]: Recall = 0.32991, Jaccard score = 0.1117, loss = 0.048816, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 91 fit: [14.2 s]: Recall = 0.32659, Jaccard score = 0.1104, loss = 0.049193, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 92 fit: [14.2 s]: Recall = 0.32922, Jaccard score = 0.1114, loss = 0.048392, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 93 fit: [14.3 s]: Recall = 0.32774, Jaccard score = 0.1108, loss = 0.048854, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 94 fit: [14.2 s]: Recall = 0.32465, Jaccard score = 0.1097, loss = 0.048806, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 95 fit: [14.3 s]: Recall = 0.32819, Jaccard score = 0.1110, loss = 0.047807, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 96 fit: [14.2 s]: Recall = 0.33093, Jaccard score = 0.1120, loss = 0.047679, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 97 fit: [14.2 s]: Recall = 0.33002, Jaccard score = 0.1117, loss = 0.047637, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 98 fit: [14.2 s]: Recall = 0.32819, Jaccard score = 0.1110, loss = 0.047310, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 99 fit: [14.3 s]: Recall = 0.32945, Jaccard score = 0.1115, loss = 0.048058, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 100 fit: [14.2 s]: Recall = 0.32831, Jaccard score = 0.1111, loss = 0.047601, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 101 fit: [14.2 s]: Recall = 0.33379, Jaccard score = 0.1131, loss = 0.046859, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 102 fit: [14.3 s]: Recall = 0.33219, Jaccard score = 0.1125, loss = 0.047169, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 103 fit: [14.2 s]: Recall = 0.32934, Jaccard score = 0.1114, loss = 0.047293, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 104 fit: [14.2 s]: Recall = 0.33185, Jaccard score = 0.1124, loss = 0.046945, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 105 fit: [14.2 s]: Recall = 0.33196, Jaccard score = 0.1124, loss = 0.047214, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 106 fit: [14.2 s]: Recall = 0.32694, Jaccard score = 0.1105, loss = 0.046349, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 107 fit: [14.3 s]: Recall = 0.33025, Jaccard score = 0.1118, loss = 0.046726, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 108 fit: [14.2 s]: Recall = 0.32625, Jaccard score = 0.1103, loss = 0.046562, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 109 fit: [14.2 s]: Recall = 0.33082, Jaccard score = 0.1120, loss = 0.046708, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 110 fit: [14.2 s]: Recall = 0.32956, Jaccard score = 0.1115, loss = 0.046657, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 111 fit: [14.2 s]: Recall = 0.33288, Jaccard score = 0.1128, loss = 0.046307, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 112 fit: [14.2 s]: Recall = 0.33196, Jaccard score = 0.1124, loss = 0.046148, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 113 fit: [14.2 s]: Recall = 0.33185, Jaccard score = 0.1124, loss = 0.045772, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 114 fit: [14.2 s]: Recall = 0.32648, Jaccard score = 0.1104, loss = 0.046047, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 115 fit: [14.2 s]: Recall = 0.33151, Jaccard score = 0.1123, loss = 0.045935, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 116 fit: [14.2 s]: Recall = 0.32968, Jaccard score = 0.1116, loss = 0.045938, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 117 fit: [14.2 s]: Recall = 0.33082, Jaccard score = 0.1120, loss = 0.045825, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 118 fit: [14.2 s]: Recall = 0.33208, Jaccard score = 0.1125, loss = 0.045304, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 119 fit: [14.2 s]: Recall = 0.32831, Jaccard score = 0.1111, loss = 0.045344, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 120 fit: [14.2 s]: Recall = 0.32911, Jaccard score = 0.1114, loss = 0.046115, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 121 fit: [14.2 s]: Recall = 0.33048, Jaccard score = 0.1119, loss = 0.045369, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 122 fit: [14.2 s]: Recall = 0.32842, Jaccard score = 0.1111, loss = 0.044853, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 123 fit: [14.2 s]: Recall = 0.33276, Jaccard score = 0.1127, loss = 0.045525, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 124 fit: [14.2 s]: Recall = 0.32934, Jaccard score = 0.1114, loss = 0.045202, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 125 fit: [14.2 s]: Recall = 0.33059, Jaccard score = 0.1119, loss = 0.045094, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 126 fit: [14.3 s]: Recall = 0.33231, Jaccard score = 0.1126, loss = 0.044927, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 127 fit: [14.2 s]: Recall = 0.32934, Jaccard score = 0.1114, loss = 0.044991, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 128 fit: [14.2 s]: Recall = 0.33059, Jaccard score = 0.1119, loss = 0.044951, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 129 fit: [14.2 s]: Recall = 0.33528, Jaccard score = 0.1137, loss = 0.044690, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 130 fit: [14.3 s]: Recall = 0.32911, Jaccard score = 0.1114, loss = 0.044202, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 131 fit: [14.3 s]: Recall = 0.33539, Jaccard score = 0.1137, loss = 0.044900, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 132 fit: [14.2 s]: Recall = 0.33345, Jaccard score = 0.1130, loss = 0.044535, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 133 fit: [14.2 s]: Recall = 0.33493, Jaccard score = 0.1135, loss = 0.044679, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 134 fit: [14.2 s]: Recall = 0.33482, Jaccard score = 0.1135, loss = 0.044233, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 135 fit: [14.3 s]: Recall = 0.33516, Jaccard score = 0.1136, loss = 0.044256, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 136 fit: [14.2 s]: Recall = 0.33368, Jaccard score = 0.1131, loss = 0.044195, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 137 fit: [14.2 s]: Recall = 0.33607, Jaccard score = 0.1140, loss = 0.043786, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 138 fit: [14.2 s]: Recall = 0.33596, Jaccard score = 0.1139, loss = 0.043849, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 139 fit: [14.2 s]: Recall = 0.33276, Jaccard score = 0.1127, loss = 0.043648, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 140 fit: [14.2 s]: Recall = 0.33665, Jaccard score = 0.1142, loss = 0.043868, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 141 fit: [14.3 s]: Recall = 0.33196, Jaccard score = 0.1124, loss = 0.042947, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 142 fit: [14.2 s]: Recall = 0.33436, Jaccard score = 0.1133, loss = 0.043250, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 143 fit: [14.2 s]: Recall = 0.33288, Jaccard score = 0.1128, loss = 0.044402, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 144 fit: [14.2 s]: Recall = 0.33299, Jaccard score = 0.1128, loss = 0.043490, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 145 fit: [14.2 s]: Recall = 0.33619, Jaccard score = 0.1140, loss = 0.043385, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 146 fit: [14.2 s]: Recall = 0.33185, Jaccard score = 0.1124, loss = 0.043312, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 147 fit: [14.2 s]: Recall = 0.33905, Jaccard score = 0.1151, loss = 0.043164, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 148 fit: [14.3 s]: Recall = 0.33653, Jaccard score = 0.1142, loss = 0.043324, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 149 fit: [14.2 s]: Recall = 0.33619, Jaccard score = 0.1140, loss = 0.043154, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 150 fit: [14.2 s]: Recall = 0.33505, Jaccard score = 0.1136, loss = 0.043696, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 151 fit: [14.3 s]: Recall = 0.33813, Jaccard score = 0.1148, loss = 0.044080, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 152 fit: [14.2 s]: Recall = 0.33687, Jaccard score = 0.1143, loss = 0.042944, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 153 fit: [14.2 s]: Recall = 0.33619, Jaccard score = 0.1140, loss = 0.043560, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 154 fit: [14.2 s]: Recall = 0.33448, Jaccard score = 0.1134, loss = 0.043010, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 155 fit: [14.3 s]: Recall = 0.33379, Jaccard score = 0.1131, loss = 0.043074, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 156 fit: [14.2 s]: Recall = 0.33767, Jaccard score = 0.1146, loss = 0.042549, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 157 fit: [14.2 s]: Recall = 0.33665, Jaccard score = 0.1142, loss = 0.043281, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 158 fit: [14.2 s]: Recall = 0.33516, Jaccard score = 0.1136, loss = 0.043295, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 159 fit: [14.2 s]: Recall = 0.33173, Jaccard score = 0.1123, loss = 0.042760, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 160 fit: [14.2 s]: Recall = 0.33722, Jaccard score = 0.1144, loss = 0.042544, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 161 fit: [14.2 s]: Recall = 0.33368, Jaccard score = 0.1131, loss = 0.042110, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 162 fit: [14.3 s]: Recall = 0.33379, Jaccard score = 0.1131, loss = 0.042650, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 163 fit: [14.2 s]: Recall = 0.33425, Jaccard score = 0.1133, loss = 0.042637, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 164 fit: [14.2 s]: Recall = 0.33470, Jaccard score = 0.1135, loss = 0.042209, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 165 fit: [14.2 s]: Recall = 0.33642, Jaccard score = 0.1141, loss = 0.041498, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 166 fit: [14.2 s]: Recall = 0.33665, Jaccard score = 0.1142, loss = 0.042795, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 167 fit: [14.2 s]: Recall = 0.33516, Jaccard score = 0.1136, loss = 0.042088, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 168 fit: [14.2 s]: Recall = 0.33573, Jaccard score = 0.1138, loss = 0.042313, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 169 fit: [14.2 s]: Recall = 0.33676, Jaccard score = 0.1142, loss = 0.042106, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 170 fit: [14.2 s]: Recall = 0.33687, Jaccard score = 0.1143, loss = 0.041879, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 171 fit: [14.2 s]: Recall = 0.33733, Jaccard score = 0.1145, loss = 0.042348, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 172 fit: [14.2 s]: Recall = 0.33905, Jaccard score = 0.1151, loss = 0.042006, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 173 fit: [14.2 s]: Recall = 0.33528, Jaccard score = 0.1137, loss = 0.042164, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 174 fit: [14.3 s]: Recall = 0.34042, Jaccard score = 0.1156, loss = 0.042386, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 175 fit: [14.3 s]: Recall = 0.33676, Jaccard score = 0.1142, loss = 0.042183, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 176 fit: [14.2 s]: Recall = 0.33596, Jaccard score = 0.1139, loss = 0.042093, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 177 fit: [14.2 s]: Recall = 0.33779, Jaccard score = 0.1146, loss = 0.041245, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 178 fit: [14.2 s]: Recall = 0.33962, Jaccard score = 0.1153, loss = 0.041833, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 179 fit: [14.2 s]: Recall = 0.33882, Jaccard score = 0.1150, loss = 0.042295, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 180 fit: [14.2 s]: Recall = 0.33470, Jaccard score = 0.1135, loss = 0.041022, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 181 fit: [14.2 s]: Recall = 0.33733, Jaccard score = 0.1145, loss = 0.041792, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 182 fit: [14.2 s]: Recall = 0.33745, Jaccard score = 0.1145, loss = 0.041622, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 183 fit: [14.3 s]: Recall = 0.34099, Jaccard score = 0.1158, loss = 0.041553, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 184 fit: [14.3 s]: Recall = 0.33459, Jaccard score = 0.1134, loss = 0.040570, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 185 fit: [14.2 s]: Recall = 0.33653, Jaccard score = 0.1142, loss = 0.041131, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 186 fit: [14.2 s]: Recall = 0.33756, Jaccard score = 0.1145, loss = 0.041553, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 187 fit: [14.2 s]: Recall = 0.33802, Jaccard score = 0.1147, loss = 0.040993, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 188 fit: [14.3 s]: Recall = 0.34087, Jaccard score = 0.1158, loss = 0.041786, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 189 fit: [14.3 s]: Recall = 0.33927, Jaccard score = 0.1152, loss = 0.041626, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 190 fit: [14.2 s]: Recall = 0.34259, Jaccard score = 0.1164, loss = 0.041505, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 191 fit: [14.3 s]: Recall = 0.33916, Jaccard score = 0.1151, loss = 0.041244, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 192 fit: [14.2 s]: Recall = 0.34122, Jaccard score = 0.1159, loss = 0.041170, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 193 fit: [14.2 s]: Recall = 0.34133, Jaccard score = 0.1160, loss = 0.041429, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 194 fit: [14.2 s]: Recall = 0.34259, Jaccard score = 0.1164, loss = 0.040974, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 195 fit: [14.2 s]: Recall = 0.34053, Jaccard score = 0.1157, loss = 0.041202, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 196 fit: [14.2 s]: Recall = 0.33882, Jaccard score = 0.1150, loss = 0.041391, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 197 fit: [14.2 s]: Recall = 0.34373, Jaccard score = 0.1169, loss = 0.041461, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 198 fit: [14.3 s]: Recall = 0.34738, Jaccard score = 0.1183, loss = 0.040351, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 199 fit: [14.2 s]: Recall = 0.34144, Jaccard score = 0.1160, loss = 0.041395, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 200 fit: [14.2 s]: Recall = 0.34019, Jaccard score = 0.1155, loss = 0.040914, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 201 fit: [14.2 s]: Recall = 0.34007, Jaccard score = 0.1155, loss = 0.040286, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 202 fit: [14.2 s]: Recall = 0.34396, Jaccard score = 0.1170, loss = 0.040595, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 203 fit: [14.2 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.041305, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 204 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.040334, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 205 fit: [14.2 s]: Recall = 0.34122, Jaccard score = 0.1159, loss = 0.041196, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 206 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.041397, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 207 fit: [14.2 s]: Recall = 0.34042, Jaccard score = 0.1156, loss = 0.040609, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 208 fit: [14.2 s]: Recall = 0.33882, Jaccard score = 0.1150, loss = 0.040365, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 209 fit: [14.2 s]: Recall = 0.34122, Jaccard score = 0.1159, loss = 0.040571, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 210 fit: [14.2 s]: Recall = 0.34339, Jaccard score = 0.1167, loss = 0.040305, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 211 fit: [14.2 s]: Recall = 0.33950, Jaccard score = 0.1153, loss = 0.040857, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 212 fit: [14.2 s]: Recall = 0.34087, Jaccard score = 0.1158, loss = 0.040255, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 213 fit: [14.2 s]: Recall = 0.33950, Jaccard score = 0.1153, loss = 0.040403, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 214 fit: [14.2 s]: Recall = 0.34384, Jaccard score = 0.1169, loss = 0.041124, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 215 fit: [14.3 s]: Recall = 0.34259, Jaccard score = 0.1164, loss = 0.040614, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 216 fit: [14.2 s]: Recall = 0.33984, Jaccard score = 0.1154, loss = 0.039664, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 217 fit: [14.2 s]: Recall = 0.33790, Jaccard score = 0.1147, loss = 0.040141, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 218 fit: [14.2 s]: Recall = 0.33653, Jaccard score = 0.1142, loss = 0.040563, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 219 fit: [14.2 s]: Recall = 0.33962, Jaccard score = 0.1153, loss = 0.039924, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 220 fit: [14.2 s]: Recall = 0.33973, Jaccard score = 0.1154, loss = 0.040293, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 221 fit: [14.2 s]: Recall = 0.33825, Jaccard score = 0.1148, loss = 0.039842, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 222 fit: [14.2 s]: Recall = 0.34213, Jaccard score = 0.1163, loss = 0.040276, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 223 fit: [14.2 s]: Recall = 0.34042, Jaccard score = 0.1156, loss = 0.039951, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 224 fit: [14.2 s]: Recall = 0.34030, Jaccard score = 0.1156, loss = 0.039599, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 225 fit: [14.2 s]: Recall = 0.34350, Jaccard score = 0.1168, loss = 0.040279, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 226 fit: [14.2 s]: Recall = 0.33825, Jaccard score = 0.1148, loss = 0.040308, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 227 fit: [14.2 s]: Recall = 0.33973, Jaccard score = 0.1154, loss = 0.039653, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 228 fit: [14.2 s]: Recall = 0.33859, Jaccard score = 0.1149, loss = 0.039860, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 229 fit: [14.2 s]: Recall = 0.33927, Jaccard score = 0.1152, loss = 0.039924, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 230 fit: [14.2 s]: Recall = 0.34019, Jaccard score = 0.1155, loss = 0.040417, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 231 fit: [14.2 s]: Recall = 0.34202, Jaccard score = 0.1162, loss = 0.040113, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 232 fit: [14.3 s]: Recall = 0.34179, Jaccard score = 0.1161, loss = 0.039474, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 233 fit: [14.2 s]: Recall = 0.33950, Jaccard score = 0.1153, loss = 0.039930, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 234 fit: [14.2 s]: Recall = 0.34213, Jaccard score = 0.1163, loss = 0.039804, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 235 fit: [14.2 s]: Recall = 0.34190, Jaccard score = 0.1162, loss = 0.039835, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 236 fit: [14.2 s]: Recall = 0.34030, Jaccard score = 0.1156, loss = 0.040084, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 237 fit: [14.3 s]: Recall = 0.34567, Jaccard score = 0.1176, loss = 0.039478, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 238 fit: [14.2 s]: Recall = 0.34316, Jaccard score = 0.1167, loss = 0.039604, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 239 fit: [14.3 s]: Recall = 0.34076, Jaccard score = 0.1158, loss = 0.039254, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 240 fit: [14.2 s]: Recall = 0.34156, Jaccard score = 0.1161, loss = 0.039665, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 241 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.039158, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 242 fit: [14.2 s]: Recall = 0.34099, Jaccard score = 0.1158, loss = 0.039492, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 243 fit: [14.2 s]: Recall = 0.34019, Jaccard score = 0.1155, loss = 0.039515, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 244 fit: [14.2 s]: Recall = 0.34247, Jaccard score = 0.1164, loss = 0.039024, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 245 fit: [14.2 s]: Recall = 0.34019, Jaccard score = 0.1155, loss = 0.040037, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 246 fit: [14.2 s]: Recall = 0.34361, Jaccard score = 0.1168, loss = 0.039394, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 247 fit: [14.2 s]: Recall = 0.34087, Jaccard score = 0.1158, loss = 0.039306, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 248 fit: [14.2 s]: Recall = 0.33825, Jaccard score = 0.1148, loss = 0.039320, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 249 fit: [14.2 s]: Recall = 0.34453, Jaccard score = 0.1172, loss = 0.040089, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 250 fit: [14.2 s]: Recall = 0.34464, Jaccard score = 0.1172, loss = 0.038916, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 251 fit: [14.2 s]: Recall = 0.34327, Jaccard score = 0.1167, loss = 0.039971, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 252 fit: [14.2 s]: Recall = 0.34716, Jaccard score = 0.1182, loss = 0.039536, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 253 fit: [14.2 s]: Recall = 0.33996, Jaccard score = 0.1154, loss = 0.040000, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 254 fit: [14.2 s]: Recall = 0.34270, Jaccard score = 0.1165, loss = 0.039968, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 255 fit: [14.2 s]: Recall = 0.34064, Jaccard score = 0.1157, loss = 0.039116, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 256 fit: [14.2 s]: Recall = 0.34384, Jaccard score = 0.1169, loss = 0.038464, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 257 fit: [14.2 s]: Recall = 0.34179, Jaccard score = 0.1161, loss = 0.039023, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 258 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.039461, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 259 fit: [14.2 s]: Recall = 0.34281, Jaccard score = 0.1165, loss = 0.039568, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 260 fit: [14.2 s]: Recall = 0.34133, Jaccard score = 0.1160, loss = 0.038847, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 261 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.038878, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 262 fit: [14.2 s]: Recall = 0.34499, Jaccard score = 0.1174, loss = 0.038591, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 263 fit: [14.3 s]: Recall = 0.33882, Jaccard score = 0.1150, loss = 0.038894, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 264 fit: [14.3 s]: Recall = 0.34133, Jaccard score = 0.1160, loss = 0.039126, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 265 fit: [14.2 s]: Recall = 0.34578, Jaccard score = 0.1177, loss = 0.038460, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 266 fit: [14.2 s]: Recall = 0.34019, Jaccard score = 0.1155, loss = 0.038587, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 267 fit: [14.2 s]: Recall = 0.34042, Jaccard score = 0.1156, loss = 0.039070, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 268 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.038723, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 269 fit: [14.2 s]: Recall = 0.34396, Jaccard score = 0.1170, loss = 0.038817, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 270 fit: [14.2 s]: Recall = 0.34202, Jaccard score = 0.1162, loss = 0.038496, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 271 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.039200, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 272 fit: [14.2 s]: Recall = 0.34361, Jaccard score = 0.1168, loss = 0.038500, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 273 fit: [14.2 s]: Recall = 0.34236, Jaccard score = 0.1164, loss = 0.039027, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 274 fit: [14.2 s]: Recall = 0.34053, Jaccard score = 0.1157, loss = 0.038291, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 275 fit: [14.2 s]: Recall = 0.34064, Jaccard score = 0.1157, loss = 0.038492, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 276 fit: [14.2 s]: Recall = 0.34122, Jaccard score = 0.1159, loss = 0.038192, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 277 fit: [14.2 s]: Recall = 0.34384, Jaccard score = 0.1169, loss = 0.038645, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 278 fit: [14.2 s]: Recall = 0.34110, Jaccard score = 0.1159, loss = 0.038710, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 279 fit: [14.2 s]: Recall = 0.34613, Jaccard score = 0.1178, loss = 0.038338, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 280 fit: [14.2 s]: Recall = 0.34236, Jaccard score = 0.1164, loss = 0.037990, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 281 fit: [14.3 s]: Recall = 0.34122, Jaccard score = 0.1159, loss = 0.038881, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 282 fit: [14.3 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.038287, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 283 fit: [14.2 s]: Recall = 0.34327, Jaccard score = 0.1167, loss = 0.039039, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 284 fit: [14.2 s]: Recall = 0.34224, Jaccard score = 0.1163, loss = 0.038335, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 285 fit: [14.2 s]: Recall = 0.34373, Jaccard score = 0.1169, loss = 0.037928, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 286 fit: [14.2 s]: Recall = 0.34202, Jaccard score = 0.1162, loss = 0.038233, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 287 fit: [14.2 s]: Recall = 0.34841, Jaccard score = 0.1187, loss = 0.038575, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 288 fit: [14.2 s]: Recall = 0.34567, Jaccard score = 0.1176, loss = 0.037941, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 289 fit: [14.2 s]: Recall = 0.34441, Jaccard score = 0.1171, loss = 0.038417, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 290 fit: [14.2 s]: Recall = 0.34727, Jaccard score = 0.1182, loss = 0.038001, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 291 fit: [14.2 s]: Recall = 0.34042, Jaccard score = 0.1156, loss = 0.038334, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 292 fit: [14.2 s]: Recall = 0.34670, Jaccard score = 0.1180, loss = 0.038299, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 293 fit: [14.2 s]: Recall = 0.34624, Jaccard score = 0.1178, loss = 0.037710, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 294 fit: [14.2 s]: Recall = 0.34738, Jaccard score = 0.1183, loss = 0.038797, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 295 fit: [14.2 s]: Recall = 0.34658, Jaccard score = 0.1180, loss = 0.038466, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 296 fit: [14.2 s]: Recall = 0.34578, Jaccard score = 0.1177, loss = 0.038250, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 297 fit: [14.2 s]: Recall = 0.33962, Jaccard score = 0.1153, loss = 0.037679, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 298 fit: [14.2 s]: Recall = 0.34647, Jaccard score = 0.1179, loss = 0.038087, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 299 fit: [14.2 s]: Recall = 0.34293, Jaccard score = 0.1166, loss = 0.038129, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 300 fit: [14.2 s]: Recall = 0.34624, Jaccard score = 0.1178, loss = 0.037961, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 301 fit: [14.2 s]: Recall = 0.34853, Jaccard score = 0.1187, loss = 0.037995, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 302 fit: [14.3 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.037923, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 303 fit: [14.3 s]: Recall = 0.34567, Jaccard score = 0.1176, loss = 0.038464, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 304 fit: [14.2 s]: Recall = 0.34716, Jaccard score = 0.1182, loss = 0.038299, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 305 fit: [14.2 s]: Recall = 0.34441, Jaccard score = 0.1171, loss = 0.037914, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 306 fit: [14.2 s]: Recall = 0.34133, Jaccard score = 0.1160, loss = 0.037997, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 307 fit: [14.3 s]: Recall = 0.34396, Jaccard score = 0.1170, loss = 0.038279, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 308 fit: [14.2 s]: Recall = 0.34270, Jaccard score = 0.1165, loss = 0.037784, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 309 fit: [14.3 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.038040, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 310 fit: [14.2 s]: Recall = 0.34841, Jaccard score = 0.1187, loss = 0.037722, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 311 fit: [14.2 s]: Recall = 0.34384, Jaccard score = 0.1169, loss = 0.037697, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 312 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.038197, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 313 fit: [14.2 s]: Recall = 0.34030, Jaccard score = 0.1156, loss = 0.037462, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 314 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.038205, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 315 fit: [14.3 s]: Recall = 0.34464, Jaccard score = 0.1172, loss = 0.037558, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 316 fit: [14.2 s]: Recall = 0.34613, Jaccard score = 0.1178, loss = 0.037289, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 317 fit: [14.3 s]: Recall = 0.34818, Jaccard score = 0.1186, loss = 0.037751, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 318 fit: [14.2 s]: Recall = 0.34179, Jaccard score = 0.1161, loss = 0.037106, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 319 fit: [14.3 s]: Recall = 0.34327, Jaccard score = 0.1167, loss = 0.038186, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 320 fit: [14.2 s]: Recall = 0.34247, Jaccard score = 0.1164, loss = 0.038177, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 321 fit: [14.2 s]: Recall = 0.34190, Jaccard score = 0.1162, loss = 0.037659, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 322 fit: [14.2 s]: Recall = 0.34556, Jaccard score = 0.1176, loss = 0.037626, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 323 fit: [14.3 s]: Recall = 0.34487, Jaccard score = 0.1173, loss = 0.037564, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 324 fit: [14.2 s]: Recall = 0.34316, Jaccard score = 0.1167, loss = 0.037896, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 325 fit: [14.2 s]: Recall = 0.34875, Jaccard score = 0.1188, loss = 0.037446, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 326 fit: [14.2 s]: Recall = 0.34647, Jaccard score = 0.1179, loss = 0.037676, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 327 fit: [14.2 s]: Recall = 0.34658, Jaccard score = 0.1180, loss = 0.037818, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 328 fit: [14.2 s]: Recall = 0.34830, Jaccard score = 0.1186, loss = 0.037474, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 329 fit: [14.3 s]: Recall = 0.34510, Jaccard score = 0.1174, loss = 0.038305, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 330 fit: [14.2 s]: Recall = 0.34601, Jaccard score = 0.1177, loss = 0.037733, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 331 fit: [14.3 s]: Recall = 0.34316, Jaccard score = 0.1167, loss = 0.038339, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 332 fit: [14.2 s]: Recall = 0.34339, Jaccard score = 0.1167, loss = 0.037193, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 333 fit: [14.2 s]: Recall = 0.34350, Jaccard score = 0.1168, loss = 0.038037, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 334 fit: [14.2 s]: Recall = 0.34419, Jaccard score = 0.1171, loss = 0.037371, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 335 fit: [14.2 s]: Recall = 0.34042, Jaccard score = 0.1156, loss = 0.037821, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 336 fit: [14.2 s]: Recall = 0.34224, Jaccard score = 0.1163, loss = 0.037540, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 337 fit: [14.2 s]: Recall = 0.34658, Jaccard score = 0.1180, loss = 0.037323, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 338 fit: [14.2 s]: Recall = 0.34750, Jaccard score = 0.1183, loss = 0.038511, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 339 fit: [14.3 s]: Recall = 0.34487, Jaccard score = 0.1173, loss = 0.037287, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 340 fit: [14.2 s]: Recall = 0.34259, Jaccard score = 0.1164, loss = 0.037207, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 341 fit: [14.2 s]: Recall = 0.34499, Jaccard score = 0.1174, loss = 0.037384, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 342 fit: [14.2 s]: Recall = 0.34373, Jaccard score = 0.1169, loss = 0.037325, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 343 fit: [14.2 s]: Recall = 0.34064, Jaccard score = 0.1157, loss = 0.038258, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 344 fit: [14.2 s]: Recall = 0.34384, Jaccard score = 0.1169, loss = 0.037339, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 345 fit: [14.2 s]: Recall = 0.34681, Jaccard score = 0.1180, loss = 0.037630, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 346 fit: [14.2 s]: Recall = 0.34236, Jaccard score = 0.1164, loss = 0.037758, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 347 fit: [14.2 s]: Recall = 0.34133, Jaccard score = 0.1160, loss = 0.037234, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 348 fit: [14.2 s]: Recall = 0.34407, Jaccard score = 0.1170, loss = 0.037473, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 349 fit: [14.2 s]: Recall = 0.34179, Jaccard score = 0.1161, loss = 0.037713, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 350 fit: [14.2 s]: Recall = 0.34076, Jaccard score = 0.1158, loss = 0.037630, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 351 fit: [14.2 s]: Recall = 0.34110, Jaccard score = 0.1159, loss = 0.036782, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 352 fit: [14.3 s]: Recall = 0.34556, Jaccard score = 0.1176, loss = 0.037589, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 353 fit: [14.2 s]: Recall = 0.34453, Jaccard score = 0.1172, loss = 0.037227, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 354 fit: [14.2 s]: Recall = 0.33790, Jaccard score = 0.1147, loss = 0.036956, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 355 fit: [14.2 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.037176, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 356 fit: [14.2 s]: Recall = 0.34453, Jaccard score = 0.1172, loss = 0.036864, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 357 fit: [14.3 s]: Recall = 0.34624, Jaccard score = 0.1178, loss = 0.037568, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 358 fit: [14.2 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.036835, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 359 fit: [14.2 s]: Recall = 0.34213, Jaccard score = 0.1163, loss = 0.036906, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 360 fit: [14.2 s]: Recall = 0.34601, Jaccard score = 0.1177, loss = 0.037470, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 361 fit: [14.3 s]: Recall = 0.34407, Jaccard score = 0.1170, loss = 0.036765, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 362 fit: [14.2 s]: Recall = 0.34636, Jaccard score = 0.1179, loss = 0.037085, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 363 fit: [14.2 s]: Recall = 0.34156, Jaccard score = 0.1161, loss = 0.036530, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 364 fit: [14.2 s]: Recall = 0.34590, Jaccard score = 0.1177, loss = 0.037181, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 365 fit: [14.2 s]: Recall = 0.34499, Jaccard score = 0.1174, loss = 0.036701, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 366 fit: [14.2 s]: Recall = 0.34544, Jaccard score = 0.1175, loss = 0.037066, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 367 fit: [14.2 s]: Recall = 0.34236, Jaccard score = 0.1164, loss = 0.037252, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 368 fit: [14.2 s]: Recall = 0.34510, Jaccard score = 0.1174, loss = 0.037263, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 369 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.037067, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 370 fit: [14.2 s]: Recall = 0.34464, Jaccard score = 0.1172, loss = 0.037012, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 371 fit: [14.2 s]: Recall = 0.34407, Jaccard score = 0.1170, loss = 0.037312, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 372 fit: [14.2 s]: Recall = 0.35001, Jaccard score = 0.1193, loss = 0.037959, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 373 fit: [14.2 s]: Recall = 0.34750, Jaccard score = 0.1183, loss = 0.037148, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 374 fit: [14.2 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.037053, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 375 fit: [14.2 s]: Recall = 0.34887, Jaccard score = 0.1188, loss = 0.037241, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 376 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.037481, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 377 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.036772, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 378 fit: [14.3 s]: Recall = 0.34910, Jaccard score = 0.1189, loss = 0.037212, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 379 fit: [14.2 s]: Recall = 0.34510, Jaccard score = 0.1174, loss = 0.037655, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 380 fit: [14.2 s]: Recall = 0.34510, Jaccard score = 0.1174, loss = 0.036903, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 381 fit: [14.2 s]: Recall = 0.34624, Jaccard score = 0.1178, loss = 0.037201, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 382 fit: [14.2 s]: Recall = 0.34339, Jaccard score = 0.1167, loss = 0.036745, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 383 fit: [14.2 s]: Recall = 0.34704, Jaccard score = 0.1181, loss = 0.036562, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 384 fit: [14.2 s]: Recall = 0.34293, Jaccard score = 0.1166, loss = 0.036781, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 385 fit: [14.2 s]: Recall = 0.34624, Jaccard score = 0.1178, loss = 0.037037, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 386 fit: [14.2 s]: Recall = 0.34727, Jaccard score = 0.1182, loss = 0.036510, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 387 fit: [14.2 s]: Recall = 0.34658, Jaccard score = 0.1180, loss = 0.036736, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 388 fit: [14.2 s]: Recall = 0.34339, Jaccard score = 0.1167, loss = 0.036972, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 389 fit: [14.2 s]: Recall = 0.34921, Jaccard score = 0.1190, loss = 0.036885, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 390 fit: [14.2 s]: Recall = 0.34738, Jaccard score = 0.1183, loss = 0.036790, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 391 fit: [14.2 s]: Recall = 0.34556, Jaccard score = 0.1176, loss = 0.036749, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 392 fit: [14.2 s]: Recall = 0.34281, Jaccard score = 0.1165, loss = 0.036752, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 393 fit: [14.3 s]: Recall = 0.34818, Jaccard score = 0.1186, loss = 0.036685, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 394 fit: [14.2 s]: Recall = 0.34190, Jaccard score = 0.1162, loss = 0.037498, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 395 fit: [14.2 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.036537, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 396 fit: [14.2 s]: Recall = 0.34601, Jaccard score = 0.1177, loss = 0.037124, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 397 fit: [14.2 s]: Recall = 0.35230, Jaccard score = 0.1201, loss = 0.036563, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 398 fit: [14.2 s]: Recall = 0.34521, Jaccard score = 0.1174, loss = 0.036731, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 399 fit: [14.2 s]: Recall = 0.34727, Jaccard score = 0.1182, loss = 0.036703, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 400 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.036817, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 401 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.036791, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 402 fit: [14.2 s]: Recall = 0.34681, Jaccard score = 0.1180, loss = 0.036154, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 403 fit: [14.2 s]: Recall = 0.34430, Jaccard score = 0.1171, loss = 0.036494, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 404 fit: [14.2 s]: Recall = 0.34636, Jaccard score = 0.1179, loss = 0.036686, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 405 fit: [14.2 s]: Recall = 0.34681, Jaccard score = 0.1180, loss = 0.036512, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 406 fit: [14.2 s]: Recall = 0.34796, Jaccard score = 0.1185, loss = 0.036677, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 407 fit: [14.2 s]: Recall = 0.35093, Jaccard score = 0.1196, loss = 0.037024, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 408 fit: [14.2 s]: Recall = 0.34521, Jaccard score = 0.1174, loss = 0.037016, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 409 fit: [14.2 s]: Recall = 0.35024, Jaccard score = 0.1194, loss = 0.036439, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 410 fit: [14.2 s]: Recall = 0.34807, Jaccard score = 0.1185, loss = 0.036181, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 411 fit: [14.3 s]: Recall = 0.34544, Jaccard score = 0.1175, loss = 0.037238, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 412 fit: [14.2 s]: Recall = 0.34464, Jaccard score = 0.1172, loss = 0.036629, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 413 fit: [14.2 s]: Recall = 0.34658, Jaccard score = 0.1180, loss = 0.036656, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 414 fit: [14.2 s]: Recall = 0.34613, Jaccard score = 0.1178, loss = 0.036260, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 415 fit: [14.2 s]: Recall = 0.34784, Jaccard score = 0.1184, loss = 0.036502, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 416 fit: [14.2 s]: Recall = 0.34933, Jaccard score = 0.1190, loss = 0.036814, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 417 fit: [14.2 s]: Recall = 0.35035, Jaccard score = 0.1194, loss = 0.035985, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 418 fit: [14.2 s]: Recall = 0.34704, Jaccard score = 0.1181, loss = 0.036571, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 419 fit: [14.2 s]: Recall = 0.35035, Jaccard score = 0.1194, loss = 0.037189, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 420 fit: [14.3 s]: Recall = 0.34830, Jaccard score = 0.1186, loss = 0.036698, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 421 fit: [14.2 s]: Recall = 0.34898, Jaccard score = 0.1189, loss = 0.036922, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 422 fit: [14.2 s]: Recall = 0.34567, Jaccard score = 0.1176, loss = 0.036632, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 423 fit: [14.3 s]: Recall = 0.35150, Jaccard score = 0.1198, loss = 0.036612, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 424 fit: [14.2 s]: Recall = 0.34887, Jaccard score = 0.1188, loss = 0.036819, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 425 fit: [14.2 s]: Recall = 0.34716, Jaccard score = 0.1182, loss = 0.036255, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 426 fit: [14.3 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.036804, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 427 fit: [14.2 s]: Recall = 0.34864, Jaccard score = 0.1187, loss = 0.036057, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 428 fit: [14.2 s]: Recall = 0.35150, Jaccard score = 0.1198, loss = 0.036936, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 429 fit: [14.2 s]: Recall = 0.34807, Jaccard score = 0.1185, loss = 0.036007, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 430 fit: [14.2 s]: Recall = 0.34499, Jaccard score = 0.1174, loss = 0.035991, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 431 fit: [14.3 s]: Recall = 0.34807, Jaccard score = 0.1185, loss = 0.036177, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 432 fit: [14.2 s]: Recall = 0.34670, Jaccard score = 0.1180, loss = 0.036645, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 433 fit: [14.2 s]: Recall = 0.34704, Jaccard score = 0.1181, loss = 0.036441, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 434 fit: [14.2 s]: Recall = 0.34361, Jaccard score = 0.1168, loss = 0.036611, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 435 fit: [14.2 s]: Recall = 0.34590, Jaccard score = 0.1177, loss = 0.036354, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 436 fit: [14.2 s]: Recall = 0.34601, Jaccard score = 0.1177, loss = 0.036121, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 437 fit: [14.2 s]: Recall = 0.34613, Jaccard score = 0.1178, loss = 0.036236, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 438 fit: [14.2 s]: Recall = 0.34761, Jaccard score = 0.1184, loss = 0.036151, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 439 fit: [14.2 s]: Recall = 0.34613, Jaccard score = 0.1178, loss = 0.036210, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 440 fit: [14.2 s]: Recall = 0.34738, Jaccard score = 0.1183, loss = 0.036748, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 441 fit: [14.3 s]: Recall = 0.34864, Jaccard score = 0.1187, loss = 0.036674, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 442 fit: [14.2 s]: Recall = 0.34807, Jaccard score = 0.1185, loss = 0.036041, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 443 fit: [14.3 s]: Recall = 0.34784, Jaccard score = 0.1184, loss = 0.035866, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 444 fit: [14.2 s]: Recall = 0.34773, Jaccard score = 0.1184, loss = 0.035654, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 445 fit: [14.2 s]: Recall = 0.34647, Jaccard score = 0.1179, loss = 0.036263, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 446 fit: [14.3 s]: Recall = 0.34750, Jaccard score = 0.1183, loss = 0.036512, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 447 fit: [14.3 s]: Recall = 0.34693, Jaccard score = 0.1181, loss = 0.035913, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 448 fit: [14.2 s]: Recall = 0.35172, Jaccard score = 0.1199, loss = 0.035619, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 449 fit: [14.2 s]: Recall = 0.34693, Jaccard score = 0.1181, loss = 0.036190, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 450 fit: [14.3 s]: Recall = 0.34864, Jaccard score = 0.1187, loss = 0.035888, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 451 fit: [14.2 s]: Recall = 0.34796, Jaccard score = 0.1185, loss = 0.036122, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 452 fit: [14.2 s]: Recall = 0.34921, Jaccard score = 0.1190, loss = 0.036606, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 453 fit: [14.2 s]: Recall = 0.34670, Jaccard score = 0.1180, loss = 0.036262, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 454 fit: [14.2 s]: Recall = 0.34841, Jaccard score = 0.1187, loss = 0.035962, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 455 fit: [14.2 s]: Recall = 0.34636, Jaccard score = 0.1179, loss = 0.036609, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 456 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.036172, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 457 fit: [14.2 s]: Recall = 0.34476, Jaccard score = 0.1173, loss = 0.035899, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 458 fit: [14.2 s]: Recall = 0.34784, Jaccard score = 0.1184, loss = 0.036096, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 459 fit: [14.3 s]: Recall = 0.35001, Jaccard score = 0.1193, loss = 0.035874, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 460 fit: [14.2 s]: Recall = 0.34304, Jaccard score = 0.1166, loss = 0.035915, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 461 fit: [14.2 s]: Recall = 0.34898, Jaccard score = 0.1189, loss = 0.036233, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 462 fit: [14.2 s]: Recall = 0.34955, Jaccard score = 0.1191, loss = 0.035823, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 463 fit: [14.2 s]: Recall = 0.34681, Jaccard score = 0.1180, loss = 0.035552, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 464 fit: [14.2 s]: Recall = 0.35058, Jaccard score = 0.1195, loss = 0.036483, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 465 fit: [14.2 s]: Recall = 0.34693, Jaccard score = 0.1181, loss = 0.035957, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 466 fit: [14.2 s]: Recall = 0.34556, Jaccard score = 0.1176, loss = 0.036190, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 467 fit: [14.2 s]: Recall = 0.34773, Jaccard score = 0.1184, loss = 0.035659, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 468 fit: [14.2 s]: Recall = 0.34818, Jaccard score = 0.1186, loss = 0.036131, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 469 fit: [14.2 s]: Recall = 0.34830, Jaccard score = 0.1186, loss = 0.035779, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 470 fit: [14.2 s]: Recall = 0.34601, Jaccard score = 0.1177, loss = 0.036154, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 471 fit: [14.3 s]: Recall = 0.34487, Jaccard score = 0.1173, loss = 0.035538, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 472 fit: [14.2 s]: Recall = 0.34738, Jaccard score = 0.1183, loss = 0.035657, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 473 fit: [14.2 s]: Recall = 0.35218, Jaccard score = 0.1201, loss = 0.035737, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 474 fit: [14.2 s]: Recall = 0.34818, Jaccard score = 0.1186, loss = 0.035966, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 475 fit: [14.2 s]: Recall = 0.35001, Jaccard score = 0.1193, loss = 0.036278, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 476 fit: [14.2 s]: Recall = 0.35161, Jaccard score = 0.1199, loss = 0.036149, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 477 fit: [14.2 s]: Recall = 0.34601, Jaccard score = 0.1177, loss = 0.035694, gradient norm = 1.0000, eval: [28.6 s]
# Iteration 478 fit: [14.2 s]: Recall = 0.34738, Jaccard score = 0.1183, loss = 0.035834, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 479 fit: [14.2 s]: Recall = 0.34533, Jaccard score = 0.1175, loss = 0.035932, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 480 fit: [14.2 s]: Recall = 0.34533, Jaccard score = 0.1175, loss = 0.036268, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 481 fit: [14.2 s]: Recall = 0.34693, Jaccard score = 0.1181, loss = 0.036177, gradient norm = 1.0000, eval: [28.1 s]
# Iteration 482 fit: [14.2 s]: Recall = 0.35001, Jaccard score = 0.1193, loss = 0.035915, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 483 fit: [14.2 s]: Recall = 0.34853, Jaccard score = 0.1187, loss = 0.035913, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 484 fit: [14.2 s]: Recall = 0.34841, Jaccard score = 0.1187, loss = 0.035524, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 485 fit: [14.2 s]: Recall = 0.34384, Jaccard score = 0.1169, loss = 0.036291, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 486 fit: [14.2 s]: Recall = 0.34910, Jaccard score = 0.1189, loss = 0.036263, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 487 fit: [14.2 s]: Recall = 0.34955, Jaccard score = 0.1191, loss = 0.036028, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 488 fit: [14.2 s]: Recall = 0.35195, Jaccard score = 0.1200, loss = 0.035814, gradient norm = 1.0000, eval: [28.7 s]
# Iteration 489 fit: [14.3 s]: Recall = 0.34921, Jaccard score = 0.1190, loss = 0.035557, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 490 fit: [14.3 s]: Recall = 0.34521, Jaccard score = 0.1174, loss = 0.035798, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 491 fit: [14.3 s]: Recall = 0.34796, Jaccard score = 0.1185, loss = 0.035638, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 492 fit: [14.2 s]: Recall = 0.34910, Jaccard score = 0.1189, loss = 0.035225, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 493 fit: [14.2 s]: Recall = 0.34990, Jaccard score = 0.1192, loss = 0.035969, gradient norm = 1.0000, eval: [28.0 s]
# Iteration 494 fit: [14.2 s]: Recall = 0.35104, Jaccard score = 0.1197, loss = 0.035861, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 495 fit: [14.3 s]: Recall = 0.34887, Jaccard score = 0.1188, loss = 0.036024, gradient norm = 1.0000, eval: [28.2 s]
# Iteration 496 fit: [14.2 s]: Recall = 0.34818, Jaccard score = 0.1186, loss = 0.035697, gradient norm = 1.0000, eval: [28.4 s]
# Iteration 497 fit: [14.2 s]: Recall = 0.34967, Jaccard score = 0.1191, loss = 0.036218, gradient norm = 1.0000, eval: [28.5 s]
# Iteration 498 fit: [14.3 s]: Recall = 0.34567, Jaccard score = 0.1176, loss = 0.035543, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 499 fit: [14.2 s]: Recall = 0.34750, Jaccard score = 0.1183, loss = 0.036191, gradient norm = 1.0000, eval: [28.3 s]
# Iteration 500 fit: [14.3 s]: Recall = 0.34556, Jaccard score = 0.1176, loss = 0.035347, gradient norm = 1.0000, eval: [28.8 s]
