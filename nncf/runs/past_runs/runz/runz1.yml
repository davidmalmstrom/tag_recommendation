--nn_model: NeuMF
--is_tag: "1"
--eval_recall: "1"
--topk: "10"
--big_tag: "0"
--epochs: "600"
--lr: "0.00005"
--num_factors: "94"
--early_stopping: "600"
--layers: "[512,96]"
--reg_layers: "[0,0]"
--test_dataset: "1"
--mf_pretrain: "Pretrain/_GMF_94_[64,32,16,8]_1568836629.h5"
--mlp_pretrain: "Pretrain/_MLP_8_[512,96]_1568854058.h5"

# Launched by terminal.
# NeuMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', dataset_name_prepend='', early_stopping=600, epochs=600, eval_recall=1, is_tag=1, layers='[512,96]', learner='adam', lr=5e-05, mf_pretrain='Pretrain/_GMF_94_[64,32,16,8]_1568836629.h5', mlp_pretrain='Pretrain/_MLP_8_[512,96]_1568854058.h5', nn_model='NeuMF', num_factors=94, num_k_folds=1, num_neg=4, out=1, path='../data/', percentage=0.5, reg_layers='[0,0]', reg_mf=0, test_dataset=1, topk=10, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_NeuMF_94_[512,96]_1569233290.h5
--weights_path: Pretrain/_NeuMF_94_[512,96]_1569233290.h5
# Load data done [1.7 s]. #user=20000, #item=2000, #train=161729, #test=eval_recall
# Load pretrained GMF (Pretrain/_GMF_94_[64,32,16,8]_1568836629.h5) and MLP (Pretrain/_MLP_8_[512,96]_1568854058.h5) models done. 
# __________________________________________________________________________________________________
# Layer (type)                    Output Shape         Param #     Connected to                     
# ==================================================================================================
# user_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# item_input (InputLayer)         (None, 1)            0                                            
# __________________________________________________________________________________________________
# mlp_embedding_user (Embedding)  (None, 1, 256)       5120000     user_input[0][0]                 
# __________________________________________________________________________________________________
# flatten_3 (Flatten)             (None, 256)          0           mlp_embedding_user[0][0]         
# __________________________________________________________________________________________________
# user_feature_input (InputLayer) (None, 1000)         0                                            
# __________________________________________________________________________________________________
# mlp_embedding_item (Embedding)  (None, 1, 256)       512000      item_input[0][0]                 
# __________________________________________________________________________________________________
# mf_embedding_user (Embedding)   (None, 1, 94)        1880000     user_input[0][0]                 
# __________________________________________________________________________________________________
# mf_embedding_item (Embedding)   (None, 1, 94)        188000      item_input[0][0]                 
# __________________________________________________________________________________________________
# concatenate_1 (Concatenate)     (None, 1256)         0           flatten_3[0][0]                  
#                                                                  user_feature_input[0][0]         
# __________________________________________________________________________________________________
# flatten_4 (Flatten)             (None, 256)          0           mlp_embedding_item[0][0]         
# __________________________________________________________________________________________________
# flatten_1 (Flatten)             (None, 94)           0           mf_embedding_user[0][0]          
# __________________________________________________________________________________________________
# flatten_2 (Flatten)             (None, 94)           0           mf_embedding_item[0][0]          
# __________________________________________________________________________________________________
# concatenate_2 (Concatenate)     (None, 1512)         0           concatenate_1[0][0]              
#                                                                  flatten_4[0][0]                  
# __________________________________________________________________________________________________
# multiply_1 (Multiply)           (None, 94)           0           flatten_1[0][0]                  
#                                                                  flatten_2[0][0]                  
# __________________________________________________________________________________________________
# layer1 (Dense)                  (None, 96)           145248      concatenate_2[0][0]              
# __________________________________________________________________________________________________
# concatenate_3 (Concatenate)     (None, 190)          0           multiply_1[0][0]                 
#                                                                  layer1[0][0]                     
# __________________________________________________________________________________________________
# prediction (Dense)              (None, 1)            191         concatenate_3[0][0]              
# ==================================================================================================
# Total params: 7,845,439
# Trainable params: 7,845,439
# Non-trainable params: 0
# __________________________________________________________________________________________________
# None
# 
# Performing k-fold 1
# Init: Recall = 0.3253, Jaccard score = 0.1099
# Iteration 0 fit: [31.0 s]: Recall = 0.32340, Jaccard score = 0.1092, loss = 0.000455, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 1 fit: [30.3 s]: Recall = 0.32796, Jaccard score = 0.1109, loss = 0.000444, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 2 fit: [30.5 s]: Recall = 0.32511, Jaccard score = 0.1099, loss = 0.000348, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 3 fit: [30.5 s]: Recall = 0.32568, Jaccard score = 0.1101, loss = 0.000317, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 4 fit: [30.5 s]: Recall = 0.32625, Jaccard score = 0.1103, loss = 0.000331, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 5 fit: [30.5 s]: Recall = 0.32545, Jaccard score = 0.1100, loss = 0.000361, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 6 fit: [30.5 s]: Recall = 0.32511, Jaccard score = 0.1099, loss = 0.000276, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 7 fit: [30.5 s]: Recall = 0.32568, Jaccard score = 0.1101, loss = 0.000308, gradient norm = 1.0000, eval: [38.2 s]
# Iteration 8 fit: [30.4 s]: Recall = 0.32579, Jaccard score = 0.1101, loss = 0.000278, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 9 fit: [30.3 s]: Recall = 0.32499, Jaccard score = 0.1098, loss = 0.000285, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 10 fit: [30.4 s]: Recall = 0.32534, Jaccard score = 0.1099, loss = 0.000296, gradient norm = 1.0000, eval: [38.2 s]
# Iteration 11 fit: [30.4 s]: Recall = 0.32591, Jaccard score = 0.1102, loss = 0.000276, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 12 fit: [30.4 s]: Recall = 0.32511, Jaccard score = 0.1099, loss = 0.000332, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 13 fit: [30.4 s]: Recall = 0.32762, Jaccard score = 0.1108, loss = 0.000279, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 14 fit: [30.3 s]: Recall = 0.32625, Jaccard score = 0.1103, loss = 0.000291, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 15 fit: [30.5 s]: Recall = 0.32397, Jaccard score = 0.1094, loss = 0.000287, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 16 fit: [30.3 s]: Recall = 0.32579, Jaccard score = 0.1101, loss = 0.000218, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 17 fit: [30.4 s]: Recall = 0.32374, Jaccard score = 0.1093, loss = 0.000195, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 18 fit: [30.5 s]: Recall = 0.32328, Jaccard score = 0.1092, loss = 0.000280, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 19 fit: [30.4 s]: Recall = 0.32385, Jaccard score = 0.1094, loss = 0.000209, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 20 fit: [30.4 s]: Recall = 0.32534, Jaccard score = 0.1099, loss = 0.000204, gradient norm = 1.0000, eval: [38.2 s]
# Iteration 21 fit: [30.4 s]: Recall = 0.32454, Jaccard score = 0.1096, loss = 0.000214, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 22 fit: [30.4 s]: Recall = 0.32499, Jaccard score = 0.1098, loss = 0.000232, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 23 fit: [30.4 s]: Recall = 0.32374, Jaccard score = 0.1093, loss = 0.000241, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 24 fit: [30.4 s]: Recall = 0.32054, Jaccard score = 0.1081, loss = 0.000196, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 25 fit: [30.6 s]: Recall = 0.32488, Jaccard score = 0.1098, loss = 0.000225, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 26 fit: [30.3 s]: Recall = 0.32328, Jaccard score = 0.1092, loss = 0.000245, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 27 fit: [30.3 s]: Recall = 0.32385, Jaccard score = 0.1094, loss = 0.000248, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 28 fit: [30.5 s]: Recall = 0.32362, Jaccard score = 0.1093, loss = 0.000205, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 29 fit: [30.3 s]: Recall = 0.32340, Jaccard score = 0.1092, loss = 0.000184, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 30 fit: [30.4 s]: Recall = 0.32202, Jaccard score = 0.1087, loss = 0.000205, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 31 fit: [30.4 s]: Recall = 0.32317, Jaccard score = 0.1091, loss = 0.000199, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 32 fit: [30.4 s]: Recall = 0.32237, Jaccard score = 0.1088, loss = 0.000229, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 33 fit: [30.4 s]: Recall = 0.32419, Jaccard score = 0.1095, loss = 0.000208, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 34 fit: [30.5 s]: Recall = 0.32397, Jaccard score = 0.1094, loss = 0.000214, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 35 fit: [30.6 s]: Recall = 0.32294, Jaccard score = 0.1090, loss = 0.000224, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 36 fit: [30.3 s]: Recall = 0.32488, Jaccard score = 0.1098, loss = 0.000207, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 37 fit: [30.3 s]: Recall = 0.32305, Jaccard score = 0.1091, loss = 0.000219, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 38 fit: [30.4 s]: Recall = 0.32305, Jaccard score = 0.1091, loss = 0.000189, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 39 fit: [30.5 s]: Recall = 0.32282, Jaccard score = 0.1090, loss = 0.000199, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 40 fit: [30.3 s]: Recall = 0.32248, Jaccard score = 0.1089, loss = 0.000212, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 41 fit: [30.4 s]: Recall = 0.32191, Jaccard score = 0.1087, loss = 0.000168, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 42 fit: [30.3 s]: Recall = 0.32180, Jaccard score = 0.1086, loss = 0.000223, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 43 fit: [30.3 s]: Recall = 0.32248, Jaccard score = 0.1089, loss = 0.000226, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 44 fit: [30.3 s]: Recall = 0.32111, Jaccard score = 0.1084, loss = 0.000182, gradient norm = 1.0000, eval: [36.5 s]
# Iteration 45 fit: [30.4 s]: Recall = 0.32054, Jaccard score = 0.1081, loss = 0.000202, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 46 fit: [30.4 s]: Recall = 0.32100, Jaccard score = 0.1083, loss = 0.000197, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 47 fit: [30.3 s]: Recall = 0.32134, Jaccard score = 0.1084, loss = 0.000201, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 48 fit: [30.4 s]: Recall = 0.32157, Jaccard score = 0.1085, loss = 0.000198, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 49 fit: [30.6 s]: Recall = 0.31757, Jaccard score = 0.1070, loss = 0.000196, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 50 fit: [30.4 s]: Recall = 0.32168, Jaccard score = 0.1086, loss = 0.000180, gradient norm = 1.0000, eval: [38.4 s]
# Iteration 51 fit: [30.3 s]: Recall = 0.32008, Jaccard score = 0.1080, loss = 0.000178, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 52 fit: [30.4 s]: Recall = 0.32042, Jaccard score = 0.1081, loss = 0.000215, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 53 fit: [30.5 s]: Recall = 0.31768, Jaccard score = 0.1071, loss = 0.000181, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 54 fit: [30.4 s]: Recall = 0.31940, Jaccard score = 0.1077, loss = 0.000165, gradient norm = 1.0000, eval: [38.2 s]
# Iteration 55 fit: [30.4 s]: Recall = 0.31791, Jaccard score = 0.1072, loss = 0.000192, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 56 fit: [30.5 s]: Recall = 0.32065, Jaccard score = 0.1082, loss = 0.000161, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 57 fit: [30.6 s]: Recall = 0.31734, Jaccard score = 0.1069, loss = 0.000171, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 58 fit: [30.5 s]: Recall = 0.31894, Jaccard score = 0.1075, loss = 0.000200, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 59 fit: [30.4 s]: Recall = 0.31791, Jaccard score = 0.1072, loss = 0.000162, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 60 fit: [30.7 s]: Recall = 0.31905, Jaccard score = 0.1076, loss = 0.000211, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 61 fit: [30.4 s]: Recall = 0.31860, Jaccard score = 0.1074, loss = 0.000161, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 62 fit: [31.0 s]: Recall = 0.31860, Jaccard score = 0.1074, loss = 0.000127, gradient norm = 1.0000, eval: [43.9 s]
# Iteration 63 fit: [32.5 s]: Recall = 0.31803, Jaccard score = 0.1072, loss = 0.000202, gradient norm = 1.0000, eval: [40.3 s]
# Iteration 64 fit: [30.6 s]: Recall = 0.31608, Jaccard score = 0.1065, loss = 0.000192, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 65 fit: [30.4 s]: Recall = 0.31745, Jaccard score = 0.1070, loss = 0.000177, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 66 fit: [30.5 s]: Recall = 0.31745, Jaccard score = 0.1070, loss = 0.000181, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 67 fit: [30.9 s]: Recall = 0.31723, Jaccard score = 0.1069, loss = 0.000171, gradient norm = 1.0000, eval: [38.2 s]
# Iteration 68 fit: [30.6 s]: Recall = 0.31586, Jaccard score = 0.1064, loss = 0.000163, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 69 fit: [31.3 s]: Recall = 0.31814, Jaccard score = 0.1072, loss = 0.000155, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 70 fit: [30.5 s]: Recall = 0.31631, Jaccard score = 0.1066, loss = 0.000173, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 71 fit: [30.5 s]: Recall = 0.31654, Jaccard score = 0.1066, loss = 0.000111, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 72 fit: [30.4 s]: Recall = 0.31608, Jaccard score = 0.1065, loss = 0.000221, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 73 fit: [30.5 s]: Recall = 0.31848, Jaccard score = 0.1074, loss = 0.000148, gradient norm = 1.0000, eval: [38.5 s]
# Iteration 74 fit: [30.3 s]: Recall = 0.31757, Jaccard score = 0.1070, loss = 0.000178, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 75 fit: [30.4 s]: Recall = 0.31688, Jaccard score = 0.1068, loss = 0.000205, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 76 fit: [30.5 s]: Recall = 0.31711, Jaccard score = 0.1069, loss = 0.000167, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 77 fit: [30.4 s]: Recall = 0.31757, Jaccard score = 0.1070, loss = 0.000210, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 78 fit: [30.7 s]: Recall = 0.31734, Jaccard score = 0.1069, loss = 0.000143, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 79 fit: [30.4 s]: Recall = 0.31620, Jaccard score = 0.1065, loss = 0.000162, gradient norm = 1.0000, eval: [36.4 s]
# Iteration 80 fit: [30.5 s]: Recall = 0.31643, Jaccard score = 0.1066, loss = 0.000181, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 81 fit: [30.4 s]: Recall = 0.31711, Jaccard score = 0.1069, loss = 0.000226, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 82 fit: [30.7 s]: Recall = 0.31700, Jaccard score = 0.1068, loss = 0.000122, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 83 fit: [30.5 s]: Recall = 0.31437, Jaccard score = 0.1058, loss = 0.000145, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 84 fit: [30.4 s]: Recall = 0.31448, Jaccard score = 0.1059, loss = 0.000212, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 85 fit: [30.5 s]: Recall = 0.31506, Jaccard score = 0.1061, loss = 0.000194, gradient norm = 1.0000, eval: [36.6 s]
# Iteration 86 fit: [30.5 s]: Recall = 0.31277, Jaccard score = 0.1052, loss = 0.000170, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 87 fit: [30.5 s]: Recall = 0.31380, Jaccard score = 0.1056, loss = 0.000182, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 88 fit: [31.3 s]: Recall = 0.31437, Jaccard score = 0.1058, loss = 0.000124, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 89 fit: [30.6 s]: Recall = 0.31391, Jaccard score = 0.1057, loss = 0.000169, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 90 fit: [30.5 s]: Recall = 0.31220, Jaccard score = 0.1050, loss = 0.000171, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 91 fit: [30.5 s]: Recall = 0.31334, Jaccard score = 0.1055, loss = 0.000149, gradient norm = 1.0000, eval: [38.2 s]
# Iteration 92 fit: [30.5 s]: Recall = 0.31266, Jaccard score = 0.1052, loss = 0.000158, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 93 fit: [30.4 s]: Recall = 0.31494, Jaccard score = 0.1061, loss = 0.000151, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 94 fit: [30.5 s]: Recall = 0.31243, Jaccard score = 0.1051, loss = 0.000181, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 95 fit: [30.5 s]: Recall = 0.31369, Jaccard score = 0.1056, loss = 0.000168, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 96 fit: [30.5 s]: Recall = 0.31209, Jaccard score = 0.1050, loss = 0.000172, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 97 fit: [30.4 s]: Recall = 0.31174, Jaccard score = 0.1049, loss = 0.000180, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 98 fit: [30.5 s]: Recall = 0.31209, Jaccard score = 0.1050, loss = 0.000202, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 99 fit: [30.4 s]: Recall = 0.31300, Jaccard score = 0.1053, loss = 0.000158, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 100 fit: [30.5 s]: Recall = 0.31243, Jaccard score = 0.1051, loss = 0.000139, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 101 fit: [30.4 s]: Recall = 0.31049, Jaccard score = 0.1044, loss = 0.000122, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 102 fit: [30.5 s]: Recall = 0.31266, Jaccard score = 0.1052, loss = 0.000154, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 103 fit: [30.7 s]: Recall = 0.31049, Jaccard score = 0.1044, loss = 0.000177, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 104 fit: [30.5 s]: Recall = 0.31163, Jaccard score = 0.1048, loss = 0.000176, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 105 fit: [30.6 s]: Recall = 0.31151, Jaccard score = 0.1048, loss = 0.000151, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 106 fit: [30.5 s]: Recall = 0.31117, Jaccard score = 0.1046, loss = 0.000155, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 107 fit: [30.5 s]: Recall = 0.31083, Jaccard score = 0.1045, loss = 0.000137, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 108 fit: [30.6 s]: Recall = 0.31163, Jaccard score = 0.1048, loss = 0.000152, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 109 fit: [30.4 s]: Recall = 0.31026, Jaccard score = 0.1043, loss = 0.000151, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 110 fit: [30.4 s]: Recall = 0.31060, Jaccard score = 0.1044, loss = 0.000169, gradient norm = 1.0000, eval: [38.4 s]
# Iteration 111 fit: [30.4 s]: Recall = 0.31049, Jaccard score = 0.1044, loss = 0.000173, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 112 fit: [30.4 s]: Recall = 0.31094, Jaccard score = 0.1046, loss = 0.000164, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 113 fit: [30.5 s]: Recall = 0.30900, Jaccard score = 0.1038, loss = 0.000136, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 114 fit: [30.5 s]: Recall = 0.30889, Jaccard score = 0.1038, loss = 0.000203, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 115 fit: [30.5 s]: Recall = 0.31003, Jaccard score = 0.1042, loss = 0.000171, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 116 fit: [30.5 s]: Recall = 0.30934, Jaccard score = 0.1040, loss = 0.000159, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 117 fit: [30.5 s]: Recall = 0.30923, Jaccard score = 0.1039, loss = 0.000150, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 118 fit: [30.4 s]: Recall = 0.31014, Jaccard score = 0.1043, loss = 0.000178, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 119 fit: [30.5 s]: Recall = 0.31014, Jaccard score = 0.1043, loss = 0.000154, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 120 fit: [30.5 s]: Recall = 0.30752, Jaccard score = 0.1033, loss = 0.000227, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 121 fit: [30.4 s]: Recall = 0.30866, Jaccard score = 0.1037, loss = 0.000164, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 122 fit: [30.4 s]: Recall = 0.30923, Jaccard score = 0.1039, loss = 0.000183, gradient norm = 1.0000, eval: [38.4 s]
# Iteration 123 fit: [30.5 s]: Recall = 0.30889, Jaccard score = 0.1038, loss = 0.000155, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 124 fit: [30.5 s]: Recall = 0.30923, Jaccard score = 0.1039, loss = 0.000152, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 125 fit: [30.4 s]: Recall = 0.30740, Jaccard score = 0.1032, loss = 0.000199, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 126 fit: [30.5 s]: Recall = 0.30923, Jaccard score = 0.1039, loss = 0.000156, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 127 fit: [30.5 s]: Recall = 0.30660, Jaccard score = 0.1030, loss = 0.000181, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 128 fit: [30.4 s]: Recall = 0.30603, Jaccard score = 0.1027, loss = 0.000147, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 129 fit: [30.5 s]: Recall = 0.30797, Jaccard score = 0.1035, loss = 0.000178, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 130 fit: [30.7 s]: Recall = 0.30717, Jaccard score = 0.1032, loss = 0.000194, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 131 fit: [30.6 s]: Recall = 0.30660, Jaccard score = 0.1030, loss = 0.000144, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 132 fit: [30.6 s]: Recall = 0.30843, Jaccard score = 0.1036, loss = 0.000190, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 133 fit: [30.6 s]: Recall = 0.30786, Jaccard score = 0.1034, loss = 0.000128, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 134 fit: [30.4 s]: Recall = 0.30740, Jaccard score = 0.1032, loss = 0.000152, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 135 fit: [30.4 s]: Recall = 0.30900, Jaccard score = 0.1038, loss = 0.000169, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 136 fit: [30.5 s]: Recall = 0.30660, Jaccard score = 0.1030, loss = 0.000150, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 137 fit: [30.4 s]: Recall = 0.30775, Jaccard score = 0.1034, loss = 0.000128, gradient norm = 1.0000, eval: [38.4 s]
# Iteration 138 fit: [30.7 s]: Recall = 0.30569, Jaccard score = 0.1026, loss = 0.000161, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 139 fit: [30.4 s]: Recall = 0.30717, Jaccard score = 0.1032, loss = 0.000161, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 140 fit: [30.5 s]: Recall = 0.30797, Jaccard score = 0.1035, loss = 0.000141, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 141 fit: [30.5 s]: Recall = 0.30740, Jaccard score = 0.1032, loss = 0.000215, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 142 fit: [30.7 s]: Recall = 0.30375, Jaccard score = 0.1019, loss = 0.000179, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 143 fit: [30.5 s]: Recall = 0.30523, Jaccard score = 0.1024, loss = 0.000158, gradient norm = 1.0000, eval: [38.5 s]
# Iteration 144 fit: [30.5 s]: Recall = 0.30466, Jaccard score = 0.1022, loss = 0.000166, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 145 fit: [30.5 s]: Recall = 0.30477, Jaccard score = 0.1023, loss = 0.000124, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 146 fit: [30.5 s]: Recall = 0.30409, Jaccard score = 0.1020, loss = 0.000184, gradient norm = 1.0000, eval: [38.3 s]
# Iteration 147 fit: [30.4 s]: Recall = 0.30363, Jaccard score = 0.1019, loss = 0.000147, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 148 fit: [30.6 s]: Recall = 0.30523, Jaccard score = 0.1024, loss = 0.000163, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 149 fit: [30.5 s]: Recall = 0.30512, Jaccard score = 0.1024, loss = 0.000152, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 150 fit: [30.4 s]: Recall = 0.30557, Jaccard score = 0.1026, loss = 0.000156, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 151 fit: [30.5 s]: Recall = 0.30272, Jaccard score = 0.1015, loss = 0.000212, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 152 fit: [30.4 s]: Recall = 0.30363, Jaccard score = 0.1019, loss = 0.000135, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 153 fit: [30.6 s]: Recall = 0.30398, Jaccard score = 0.1020, loss = 0.000173, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 154 fit: [30.5 s]: Recall = 0.30500, Jaccard score = 0.1024, loss = 0.000166, gradient norm = 1.0000, eval: [41.9 s]
# Iteration 155 fit: [30.6 s]: Recall = 0.30409, Jaccard score = 0.1020, loss = 0.000196, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 156 fit: [30.5 s]: Recall = 0.30295, Jaccard score = 0.1016, loss = 0.000173, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 157 fit: [30.5 s]: Recall = 0.30409, Jaccard score = 0.1020, loss = 0.000224, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 158 fit: [30.5 s]: Recall = 0.30329, Jaccard score = 0.1017, loss = 0.000173, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 159 fit: [30.5 s]: Recall = 0.30226, Jaccard score = 0.1013, loss = 0.000129, gradient norm = 1.0000, eval: [38.6 s]
# Iteration 160 fit: [30.5 s]: Recall = 0.30249, Jaccard score = 0.1014, loss = 0.000169, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 161 fit: [30.5 s]: Recall = 0.30340, Jaccard score = 0.1018, loss = 0.000181, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 162 fit: [30.5 s]: Recall = 0.30500, Jaccard score = 0.1024, loss = 0.000144, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 163 fit: [30.5 s]: Recall = 0.30192, Jaccard score = 0.1012, loss = 0.000174, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 164 fit: [30.4 s]: Recall = 0.30352, Jaccard score = 0.1018, loss = 0.000202, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 165 fit: [30.5 s]: Recall = 0.30500, Jaccard score = 0.1024, loss = 0.000145, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 166 fit: [30.4 s]: Recall = 0.30443, Jaccard score = 0.1022, loss = 0.000161, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 167 fit: [30.5 s]: Recall = 0.30432, Jaccard score = 0.1021, loss = 0.000206, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 168 fit: [30.5 s]: Recall = 0.30135, Jaccard score = 0.1010, loss = 0.000158, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 169 fit: [30.5 s]: Recall = 0.30192, Jaccard score = 0.1012, loss = 0.000164, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 170 fit: [30.7 s]: Recall = 0.30318, Jaccard score = 0.1017, loss = 0.000184, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 171 fit: [30.5 s]: Recall = 0.30283, Jaccard score = 0.1016, loss = 0.000180, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 172 fit: [30.5 s]: Recall = 0.30272, Jaccard score = 0.1015, loss = 0.000170, gradient norm = 1.0000, eval: [36.7 s]
# Iteration 173 fit: [30.5 s]: Recall = 0.30089, Jaccard score = 0.1008, loss = 0.000138, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 174 fit: [30.5 s]: Recall = 0.29998, Jaccard score = 0.1005, loss = 0.000242, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 175 fit: [30.5 s]: Recall = 0.30203, Jaccard score = 0.1013, loss = 0.000209, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 176 fit: [30.6 s]: Recall = 0.30226, Jaccard score = 0.1013, loss = 0.000169, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 177 fit: [30.5 s]: Recall = 0.29792, Jaccard score = 0.0997, loss = 0.000164, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 178 fit: [30.5 s]: Recall = 0.29998, Jaccard score = 0.1005, loss = 0.000181, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 179 fit: [30.5 s]: Recall = 0.30169, Jaccard score = 0.1011, loss = 0.000137, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 180 fit: [30.6 s]: Recall = 0.30078, Jaccard score = 0.1008, loss = 0.000187, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 181 fit: [30.5 s]: Recall = 0.30032, Jaccard score = 0.1006, loss = 0.000169, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 182 fit: [30.5 s]: Recall = 0.30146, Jaccard score = 0.1011, loss = 0.000166, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 183 fit: [30.5 s]: Recall = 0.29792, Jaccard score = 0.0997, loss = 0.000147, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 184 fit: [30.4 s]: Recall = 0.29861, Jaccard score = 0.1000, loss = 0.000173, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 185 fit: [30.5 s]: Recall = 0.29861, Jaccard score = 0.1000, loss = 0.000192, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 186 fit: [30.4 s]: Recall = 0.29792, Jaccard score = 0.0997, loss = 0.000137, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 187 fit: [30.6 s]: Recall = 0.29906, Jaccard score = 0.1002, loss = 0.000189, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 188 fit: [30.4 s]: Recall = 0.29906, Jaccard score = 0.1002, loss = 0.000180, gradient norm = 1.0000, eval: [37.5 s]
# Iteration 189 fit: [30.6 s]: Recall = 0.29941, Jaccard score = 0.1003, loss = 0.000165, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 190 fit: [30.6 s]: Recall = 0.29804, Jaccard score = 0.0998, loss = 0.000168, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 191 fit: [30.5 s]: Recall = 0.29918, Jaccard score = 0.1002, loss = 0.000185, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 192 fit: [30.5 s]: Recall = 0.30009, Jaccard score = 0.1005, loss = 0.000153, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 193 fit: [30.5 s]: Recall = 0.30009, Jaccard score = 0.1005, loss = 0.000164, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 194 fit: [30.5 s]: Recall = 0.29975, Jaccard score = 0.1004, loss = 0.000181, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 195 fit: [30.5 s]: Recall = 0.29769, Jaccard score = 0.0997, loss = 0.000171, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 196 fit: [30.4 s]: Recall = 0.29941, Jaccard score = 0.1003, loss = 0.000191, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 197 fit: [30.5 s]: Recall = 0.29952, Jaccard score = 0.1003, loss = 0.000158, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 198 fit: [30.8 s]: Recall = 0.29838, Jaccard score = 0.0999, loss = 0.000183, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 199 fit: [30.5 s]: Recall = 0.29849, Jaccard score = 0.1000, loss = 0.000129, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 200 fit: [30.3 s]: Recall = 0.29849, Jaccard score = 0.1000, loss = 0.000149, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 201 fit: [30.6 s]: Recall = 0.29849, Jaccard score = 0.1000, loss = 0.000158, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 202 fit: [30.5 s]: Recall = 0.29552, Jaccard score = 0.0989, loss = 0.000175, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 203 fit: [30.5 s]: Recall = 0.29815, Jaccard score = 0.0998, loss = 0.000224, gradient norm = 1.0000, eval: [37.2 s]
# Iteration 204 fit: [30.5 s]: Recall = 0.29655, Jaccard score = 0.0992, loss = 0.000178, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 205 fit: [30.4 s]: Recall = 0.29906, Jaccard score = 0.1002, loss = 0.000141, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 206 fit: [30.5 s]: Recall = 0.29815, Jaccard score = 0.0998, loss = 0.000173, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 207 fit: [30.5 s]: Recall = 0.29952, Jaccard score = 0.1003, loss = 0.000177, gradient norm = 1.0000, eval: [38.9 s]
# Iteration 208 fit: [30.6 s]: Recall = 0.29815, Jaccard score = 0.0998, loss = 0.000140, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 209 fit: [30.5 s]: Recall = 0.29621, Jaccard score = 0.0991, loss = 0.000144, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 210 fit: [30.6 s]: Recall = 0.29735, Jaccard score = 0.0995, loss = 0.000162, gradient norm = 1.0000, eval: [37.8 s]
# Iteration 211 fit: [30.4 s]: Recall = 0.29564, Jaccard score = 0.0989, loss = 0.000160, gradient norm = 1.0000, eval: [38.4 s]
# Iteration 212 fit: [30.5 s]: Recall = 0.29586, Jaccard score = 0.0990, loss = 0.000169, gradient norm = 1.0000, eval: [37.9 s]
# Iteration 213 fit: [30.6 s]: Recall = 0.29518, Jaccard score = 0.0987, loss = 0.000187, gradient norm = 1.0000, eval: [36.9 s]
# Iteration 214 fit: [30.5 s]: Recall = 0.29746, Jaccard score = 0.0996, loss = 0.000159, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 215 fit: [30.5 s]: Recall = 0.29758, Jaccard score = 0.0996, loss = 0.000157, gradient norm = 1.0000, eval: [37.3 s]
# Iteration 216 fit: [30.4 s]: Recall = 0.29701, Jaccard score = 0.0994, loss = 0.000181, gradient norm = 1.0000, eval: [38.0 s]
# Iteration 217 fit: [30.5 s]: Recall = 0.29392, Jaccard score = 0.0983, loss = 0.000142, gradient norm = 1.0000, eval: [37.1 s]
# Iteration 218 fit: [30.5 s]: Recall = 0.29609, Jaccard score = 0.0991, loss = 0.000177, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 219 fit: [30.4 s]: Recall = 0.29461, Jaccard score = 0.0985, loss = 0.000175, gradient norm = 1.0000, eval: [36.8 s]
# Iteration 220 fit: [30.4 s]: Recall = 0.29575, Jaccard score = 0.0989, loss = 0.000185, gradient norm = 1.0000, eval: [37.6 s]
# Iteration 221 fit: [30.5 s]: Recall = 0.29415, Jaccard score = 0.0984, loss = 0.000152, gradient norm = 1.0000, eval: [37.0 s]
# Iteration 222 fit: [30.5 s]: Recall = 0.29415, Jaccard score = 0.0984, loss = 0.000164, gradient norm = 1.0000, eval: [37.7 s]
# Iteration 223 fit: [30.5 s]: Recall = 0.29484, Jaccard score = 0.0986, loss = 0.000175, gradient norm = 1.0000, eval: [37.4 s]
# Iteration 224 fit: [30.6 s]: Recall = 0.29449, Jaccard score = 0.0985, loss = 0.000160, gradient norm = 1.0000, eval: [38.8 s]
# Iteration 225 fit: [30.9 s]: Recall = 0.29312, Jaccard score = 0.0980, loss = 0.000168, gradient norm = 1.0000, eval: [38.1 s]
# Iteration 226 fit: [30.8 s]: Recall = 0.29415, Jaccard score = 0.0984, loss = 0.000181, gradient norm = 1.0000, eval: [38.9 s]
# Iteration 227 fit: [30.6 s]: Recall = 0.29449, Jaccard score = 0.0985, loss = 0.000192, gradient norm = 1.0000, eval: [38.8 s]
# Iteration 228 fit: [30.5 s]: Recall = 0.29564, Jaccard score = 0.0989, loss = 0.000203, gradient norm = 1.0000, eval: [37.4 s]
