--nn_model: MLP
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "50"
--layers: "[1024,256,64,8]"
--reg_layers: "[0,0,0,0]"

# Launched by terminal.
# MLP arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=50, eval_recall=1, is_tag=1, layers='[1024,256,64,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='MLP', num_factors=8, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_MLP_8_[1024,256,64,8]_1560272345.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0032, Jaccard score = 0.0017
# Iteration 0 fit: [25.7 s]: Recall = 0.0273, Jaccard score = 0.0150, loss = 0.4504, val_loss = 0.0000, eval: [8.5 s]
# Iteration 1 fit: [24.7 s]: Recall = 0.0258, Jaccard score = 0.0141, loss = 0.4395, val_loss = 0.0000, eval: [8.9 s]
# Iteration 2 fit: [25.0 s]: Recall = 0.0281, Jaccard score = 0.0154, loss = 0.4282, val_loss = 0.0000, eval: [8.4 s]
# Iteration 3 fit: [24.8 s]: Recall = 0.0338, Jaccard score = 0.0186, loss = 0.4019, val_loss = 0.0000, eval: [8.4 s]
# Iteration 4 fit: [24.9 s]: Recall = 0.0421, Jaccard score = 0.0233, loss = 0.3644, val_loss = 0.0000, eval: [8.9 s]
# Iteration 5 fit: [24.8 s]: Recall = 0.0501, Jaccard score = 0.0278, loss = 0.3235, val_loss = 0.0000, eval: [8.3 s]
# Iteration 6 fit: [25.0 s]: Recall = 0.0490, Jaccard score = 0.0271, loss = 0.2847, val_loss = 0.0000, eval: [8.5 s]
# Iteration 7 fit: [24.7 s]: Recall = 0.0492, Jaccard score = 0.0272, loss = 0.2500, val_loss = 0.0000, eval: [8.3 s]
# Iteration 8 fit: [25.0 s]: Recall = 0.0463, Jaccard score = 0.0256, loss = 0.2198, val_loss = 0.0000, eval: [8.6 s]
# Iteration 9 fit: [24.7 s]: Recall = 0.0511, Jaccard score = 0.0283, loss = 0.1944, val_loss = 0.0000, eval: [8.3 s]
# Iteration 10 fit: [24.7 s]: Recall = 0.0484, Jaccard score = 0.0268, loss = 0.1735, val_loss = 0.0000, eval: [8.4 s]
# Iteration 11 fit: [24.7 s]: Recall = 0.0493, Jaccard score = 0.0273, loss = 0.1561, val_loss = 0.0000, eval: [8.3 s]
# Iteration 12 fit: [24.8 s]: Recall = 0.0511, Jaccard score = 0.0283, loss = 0.1408, val_loss = 0.0000, eval: [8.3 s]
# Iteration 13 fit: [24.9 s]: Recall = 0.0594, Jaccard score = 0.0331, loss = 0.1287, val_loss = 0.0000, eval: [8.4 s]
# Iteration 14 fit: [24.8 s]: Recall = 0.0567, Jaccard score = 0.0316, loss = 0.1186, val_loss = 0.0000, eval: [8.4 s]
# Iteration 15 fit: [24.8 s]: Recall = 0.0628, Jaccard score = 0.0351, loss = 0.1083, val_loss = 0.0000, eval: [8.3 s]
# Iteration 16 fit: [24.8 s]: Recall = 0.0632, Jaccard score = 0.0353, loss = 0.1004, val_loss = 0.0000, eval: [8.4 s]
# Iteration 17 fit: [24.8 s]: Recall = 0.0579, Jaccard score = 0.0322, loss = 0.0929, val_loss = 0.0000, eval: [8.4 s]
# Iteration 18 fit: [24.9 s]: Recall = 0.0670, Jaccard score = 0.0375, loss = 0.0858, val_loss = 0.0000, eval: [8.6 s]
# Iteration 19 fit: [24.8 s]: Recall = 0.0647, Jaccard score = 0.0362, loss = 0.0805, val_loss = 0.0000, eval: [8.4 s]
# Iteration 20 fit: [24.9 s]: Recall = 0.0687, Jaccard score = 0.0385, loss = 0.0759, val_loss = 0.0000, eval: [8.3 s]
# Iteration 21 fit: [24.9 s]: Recall = 0.0693, Jaccard score = 0.0388, loss = 0.0712, val_loss = 0.0000, eval: [8.3 s]
# Iteration 22 fit: [24.8 s]: Recall = 0.0708, Jaccard score = 0.0397, loss = 0.0663, val_loss = 0.0000, eval: [8.9 s]
# Iteration 23 fit: [24.7 s]: Recall = 0.0742, Jaccard score = 0.0417, loss = 0.0630, val_loss = 0.0000, eval: [8.5 s]
# Iteration 24 fit: [24.8 s]: Recall = 0.0695, Jaccard score = 0.0389, loss = 0.0591, val_loss = 0.0000, eval: [8.5 s]
# Iteration 25 fit: [24.9 s]: Recall = 0.0710, Jaccard score = 0.0398, loss = 0.0565, val_loss = 0.0000, eval: [8.5 s]
# Iteration 26 fit: [25.1 s]: Recall = 0.0712, Jaccard score = 0.0399, loss = 0.0534, val_loss = 0.0000, eval: [8.4 s]
# Iteration 27 fit: [25.0 s]: Recall = 0.0719, Jaccard score = 0.0404, loss = 0.0502, val_loss = 0.0000, eval: [9.0 s]
# Iteration 28 fit: [24.8 s]: Recall = 0.0805, Jaccard score = 0.0454, loss = 0.0490, val_loss = 0.0000, eval: [8.4 s]
# Iteration 29 fit: [24.9 s]: Recall = 0.0755, Jaccard score = 0.0425, loss = 0.0460, val_loss = 0.0000, eval: [8.3 s]
# Iteration 30 fit: [24.8 s]: Recall = 0.0763, Jaccard score = 0.0429, loss = 0.0434, val_loss = 0.0000, eval: [8.3 s]
# Iteration 31 fit: [24.8 s]: Recall = 0.0761, Jaccard score = 0.0428, loss = 0.0418, val_loss = 0.0000, eval: [8.5 s]
# Iteration 32 fit: [24.8 s]: Recall = 0.0786, Jaccard score = 0.0443, loss = 0.0397, val_loss = 0.0000, eval: [8.7 s]
# Iteration 33 fit: [24.8 s]: Recall = 0.0786, Jaccard score = 0.0443, loss = 0.0383, val_loss = 0.0000, eval: [8.3 s]
# Iteration 34 fit: [24.9 s]: Recall = 0.0738, Jaccard score = 0.0415, loss = 0.0368, val_loss = 0.0000, eval: [8.4 s]
# Iteration 35 fit: [24.9 s]: Recall = 0.0767, Jaccard score = 0.0431, loss = 0.0350, val_loss = 0.0000, eval: [8.3 s]
# Iteration 36 fit: [24.8 s]: Recall = 0.0748, Jaccard score = 0.0420, loss = 0.0333, val_loss = 0.0000, eval: [8.3 s]
# Iteration 37 fit: [24.9 s]: Recall = 0.0788, Jaccard score = 0.0444, loss = 0.0322, val_loss = 0.0000, eval: [8.4 s]
# Iteration 38 fit: [24.8 s]: Recall = 0.0803, Jaccard score = 0.0453, loss = 0.0314, val_loss = 0.0000, eval: [8.4 s]
# Iteration 39 fit: [24.8 s]: Recall = 0.0848, Jaccard score = 0.0480, loss = 0.0301, val_loss = 0.0000, eval: [8.9 s]
# Iteration 40 fit: [24.7 s]: Recall = 0.0801, Jaccard score = 0.0451, loss = 0.0291, val_loss = 0.0000, eval: [8.4 s]
# Iteration 41 fit: [24.9 s]: Recall = 0.0824, Jaccard score = 0.0465, loss = 0.0280, val_loss = 0.0000, eval: [8.5 s]
# Iteration 42 fit: [24.8 s]: Recall = 0.0824, Jaccard score = 0.0465, loss = 0.0276, val_loss = 0.0000, eval: [8.4 s]
# Iteration 43 fit: [24.8 s]: Recall = 0.0854, Jaccard score = 0.0483, loss = 0.0259, val_loss = 0.0000, eval: [8.4 s]
# Iteration 44 fit: [24.8 s]: Recall = 0.0790, Jaccard score = 0.0445, loss = 0.0258, val_loss = 0.0000, eval: [8.3 s]
# Iteration 45 fit: [24.7 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0244, val_loss = 0.0000, eval: [8.3 s]
# Iteration 46 fit: [24.7 s]: Recall = 0.0831, Jaccard score = 0.0469, loss = 0.0239, val_loss = 0.0000, eval: [8.3 s]
# Iteration 47 fit: [25.0 s]: Recall = 0.0797, Jaccard score = 0.0449, loss = 0.0228, val_loss = 0.0000, eval: [8.4 s]
# Iteration 48 fit: [25.1 s]: Recall = 0.0917, Jaccard score = 0.0520, loss = 0.0220, val_loss = 0.0000, eval: [8.3 s]
# Iteration 49 fit: [24.7 s]: Recall = 0.0883, Jaccard score = 0.0500, loss = 0.0217, val_loss = 0.0000, eval: [8.9 s]
# End. Best Iteration 48:  Recall = 0.0917, Jaccard score = 0.0520. 
# The best NeuMF model has been saved to Pretrain/_MLP_8_[1024,256,64,8]_1560272345.h5
