--nn_model: GMF
--is_tag: "1"
--eval_recall: "1"
--topk: "3"
#--dataset: "ml-1m"
--big_tag: "0"
--epochs: "100"
--num_factors: "64"

# Launched by terminal.
# GMF arguments: Namespace(batch_size=256, big_tag=0, dataset='', epochs=100, eval_recall=1, is_tag=1, layers='[64,32,16,8]', learner='adam', lr=0.001, mf_pretrain='', mlp_pretrain='', nn_model='GMF', num_factors=64, num_neg=4, out=1, path='Data/', reg_layers='[0,0,0,0]', reg_mf=0, topk=3, verbose=1) 
# The best NeuMF model will be saved to Pretrain/_GMF_64_[64,32,16,8]_1560270996.h5
# Load data done [2.7 s]. #user=17431, #item=986, #train=133134, #test=17431
# Init: Recall = 0.0038, Jaccard score = 0.0021
# Iteration 0 fit: [6.7 s]: Recall = 0.0021, Jaccard score = 0.0011, loss = 0.5475, val_loss = 0.0000, eval: [7.1 s]
# Iteration 1 fit: [6.2 s]: Recall = 0.0032, Jaccard score = 0.0017, loss = 0.5008, val_loss = 0.0000, eval: [7.1 s]
# Iteration 2 fit: [6.2 s]: Recall = 0.0047, Jaccard score = 0.0026, loss = 0.5002, val_loss = 0.0000, eval: [7.1 s]
# Iteration 3 fit: [6.3 s]: Recall = 0.0049, Jaccard score = 0.0027, loss = 0.4981, val_loss = 0.0000, eval: [7.1 s]
# Iteration 4 fit: [6.2 s]: Recall = 0.0061, Jaccard score = 0.0033, loss = 0.4928, val_loss = 0.0000, eval: [7.1 s]
# Iteration 5 fit: [6.2 s]: Recall = 0.0066, Jaccard score = 0.0036, loss = 0.4836, val_loss = 0.0000, eval: [7.2 s]
# Iteration 6 fit: [6.2 s]: Recall = 0.0082, Jaccard score = 0.0044, loss = 0.4696, val_loss = 0.0000, eval: [7.1 s]
# Iteration 7 fit: [6.2 s]: Recall = 0.0089, Jaccard score = 0.0048, loss = 0.4505, val_loss = 0.0000, eval: [7.1 s]
# Iteration 8 fit: [6.2 s]: Recall = 0.0120, Jaccard score = 0.0065, loss = 0.4279, val_loss = 0.0000, eval: [7.1 s]
# Iteration 9 fit: [6.2 s]: Recall = 0.0150, Jaccard score = 0.0082, loss = 0.4010, val_loss = 0.0000, eval: [7.1 s]
# Iteration 10 fit: [6.2 s]: Recall = 0.0163, Jaccard score = 0.0089, loss = 0.3726, val_loss = 0.0000, eval: [7.1 s]
# Iteration 11 fit: [6.2 s]: Recall = 0.0199, Jaccard score = 0.0109, loss = 0.3448, val_loss = 0.0000, eval: [7.1 s]
# Iteration 12 fit: [6.2 s]: Recall = 0.0243, Jaccard score = 0.0133, loss = 0.3177, val_loss = 0.0000, eval: [7.1 s]
# Iteration 13 fit: [6.2 s]: Recall = 0.0270, Jaccard score = 0.0148, loss = 0.2921, val_loss = 0.0000, eval: [7.1 s]
# Iteration 14 fit: [6.2 s]: Recall = 0.0287, Jaccard score = 0.0157, loss = 0.2685, val_loss = 0.0000, eval: [7.1 s]
# Iteration 15 fit: [6.2 s]: Recall = 0.0302, Jaccard score = 0.0165, loss = 0.2466, val_loss = 0.0000, eval: [7.1 s]
# Iteration 16 fit: [6.2 s]: Recall = 0.0307, Jaccard score = 0.0169, loss = 0.2264, val_loss = 0.0000, eval: [7.1 s]
# Iteration 17 fit: [6.3 s]: Recall = 0.0338, Jaccard score = 0.0186, loss = 0.2073, val_loss = 0.0000, eval: [7.1 s]
# Iteration 18 fit: [6.2 s]: Recall = 0.0325, Jaccard score = 0.0178, loss = 0.1895, val_loss = 0.0000, eval: [7.1 s]
# Iteration 19 fit: [6.2 s]: Recall = 0.0357, Jaccard score = 0.0196, loss = 0.1733, val_loss = 0.0000, eval: [7.1 s]
# Iteration 20 fit: [6.2 s]: Recall = 0.0376, Jaccard score = 0.0207, loss = 0.1576, val_loss = 0.0000, eval: [7.2 s]
# Iteration 21 fit: [6.2 s]: Recall = 0.0410, Jaccard score = 0.0226, loss = 0.1438, val_loss = 0.0000, eval: [7.1 s]
# Iteration 22 fit: [6.2 s]: Recall = 0.0423, Jaccard score = 0.0234, loss = 0.1310, val_loss = 0.0000, eval: [7.1 s]
# Iteration 23 fit: [6.2 s]: Recall = 0.0450, Jaccard score = 0.0249, loss = 0.1191, val_loss = 0.0000, eval: [7.1 s]
# Iteration 24 fit: [6.2 s]: Recall = 0.0469, Jaccard score = 0.0259, loss = 0.1087, val_loss = 0.0000, eval: [7.2 s]
# Iteration 25 fit: [6.3 s]: Recall = 0.0488, Jaccard score = 0.0270, loss = 0.0992, val_loss = 0.0000, eval: [7.1 s]
# Iteration 26 fit: [6.2 s]: Recall = 0.0509, Jaccard score = 0.0282, loss = 0.0912, val_loss = 0.0000, eval: [7.2 s]
# Iteration 27 fit: [6.2 s]: Recall = 0.0530, Jaccard score = 0.0294, loss = 0.0831, val_loss = 0.0000, eval: [7.1 s]
# Iteration 28 fit: [6.2 s]: Recall = 0.0528, Jaccard score = 0.0293, loss = 0.0743, val_loss = 0.0000, eval: [7.1 s]
# Iteration 29 fit: [6.2 s]: Recall = 0.0560, Jaccard score = 0.0311, loss = 0.0684, val_loss = 0.0000, eval: [7.1 s]
# Iteration 30 fit: [6.2 s]: Recall = 0.0592, Jaccard score = 0.0330, loss = 0.0631, val_loss = 0.0000, eval: [7.1 s]
# Iteration 31 fit: [6.2 s]: Recall = 0.0617, Jaccard score = 0.0344, loss = 0.0575, val_loss = 0.0000, eval: [7.1 s]
# Iteration 32 fit: [6.2 s]: Recall = 0.0632, Jaccard score = 0.0353, loss = 0.0533, val_loss = 0.0000, eval: [7.1 s]
# Iteration 33 fit: [6.3 s]: Recall = 0.0645, Jaccard score = 0.0361, loss = 0.0500, val_loss = 0.0000, eval: [7.1 s]
# Iteration 34 fit: [6.2 s]: Recall = 0.0659, Jaccard score = 0.0368, loss = 0.0454, val_loss = 0.0000, eval: [7.1 s]
# Iteration 35 fit: [6.3 s]: Recall = 0.0691, Jaccard score = 0.0387, loss = 0.0423, val_loss = 0.0000, eval: [7.1 s]
# Iteration 36 fit: [6.2 s]: Recall = 0.0725, Jaccard score = 0.0407, loss = 0.0393, val_loss = 0.0000, eval: [7.2 s]
# Iteration 37 fit: [6.2 s]: Recall = 0.0750, Jaccard score = 0.0421, loss = 0.0369, val_loss = 0.0000, eval: [7.1 s]
# Iteration 38 fit: [6.2 s]: Recall = 0.0763, Jaccard score = 0.0429, loss = 0.0338, val_loss = 0.0000, eval: [7.1 s]
# Iteration 39 fit: [6.2 s]: Recall = 0.0791, Jaccard score = 0.0446, loss = 0.0320, val_loss = 0.0000, eval: [7.1 s]
# Iteration 40 fit: [6.2 s]: Recall = 0.0797, Jaccard score = 0.0449, loss = 0.0291, val_loss = 0.0000, eval: [7.1 s]
# Iteration 41 fit: [6.3 s]: Recall = 0.0814, Jaccard score = 0.0459, loss = 0.0278, val_loss = 0.0000, eval: [7.1 s]
# Iteration 42 fit: [6.3 s]: Recall = 0.0854, Jaccard score = 0.0483, loss = 0.0263, val_loss = 0.0000, eval: [7.1 s]
# Iteration 43 fit: [6.2 s]: Recall = 0.0869, Jaccard score = 0.0492, loss = 0.0248, val_loss = 0.0000, eval: [7.1 s]
# Iteration 44 fit: [6.2 s]: Recall = 0.0892, Jaccard score = 0.0505, loss = 0.0229, val_loss = 0.0000, eval: [7.2 s]
# Iteration 45 fit: [6.2 s]: Recall = 0.0903, Jaccard score = 0.0512, loss = 0.0219, val_loss = 0.0000, eval: [7.1 s]
# Iteration 46 fit: [6.2 s]: Recall = 0.0934, Jaccard score = 0.0530, loss = 0.0209, val_loss = 0.0000, eval: [7.1 s]
# Iteration 47 fit: [6.2 s]: Recall = 0.0958, Jaccard score = 0.0545, loss = 0.0200, val_loss = 0.0000, eval: [7.1 s]
# Iteration 48 fit: [6.2 s]: Recall = 0.0968, Jaccard score = 0.0551, loss = 0.0187, val_loss = 0.0000, eval: [7.1 s]
# Iteration 49 fit: [6.3 s]: Recall = 0.0983, Jaccard score = 0.0560, loss = 0.0176, val_loss = 0.0000, eval: [7.1 s]
# Iteration 50 fit: [6.2 s]: Recall = 0.0994, Jaccard score = 0.0567, loss = 0.0173, val_loss = 0.0000, eval: [7.1 s]
# Iteration 51 fit: [6.2 s]: Recall = 0.1010, Jaccard score = 0.0576, loss = 0.0162, val_loss = 0.0000, eval: [7.1 s]
# Iteration 52 fit: [6.2 s]: Recall = 0.1036, Jaccard score = 0.0592, loss = 0.0158, val_loss = 0.0000, eval: [7.1 s]
# Iteration 53 fit: [6.2 s]: Recall = 0.1046, Jaccard score = 0.0598, loss = 0.0153, val_loss = 0.0000, eval: [7.1 s]
# Iteration 54 fit: [6.2 s]: Recall = 0.1076, Jaccard score = 0.0616, loss = 0.0145, val_loss = 0.0000, eval: [7.2 s]
# Iteration 55 fit: [6.2 s]: Recall = 0.1082, Jaccard score = 0.0620, loss = 0.0139, val_loss = 0.0000, eval: [7.1 s]
# Iteration 56 fit: [6.2 s]: Recall = 0.1097, Jaccard score = 0.0629, loss = 0.0133, val_loss = 0.0000, eval: [7.1 s]
# Iteration 57 fit: [6.3 s]: Recall = 0.1084, Jaccard score = 0.0621, loss = 0.0124, val_loss = 0.0000, eval: [7.1 s]
# Iteration 58 fit: [6.2 s]: Recall = 0.1114, Jaccard score = 0.0639, loss = 0.0120, val_loss = 0.0000, eval: [7.1 s]
# Iteration 59 fit: [6.3 s]: Recall = 0.1133, Jaccard score = 0.0651, loss = 0.0121, val_loss = 0.0000, eval: [7.1 s]
# Iteration 60 fit: [6.2 s]: Recall = 0.1158, Jaccard score = 0.0666, loss = 0.0111, val_loss = 0.0000, eval: [7.1 s]
# Iteration 61 fit: [6.2 s]: Recall = 0.1150, Jaccard score = 0.0661, loss = 0.0112, val_loss = 0.0000, eval: [7.1 s]
# Iteration 62 fit: [6.2 s]: Recall = 0.1169, Jaccard score = 0.0673, loss = 0.0103, val_loss = 0.0000, eval: [7.1 s]
# Iteration 63 fit: [6.2 s]: Recall = 0.1192, Jaccard score = 0.0687, loss = 0.0106, val_loss = 0.0000, eval: [7.1 s]
# Iteration 64 fit: [6.2 s]: Recall = 0.1201, Jaccard score = 0.0693, loss = 0.0099, val_loss = 0.0000, eval: [7.1 s]
# Iteration 65 fit: [6.2 s]: Recall = 0.1205, Jaccard score = 0.0695, loss = 0.0097, val_loss = 0.0000, eval: [7.1 s]
# Iteration 66 fit: [6.2 s]: Recall = 0.1198, Jaccard score = 0.0691, loss = 0.0095, val_loss = 0.0000, eval: [7.1 s]
# Iteration 67 fit: [6.2 s]: Recall = 0.1217, Jaccard score = 0.0702, loss = 0.0095, val_loss = 0.0000, eval: [7.1 s]
# Iteration 68 fit: [6.3 s]: Recall = 0.1218, Jaccard score = 0.0703, loss = 0.0089, val_loss = 0.0000, eval: [7.1 s]
# Iteration 69 fit: [6.2 s]: Recall = 0.1226, Jaccard score = 0.0708, loss = 0.0086, val_loss = 0.0000, eval: [7.1 s]
# Iteration 70 fit: [6.2 s]: Recall = 0.1224, Jaccard score = 0.0707, loss = 0.0083, val_loss = 0.0000, eval: [7.1 s]
# Iteration 71 fit: [6.2 s]: Recall = 0.1228, Jaccard score = 0.0709, loss = 0.0086, val_loss = 0.0000, eval: [7.2 s]
# Iteration 72 fit: [6.2 s]: Recall = 0.1255, Jaccard score = 0.0726, loss = 0.0078, val_loss = 0.0000, eval: [7.1 s]
# Iteration 73 fit: [6.2 s]: Recall = 0.1239, Jaccard score = 0.0716, loss = 0.0078, val_loss = 0.0000, eval: [7.2 s]
# Iteration 74 fit: [6.2 s]: Recall = 0.1283, Jaccard score = 0.0743, loss = 0.0074, val_loss = 0.0000, eval: [7.2 s]
# Iteration 75 fit: [6.2 s]: Recall = 0.1289, Jaccard score = 0.0747, loss = 0.0074, val_loss = 0.0000, eval: [7.1 s]
# Iteration 76 fit: [6.2 s]: Recall = 0.1291, Jaccard score = 0.0748, loss = 0.0072, val_loss = 0.0000, eval: [7.1 s]
# Iteration 77 fit: [6.2 s]: Recall = 0.1306, Jaccard score = 0.0758, loss = 0.0070, val_loss = 0.0000, eval: [7.2 s]
# Iteration 78 fit: [6.2 s]: Recall = 0.1332, Jaccard score = 0.0774, loss = 0.0071, val_loss = 0.0000, eval: [7.1 s]
# Iteration 79 fit: [6.2 s]: Recall = 0.1319, Jaccard score = 0.0766, loss = 0.0070, val_loss = 0.0000, eval: [7.1 s]
# Iteration 80 fit: [6.2 s]: Recall = 0.1334, Jaccard score = 0.0775, loss = 0.0066, val_loss = 0.0000, eval: [7.1 s]
# Iteration 81 fit: [6.2 s]: Recall = 0.1304, Jaccard score = 0.0756, loss = 0.0066, val_loss = 0.0000, eval: [7.1 s]
# Iteration 82 fit: [6.2 s]: Recall = 0.1315, Jaccard score = 0.0764, loss = 0.0065, val_loss = 0.0000, eval: [7.1 s]
# Iteration 83 fit: [6.2 s]: Recall = 0.1340, Jaccard score = 0.0779, loss = 0.0063, val_loss = 0.0000, eval: [7.1 s]
# Iteration 84 fit: [6.3 s]: Recall = 0.1349, Jaccard score = 0.0785, loss = 0.0064, val_loss = 0.0000, eval: [7.1 s]
# Iteration 85 fit: [6.3 s]: Recall = 0.1351, Jaccard score = 0.0786, loss = 0.0059, val_loss = 0.0000, eval: [7.1 s]
# Iteration 86 fit: [6.3 s]: Recall = 0.1353, Jaccard score = 0.0787, loss = 0.0059, val_loss = 0.0000, eval: [7.1 s]
# Iteration 87 fit: [6.2 s]: Recall = 0.1334, Jaccard score = 0.0775, loss = 0.0057, val_loss = 0.0000, eval: [7.1 s]
# Iteration 88 fit: [6.2 s]: Recall = 0.1349, Jaccard score = 0.0785, loss = 0.0058, val_loss = 0.0000, eval: [7.1 s]
# Iteration 89 fit: [6.2 s]: Recall = 0.1355, Jaccard score = 0.0789, loss = 0.0057, val_loss = 0.0000, eval: [7.2 s]
# Iteration 90 fit: [6.2 s]: Recall = 0.1366, Jaccard score = 0.0796, loss = 0.0054, val_loss = 0.0000, eval: [7.1 s]
# Iteration 91 fit: [6.2 s]: Recall = 0.1368, Jaccard score = 0.0797, loss = 0.0054, val_loss = 0.0000, eval: [7.1 s]
# Iteration 92 fit: [6.2 s]: Recall = 0.1376, Jaccard score = 0.0802, loss = 0.0053, val_loss = 0.0000, eval: [7.1 s]
# Iteration 93 fit: [6.2 s]: Recall = 0.1363, Jaccard score = 0.0793, loss = 0.0050, val_loss = 0.0000, eval: [7.1 s]
# Iteration 94 fit: [6.2 s]: Recall = 0.1370, Jaccard score = 0.0798, loss = 0.0051, val_loss = 0.0000, eval: [7.1 s]
# Iteration 95 fit: [6.2 s]: Recall = 0.1380, Jaccard score = 0.0804, loss = 0.0050, val_loss = 0.0000, eval: [7.1 s]
# Iteration 96 fit: [6.2 s]: Recall = 0.1363, Jaccard score = 0.0793, loss = 0.0049, val_loss = 0.0000, eval: [7.1 s]
# Iteration 97 fit: [6.2 s]: Recall = 0.1399, Jaccard score = 0.0816, loss = 0.0051, val_loss = 0.0000, eval: [7.1 s]
# Iteration 98 fit: [6.3 s]: Recall = 0.1401, Jaccard score = 0.0817, loss = 0.0050, val_loss = 0.0000, eval: [7.1 s]
# Iteration 99 fit: [6.2 s]: Recall = 0.1399, Jaccard score = 0.0816, loss = 0.0047, val_loss = 0.0000, eval: [7.2 s]
# End. Best Iteration 98:  Recall = 0.1401, Jaccard score = 0.0817. 
# The best NeuMF model has been saved to Pretrain/_GMF_64_[64,32,16,8]_1560270996.h5
